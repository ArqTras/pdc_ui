{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/api/models/wallet.model.ts","./src/app/api/services/backend.service.ts","./src/app/api/services/wrap-info.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/layouts/full-layout/full-layout.component.ts","./src/app/layouts/full-layout/full-layout.module.ts","./src/app/layouts/sidebar/sidebar.component.ts","./src/app/layouts/sidebar/sidebar.module.ts","./src/app/layouts/with-sidebar-layout/with-sidebar-layout.component.ts","./src/app/layouts/with-sidebar-layout/with-sidebar-layout.component.html","./src/app/layouts/with-sidebar-layout/with-sidebar-layout.module.ts","./src/app/pages/add-wallet/add-wallet.component.ts","./src/app/pages/add-wallet/add-wallet.component.html","./src/app/pages/assign-alias/assign-alias.component.ts","./src/app/pages/auth/auth-routing.module.ts","./src/app/pages/auth/auth.module.ts","./src/app/pages/auth/login/login.component.ts","./src/app/pages/auth/login/login.component.html","./src/app/pages/auth/no-wallet/no-wallet.component.ts","./src/app/pages/auth/no-wallet/no-wallet.component.html","./src/app/pages/create-wallet/create-wallet.component.ts","./src/app/pages/deeplink/deeplink.component.ts","./src/app/pages/deeplink/deeplink.module.ts","./src/app/pages/deeplink/modals/deeplink-modal/deeplink-modal.component.ts","./src/app/pages/deeplink/modals/deeplink-modal/deeplink-modal.module.ts","./src/app/pages/deeplink/modals/sync-modal/sync-modal.component.ts","./src/app/pages/deeplink/modals/sync-modal/sync-modal.module.ts","./src/app/pages/edit-alias/edit-alias.component.ts","./src/app/pages/export-import/export-import.component.ts","./src/app/pages/open-wallet/open-wallet.component.ts","./src/app/pages/pages-routing.module.ts","./src/app/pages/pages.module.ts","./src/app/pages/paths.ts","./src/app/pages/restore-wallet/restore-wallet.component.ts","./src/app/pages/restore-wallet/restore-wallet.component.html","./src/app/pages/seed-phrase/seed-phrase.component.ts","./src/app/pages/settings/settings.component.ts","./src/app/pages/settings/settings.component.html","./src/app/pages/transfer-alias/transfer-alias.component.ts","./src/app/pages/wallet-details/wallet-details.component.ts","./src/app/pages/wallet/tabs/assets/assets.component.ts","./src/app/pages/wallet/tabs/custom-assets/modals/burn-custom-asset/burn-custom-asset.component.ts","./src/app/pages/wallet/tabs/custom-assets/modals/burn-custom-asset/burn-custom-asset.component.html","./src/app/pages/wallet/tabs/custom-assets/modals/confirm-create-custom-asset/confirm-create-custom-asset.component.ts","./src/app/pages/wallet/tabs/custom-assets/modals/confirm-create-custom-asset/confirm-create-custom-asset.component.html","./src/app/pages/wallet/tabs/custom-assets/modals/emit-custom-asset/emit-custom-asset.component.ts","./src/app/pages/wallet/tabs/custom-assets/modals/emit-custom-asset/emit-custom-asset.component.html","./src/app/pages/wallet/tabs/custom-assets/modals/transaction-details-for-custom-assets/transaction-details-for-custom-assets.component.ts","./src/app/pages/wallet/tabs/custom-assets/modals/transaction-details-for-custom-assets/transaction-details-for-custom-assets.component.html","./src/app/pages/wallet/tabs/custom-assets/modals/update-custom-asset/update-custom-asset.component.ts","./src/app/pages/wallet/tabs/custom-assets/modals/update-custom-asset/update-custom-asset.component.html","./src/app/pages/wallet/tabs/custom-assets/pages/create-new-asset/create-new-asset.component.ts","./src/app/pages/wallet/tabs/custom-assets/pages/create-new-asset/create-new-asset.component.html","./src/app/pages/wallet/tabs/custom-assets/pages/custom-assets/custom-assets.component.ts","./src/app/pages/wallet/tabs/custom-assets/pages/custom-assets/custom-assets.component.html","./src/app/pages/wallet/tabs/history/history.component.ts","./src/app/pages/wallet/tabs/history/history.component.html","./src/app/pages/wallet/tabs/receive/receive.component.ts","./src/app/pages/wallet/tabs/send/modals/send-details-modal/send-details-modal.component.ts","./src/app/pages/wallet/tabs/send/modals/send-details-modal/send-details-modal.component.html","./src/app/pages/wallet/tabs/send/modals/send-modal/send-modal.component.ts","./src/app/pages/wallet/tabs/send/modals/send-modal/send-modal.component.html","./src/app/pages/wallet/tabs/send/modals/wallet-modals.module.ts","./src/app/pages/wallet/tabs/send/send.component.ts","./src/app/pages/wallet/tabs/send/send.component.html","./src/app/pages/wallet/tabs/staking/staking.component.ts","./src/app/pages/wallet/tabs/swap/modals/swap-confirm-master-password/swap-confirm-master-password.component.ts","./src/app/pages/wallet/tabs/swap/modals/swap-confirm-master-password/swap-confirm-master-password.component.html","./src/app/pages/wallet/tabs/swap/pages/confirm-swap/confirm-swap.component.ts","./src/app/pages/wallet/tabs/swap/pages/confirm-swap/confirm-swap.component.html","./src/app/pages/wallet/tabs/swap/pages/create-swap/create-swap.component.ts","./src/app/pages/wallet/tabs/swap/pages/create-swap/create-swap.component.html","./src/app/pages/wallet/tabs/swap/pages/swap-proposal-hex/swap-proposal-hex.component.ts","./src/app/pages/wallet/tabs/swap/pages/swap-proposal-hex/swap-proposal-hex.component.html","./src/app/pages/wallet/tabs/swap/pages/swap/swap.component.ts","./src/app/pages/wallet/tabs/swap/pages/swap/swap.component.html","./src/app/pages/wallet/tabs/swap/parts/guards/swap-proposal-hex.guard.ts","./src/app/pages/wallet/wallet-routing.module.ts","./src/app/pages/wallet/wallet.module.ts","./src/app/pages/wallet/wallet/modals/add-custom-token/add-custom-token.component.ts","./src/app/pages/wallet/wallet/modals/add-custom-token/add-custom-token.component.html","./src/app/pages/wallet/wallet/modals/export-history-modal/export-history-modal.component.ts","./src/app/pages/wallet/wallet/modals/export-history-modal/export-history-modal.component.html","./src/app/pages/wallet/wallet/modals/export-history-modal/export-history-modal.module.ts","./src/app/pages/wallet/wallet/modals/migrate-wallet-to-zarcanum/migrate-wallet-to-zarcanum.component.ts","./src/app/pages/wallet/wallet/modals/migrate-wallet-to-zarcanum/migrate-wallet-to-zarcanum.component.html","./src/app/pages/wallet/wallet/modals/success-sweep-bare-outs/success-sweep-bare-outs.component.ts","./src/app/pages/wallet/wallet/modals/success-sweep-bare-outs/success-sweep-bare-outs.component.html","./src/app/pages/wallet/wallet/wallet.component.ts","./src/app/parts/components/back-button/back-button.component.ts","./src/app/parts/components/back-button/back-button.component.html","./src/app/parts/components/breadcrumbs/breadcrumbs.component.ts","./src/app/parts/components/breadcrumbs/breadcrumbs.component.html","./src/app/parts/components/checkbox.component.ts","./src/app/parts/components/copy-button.component.ts","./src/app/parts/components/loader.component.ts","./src/app/parts/components/register-context-templates.component.ts","./src/app/parts/components/staking-switch.component.ts","./src/app/parts/components/switch.component.ts","./src/app/parts/components/synchronization-status.component.ts","./src/app/parts/components/transaction-details.component.ts","./src/app/parts/components/transaction-status/transaction-status.component.ts","./src/app/parts/components/transaction-status/transaction-status.component.html","./src/app/parts/components/wallet-card.component.ts","./src/app/parts/data/assets.ts","./src/app/parts/data/constants.ts","./src/app/parts/data/scale-items.ts","./src/app/parts/directives/autofocus.directive.ts","./src/app/parts/directives/back-button/back-button.directive.ts","./src/app/parts/directives/back-button/back-button.module.ts","./src/app/parts/directives/default-img/default-img.directive.ts","./src/app/parts/directives/default-img/default-img.module.ts","./src/app/parts/directives/default-img/index.ts","./src/app/parts/directives/disable-price-fetch/disable-price-fetch.directive.ts","./src/app/parts/directives/disable-price-fetch/disable-price-fetch.module.ts","./src/app/parts/directives/disable-price-fetch/index.ts","./src/app/parts/directives/index.ts","./src/app/parts/directives/input-disable-selection/index.ts","./src/app/parts/directives/input-disable-selection/input-disable-selection.directive.ts","./src/app/parts/directives/input-disable-selection/input-disable-selection.module.ts","./src/app/parts/directives/input-validate/index.ts","./src/app/parts/directives/input-validate/input-validate.directive.ts","./src/app/parts/directives/input-validate/input-validate.module.ts","./src/app/parts/directives/lower-case.directive.ts","./src/app/parts/directives/tooltip/index.ts","./src/app/parts/directives/tooltip/tooltip.directive.ts","./src/app/parts/directives/tooltip/tooltip.module.ts","./src/app/parts/directives/visibility-balance.directive.ts","./src/app/parts/functions/get-amount-items.ts","./src/app/parts/functions/has-own-property.ts","./src/app/parts/functions/identify-transaction.ts","./src/app/parts/functions/int-to-money.ts","./src/app/parts/functions/money-to-int.ts","./src/app/parts/modals/asset-details/asset-details.component.ts","./src/app/parts/modals/asset-details/asset-details.component.html","./src/app/parts/modals/confirm-modal/confirm-modal.component.ts","./src/app/parts/modals/confirm-modal/confirm-modal.component.html","./src/app/parts/modals/confirm-modal/confirm-modal.module.ts","./src/app/parts/modals/modal-container/modal-container.component.ts","./src/app/parts/modals/modal-container/modal-container.component.html","./src/app/parts/modals/open-wallet-modal/open-wallet-modal.component.ts","./src/app/parts/pipes/contract-status-messages-pipe/contract-status-messages-pipe.module.ts","./src/app/parts/pipes/contract-status-messages-pipe/contract-status-messages.pipe.ts","./src/app/parts/pipes/contract-status-messages-pipe/index.ts","./src/app/parts/pipes/contract-time-left-pipe/contract-time-left-pipe.module.ts","./src/app/parts/pipes/contract-time-left-pipe/contract-time-left.pipe.ts","./src/app/parts/pipes/contract-time-left-pipe/index.ts","./src/app/parts/pipes/get-amount-items.pipe.ts","./src/app/parts/pipes/get-asset-info.pipe.ts","./src/app/parts/pipes/history-type-messages-pipe/history-type-messages-pipe.module.ts","./src/app/parts/pipes/history-type-messages-pipe/history-type-messages.pipe.ts","./src/app/parts/pipes/history-type-messages-pipe/index.ts","./src/app/parts/pipes/index.ts","./src/app/parts/pipes/int-to-money-pipe/index.ts","./src/app/parts/pipes/int-to-money-pipe/int-to-money-pipe.module.ts","./src/app/parts/pipes/int-to-money-pipe/int-to-money.pipe.ts","./src/app/parts/pipes/is-available-alias-name-pipe/index.ts","./src/app/parts/pipes/is-available-alias-name-pipe/is-available-alias-name-pipe.module.ts","./src/app/parts/pipes/is-available-alias-name-pipe/is-available-alias-name.pipe.ts","./src/app/parts/pipes/is-visible-control-error.pipe.ts","./src/app/parts/pipes/is-visible-fee.pipe.ts","./src/app/parts/pipes/money-to-int-pipe/index.ts","./src/app/parts/pipes/money-to-int-pipe/money-to-int-pipe.module.ts","./src/app/parts/pipes/money-to-int-pipe/money-to-int.pipe.ts","./src/app/parts/pipes/safe-html-pipe/index.ts","./src/app/parts/pipes/safe-html-pipe/safe-html-pipe.module.ts","./src/app/parts/pipes/safe-html-pipe/safe-html.pipe.ts","./src/app/parts/pipes/short-string.pipe.ts","./src/app/parts/services/back.service.ts","./src/app/parts/services/modal.service.ts","./src/app/parts/services/variables.service.ts","./src/app/parts/services/wallets.service.ts","./src/app/parts/services/zano-loaders.service.ts","./src/app/parts/utils/MIME-types.ts","./src/app/parts/utils/generate-random-string.ts","./src/app/parts/utils/zano-errors.ts","./src/app/parts/utils/zano-validators.ts","./src/app/store/pagination/pagination.service.ts","./src/app/store/pagination/pagination.store.ts","./src/app/store/store.ts","./src/assets/material-zano-icons/index.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Contracts } from './contract.model';\nimport { Transaction, Transactions } from './transaction.model';\nimport { BigNumber } from 'bignumber.js';\nimport { AssetBalance, AssetInfo, AssetBalances, AssetsInfoWhitelist } from './assets.model';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Alias } from '@api/models/alias.model';\nimport { SendMoneyFormParams } from '@api/models/send-money.model';\nimport { MIXIN } from '@parts/data/constants';\nimport { zanoAssetInfo } from '@parts/data/assets';\n\nexport const defaultSendMoneyParams: SendMoneyFormParams = {\n    asset_id: zanoAssetInfo.asset_id,\n    wallet_id: undefined,\n    address: '',\n    amount: undefined,\n    isAmountUSD: false,\n    comment: '',\n    mixin: MIXIN,\n    fee: '0.01',\n    hide: false,\n};\n\nexport class Wallet {\n    open_from_exist: boolean;\n\n    updated = false;\n\n    wallet_id: number;\n\n    name: string;\n\n    pass: string;\n\n    path: string;\n\n    address: string;\n\n    private _balances$: BehaviorSubject<AssetBalances> = new BehaviorSubject<AssetBalances>([]);\n\n    private _assetsInfoWhitelist: AssetsInfoWhitelist = { global_whitelist: [], local_whitelist: [], own_assets: [] };\n\n    set assetsInfoWhitelist(value: AssetsInfoWhitelist) {\n        this._assetsInfoWhitelist = value;\n    }\n\n    get assetsInfoWhitelist() {\n        return this._assetsInfoWhitelist;\n    }\n\n    get allAssetsInfoWhitelist(): AssetInfo[] {\n        const { global_whitelist = [], local_whitelist = [], own_assets = [] } = this._assetsInfoWhitelist;\n        return [...global_whitelist, ...local_whitelist, ...own_assets];\n    }\n\n    get isEmptyAssetsInfoWhitelist(): boolean {\n        return !this.allAssetsInfoWhitelist.length;\n    }\n\n    get allAssetsInfo(): AssetInfo[] {\n        return [zanoAssetInfo, ...this.allAssetsInfoWhitelist];\n    }\n\n    get balances$(): Observable<AssetBalances> {\n        return this._balances$.asObservable();\n    }\n\n    get balances(): AssetBalances {\n        return this._balances$.value;\n    }\n\n    set balances(value: AssetBalances | null | undefined) {\n        const sortedAssets: AssetBalances = [];\n        if (value) {\n            const assets = [...value];\n            const indexZano = assets.findIndex(({ asset_info: { ticker } }) => ticker === 'ZANO');\n            if (indexZano >= 0) {\n                const assetZano = assets.splice(indexZano, 1)[0];\n                sortedAssets.push(assetZano);\n            }\n            const sortedAssetsByBalance = assets.sort((a, b) => new BigNumber(b.total).minus(new BigNumber(a.total)).toNumber());\n            sortedAssets.push(...sortedAssetsByBalance);\n        }\n        this._balances$.next(sortedAssets);\n    }\n\n    get isEmptyBalances(): boolean {\n        if (!this.balances) {\n            return true;\n        }\n\n        for (const asset of this.balances) {\n            const value = asset.total || 0;\n            const isEmpty = !Boolean(new BigNumber(value).toNumber());\n\n            if (!isEmpty) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    mined_total: number;\n\n    tracking_hey: string;\n\n    is_auditable: boolean;\n\n    is_watch_only: boolean;\n\n    exclude_mining_txs: boolean;\n\n    alias_available: boolean;\n\n    has_bare_unspent_outputs = false;\n\n    alias?: Partial<Alias>;\n\n    wakeAlias?: boolean;\n\n    staking?: boolean;\n\n    new_messages?: number;\n\n    new_contracts?: number;\n\n    history: Transactions = [];\n\n    total_history_item?: number;\n\n    pages = [];\n\n    totalPages: number;\n\n    currentPage: number;\n\n    excluded_history: Transactions = [];\n\n    contracts: Contracts = [];\n\n    progress?: number;\n\n    loaded?: boolean;\n\n    restore?: boolean;\n\n    sendMoneyParams: SendMoneyFormParams | null = null;\n\n    constructor(id, name, pass, path, address, balances, unlocked_balance, mined = 0, tracking = '') {\n        this.wallet_id = id;\n        this.name = name;\n        this.pass = pass;\n        this.path = path;\n        this.address = address;\n        this.balances = balances;\n        this.mined_total = mined;\n        this.tracking_hey = tracking;\n\n        this.alias = {};\n        this.staking = false;\n        this.new_messages = 0;\n        this.new_contracts = 0;\n\n        this.history = [];\n        this.excluded_history = [];\n\n        this.progress = 0;\n        this.loaded = false;\n    }\n\n    getBalanceByAssetId(value: string): AssetBalance | undefined {\n        return this.balances.find(({ asset_info: { asset_id } }) => asset_id === value);\n    }\n\n    getAssetInfoByAssetId(value: string): AssetInfo | undefined {\n        return this.allAssetsInfo.find(({ asset_id }) => asset_id === value);\n    }\n\n    getBalanceByTicker(searchTicker: string): AssetBalance | undefined {\n        return this.balances.find(({ asset_info: { ticker } }) => ticker === searchTicker);\n    }\n\n    getMoneyEquivalentForZano(equivalent): string {\n        const balanceZano = this.getBalanceByTicker('ZANO')?.total || 0;\n        return new BigNumber(balanceZano).multipliedBy(equivalent).toFixed(0);\n    }\n\n    prepareHistory(items: Transaction[]): void {\n        for (let i = 0; i < items.length; i++) {\n            if (\n                (items[i].tx_type === 7 && items[i].subtransfers?.find(({ is_income }) => is_income)) ||\n                (items[i].tx_type === 11 && items[i].subtransfers?.find(({ is_income }) => is_income))\n            ) {\n                let exists = false;\n                for (let j = 0; j < this.excluded_history.length; j++) {\n                    if (this.excluded_history[j].tx_hash === items[i].tx_hash) {\n                        exists = true;\n                        if (this.excluded_history[j].height !== items[i].height) {\n                            this.excluded_history[j] = items[i];\n                        }\n                        break;\n                    }\n                }\n                if (!exists) {\n                    this.excluded_history.push(items[i]);\n                }\n            } else {\n                let exists = false;\n                for (let j = 0; j < this.history.length; j++) {\n                    if (this.history[j].tx_hash === items[i].tx_hash) {\n                        exists = true;\n                        if (this.history[j].height !== items[i].height) {\n                            this.history[j] = items[i];\n                        }\n                        break;\n                    }\n                }\n                if (!exists) {\n                    if (this.history.length > 0 && items[i].timestamp >= this.history[0].timestamp) {\n                        this.history.unshift(items[i]);\n                    } else {\n                        this.history.push(items[i]);\n                    }\n                }\n            }\n        }\n    }\n\n    removeFromHistory(hash: string): void {\n        for (let i = 0; i < this.history.length; i++) {\n            if (this.history[i].tx_hash === hash) {\n                this.history.splice(i, 1);\n                break;\n            }\n        }\n    }\n}\n\nexport interface DeeplinkParams {\n    action?: 'send' | string;\n    address?: string;\n    amount?: string;\n    my_deposit?: string;\n    seller_deposit?: string;\n    seller_address?: string;\n    hide_sender?: string;\n    hide_receiver?: string;\n    title?: string;\n    description?: string;\n    category?: string;\n    price?: string;\n    img_url?: string;\n    url?: string;\n    contact?: string;\n    comment?: string;\n    comments?: string;\n    mixins?: string;\n    fee?: string;\n}\n\nexport interface PushOffer {\n    wallet_id: number;\n    od: {\n        ap: string;\n        at: string;\n        cat: string;\n        cnt: string;\n        com: string;\n        do: string;\n        et: number;\n        fee: BigNumber;\n        lci: string;\n        lco: string;\n        ot: number;\n        pt: string;\n        t: string;\n        url: string;\n    };\n}\n\nexport interface ResponseGetWalletInfo {\n    address: string;\n    balances: AssetBalances;\n    is_auditable: boolean;\n    is_watch_only: boolean;\n    mined_total: number;\n    path: string;\n    view_sec_key: string;\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { ModalService } from '@parts/services/modal.service';\nimport { MoneyToIntPipe } from '@parts/pipes/money-to-int-pipe/money-to-int.pipe';\nimport JSONBigNumber from 'json-bignumber';\nimport { BigNumber } from 'bignumber.js';\nimport { ResponseGetWalletInfo } from '../models/wallet.model';\nimport {\n    AssetInfo,\n    ParamsAddCustomAssetId,\n    ParamsRemoveCustomAssetId,\n    ResponseAddCustomAssetId,\n    ResponseRemoveCustomAssetId,\n} from '@api/models/assets.model';\nimport { Alias } from '@api/models/alias.model';\nimport { SendMoneyParams } from '@api/models/send-money.model';\nimport { ParamsCallRpc } from '@api/models/call_rpc.model';\n\nexport interface PramsObj {\n    [key: string]: any;\n}\n\nexport type PramsArray = (string | PramsObj)[];\n\nexport type Params = string | PramsObj | PramsArray;\n\nexport enum ParamsType {\n    array = 'array',\n    object = 'object',\n    string = 'string',\n}\n\nexport const getParamsType = (value: Params): ParamsType | null => {\n    if (!value) {\n        return null;\n    }\n    const array: false | ParamsType.array = Array.isArray(value) && ParamsType.array;\n    const object: false | ParamsType = Object.keys(ParamsType).includes(typeof value) && ParamsType[typeof value];\n    return array || object || null;\n};\n\nexport type ConvertersObjectForTypes = {\n    [key in ParamsType]: (value: Params) => string | string[];\n};\n\nexport const convertersObjectForTypes: ConvertersObjectForTypes = {\n    [ParamsType.string]: (value: string): string => value,\n    [ParamsType.object]: (value: PramsObj): string => JSONBigNumber.stringify(value),\n    [ParamsType.array]: (value: PramsArray): string[] =>\n        value.map(v => {\n            return typeof v === ParamsType.string ? (v as string) : JSONBigNumber.stringify(v);\n        }),\n};\n\nexport const convertorParams = (value: Params): string | string[] => {\n    const type: ParamsType = getParamsType(value);\n    return convertersObjectForTypes[type](value);\n};\n\nexport interface ResponseAsyncTransfer {\n    error_code: string | 'NOT_ENOUGH_MONEY' | 'OK';\n    response_data: {\n        success: boolean;\n        tx_blob_size: number;\n        tx_hash: string;\n    };\n}\n\nexport interface AsyncCommandResults<T = any> {\n    job_id: number;\n    response: T;\n}\n\nexport enum StatusCurrentActionState {\n    STATE_SENDING = 'STATE_SENDING',\n    STATE_SENT_SUCCESS = 'STATE_SENT_SUCCESS',\n    STATE_SEND_FAILED = 'STATE_SEND_FAILED',\n    STATE_INITIALIZING = 'STATE_INITIALIZING',\n    STATE_DOWNLOADING_CONSENSUS = 'STATE_DOWNLOADING_CONSENSUS',\n    STATE_MAKING_TUNNEL_A = 'STATE_MAKING_TUNNEL_A',\n    STATE_MAKING_TUNNEL_B = 'STATE_MAKING_TUNNEL_B',\n    STATE_CREATING_STREAM = 'STATE_CREATING_STREAM',\n    STATE_FAILED = 'STATE_FAILED',\n    STATE_SUCCESS = 'STATE_SUCCESS',\n}\n\nexport interface CurrentActionState {\n    status: StatusCurrentActionState;\n    wallet_id: number;\n}\n\nexport enum Commands {\n    money_transfer_cancel = 'money_transfer_cancel',\n    handle_deeplink_click = 'handle_deeplink_click',\n    money_transfer = 'money_transfer',\n    update_daemon_state = 'update_daemon_state',\n    wallet_sync_progress = 'wallet_sync_progress',\n    update_wallet_status = 'update_wallet_status',\n    quit_requested = 'quit_requested',\n    on_core_event = 'on_core_event',\n    get_wallet_info = 'get_wallet_info',\n    remove_custom_asset_id = 'remove_custom_asset_id',\n    add_custom_asset_id = 'add_custom_asset_id',\n    get_options = 'get_options',\n    handle_current_action_state = 'handle_current_action_state',\n    set_enable_tor = 'set_enable_tor',\n    dispatch_async_call_result = 'dispatch_async_call_result',\n    async_call = 'async_call',\n    async_call_2a = 'async_call_2a',\n    set_log_level = 'set_log_level',\n    get_network_type = 'get_network_type',\n    get_version = 'get_version',\n    get_tx_pool_info = 'get_tx_pool_info',\n    get_recent_transfers = 'get_recent_transfers',\n    resync_wallet = 'resync_wallet',\n    get_alias_coast = 'get_alias_coast',\n    get_alias_info_by_address = 'get_alias_info_by_address',\n    get_alias_info_by_name = 'get_alias_info_by_name',\n    get_all_aliases = 'get_all_aliases',\n    request_alias_update = 'request_alias_update',\n    webkit_launched_script = 'webkit_launched_script',\n    on_request_quit = 'on_request_quit',\n    get_app_data = 'get_app_data',\n    store_app_data = 'store_app_data',\n    get_secure_app_data = 'get_secure_app_data',\n    set_master_password = 'set_master_password',\n    check_master_password = 'check_master_password',\n    get_is_disabled_notifications = 'get_is_disabled_notifications',\n    set_is_disabled_notifications = 'set_is_disabled_notifications',\n    store_secure_app_data = 'store_secure_app_data',\n    drop_secure_app_data = 'drop_secure_app_data',\n    have_secure_app_data = 'have_secure_app_data',\n    show_savefile_dialog = 'show_savefile_dialog',\n    show_openfile_dialog = 'show_openfile_dialog',\n    store_to_file = 'store_to_file',\n    load_from_file = 'load_from_file',\n    push_offer = 'push_offer',\n    generate_wallet = 'generate_wallet',\n    export_wallet_history = 'export_wallet_history',\n    open_wallet = 'open_wallet',\n    close_wallet = 'close_wallet',\n    get_smart_wallet_info = 'get_smart_wallet_info',\n    get_seed_phrase_info = 'get_seed_phrase_info',\n    run_wallet = 'run_wallet',\n    is_valid_restore_wallet_text = 'is_valid_restore_wallet_text',\n    restore_wallet = 'restore_wallet',\n    transfer = 'transfer',\n    validate_address = 'validate_address',\n    set_clipboard = 'set_clipboard',\n    get_clipboard = 'get_clipboard',\n    create_proposal = 'create_proposal',\n    get_contracts = 'get_contracts',\n    accept_proposal = 'accept_proposal',\n    release_contract = 'release_contract',\n    request_cancel_contract = 'request_cancel_contract',\n    accept_cancel_contract = 'accept_cancel_contract',\n    get_mining_history = 'get_mining_history',\n    start_pos_mining = 'start_pos_mining',\n    stop_pos_mining = 'stop_pos_mining',\n    open_url_in_browser = 'open_url_in_browser',\n    start_backend = 'start_backend',\n    get_default_fee = 'get_default_fee',\n    set_localization_strings = 'set_localization_strings',\n    request_alias_registration = 'request_alias_registration',\n    call_rpc = 'call_rpc',\n    call_wallet_rpc = 'call_wallet_rpc',\n    setup_jwt_wallet_rpc = 'setup_jwt_wallet_rpc',\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BackendService {\n    dispatchAsyncCallResult$ = new Subject<AsyncCommandResults>();\n\n    handleCurrentActionState$ = new Subject<CurrentActionState>();\n\n    backendObject: any;\n\n    backendLoaded = false;\n\n    constructor(\n        private translate: TranslateService,\n        private variablesService: VariablesService,\n        private modalService: ModalService,\n        private moneyToIntPipe: MoneyToIntPipe,\n        private ngZone: NgZone\n    ) {}\n\n    static bigNumberParser(key, val): any {\n        if (\n            val.constructor.name === 'BigNumber' &&\n            [\n                'balance',\n                'unlocked_balance',\n                'amount',\n                'fee',\n                'b_fee',\n                'to_pay',\n                'a_pledge',\n                'b_pledge',\n                'coast',\n                'a',\n                'total',\n                'unlocked',\n                'current_supply',\n                'total_max_supply',\n            ].indexOf(key) === -1\n        ) {\n            return val.toNumber();\n        }\n        if (key === 'rcv' || key === 'spn') {\n            for (let i = 0; i < val.length; i++) {\n                val[i] = new BigNumber(val[i]);\n            }\n        }\n        return val;\n    }\n\n    static Debug(type, message): void {\n        switch (type) {\n            case 0:\n                console.error(message);\n                break;\n            case 1:\n                console.warn(message);\n                break;\n            case 2:\n                console.log(message);\n                break;\n            default:\n                console.log(message);\n                break;\n        }\n    }\n\n    eventSubscribe(command: Commands, callback): void {\n        if (command === Commands.on_core_event) {\n            this.backendObject[command].connect(callback);\n        } else {\n            this.backendObject[command].connect(str => {\n                callback(JSONBigNumber.parse(str, BackendService.bigNumberParser));\n            });\n        }\n    }\n\n    initService(): Observable<string> {\n        return new Observable(observer => {\n            if (!this.backendLoaded) {\n                this.backendLoaded = true;\n                (<any>window).QWebChannel((<any>window).qt.webChannelTransport, channel => {\n                    this.backendObject = channel.objects.mediator_object;\n                    observer.next('backendObject loaded');\n                });\n            } else {\n                observer.error('backend not loaded');\n                if (!this.backendObject) {\n                    observer.error('backendObject not loaded');\n                }\n            }\n        });\n    }\n\n    webkitLaunchedScript(): void {\n        this.runCommand(Commands.webkit_launched_script);\n    }\n\n    quitRequest(): void {\n        this.runCommand(Commands.on_request_quit);\n    }\n\n    getAppData(callback): void {\n        this.runCommand(Commands.get_app_data, {}, callback);\n    }\n\n    storeAppData(callback?): void {\n        if (this.variablesService.wallets.length > 0) {\n            this.variablesService.settings.wallets = [];\n            this.variablesService.wallets.forEach(wallet => {\n                this.variablesService.settings.wallets.push({\n                    name: wallet.name,\n                    path: wallet.path,\n                });\n            });\n        }\n        this.runCommand(Commands.store_app_data, this.variablesService.settings, callback);\n    }\n\n    getSecureAppData(pass, callback): void {\n        this.runCommand(Commands.get_secure_app_data, pass, callback);\n    }\n\n    setMasterPassword(pass, callback): void {\n        this.runCommand(Commands.set_master_password, pass, callback);\n    }\n\n    checkMasterPassword(pass, callback): void {\n        this.runCommand(Commands.check_master_password, pass, callback);\n    }\n\n    getIsDisabledNotifications(callback): void {\n        const params = {};\n        this.runCommand(Commands.get_is_disabled_notifications, params, callback);\n    }\n\n    setIsDisabledNotifications(state): void {\n        this.runCommand(Commands.set_is_disabled_notifications, state);\n    }\n\n    storeSecureAppData(callback?): void {\n        const wallets = [];\n        const contacts = [];\n        this.variablesService.wallets.forEach(wallet => {\n            wallets.push({\n                name: wallet.name,\n                pass: wallet.pass,\n                path: wallet.path,\n                staking: wallet.staking,\n            });\n        });\n        this.variablesService.contacts.forEach(contact => {\n            contacts.push({\n                name: contact.name,\n                address: contact.address,\n                notes: contact.notes,\n            });\n        });\n        const data = { wallets: wallets, contacts: contacts };\n        this.backendObject[Commands.store_secure_app_data](JSON.stringify(data), this.variablesService.appPass, dataStore => {\n            this.backendCallback(dataStore, {}, callback, Commands.store_secure_app_data);\n        });\n    }\n\n    dropSecureAppData(callback?): void {\n        this.backendObject[Commands.drop_secure_app_data](dataStore => {\n            this.backendCallback(dataStore, {}, callback, Commands.drop_secure_app_data);\n        });\n    }\n\n    haveSecureAppData(callback): void {\n        this.runCommand(Commands.have_secure_app_data, {}, callback);\n    }\n\n    saveFileDialog(caption, fileMask, default_path, callback): void {\n        const dir = default_path ? default_path : '/';\n        const params = {\n            caption: caption,\n            filemask: fileMask,\n            default_dir: dir,\n        };\n        this.runCommand(Commands.show_savefile_dialog, params, callback);\n    }\n\n    openFileDialog(caption, filemask, default_path, callback): void {\n        const default_dir = default_path ? default_path : '/';\n        const params = {\n            caption,\n            filemask,\n            default_dir,\n        };\n        this.runCommand(Commands.show_openfile_dialog, params, callback);\n    }\n\n    storeFile(path, buff): void {\n        this.backendObject[Commands.store_to_file](path, buff);\n    }\n\n    loadFile(path, callback): void {\n        this.runCommand(Commands.load_from_file, path, callback);\n    }\n\n    push_offer(params, callback): void {\n        this.runCommand(Commands.push_offer, params, callback);\n    }\n\n    generateWallet(path, pass, callback): void {\n        const params = {\n            path: path,\n            pass: pass,\n        };\n        this.runCommand(Commands.generate_wallet, params, callback);\n    }\n\n    exportWalletHistory(json_string): void {\n        this.runCommand(Commands.export_wallet_history, json_string);\n    }\n\n    openWallet(path, pass, txs_to_return, testEmpty, callback): void {\n        const params = {\n            path: path,\n            pass: pass,\n            txs_to_return: txs_to_return,\n        };\n        params['testEmpty'] = !!testEmpty;\n        this.runCommand(Commands.open_wallet, params, callback);\n    }\n\n    closeWallet(wallet_id, callback?): void {\n        this.runCommand(Commands.close_wallet, { wallet_id: +wallet_id }, callback);\n    }\n\n    getSmartWalletInfo({ wallet_id, seed_password }, callback): void {\n        this.runCommand(Commands.get_smart_wallet_info, { wallet_id: +wallet_id, seed_password }, callback);\n    }\n\n    getSeedPhraseInfo(param, callback): void {\n        this.runCommand(Commands.get_seed_phrase_info, param, callback);\n    }\n\n    runWallet(wallet_id, callback?): void {\n        this.runCommand(Commands.run_wallet, { wallet_id: +wallet_id }, callback);\n    }\n\n    isValidRestoreWalletText(param, callback): void {\n        this.runCommand(Commands.is_valid_restore_wallet_text, param, callback);\n    }\n\n    restoreWallet(path, pass, seed_phrase, seed_pass, callback): void {\n        const params = {\n            seed_phrase: seed_phrase,\n            path: path,\n            pass: pass,\n            seed_pass,\n        };\n        this.runCommand(Commands.restore_wallet, params, callback);\n    }\n\n    sendMoney({ wallet_id, address, amount, fee, mixin, comment, hide, asset_id }: SendMoneyParams, callback): void {\n        const params = {\n            wallet_id,\n            destinations: [\n                {\n                    address,\n                    amount,\n                    ...(asset_id && { asset_id }),\n                },\n            ],\n            mixin_count: mixin ?? 0,\n            lock_time: 0,\n            fee: this.moneyToIntPipe.transform(fee),\n            comment: comment,\n            push_payer: !hide,\n        };\n\n        this.asyncCall(Commands.transfer, params, callback);\n    }\n\n    setupJwtWalletRpc(value: { zanoCompation: boolean; secret: string }): void {\n        const { secret } = value;\n\n        this.runCommand(Commands.setup_jwt_wallet_rpc, secret, () => {\n            this.variablesService.settings.zanoCompanionForm = value;\n            this.storeAppData();\n        });\n    }\n\n    validateAddress(address, callback): void {\n        this.runCommand(Commands.validate_address, address, callback);\n    }\n\n    setClipboard(str, callback?): void {\n        this.runCommand(Commands.set_clipboard, str, callback);\n    }\n\n    getClipboard(callback): void {\n        this.runCommand(Commands.get_clipboard, {}, callback);\n    }\n\n    createProposal(wallet_id, title, comment, a_addr, b_addr, to_pay, a_pledge, b_pledge, time, payment_id, callback): void {\n        const params = {\n            wallet_id: parseInt(wallet_id, 10),\n            details: {\n                t: title,\n                c: comment,\n                a_addr: a_addr,\n                b_addr: b_addr,\n                to_pay: this.moneyToIntPipe.transform(to_pay),\n                a_pledge: this.moneyToIntPipe.transform(a_pledge),\n                b_pledge: this.moneyToIntPipe.transform(b_pledge),\n            },\n            payment_id: payment_id,\n            expiration_period: parseInt(time, 10) * 60 * 60,\n            fee: this.variablesService.default_fee_big,\n            b_fee: this.variablesService.default_fee_big,\n        };\n        BackendService.Debug(1, params);\n        this.runCommand(Commands.create_proposal, params, callback);\n    }\n\n    getContracts(wallet_id, callback): void {\n        const params = {\n            wallet_id: parseInt(wallet_id, 10),\n        };\n        BackendService.Debug(1, params);\n        this.runCommand(Commands.get_contracts, params, callback);\n    }\n\n    acceptProposal(wallet_id, contract_id, callback): void {\n        const params = {\n            wallet_id: parseInt(wallet_id, 10),\n            contract_id: contract_id,\n        };\n        BackendService.Debug(1, params);\n        this.runCommand(Commands.accept_proposal, params, callback);\n    }\n\n    releaseProposal(wallet_id, contract_id, release_type, callback): void {\n        const params = {\n            wallet_id: parseInt(wallet_id, 10),\n            contract_id: contract_id,\n            release_type: release_type, // \"normal\" or \"burn\"\n        };\n        BackendService.Debug(1, params);\n        this.runCommand(Commands.release_contract, params, callback);\n    }\n\n    requestCancelContract(wallet_id, contract_id, time, callback): void {\n        const params = {\n            wallet_id: parseInt(wallet_id, 10),\n            contract_id: contract_id,\n            fee: this.variablesService.default_fee_big,\n            expiration_period: parseInt(time, 10) * 60 * 60,\n        };\n        BackendService.Debug(1, params);\n        this.runCommand(Commands.request_cancel_contract, params, callback);\n    }\n\n    acceptCancelContract(wallet_id, contract_id, callback): void {\n        const params = {\n            wallet_id: parseInt(wallet_id, 10),\n            contract_id: contract_id,\n        };\n        BackendService.Debug(1, params);\n        this.runCommand(Commands.accept_cancel_contract, params, callback);\n    }\n\n    getMiningHistory(wallet_id, callback): void {\n        this.runCommand(Commands.get_mining_history, { wallet_id: parseInt(wallet_id, 10) }, callback);\n    }\n\n    startPosMining(wallet_id, callback?): void {\n        this.runCommand(Commands.start_pos_mining, { wallet_id: parseInt(wallet_id, 10) }, callback);\n    }\n\n    stopPosMining(wallet_id, callback?): void {\n        this.runCommand(Commands.stop_pos_mining, { wallet_id: parseInt(wallet_id, 10) }, callback);\n    }\n\n    openUrlInBrowser(url, callback?): void {\n        this.runCommand(Commands.open_url_in_browser, url, callback);\n    }\n\n    start_backend(node, host, port, callback): void {\n        const params = {\n            configure_for_remote_node: node,\n            remote_node_host: host,\n            remote_node_port: parseInt(port, 10),\n        };\n        this.runCommand(Commands.start_backend, params, callback);\n    }\n\n    getDefaultFee(callback): void {\n        this.runCommand(Commands.get_default_fee, {}, callback);\n    }\n\n    setBackendLocalization(stringsArray, title, callback?): void {\n        const params = {\n            strings: stringsArray,\n            language_title: title,\n        };\n        this.runCommand(Commands.set_localization_strings, params, callback);\n    }\n\n    registerAlias(wallet_id, alias, address, fee, comment, reward, callback): void {\n        const params = {\n            wallet_id: wallet_id,\n            alias: {\n                alias: alias,\n                address: address,\n                tracking_key: '',\n                comment: comment,\n            },\n            fee: this.moneyToIntPipe.transform(fee),\n            reward: this.moneyToIntPipe.transform(reward),\n        };\n        this.runCommand(Commands.request_alias_registration, params, callback);\n    }\n\n    updateAlias(wallet_id, alias, fee, callback): void {\n        const params = {\n            wallet_id: wallet_id,\n            alias: {\n                alias: alias.name.replace('@', ''),\n                address: alias.address,\n                tracking_key: '',\n                comment: alias.comment,\n            },\n            fee: this.moneyToIntPipe.transform(fee),\n        };\n        this.runCommand(Commands.request_alias_update, params, callback);\n    }\n\n    getAllAliases(callback): void {\n        this.runCommand(Commands.get_all_aliases, {}, callback);\n    }\n\n    getAliasInfoByName(value, callback): void {\n        this.runCommand(Commands.get_alias_info_by_name, value, callback);\n    }\n\n    getAliasByAddress(value, callback): void {\n        this.runCommand(Commands.get_alias_info_by_address, value, callback);\n    }\n\n    getAliasCoast(alias, callback): void {\n        this.runCommand(Commands.get_alias_coast, { v: alias }, callback);\n    }\n\n    resyncWallet(id): void {\n        this.runCommand(Commands.resync_wallet, { wallet_id: id });\n    }\n\n    getWalletAlias(address): Partial<Alias> {\n        if (address !== null && this.variablesService.daemon_state === 2) {\n            if (this.variablesService.aliasesChecked[address] == null) {\n                this.variablesService.aliasesChecked[address] = {};\n                if (this.variablesService.aliases.length) {\n                    for (let i = 0, length = this.variablesService.aliases.length; i < length; i++) {\n                        if (i in this.variablesService.aliases && this.variablesService.aliases[i]['address'] === address) {\n                            this.variablesService.aliasesChecked[address]['name'] = this.variablesService.aliases[i].name;\n                            this.variablesService.aliasesChecked[address]['address'] = this.variablesService.aliases[i].address;\n                            this.variablesService.aliasesChecked[address]['comment'] = this.variablesService.aliases[i].comment;\n                            return this.variablesService.aliasesChecked[address];\n                        }\n                    }\n                }\n                this.getAliasByAddress(address, (status, data) => {\n                    if (status) {\n                        this.variablesService.aliasesChecked[data.address]['name'] = '@' + data.alias;\n                        this.variablesService.aliasesChecked[data.address]['address'] = data.address;\n                        this.variablesService.aliasesChecked[data.address]['comment'] = data.comment;\n                    }\n                });\n            }\n            return this.variablesService.aliasesChecked[address];\n        }\n        return {};\n    }\n\n    getContactAlias(): void {\n        if (this.variablesService.contacts.length > 0 && this.variablesService.daemon_state === 2) {\n            this.variablesService.contacts.map(contact => {\n                this.getAliasByAddress(contact.address, (status, data) => {\n                    if (status) {\n                        if (data.alias) {\n                            contact.alias = '@' + data.alias;\n                        }\n                    } else {\n                        contact.alias = null;\n                    }\n                });\n            });\n        }\n    }\n\n    getRecentTransfers(id, offset, count, exclude_mining_txs, callback): void {\n        const params = {\n            wallet_id: id,\n            offset: offset,\n            count: count,\n            exclude_mining_txs: exclude_mining_txs,\n        };\n        this.runCommand(Commands.get_recent_transfers, params, callback);\n    }\n\n    getPoolInfo(callback): void {\n        this.runCommand(Commands.get_tx_pool_info, {}, callback);\n    }\n\n    getVersion(callback): void {\n        this.runCommand(Commands.get_version, {}, (status, version, errorVersion) => {\n            this.runCommand(Commands.get_network_type, {}, (status_network, type, errorType) => {\n                callback(version, type, errorVersion ?? errorType);\n            });\n        });\n    }\n\n    setLogLevel(level): void {\n        this.runCommand(Commands.set_log_level, { v: level });\n    }\n\n    asyncCall(command: string, params: PramsObj, callback?: (job_id?: number) => void | any): void {\n        this.runCommand(Commands.async_call, [command, params], (status, { job_id }: { job_id: number }) => {\n            callback(job_id);\n        });\n    }\n\n    asyncCall2a(command: string, wallet_id: number, params: PramsObj, callback?: (job_id?: number) => void | any): void {\n        this.runCommand(\n            Commands.async_call_2a,\n            [command, wallet_id, params],\n            (\n                status,\n                {\n                    job_id,\n                }: {\n                    job_id: number;\n                }\n            ) => {\n                callback(job_id);\n            }\n        );\n    }\n\n    dispatchAsyncCallResult(): void {\n        this.backendObject[Commands.dispatch_async_call_result].connect((job_id: string, json_resp: string) => {\n            const asyncCommandResults: AsyncCommandResults = {\n                job_id: +job_id,\n                response: JSON.parse(json_resp),\n            };\n            console.group(`----------- ${Commands.dispatch_async_call_result} -----------`);\n            console.log(asyncCommandResults);\n            console.groupEnd();\n            this.ngZone.run(() => setTimeout(() => this.dispatchAsyncCallResult$.next(asyncCommandResults), 250));\n        });\n    }\n\n    handleCurrentActionState(): void {\n        this.backendObject[Commands.handle_current_action_state].connect((response: string) => {\n            const currentActionState: CurrentActionState = JSON.parse(response);\n            this.ngZone.run(() => this.handleCurrentActionState$.next(currentActionState));\n        });\n    }\n\n    setEnableTor(value: boolean): void {\n        this.runCommand(Commands.set_enable_tor, <{ v: boolean }>{\n            v: value,\n        });\n    }\n\n    getOptions(): any {\n        this.runCommand(\n            Commands.get_options,\n            {},\n            (\n                status,\n                {\n                    disable_price_fetch,\n                    use_debug_mode,\n                    rpc_port,\n                }: { disable_price_fetch: boolean; use_debug_mode: boolean; rpc_port: number }\n            ) => {\n                this.variablesService.disable_price_fetch$.next(disable_price_fetch);\n                this.variablesService.use_debug_mode$.next(use_debug_mode);\n                this.variablesService.rpc_port = rpc_port;\n            }\n        );\n    }\n\n    addCustomAssetId(\n        params: ParamsAddCustomAssetId,\n        callback: (\n            status: boolean,\n            response_data: ResponseAddCustomAssetId,\n            res_error_code?: {\n                error_code: 'FAILED' | string;\n                response_data: {\n                    asset_descriptor: Partial<AssetInfo>;\n                    status: 'FAILED' | string;\n                };\n            }\n        ) => void\n    ): void {\n        this.runCommand(Commands.add_custom_asset_id, params, callback);\n    }\n\n    removeCustomAssetId(\n        params: ParamsRemoveCustomAssetId,\n        callback?: (status: boolean, response_data: ResponseRemoveCustomAssetId) => void\n    ): void {\n        this.runCommand(Commands.remove_custom_asset_id, params, callback);\n    }\n\n    getWalletInfo(wallet_id, callback?: (status: boolean, response_data: ResponseGetWalletInfo) => void): void {\n        this.runCommand(Commands.get_wallet_info, { wallet_id }, callback);\n    }\n\n    // Use for call rpc-api https://docs.zano.org/docs/build/rpc-api\n    call_rpc(params: Partial<ParamsCallRpc>, callback?: (status: boolean, response_data: any) => void): void {\n        this.runCommand(Commands.call_rpc, params, callback);\n    }\n\n    call_wallet_rpc(\n        params: [wallet_id: number, params: Partial<ParamsCallRpc>],\n        callback?: (status: boolean, response_data: any) => void\n    ): void {\n        this.runCommand(Commands.call_wallet_rpc, params, callback);\n    }\n\n    private informerRun(error: string, params, command: string): void {\n        let error_translate = '';\n        switch (error) {\n            case 'NOT_ENOUGH_MONEY':\n                error_translate = 'ERRORS.NOT_ENOUGH_MONEY';\n                // error_translate = 'ERRORS.NO_MONEY'; maybe that one?\n                if (command === 'cancel_offer') {\n                    error_translate = this.translate.instant('ERRORS.NO_MONEY_REMOVE_OFFER', {\n                        fee: this.variablesService.default_fee,\n                        currency: this.variablesService.defaultTicker,\n                    });\n                }\n                break;\n            case 'CORE_BUSY':\n                error_translate = 'ERRORS.CORE_BUSY';\n                break;\n            case 'BUSY':\n                error_translate = 'ERRORS.DAEMON_BUSY';\n                break;\n            case 'OVERFLOW':\n                if (command !== 'get_all_aliases') {\n                    error_translate = '';\n                }\n                break;\n            case 'NOT_ENOUGH_OUTPUTS_FOR_MIXING':\n                error_translate = 'ERRORS.NOT_ENOUGH_OUTPUTS_TO_MIX';\n                break;\n            case 'TX_IS_TOO_BIG':\n                error_translate = 'ERRORS.TRANSACTION_IS_TO_BIG';\n                break;\n            case 'DISCONNECTED':\n                error_translate = 'ERRORS.TRANSFER_ATTEMPT';\n                break;\n            case 'ACCESS_DENIED':\n                error_translate = 'ERRORS.ACCESS_DENIED';\n                break;\n            case 'TX_REJECTED':\n                // if (command === 'request_alias_registration') {\n                // error_translate = 'INFORMER.ALIAS_IN_REGISTER';\n                // } else {\n                error_translate = 'ERRORS.TRANSACTION_ERROR';\n                // }\n                break;\n            case 'INTERNAL_ERROR':\n                error_translate = 'ERRORS.TRANSACTION_ERROR';\n                break;\n            case 'BAD_ARG':\n                error_translate = 'ERRORS.BAD_ARG';\n                break;\n            case 'WALLET_WRONG_ID':\n                error_translate = 'ERRORS.WALLET_WRONG_ID';\n                break;\n            case 'WALLET_WATCH_ONLY_NOT_SUPPORTED':\n                error_translate = 'ERRORS.WALLET_WATCH_ONLY_NOT_SUPPORTED';\n                break;\n            // case 'WRONG_PASSWORD':\n            // params = JSON.parse(params);\n            // if (!params.testEmpty) {\n            //   error_translate = 'ERRORS.WRONG_PASSWORD';\n            // }\n            // break;\n            case 'FILE_RESTORED':\n                if (command === 'open_wallet') {\n                    error_translate = 'ERRORS.FILE_RESTORED';\n                }\n                break;\n            case 'FILE_NOT_FOUND':\n                if (command !== 'open_wallet' && command !== 'get_alias_info_by_name' && command !== 'get_alias_info_by_address') {\n                    error_translate = this.translate.instant('ERRORS.FILE_NOT_FOUND');\n                    params = JSON.parse(params);\n                    if (params.path) {\n                        error_translate += ': ' + params.path;\n                    }\n                }\n                break;\n            case 'NOT_FOUND':\n                if (command !== 'open_wallet' && command !== 'get_alias_info_by_name' && command !== 'get_alias_info_by_address') {\n                    error_translate = this.translate.instant('ERRORS.FILE_NOT_FOUND');\n                    params = JSON.parse(params);\n                    if (params.path) {\n                        error_translate += ': ' + params.path;\n                    }\n                }\n                break;\n            case 'CANCELED':\n            case '':\n                break;\n            case 'FAIL':\n                if (\n                    command === 'create_proposal' ||\n                    command === 'accept_proposal' ||\n                    command === 'release_contract' ||\n                    command === 'request_cancel_contract' ||\n                    command === 'accept_cancel_contract'\n                ) {\n                    error_translate = ' ';\n                }\n                break;\n            case 'ALREADY_EXISTS':\n                error_translate = 'ERRORS.FILE_EXIST';\n                break;\n            case 'FAILED':\n                BackendService.Debug(0, `Error: (${error}) was triggered by command: ${command}`);\n                break;\n            default:\n                error_translate = '';\n        }\n        if (error.indexOf('FAIL:failed to save file') > -1) {\n            error_translate = 'ERRORS.FILE_NOT_SAVED';\n        }\n        if (error.indexOf('FAILED:failed to open binary wallet file for saving') > -1 && command === 'generate_wallet') {\n            error_translate = '';\n        }\n\n        if (error_translate !== '') {\n            this.modalService.prepareModal('error', error_translate);\n        }\n    }\n\n    private commandDebug(command: Commands, params: Params, result: any): void {\n        BackendService.Debug(2, '----------------- ' + command + ' -----------------');\n        const debug = {\n            _send_params: params,\n            _result: result,\n        };\n        BackendService.Debug(2, debug);\n        try {\n            BackendService.Debug(2, JSONBigNumber.parse(result, BackendService.bigNumberParser));\n        } catch (e) {\n            BackendService.Debug(2, { response_data: result, error_code: 'OK' });\n        }\n    }\n\n    private backendCallback(resultStr, params, callback, command: Commands): any {\n        let Result = resultStr;\n        if (command !== Commands.get_clipboard) {\n            if (!resultStr || resultStr === '') {\n                Result = {};\n            } else {\n                try {\n                    Result = JSONBigNumber.parse(resultStr, BackendService.bigNumberParser);\n                } catch (e) {\n                    Result = { response_data: resultStr, error_code: 'OK' };\n                }\n            }\n        } else {\n            Result = {\n                error_code: 'OK',\n                response_data: Result,\n            };\n        }\n\n        const core_busy = Result.error_code === 'CORE_BUSY';\n        const Status = Result.error_code === 'OK' || Result.error_code === 'TRUE';\n\n        if (!Status && Status !== undefined && Result.error_code !== undefined) {\n            BackendService.Debug(1, 'API error for command: \"' + command + '\". Error code: ' + Result.error_code);\n        }\n        const data = typeof Result === 'object' && 'response_data' in Result ? Result.response_data : Result;\n\n        let res_error_code = false;\n        if (\n            typeof Result === 'object' &&\n            'error_code' in Result &&\n            Result.error_code !== 'OK' &&\n            Result.error_code !== 'TRUE' &&\n            Result.error_code !== 'FALSE' &&\n            Result.error_code !== 'WRAP'\n        ) {\n            if (core_busy) {\n                setTimeout(() => {\n                    // this is will avoid update data when user\n                    // on other wallet after CORE_BUSY (blink of data)\n                    if (command !== Commands.get_recent_transfers) {\n                        this.runCommand(command, params, callback);\n                    } else {\n                        const current_wallet_id = this.variablesService.currentWallet.wallet_id;\n                        if (current_wallet_id === params.wallet_id) {\n                            this.runCommand(command, params, callback);\n                        }\n                    }\n                }, 50);\n            } else {\n                this.informerRun(Result.error_code, params, command);\n                res_error_code = Result.error_code;\n            }\n        }\n\n        if (!core_busy) {\n            if (typeof callback === 'function') {\n                callback(Status, data, res_error_code);\n            } else {\n                return data;\n            }\n        }\n    }\n\n    private runCommand(command: Commands, params?: Params, callback?): any {\n        if (!this.backendObject) {\n            return;\n        }\n\n        if (command === Commands.get_recent_transfers) {\n            this.variablesService.get_recent_transfers = true;\n        }\n\n        const Action = this.backendObject[command];\n\n        if (!Action) {\n            BackendService.Debug(0, 'Run Command Error! Command \"' + command + '\" don\\'t found in backendObject');\n            return;\n        }\n\n        const type: ParamsType = getParamsType(params);\n        params = params && convertorParams(params);\n\n        if (type === ParamsType.array) {\n            Action(...(params as string[]), resultStr => {\n                this.commandDebug(command, params, resultStr);\n                return this.backendCallback(resultStr, params, callback, command);\n            });\n            return;\n        }\n\n        if (command === Commands.get_recent_transfers) {\n            this.variablesService.get_recent_transfers = false;\n        }\n        Action(params, resultStr => {\n            this.commandDebug(command, params, resultStr);\n            return this.backendCallback(resultStr, params, callback, command);\n        });\n    }\n}\n","import { inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { WrapInfo } from '@api/models/wrap-info';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class WrapInfoService {\n    private httpClient = inject(HttpClient);\n\n    getWrapInfo(): Observable<WrapInfo> {\n        return this.httpClient.get<WrapInfo>('https://wrapped.zano.org/api2/get_wrap_info');\n    }\n}\n","import { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\n\n@NgModule({\n    imports: [RouterModule.forRoot([], { relativeLinkResolution: 'legacy' })],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, NgZone, OnDestroy, OnInit, Renderer2 } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BackendService, Commands } from '@api/services/backend.service';\nimport { Router } from '@angular/router';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { IntToMoneyPipe } from '@parts/pipes';\nimport { BigNumber } from 'bignumber.js';\nimport { ModalService } from '@parts/services/modal.service';\nimport { StateKeys, Store } from '@store/store';\nimport { Subject, take } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { paths, pathsChildrenAuth } from './pages/paths';\nimport { hasOwnProperty } from '@parts/functions/has-own-property';\nimport { Dialog } from '@angular/cdk/dialog';\nimport { ZanoLoadersService } from '@parts/services/zano-loaders.service';\nimport { ParamsCallRpc } from '@api/models/call_rpc.model';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-root',\n    template: `\n        <router-outlet\n            *ngIf=\"[0, 1, 2, 6].indexOf(variablesService.daemon_state) !== -1 && !(zanoLoadersService.getState('fullScreen') | async)\"\n        ></router-outlet>\n\n        <div *ngIf=\"[3, 4, 5].indexOf(variablesService.daemon_state) !== -1\" class=\"preloader\">\n            <p *ngIf=\"variablesService.daemon_state === 3\" class=\"mb-2\">\n                {{ 'SIDEBAR.SYNCHRONIZATION.LOADING' | translate }}\n            </p>\n            <p *ngIf=\"variablesService.daemon_state === 4\" class=\"mb-2\">\n                {{ 'SIDEBAR.SYNCHRONIZATION.ERROR' | translate }}\n            </p>\n            <p *ngIf=\"variablesService.daemon_state === 5\" class=\"mb-2\">\n                {{ 'SIDEBAR.SYNCHRONIZATION.COMPLETE' | translate }}\n            </p>\n            <div class=\"loading-bar\"></div>\n        </div>\n\n        <div class=\"preloader\" *ngIf=\"zanoLoadersService.getState('fullScreen') | async\">\n            <p class=\"mb-2\">\n                {{ zanoLoadersService.getMessage('fullScreen') | async | translate }}\n            </p>\n            <div class=\"loading-bar\"></div>\n        </div>\n\n        <app-register-context-templates></app-register-context-templates>\n\n        <app-open-wallet-modal *ngIf=\"needOpenWallets.length\" [wallets]=\"needOpenWallets\"></app-open-wallet-modal>\n    `,\n})\nexport class AppComponent implements OnInit, OnDestroy {\n    intervalUpdatePriceState;\n\n    intervalUpdateContractsState;\n\n    expMedTsEvent;\n\n    onQuitRequest = false;\n\n    firstOnlineState = false;\n\n    translateUsed = false;\n\n    needOpenWallets = [];\n\n    currentScreenSize: string;\n\n    displayNameMap = new Map([\n        [Breakpoints.XSmall, 'XSmall'],\n        [Breakpoints.Small, 'Small'],\n        [Breakpoints.Medium, 'Medium'],\n        [Breakpoints.Large, 'Large'],\n        [Breakpoints.XLarge, 'XLarge'],\n    ]);\n    private destroy$ = new Subject<void>();\n\n    constructor(\n        public variablesService: VariablesService,\n        public translate: TranslateService,\n        private http: HttpClient,\n        private renderer: Renderer2,\n        private backendService: BackendService,\n        private router: Router,\n        private ngZone: NgZone,\n        private intToMoneyPipe: IntToMoneyPipe,\n        private modalService: ModalService,\n        private store: Store,\n        private dialog: Dialog,\n        private matDialog: MatDialog,\n        public zanoLoadersService: ZanoLoadersService,\n        private _breakpointObserver: BreakpointObserver\n    ) {\n        translate.addLangs(['en', 'fr', 'de', 'it', 'pt']);\n        translate.setDefaultLang('en');\n        translate\n            .use('en')\n            .pipe(takeUntil(this.destroy$))\n            .subscribe({\n                next: () => {\n                    this.translateUsed = true;\n                },\n            });\n\n        this._setResponseClasses();\n    }\n\n    private _setResponseClasses(): void {\n        this._breakpointObserver\n            .observe([\n                Breakpoints.XSmall, // XSmall\t(max-width: 599.98px)\n                Breakpoints.Small, // Small\t(min-width: 600px) and (max-width: 959.98px)\n                Breakpoints.Medium, // Medium\t(min-width: 960px) and (max-width: 1279.98px)\n                Breakpoints.Large, // Large\t(min-width: 1280px) and (max-width: 1919.98px)\n                Breakpoints.XLarge, // XLarge\t(min-width: 1920px)\n            ])\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(result => {\n                for (const query of Object.keys(result.breakpoints)) {\n                    if (result.breakpoints[query]) {\n                        this.currentScreenSize = this.displayNameMap.get(query) ?? 'Unknown';\n\n                        document.body.classList.remove(...this.displayNameMap.values());\n                        document.body.classList.add(this.currentScreenSize);\n                    }\n                }\n            });\n    }\n\n    setBackendLocalization(): void {\n        if (this.translateUsed) {\n            const stringsArray = [\n                this.translate.instant('BACKEND_LOCALIZATION.QUIT'),\n                this.translate.instant('BACKEND_LOCALIZATION.IS_RECEIVED'),\n                this.translate.instant('BACKEND_LOCALIZATION.IS_CONFIRMED'),\n                this.translate.instant('BACKEND_LOCALIZATION.INCOME_TRANSFER_UNCONFIRMED'),\n                this.translate.instant('BACKEND_LOCALIZATION.INCOME_TRANSFER_CONFIRMED'),\n                this.translate.instant('BACKEND_LOCALIZATION.MINED'),\n                this.translate.instant('BACKEND_LOCALIZATION.LOCKED'),\n                this.translate.instant('BACKEND_LOCALIZATION.IS_MINIMIZE'),\n                this.translate.instant('BACKEND_LOCALIZATION.RESTORE'),\n                this.translate.instant('BACKEND_LOCALIZATION.TRAY_MENU_SHOW'),\n                this.translate.instant('BACKEND_LOCALIZATION.TRAY_MENU_MINIMIZE'),\n            ];\n            this.backendService.setBackendLocalization(stringsArray, this.variablesService.settings.language);\n        } else {\n            console.warn('wait translate use');\n            setTimeout(() => {\n                this.setBackendLocalization();\n            }, 10000);\n        }\n    }\n\n    ngOnInit(): void {\n        this.backendService.initService().subscribe({\n            next: initMessage => {\n                console.log('Init message: ', initMessage);\n                this.backendService.webkitLaunchedScript();\n\n                this.backendService.start_backend(false, '127.0.0.1', 11512, (st2, dd2) => {\n                    console.log(st2, dd2);\n                });\n\n                this.backendService.eventSubscribe(Commands.quit_requested, async () => {\n                    if (this.onQuitRequest) {\n                        return;\n                    }\n\n                    // await this.ngZone.run(async () => {\n                    //     await this.router.navigate(['/']);\n                    // });\n\n                    this.dialog.closeAll();\n                    this.matDialog.closeAll();\n\n                    this.needOpenWallets = [];\n                    this.variablesService.daemon_state = 5;\n\n                    const saveFunction = (): void => {\n                        this.backendService.storeAppData((): void => {\n                            const recursionCloseWallets = (): void => {\n                                if (this.variablesService.wallets.length > 0) {\n                                    const lastIndex = this.variablesService.wallets.length - 1;\n                                    this.backendService.closeWallet(this.variablesService.wallets[lastIndex].wallet_id, () => {\n                                        this.variablesService.wallets.splice(lastIndex, 1);\n                                        recursionCloseWallets();\n                                    });\n                                } else {\n                                    this.ngZone.run(() => {\n                                        this.backendService.quitRequest();\n                                    });\n                                }\n                            };\n                            recursionCloseWallets();\n                        });\n                    };\n                    if (this.variablesService.appPass) {\n                        this.backendService.storeSecureAppData(saveFunction);\n                    } else {\n                        saveFunction();\n                    }\n\n                    this.onQuitRequest = true;\n                });\n\n                this.backendService.eventSubscribe(Commands.update_wallet_status, data => {\n                    console.log('----------------- update_wallet_status -----------------');\n                    console.log(data);\n\n                    const wallet_state = data.wallet_state;\n                    const is_mining = data.is_mining;\n                    const wallet = this.variablesService.getWallet(data.wallet_id);\n                    // 1-synch, 2-ready, 3 - error\n                    if (wallet) {\n                        this.ngZone.run(() => {\n                            wallet.loaded = false;\n                            wallet.staking = is_mining;\n                            if (wallet_state === 2) {\n                                // ready\n                                wallet.loaded = true;\n                            }\n                            if (wallet_state === 3) {\n                                // error\n                                // wallet.error = true;\n                            }\n                            wallet.balances = data.balances;\n                            wallet.mined_total = data.minied_total;\n                            wallet.alias_available = data.is_alias_operations_available;\n                            wallet.has_bare_unspent_outputs = data.has_bare_unspent_outputs;\n                        });\n                    }\n                });\n\n                this.backendService.eventSubscribe(Commands.wallet_sync_progress, data => {\n                    console.log('----------------- wallet_sync_progress -----------------');\n                    console.log(data);\n                    const wallet = this.variablesService.getWallet(data.wallet_id);\n                    if (wallet) {\n                        this.ngZone.run(() => {\n                            wallet.progress = data.progress < 0 ? 0 : data.progress > 100 ? 100 : data.progress;\n                            if (!this.variablesService.sync_started) {\n                                this.variablesService.sync_started = true;\n                                this.variablesService.sync_wallets[wallet.wallet_id] = true;\n                            }\n                            this.addToStore(wallet, true); // subscribe on data\n                            if (wallet.progress === 0) {\n                                wallet.loaded = false;\n                            } else if (wallet.progress === 100) {\n                                wallet.loaded = true;\n                                this.addToStore(wallet, false);\n                                this.variablesService.sync_started = false;\n                                this.variablesService.sync_wallets[wallet.wallet_id] = false;\n                            }\n                        });\n                    }\n                });\n\n                this.backendService.eventSubscribe(Commands.update_daemon_state, data => {\n                    console.log('----------------- update_daemon_state -----------------');\n                    console.log('DAEMON:' + data.daemon_network_state);\n                    console.log(data);\n                    // this.variablesService.exp_med_ts = data['expiration_median_timestamp'] + 600 + 1;\n                    this.variablesService.setExpMedTs(data['expiration_median_timestamp'] + 600 + 1);\n                    this.variablesService.net_time_delta_median = data.net_time_delta_median;\n                    this.variablesService.last_build_available = data.last_build_available;\n                    this.variablesService.last_build_displaymode = data.last_build_displaymode;\n                    this.variablesService.setHeightApp(data.height);\n                    this.variablesService.setHeightMax(data.max_net_seen_height);\n\n                    this.variablesService.setDownloadedBytes(data.downloaded_bytes);\n                    this.variablesService.setTotalBytes(data.download_total_data_size);\n\n                    this.backendService.getContactAlias();\n                    this.ngZone.run(() => {\n                        this.variablesService.daemon_state = data['daemon_network_state'];\n                        if (data['daemon_network_state'] === 1) {\n                            const max = data['max_net_seen_height'] - data['synchronization_start_height'];\n                            const current = data.height - data['synchronization_start_height'];\n                            const return_val = Math.floor(((current * 100) / max) * 100) / 100;\n                            if (max === 0 || return_val < 0) {\n                                this.variablesService.sync.progress_value = 0;\n                                this.variablesService.sync.progress_value_text = '0.00';\n                                this.variablesService.sync.blocks.current = 0;\n                                this.variablesService.sync.blocks.max = 0;\n                            } else if (return_val >= 100) {\n                                this.variablesService.sync.progress_value = 100;\n                                this.variablesService.sync.progress_value_text = '99.99';\n                                this.variablesService.sync.blocks.current = current;\n                                this.variablesService.sync.blocks.max = max;\n                            } else {\n                                this.variablesService.sync.progress_value = return_val;\n                                this.variablesService.sync.progress_value_text = return_val.toFixed(2);\n                                this.variablesService.sync.blocks.current = current;\n                                this.variablesService.sync.blocks.max = max;\n                            }\n                        }\n\n                        if (data['daemon_network_state'] === 6) {\n                            const max = data['download_total_data_size'];\n                            const current = data['downloaded_bytes'];\n                            const return_val = Math.floor((current / max) * 100);\n                            if (max === 0 || return_val < 0) {\n                                this.variablesService.download.progress_value = 0;\n                                this.variablesService.download.progress_value_text = '0.00';\n                            } else if (return_val >= 100) {\n                                this.variablesService.download.progress_value = 100;\n                                this.variablesService.download.progress_value_text = '99.99';\n                            } else {\n                                this.variablesService.download.progress_value = return_val;\n                                this.variablesService.download.progress_value_text = return_val.toFixed(2);\n                            }\n                        }\n                    });\n                    if (!this.firstOnlineState && data['daemon_network_state'] === 2) {\n                        this.getAliases();\n                        this.backendService.getContactAlias();\n                        this.backendService.getDefaultFee((status_fee, data_fee) => {\n                            this.variablesService.default_fee_big = new BigNumber(data_fee);\n                            this.variablesService.default_fee = this.intToMoneyPipe.transform(data_fee);\n                        });\n                        this.firstOnlineState = true;\n                    }\n                });\n\n                this.backendService.eventSubscribe(Commands.money_transfer, data => {\n                    console.log('----------------- money_transfer -----------------');\n                    console.log(data);\n\n                    if (!data.ti) {\n                        return;\n                    }\n\n                    const wallet_id = data.wallet_id;\n                    const tr_info = data.ti;\n\n                    const wallet = this.variablesService.getWallet(wallet_id);\n                    if (wallet) {\n                        if (wallet.history.length > 40) {\n                            wallet.history.splice(40, 1);\n                        }\n                        this.ngZone.run(() => {\n                            wallet.balances = data.balances;\n\n                            if (tr_info.tx_type === 6) {\n                                this.variablesService.setRefreshStacking(wallet_id);\n                            }\n\n                            let tr_exists = wallet.excluded_history.some(elem => elem.tx_hash === tr_info.tx_hash);\n                            tr_exists = !tr_exists ? wallet.history.some(elem => elem.tx_hash === tr_info.tx_hash) : tr_exists;\n\n                            if (wallet.currentPage === 1) {\n                                wallet.prepareHistory([tr_info]);\n                                if (wallet.restore) {\n                                    wallet.total_history_item = wallet.history.length;\n                                    wallet.totalPages = Math.ceil(wallet.total_history_item / this.variablesService.count);\n                                    wallet.totalPages > this.variablesService.maxPages\n                                        ? (wallet.pages = new Array(5).fill(1).map((value, index) => value + index))\n                                        : (wallet.pages = new Array(wallet.totalPages).fill(1).map((value, index) => value + index));\n                                }\n                            }\n\n                            if (hasOwnProperty(tr_info, 'contract')) {\n                                const exp_med_ts = this.variablesService.exp_med_ts;\n                                const height_app = this.variablesService.height_app;\n                                const contract = tr_info.contract[0];\n                                if (tr_exists) {\n                                    for (let i = 0; i < wallet.contracts.length; i++) {\n                                        if (\n                                            wallet.contracts[i].contract_id === contract.contract_id &&\n                                            wallet.contracts[i].is_a === contract.is_a\n                                        ) {\n                                            wallet.contracts[i].cancel_expiration_time = contract.cancel_expiration_time;\n                                            wallet.contracts[i].expiration_time = contract.expiration_time;\n                                            wallet.contracts[i].height = contract.height;\n                                            wallet.contracts[i].timestamp = contract.timestamp;\n                                            break;\n                                        }\n                                    }\n                                    // $rootScope.getContractsRecount();\n                                    return;\n                                }\n\n                                if (contract.state === 1 && contract.expiration_time < exp_med_ts) {\n                                    contract.state = 110;\n                                } else if (contract.state === 5 && contract.cancel_expiration_time < exp_med_ts) {\n                                    contract.state = 130;\n                                } else if (contract.state === 1) {\n                                    const searchResult2 = this.variablesService.settings.notViewedContracts.find(\n                                        elem =>\n                                            elem.state === 110 && elem.is_a === contract.is_a && elem.contract_id === contract.contract_id\n                                    );\n                                    if (searchResult2) {\n                                        if (searchResult2.time === contract.expiration_time) {\n                                            contract.state = 110;\n                                        } else {\n                                            for (let j = 0; j < this.variablesService.settings.notViewedContracts.length; j++) {\n                                                if (\n                                                    this.variablesService.settings.notViewedContracts[j].contract_id ===\n                                                        contract.contract_id &&\n                                                    this.variablesService.settings.notViewedContracts[j].is_a === contract.is_a\n                                                ) {\n                                                    this.variablesService.settings.notViewedContracts.splice(j, 1);\n                                                    break;\n                                                }\n                                            }\n                                            for (let j = 0; j < this.variablesService.settings.viewedContracts.length; j++) {\n                                                if (\n                                                    this.variablesService.settings.viewedContracts[j].contract_id ===\n                                                        contract.contract_id &&\n                                                    this.variablesService.settings.viewedContracts[j].is_a === contract.is_a\n                                                ) {\n                                                    this.variablesService.settings.viewedContracts.splice(j, 1);\n                                                    break;\n                                                }\n                                            }\n                                        }\n                                    }\n                                } else if (contract.state === 2 && (contract.height === 0 || height_app - contract.height < 10)) {\n                                    contract.state = 201;\n                                } else if (contract.state === 2) {\n                                    const searchResult3 = this.variablesService.settings.viewedContracts.some(\n                                        elem =>\n                                            elem.state === 120 && elem.is_a === contract.is_a && elem.contract_id === contract.contract_id\n                                    );\n                                    if (searchResult3) {\n                                        contract.state = 120;\n                                    }\n                                } else if (contract.state === 5) {\n                                    const searchResult4 = this.variablesService.settings.notViewedContracts.find(\n                                        elem =>\n                                            elem.state === 130 && elem.is_a === contract.is_a && elem.contract_id === contract.contract_id\n                                    );\n                                    if (searchResult4) {\n                                        if (searchResult4.time === contract.cancel_expiration_time) {\n                                            contract.state = 130;\n                                        } else {\n                                            for (let j = 0; j < this.variablesService.settings.notViewedContracts.length; j++) {\n                                                if (\n                                                    this.variablesService.settings.notViewedContracts[j].contract_id ===\n                                                        contract.contract_id &&\n                                                    this.variablesService.settings.notViewedContracts[j].is_a === contract.is_a\n                                                ) {\n                                                    this.variablesService.settings.notViewedContracts.splice(j, 1);\n                                                    break;\n                                                }\n                                            }\n                                            for (let j = 0; j < this.variablesService.settings.viewedContracts.length; j++) {\n                                                if (\n                                                    this.variablesService.settings.viewedContracts[j].contract_id ===\n                                                        contract.contract_id &&\n                                                    this.variablesService.settings.viewedContracts[j].is_a === contract.is_a\n                                                ) {\n                                                    this.variablesService.settings.viewedContracts.splice(j, 1);\n                                                    break;\n                                                }\n                                            }\n                                        }\n                                    }\n                                } else if (contract.state === 6 && (contract.height === 0 || height_app - contract.height < 10)) {\n                                    contract.state = 601;\n                                }\n\n                                const searchResult = this.variablesService.settings.viewedContracts.some(\n                                    elem =>\n                                        elem.state === contract.state &&\n                                        elem.is_a === contract.is_a &&\n                                        elem.contract_id === contract.contract_id\n                                );\n                                contract.is_new = !searchResult;\n\n                                let findContract = false;\n                                for (let i = 0; i < wallet.contracts.length; i++) {\n                                    if (\n                                        wallet.contracts[i].contract_id === contract.contract_id &&\n                                        wallet.contracts[i].is_a === contract.is_a\n                                    ) {\n                                        for (const prop in contract) {\n                                            if (hasOwnProperty(contract, prop)) {\n                                                wallet.contracts[i][prop] = contract[prop];\n                                            }\n                                        }\n                                        findContract = true;\n                                        break;\n                                    }\n                                }\n                                if (findContract === false) {\n                                    wallet.contracts.push(contract);\n                                }\n                                // wallet.recountNewContracts();\n                            }\n                        });\n                    }\n                });\n\n                this.backendService.backendObject[Commands.handle_deeplink_click].connect(data => {\n                    console.log('----------------- handle_deeplink_click -----------------');\n                    console.log(data);\n                    this.ngZone.run(() => {\n                        if (data) {\n                            this.variablesService.deeplink$.next(data);\n                        }\n                    });\n                });\n\n                this.backendService.eventSubscribe(Commands.money_transfer_cancel, data => {\n                    console.log('----------------- money_transfer_cancel -----------------');\n                    console.log(data);\n\n                    if (!data.ti) {\n                        return;\n                    }\n\n                    const wallet_id = data.wallet_id;\n                    const tr_info = data.ti;\n                    const wallet = this.variablesService.getWallet(wallet_id);\n\n                    if (wallet) {\n                        if (hasOwnProperty(tr_info, 'contract')) {\n                            for (let i = 0; i < wallet.contracts.length; i++) {\n                                if (\n                                    wallet.contracts[i].contract_id === tr_info.contract[0].contract_id &&\n                                    wallet.contracts[i].is_a === tr_info.contract[0].is_a\n                                ) {\n                                    if (wallet.contracts[i].state === 1 || wallet.contracts[i].state === 110) {\n                                        wallet.contracts[i].is_new = true;\n                                        wallet.contracts[i].state = 140;\n                                        // wallet.recountNewContracts();\n                                    }\n                                    break;\n                                }\n                            }\n                        }\n\n                        wallet.removeFromHistory(tr_info.tx_hash);\n\n                        let error_tr = '';\n                        switch (tr_info.tx_type) {\n                            case 0:\n                                error_tr =\n                                    this.translate.instant('ERRORS.TX_TYPE_NORMAL') +\n                                    '<br>' +\n                                    tr_info.tx_hash +\n                                    '<br>' +\n                                    wallet.name +\n                                    '<br>' +\n                                    wallet.address +\n                                    '<br>' +\n                                    this.translate.instant('ERRORS.TX_TYPE_NORMAL_TO') +\n                                    ' ' +\n                                    this.intToMoneyPipe.transform(tr_info.amount) +\n                                    ' ' +\n                                    this.translate.instant('ERRORS.TX_TYPE_NORMAL_END');\n                                break;\n                            case 1:\n                                // this.translate.instant('ERRORS.TX_TYPE_PUSH_OFFER');\n                                break;\n                            case 2:\n                                // this.translate.instant('ERRORS.TX_TYPE_UPDATE_OFFER');\n                                break;\n                            case 3:\n                                // this.translate.instant('ERRORS.TX_TYPE_CANCEL_OFFER');\n                                break;\n                            case 4:\n                                error_tr =\n                                    this.translate.instant('ERRORS.TX_TYPE_NEW_ALIAS') +\n                                    '<br>' +\n                                    tr_info.tx_hash +\n                                    '<br>' +\n                                    wallet.name +\n                                    '<br>' +\n                                    wallet.address +\n                                    '<br>' +\n                                    this.translate.instant('ERRORS.TX_TYPE_NEW_ALIAS_END');\n                                break;\n                            case 5:\n                                error_tr =\n                                    this.translate.instant('ERRORS.TX_TYPE_UPDATE_ALIAS') +\n                                    '<br>' +\n                                    tr_info.tx_hash +\n                                    '<br>' +\n                                    wallet.name +\n                                    '<br>' +\n                                    wallet.address +\n                                    '<br>' +\n                                    this.translate.instant('ERRORS.TX_TYPE_NEW_ALIAS_END');\n                                break;\n                            case 6:\n                                error_tr = this.translate.instant('ERRORS.TX_TYPE_COIN_BASE');\n                                break;\n                        }\n                        if (error_tr) {\n                            this.modalService.prepareModal('error', error_tr);\n                        }\n                    }\n                });\n\n                this.backendService.eventSubscribe(Commands.on_core_event, data => {\n                    console.log('----------------- on_core_event -----------------');\n                    console.log(data);\n\n                    data = JSON.parse(data);\n\n                    if (data.events != null) {\n                        for (let i = 0, length = data.events.length; i < length; i++) {\n                            switch (data.events[i].method) {\n                                case 'CORE_EVENT_BLOCK_ADDED':\n                                    break;\n                                case 'CORE_EVENT_ADD_ALIAS':\n                                    if (this.variablesService.aliasesChecked[data.events[i].details.address] != null) {\n                                        this.variablesService.aliasesChecked[data.events[i].details.address]['name'] =\n                                            '@' + data.events[i].details.alias;\n                                        this.variablesService.aliasesChecked[data.events[i].details.address]['address'] =\n                                            data.events[i].details.address;\n                                        this.variablesService.aliasesChecked[data.events[i].details.address]['comment'] =\n                                            data.events[i].details.comment;\n                                    }\n                                    if (this.variablesService.enableAliasSearch) {\n                                        const newAlias = {\n                                            name: '@' + data.events[i].details.alias,\n                                            address: data.events[i].details.address,\n                                            comment: data.events[i].details.comment,\n                                        };\n                                        this.variablesService.aliases = this.variablesService.aliases.concat(newAlias);\n                                        this.variablesService.changeAliases();\n                                    }\n                                    break;\n                                case 'CORE_EVENT_UPDATE_ALIAS':\n                                    for (const address in this.variablesService.aliasesChecked) {\n                                        if (hasOwnProperty(this.variablesService.aliasesChecked, address)) {\n                                            if (this.variablesService.aliasesChecked[address].name === '@' + data.events[i].details.alias) {\n                                                if (\n                                                    this.variablesService.aliasesChecked[address].address !==\n                                                    data.events[i].details.details.address\n                                                ) {\n                                                    delete this.variablesService.aliasesChecked[address]['name'];\n                                                    delete this.variablesService.aliasesChecked[address]['address'];\n                                                    delete this.variablesService.aliasesChecked[address]['comment'];\n                                                } else {\n                                                    this.variablesService.aliasesChecked[address].comment =\n                                                        data.events[i].details.details.comment;\n                                                }\n                                                break;\n                                            }\n                                        }\n                                    }\n                                    if (this.variablesService.aliasesChecked[data.events[i].details.details.address] != null) {\n                                        this.variablesService.aliasesChecked[data.events[i].details.details.address]['name'] =\n                                            '@' + data.events[i].details.alias;\n                                        this.variablesService.aliasesChecked[data.events[i].details.details.address]['address'] =\n                                            data.events[i].details.details.address;\n                                        this.variablesService.aliasesChecked[data.events[i].details.details.address]['comment'] =\n                                            data.events[i].details.details.comment;\n                                    }\n                                    if (this.variablesService.enableAliasSearch) {\n                                        const CurrentAlias = this.variablesService.aliases.find(\n                                            element => element.name === '@' + data.events[i].details.alias\n                                        );\n                                        if (CurrentAlias) {\n                                            CurrentAlias.address = data.events[i].details.details.address;\n                                            CurrentAlias.comment = data.events[i].details.details.comment;\n                                        }\n                                    }\n                                    this.variablesService.changeAliases();\n                                    break;\n                                default:\n                                    break;\n                            }\n                        }\n                    }\n                });\n\n                this.intervalUpdateContractsState = setInterval(() => {\n                    this.variablesService.wallets.forEach(wallet => {\n                        wallet.contracts.forEach(contract => {\n                            if (\n                                contract.state === 201 &&\n                                contract.height !== 0 &&\n                                this.variablesService.height_app - contract.height >= 10\n                            ) {\n                                contract.state = 2;\n                                contract.is_new = true;\n                                console.warn('need check state in contracts');\n                            } else if (\n                                contract.state === 601 &&\n                                contract.height !== 0 &&\n                                this.variablesService.height_app - contract.height >= 10\n                            ) {\n                                contract.state = 6;\n                                contract.is_new = true;\n                            }\n                        });\n                    });\n                }, 30000);\n\n                this.expMedTsEvent = this.variablesService.getExpMedTsEvent.subscribe({\n                    next: (newTimestamp: number) => {\n                        this.variablesService.wallets.forEach(wallet => {\n                            wallet.contracts.forEach(contract => {\n                                if (contract.state === 1 && contract.expiration_time <= newTimestamp) {\n                                    contract.state = 110;\n                                    contract.is_new = true;\n                                } else if (contract.state === 5 && contract.cancel_expiration_time <= newTimestamp) {\n                                    contract.state = 130;\n                                    contract.is_new = true;\n                                }\n                            });\n                        });\n                    },\n                });\n\n                this.backendService.getAppData((status, data) => {\n                    if (data && Object.keys(data).length > 0) {\n                        for (const key in data) {\n                            if (hasOwnProperty(data, key) && hasOwnProperty(this.variablesService.settings, key)) {\n                                this.variablesService.settings[key] = data[key];\n                            }\n                        }\n\n                        const { isDarkTheme$, visibilityBalance$, settings } = this.variablesService;\n\n                        isDarkTheme$.next(settings.isDarkTheme);\n                        visibilityBalance$.next(settings.visibilityBalance);\n                        // TODO: Delete this line after return appUseTor\n                        settings.appUseTor = false;\n                        if (hasOwnProperty(settings, 'scale') && ['8px', '10px', '12px', '14px'].indexOf(settings.scale) !== -1) {\n                            this.renderer.setStyle(document.documentElement, 'font-size', settings.scale);\n                        } else {\n                            settings.scale = '10px';\n                            this.renderer.setStyle(document.documentElement, 'font-size', settings.scale);\n                        }\n\n                        this.renderer.setAttribute(document.documentElement, 'class', settings.isDarkTheme ? 'dark' : 'light');\n                    }\n                    this.translate.use(this.variablesService.settings.language);\n                    this.setBackendLocalization();\n\n                    this.backendService.setLogLevel(this.variablesService.settings.appLog);\n                    this.backendService.setEnableTor(this.variablesService.settings.appUseTor);\n\n                    if (!this.variablesService.settings.wallets || this.variablesService.settings.wallets.length === 0) {\n                        this.ngZone.run(() => {\n                            this.router.navigate([`${paths.auth}/${pathsChildrenAuth.noWallet}`]).then();\n                        });\n                        return;\n                    }\n\n                    if (this.router.url !== '/login') {\n                        this.backendService.haveSecureAppData(statusPass => {\n                            if (statusPass) {\n                                this.ngZone.run(() => {\n                                    this.router.navigate(['/login'], {\n                                        queryParams: { type: 'auth' },\n                                    });\n                                });\n                            } else {\n                                if (Object.keys(data).length !== 0) {\n                                    this.needOpenWallets = JSON.parse(JSON.stringify(this.variablesService.settings.wallets));\n                                    this.ngZone.run(() => {\n                                        this.variablesService.appLogin = true;\n                                        this.router.navigate(['/']);\n                                    });\n                                } else {\n                                    this.ngZone.run(() => {\n                                        this.router.navigate(['/login'], {\n                                            queryParams: { type: 'reg' },\n                                        });\n                                    });\n                                }\n                            }\n                        });\n                    }\n                });\n\n                this.backendService.dispatchAsyncCallResult();\n\n                this.backendService.handleCurrentActionState();\n\n                this.getVersion();\n\n                setTimeout(() => {\n                    this.backendService.getOptions();\n                    this.getInfo();\n                    this._getZanoCurrentSupply();\n                }, 10 * 1000);\n            },\n            error: error => {\n                console.log(error);\n            },\n        });\n\n        this.variablesService.disable_price_fetch$.pipe(takeUntil(this.destroy$)).subscribe({\n            next: disable_price_fetch => {\n                const updateTime = 10 * 60 * 1000;\n                if (!disable_price_fetch) {\n                    this.updateMoneyEquivalent();\n                    this.intervalUpdatePriceState = setInterval(() => {\n                        this.updateMoneyEquivalent();\n                    }, updateTime);\n                } else {\n                    if (this.intervalUpdatePriceState) {\n                        clearInterval(this.intervalUpdatePriceState);\n                    }\n                }\n            },\n        });\n\n        this.variablesService.isDarkTheme$.pipe(takeUntil(this.destroy$)).subscribe({\n            next: isDarkTheme => {\n                this.renderer.setAttribute(document.documentElement, 'class', isDarkTheme ? 'dark' : 'light');\n            },\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.next();\n        if (this.intervalUpdateContractsState) {\n            clearInterval(this.intervalUpdateContractsState);\n        }\n        if (this.intervalUpdatePriceState) {\n            clearInterval(this.intervalUpdatePriceState);\n        }\n        this.expMedTsEvent.unsubscribe();\n    }\n\n    updateMoneyEquivalent(): void {\n        this.http\n            .get('https://explorer.zano.org/api/price?asset=zano')\n            .pipe(take(1))\n            .subscribe({\n                next: ({ data, success }: { data: { zano: { usd: number; usd_24h_change: number } }; success: boolean }): void => {\n                    if (success) {\n                        this.variablesService.zanoMoneyEquivalent = data['zano']['usd'];\n                        this.variablesService.zanoMoneyEquivalentPercent = data['zano']['usd_24h_change'];\n                    }\n                },\n                error: error => {\n                    console.warn('api.coingecko.com price error: ', error);\n                },\n            });\n\n        this.variablesService.isDarkTheme$.pipe(takeUntil(this.destroy$)).subscribe({\n            next: isDarkTheme => {\n                this.renderer.setAttribute(document.documentElement, 'class', isDarkTheme ? 'dark' : 'light');\n            },\n        });\n    }\n\n    getAliases(): void {\n        this.backendService.getAllAliases((status, data, error) => {\n            console.warn(error);\n\n            if (error === 'CORE_BUSY') {\n                window.setTimeout(() => {\n                    this.getAliases();\n                }, 10000);\n            } else if (error === 'OVERFLOW') {\n                this.variablesService.aliases = [];\n                this.variablesService.enableAliasSearch = false;\n                this.variablesService.wallets.forEach(wallet => {\n                    wallet.alias = this.backendService.getWalletAlias(wallet.address);\n                });\n            } else {\n                this.variablesService.enableAliasSearch = true;\n                if (data.aliases && data.aliases.length) {\n                    this.variablesService.aliases = [];\n                    data.aliases.forEach(alias => {\n                        const newAlias = {\n                            name: '@' + alias.alias,\n                            address: alias.address,\n                            comment: alias.comment,\n                        };\n                        this.variablesService.aliases.push(newAlias);\n                    });\n                    this.variablesService.wallets.forEach(wallet => {\n                        wallet.alias = this.backendService.getWalletAlias(wallet.address);\n                    });\n                    this.variablesService.aliases = this.variablesService.aliases.sort((a, b) => {\n                        if (a.name.length > b.name.length) {\n                            return 1;\n                        }\n                        if (a.name.length < b.name.length) {\n                            return -1;\n                        }\n                        if (a.name > b.name) {\n                            return 1;\n                        }\n                        if (a.name < b.name) {\n                            return -1;\n                        }\n                        return 0;\n                    });\n                    this.variablesService.changeAliases();\n                }\n            }\n        });\n    }\n\n    addToStore(wallet, boolean): void {\n        const value = this.store.state.sync;\n        if (value && value.length > 0) {\n            const sync = value.filter(item => item.wallet_id === wallet.wallet_id);\n            if (sync && sync.length > 0) {\n                const result = value.map(item => {\n                    if (item.wallet_id === wallet.wallet_id) {\n                        return { sync: boolean, wallet_id: wallet.wallet_id };\n                    } else {\n                        return item;\n                    }\n                });\n                this.store.set(StateKeys.sync, result);\n            } else {\n                value.push({ sync: boolean, wallet_id: wallet.wallet_id });\n                this.store.set(StateKeys.sync, value);\n            }\n        } else {\n            this.store.set(StateKeys.sync, [{ sync: boolean, wallet_id: wallet.wallet_id }]);\n        }\n    }\n\n    getVersion(): void {\n        this.backendService.getVersion((version, type, error) => {\n            this.ngZone.run(() => {\n                if (!error) {\n                    console.log('----------------- version -----------------', version);\n                    console.log('----------------- type -----------------', type);\n                    this.variablesService.testnet = type === 'testnet';\n                    this.variablesService.networkType = type;\n                }\n            });\n        });\n    }\n\n    getInfo(): void {\n        const updateTime = 60 * 1000;\n        const getInfo = () => {\n            const params = {\n                jsonrpc: '2.0',\n                method: 'getinfo',\n            };\n\n            this.backendService.call_rpc(params, (status, response_data) => {\n                this.variablesService.info$.next(response_data.result);\n            });\n        };\n        getInfo();\n        setInterval(getInfo, updateTime);\n    }\n\n    private _getZanoCurrentSupply(): void {\n        const params: ParamsCallRpc = {\n            jsonrpc: '2.0',\n            id: 0,\n            method: 'getinfo',\n            params: {\n                flags: 1024,\n            },\n        };\n\n        this.backendService.call_rpc(params, (status, response_data) => {\n            this.ngZone.run(() => {\n                this.variablesService.zano_current_supply = response_data?.['result']?.['total_coins'] ?? 'Unknown';\n            });\n        });\n    }\n}\n","import { inject, NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PagesModule } from './pages/pages.module';\nimport { CommonModule } from '@angular/common';\nimport { TranslateLoader, TranslateModule, TranslateModuleConfig } from '@ngx-translate/core';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { BrowserModule, DomSanitizer } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ChartModule, HIGHCHARTS_MODULES } from 'angular-highcharts';\nimport * as highcharts from 'highcharts';\nimport exporting from 'highcharts/modules/exporting.src';\nimport { MoneyToIntPipeModule } from '@parts/pipes';\nimport { OpenWalletModalComponent } from '@parts/modals/open-wallet-modal/open-wallet-modal.component';\nimport { FlexModule } from '@angular/flex-layout';\nimport { FormsModule } from '@angular/forms';\nimport { RegisterContextTemplatesComponent } from '@parts/components/register-context-templates.component';\nimport { DEFAULT_DIALOG_CONFIG, DialogConfig } from '@angular/cdk/dialog';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { materialZanoIcons } from '../assets/material-zano-icons';\nimport { MAT_DIALOG_DEFAULT_OPTIONS, MatDialogConfig, MatDialogModule } from '@angular/material/dialog';\n\nexport function highchartsFactory(): any[] {\n    highcharts.setOptions({\n        time: {\n            useUTC: false,\n        },\n    });\n\n    return [exporting];\n}\n\nexport const provideHighchartsFactory = {\n    provide: HIGHCHARTS_MODULES,\n    useFactory: highchartsFactory,\n};\n\nexport function HttpLoaderFactory(httpClient: HttpClient): TranslateHttpLoader {\n    return new TranslateHttpLoader(httpClient, './assets/i18n/', '.json');\n}\n\nexport const translateModuleConfig: TranslateModuleConfig = {\n    loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient],\n    },\n};\n\n@NgModule({\n    declarations: [AppComponent, OpenWalletModalComponent],\n    imports: [\n        CommonModule,\n        BrowserModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        TranslateModule.forRoot(translateModuleConfig),\n        AppRoutingModule,\n        PagesModule,\n        ChartModule,\n        MoneyToIntPipeModule,\n        FlexModule,\n        FormsModule,\n        MatDialogModule,\n        RegisterContextTemplatesComponent,\n    ],\n    providers: [\n        provideHighchartsFactory,\n        {\n            provide: DEFAULT_DIALOG_CONFIG,\n            useValue: <DialogConfig>{\n                width: '95vw',\n                maxWidth: '54rem',\n                maxHeight: '90vh',\n                hasBackdrop: true,\n                disableClose: true,\n            },\n        },\n        {\n            provide: MAT_DIALOG_DEFAULT_OPTIONS,\n            useValue: <MatDialogConfig>{\n                width: '95vw',\n                maxWidth: '54rem',\n                maxHeight: '90vh',\n                panelClass: 'zano-mat-dialog',\n                hasBackdrop: true,\n                disableClose: true,\n            },\n        },\n    ],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {\n    private _matIconRegistry: MatIconRegistry = inject(MatIconRegistry);\n    private _sanitizer: DomSanitizer = inject(DomSanitizer);\n\n    constructor() {\n        this.registerIcons(materialZanoIcons);\n    }\n\n    registerIcons(icons: Array<string>): void {\n        icons.forEach((icon: string) => {\n            this._matIconRegistry.addSvgIcon(\n                icon,\n                this._sanitizer.bypassSecurityTrustResourceUrl(`assets/material-zano-icons/${icon}.svg`)\n            );\n        });\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-full-layout',\n    template: `\n        <div class=\"overflow-auto p-2\" fxFlex=\"100\" fxFlexFill>\n            <router-outlet></router-outlet>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                overflow: hidden;\n            }\n        `,\n    ],\n})\nexport class FullLayoutComponent {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FullLayoutComponent } from './full-layout.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { RouterOutlet } from '@angular/router';\n\n@NgModule({\n    declarations: [FullLayoutComponent],\n    imports: [CommonModule, RouterOutlet, FlexLayoutModule],\n    exports: [FullLayoutComponent],\n})\nexport class FullLayoutModule {}\n","import { Component, NgZone, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { Wallet } from '@api/models/wallet.model';\nimport { ConfirmModalComponent, ConfirmModalData } from '@parts/modals/confirm-modal/confirm-modal.component';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { WalletsService } from '@parts/services/wallets.service';\nimport { ZanoLoadersService } from '@parts/services/zano-loaders.service';\nimport { BackendService } from '@api/services/backend.service';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-sidebar',\n    template: `\n        <div class=\"sidebar-header mb-2\">\n            <div class=\"logo\">\n                <img alt=\"zano-logo\" [src]=\"zanoLogo\" />\n            </div>\n        </div>\n\n        <div class=\"sidebar-content\">\n            <div (cdkDropListDropped)=\"drop($event)\" cdkDropList cdkDropListLockAxis=\"y\" class=\"sidebar-content-list scrolled-content mb-1\">\n                <app-wallet-card\n                    *ngFor=\"let wallet of variablesService.wallets\"\n                    [cdkDragData]=\"wallet\"\n                    [ngClass]=\"{\n                        active: wallet?.wallet_id === variablesService?.currentWallet?.wallet_id,\n                        auditable: wallet.is_auditable && !wallet.is_watch_only,\n                        'watch-only': wallet.is_watch_only\n                    }\"\n                    [wallet]=\"wallet\"\n                    (click)=\"selectWallet(wallet.wallet_id)\"\n                    (eventClose)=\"beforeClose($event)\"\n                    cdkDrag\n                ></app-wallet-card>\n            </div>\n\n            <div class=\"sidebar-nav scrolled-content\">\n                <button\n                    (click)=\"goMainPage()\"\n                    class=\"outline small w-100 mb-1 px-2\"\n                    fxLayout=\"row inline wrap\"\n                    fxLayoutAlign=\"start center\"\n                >\n                    <mat-icon svgIcon=\"zano-plus\" class=\"mr-1\"></mat-icon>\n                    <span>{{ 'SIDEBAR.ADD_NEW' | translate }}</span>\n                </button>\n\n                <button\n                    [routerLink]=\"['/settings']\"\n                    class=\"outline small w-100 mb-1 px-2\"\n                    fxLayout=\"row inline wrap\"\n                    fxLayoutAlign=\"start center\"\n                    routerLinkActive=\"active\"\n                >\n                    <mat-icon svgIcon=\"zano-settings\" class=\"mr-1\"></mat-icon>\n                    <span>{{ 'SIDEBAR.SETTINGS' | translate }}</span>\n                </button>\n\n                <ng-container *ngIf=\"variablesService.appPass === ''; else masterPass\">\n                    <button\n                        (click)=\"logOut()\"\n                        [delay]=\"500\"\n                        [disabled]=\"variablesService.appPass === ''\"\n                        [timeDelay]=\"500\"\n                        class=\"outline small w-100 px-2\"\n                        fxLayout=\"row inline wrap\"\n                        fxLayoutAlign=\"start center\"\n                        placement=\"bottom\"\n                        tooltip=\"{{ 'SIDEBAR.LOG_OUT_TOOLTIP' | translate }}\"\n                        tooltipClass=\"table-tooltip account-tooltip\"\n                    >\n                        <mat-icon svgIcon=\"zano-logout\" class=\"mr-1\"></mat-icon>\n                        <span>{{ 'SIDEBAR.LOG_OUT' | translate }}</span>\n                    </button>\n                </ng-container>\n\n                <ng-template #masterPass>\n                    <button (click)=\"logOut()\" class=\"outline small w-100 px-2\" fxLayout=\"row inline wrap\" fxLayoutAlign=\"start center\">\n                        <mat-icon svgIcon=\"zano-logout\" class=\"mr-1\"></mat-icon>\n                        <span> {{ 'SIDEBAR.LOG_OUT' | translate }}</span>\n                    </button>\n                </ng-template>\n            </div>\n        </div>\n\n        <div class=\"sidebar-footer\">\n            <app-synchronization-status></app-synchronization-status>\n        </div>\n\n        <app-deeplink></app-deeplink>\n    `,\n    styleUrls: ['./sidebar.component.scss'],\n})\nexport class SidebarComponent implements OnDestroy {\n    private destroy$ = new Subject<void>();\n\n    constructor(\n        public variablesService: VariablesService,\n        private walletsService: WalletsService,\n        private route: ActivatedRoute,\n        private router: Router,\n        private ngZone: NgZone,\n        private _matDialog: MatDialog,\n        private backend: BackendService,\n        public zanoLoadersService: ZanoLoadersService\n    ) {}\n\n    get zanoLogo(): string {\n        const {\n            settings: { isDarkTheme },\n        } = this.variablesService;\n        return isDarkTheme ? 'assets/icons/blue/zano-logo.svg' : 'assets/icons/blue/light-zano-logo.svg';\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    toggleDarkTheme(): void {\n        const { settings, isDarkTheme$ } = this.variablesService;\n        const isDarkTheme: boolean = !settings.isDarkTheme;\n        this.variablesService.settings.isDarkTheme = isDarkTheme;\n        isDarkTheme$.next(isDarkTheme);\n\n        this.backend.storeAppData();\n    }\n\n    goMainPage(): void {\n        if (this.route.snapshot.queryParams && this.route.snapshot.queryParams.prevUrl === 'login') {\n            this.ngZone.run(() => {\n                this.router.navigate(['/'], { queryParams: { prevUrl: 'login' } });\n            });\n        } else {\n            this.ngZone.run(() => {\n                this.router.navigate(['/']);\n            });\n        }\n    }\n\n    selectWallet(id: number): void {\n        this.ngZone.run(() => {\n            this.variablesService.setCurrentWallet(id);\n            this.router.navigate(['/wallet/assets']);\n        });\n    }\n\n    drop(event: CdkDragDrop<Wallet[]>): void {\n        moveItemInArray(this.variablesService.wallets, event.previousIndex, event.currentIndex);\n    }\n\n    beforeClose(wallet_id): void {\n        const config: MatDialogConfig<ConfirmModalData> = {\n            data: {\n                title: 'WALLET.CONFIRM.MESSAGE',\n                message: 'WALLET.CONFIRM.TITLE',\n            },\n        };\n\n        this._matDialog\n            .open<ConfirmModalComponent, ConfirmModalData, boolean>(ConfirmModalComponent, config)\n            .afterClosed()\n            .pipe(takeUntil(this.destroy$))\n            .subscribe({\n                next: confirmed => confirmed && this.closeWallet(wallet_id),\n            });\n    }\n\n    closeWallet(wallet_id): void {\n        this.walletsService.closeWallet(wallet_id);\n    }\n\n    logOut(): void {\n        this.zanoLoadersService.open('fullScreen', 'SIDEBAR.SYNCHRONIZATION.LOGGING_OUT');\n\n        setTimeout(() => {\n            this.variablesService.stopCountdown();\n            this.variablesService.appLogin = false;\n            this.variablesService.appPass = '';\n            this.ngZone.run(() => {\n                this.router.navigate(['/login'], { queryParams: { type: 'auth' } }).then(() => {\n                    this.zanoLoadersService.close('fullScreen');\n                });\n            });\n        }, 500);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SidebarComponent } from './sidebar.component';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RouterModule } from '@angular/router';\nimport { DisablePriceFetchModule, TooltipModule } from '@parts/directives';\nimport { ConfirmModalModule } from '@parts/modals/confirm-modal/confirm-modal.module';\nimport { DeeplinkModule } from '../../pages/deeplink/deeplink.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { IntToMoneyPipeModule } from '@parts/pipes';\nimport { StakingSwitchComponent } from '@parts/components/staking-switch.component';\nimport { SynchronizationStatusComponent } from '@parts/components/synchronization-status.component';\nimport { WalletCardComponent } from '@parts/components/wallet-card.component';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n    declarations: [SidebarComponent],\n    imports: [\n        CommonModule,\n        RouterModule,\n        DragDropModule,\n        TooltipModule,\n        TranslateModule,\n        DisablePriceFetchModule,\n        ConfirmModalModule,\n        SynchronizationStatusComponent,\n        DeeplinkModule,\n        StakingSwitchComponent,\n        FlexLayoutModule,\n        IntToMoneyPipeModule,\n        WalletCardComponent,\n        MatIconModule,\n    ],\n    exports: [SidebarComponent],\n})\nexport class SidebarModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-with-sidebar-layout',\n    templateUrl: './with-sidebar-layout.component.html',\n    styleUrls: ['./with-sidebar-layout.component.scss'],\n})\nexport class WithSidebarLayoutComponent {}\n","<app-sidebar></app-sidebar>\n\n<div class=\"with-sidebar-layout-container\" fxFlex=\"100\">\n    <router-outlet></router-outlet>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WithSidebarLayoutComponent } from './with-sidebar-layout.component';\nimport { SidebarModule } from '../sidebar/sidebar.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { RouterOutlet } from '@angular/router';\n\n@NgModule({\n    declarations: [WithSidebarLayoutComponent],\n    imports: [CommonModule, RouterOutlet, FlexLayoutModule, SidebarModule],\n    exports: [WithSidebarLayoutComponent],\n})\nexport class WithSidebarLayoutModule {}\n","import { Component, inject, NgZone } from '@angular/core';\nimport { BackendService } from '@api/services/backend.service';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CREATE_NEW_WALLET_HELP_PAGE } from '@parts/data/constants';\nimport { filePathWalletValidator } from '@parts/utils/zano-validators';\nimport { ModalService } from '@parts/services/modal.service';\n\n@Component({\n    selector: 'app-add-wallet',\n    templateUrl: './add-wallet.component.html',\n    styleUrls: ['./add-wallet.component.scss'],\n})\nexport class AddWalletComponent {\n    private translateService = inject(TranslateService);\n\n    constructor(\n        public variablesService: VariablesService,\n        private router: Router,\n        private modalService: ModalService,\n        private backendService: BackendService,\n        private ngZone: NgZone\n    ) {}\n\n    openWallet(): void {\n        const caption = this.translateService.instant('MAIN.CHOOSE_PATH');\n        const default_path = this.variablesService.settings.default_path;\n        this.backendService.openFileDialog(caption, '*', default_path, async (file_status, file_data) => {\n            if (!file_status) {\n                if (file_data['error_code'] !== 'CANCELED') {\n                    this.modalService.prepareModal('error', file_data['error_code']);\n                }\n                return;\n            }\n            const positionLastSlash = file_data.path.lastIndexOf('/');\n            const new_default_path = file_data.path.slice(0, positionLastSlash);\n            const error = filePathWalletValidator(file_data.path);\n\n            if (error) {\n                const text = this.translateService.instant(error.errorText);\n                this.modalService.prepareModal('error', text);\n                return;\n            }\n\n            this.variablesService.settings.default_path = new_default_path;\n            await this.ngZone.run(async () => {\n                await this.router.navigate(['/open'], {\n                    queryParams: { path: file_data.path },\n                });\n            });\n        });\n    }\n\n    openInBrowser(): void {\n        this.backendService.openUrlInBrowser(CREATE_NEW_WALLET_HELP_PAGE);\n    }\n}\n","<div class=\"page-container\">\n    <div class=\"toolbar mb-2\">\n        <div class=\"left\">\n            <app-back-button></app-back-button>\n            <h1 class=\"ml-2\">{{ 'BREADCRUMBS.ADD_WALLET' | translate }}</h1>\n        </div>\n        <div class=\"right\"></div>\n    </div>\n\n    <div class=\"page-content\">\n        <div class=\"scrolled-content\" fxFlex=\"1 1 auto\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n            <div class=\"add-wallet w-100\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n                <div class=\"wrap-controls text-align-center max-w-38-rem\">\n                    <h4 class=\"mb-2\">{{ 'MAIN.TITLE' | translate }}</h4>\n\n                    <button [routerLink]=\"['/create']\" class=\"primary big w-100 mb-1\" type=\"button\">\n                        {{ 'MAIN.BUTTON_NEW_WALLET' | translate }}\n                    </button>\n\n                    <button (click)=\"openWallet()\" class=\"primary big w-100 mb-1\" type=\"button\">\n                        {{ 'MAIN.BUTTON_OPEN_WALLET' | translate }}\n                    </button>\n\n                    <button [routerLink]=\"['/restore']\" class=\"outline big w-100 mb-2\" type=\"button\">\n                        {{ 'MAIN.BUTTON_RESTORE_BACKUP' | translate }}\n                    </button>\n\n                    <p\n                        (click)=\"openInBrowser()\"\n                        class=\"text-align-center cursor-pointer how-to-create\"\n                        fxLayout=\"row\"\n                        fxLayoutAlign=\"center center\"\n                    >\n                        <mat-icon svgIcon=\"zano-question\" class=\"mr-1\"></mat-icon>\n                        <span class=\"color-primary\">{{ 'MAIN.HELP' | translate }}</span>\n                    </p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, inject, NgZone, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { BackendService } from '@api/services/backend.service';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { ModalService } from '@parts/services/modal.service';\nimport { Wallet } from '@api/models/wallet.model';\nimport { IntToMoneyPipe } from '@parts/pipes/int-to-money-pipe/int-to-money.pipe';\nimport BigNumber from 'bignumber.js';\nimport { Subject } from 'rxjs';\nimport { hasOwnProperty } from '@parts/functions/has-own-property';\nimport { takeUntil } from 'rxjs/operators';\nimport { regExpAliasName } from '@parts/utils/zano-validators';\nimport { BreadcrumbItems } from '@parts/components/breadcrumbs/breadcrumbs.models';\n\n@Component({\n    selector: 'app-assign-alias',\n    template: `\n        <div class=\"page-container\">\n            <div class=\"toolbar mb-2\">\n                <div class=\"left\">\n                    <app-back-button></app-back-button>\n                    <h1 class=\"ml-2\">{{ 'BREADCRUMBS.ASSIGN_ALIAS' | translate }}</h1>\n                </div>\n                <div class=\"right\"></div>\n            </div>\n\n            <div class=\"page-content\">\n                <app-breadcrumbs class=\"mb-2\" [items]=\"breadcrumbItems\"></app-breadcrumbs>\n\n                <div class=\"scrolled-content\">\n                    <form [formGroup]=\"assignForm\" class=\"form\">\n                        <div class=\"form__field\">\n                            <label\n                                [delay]=\"50\"\n                                for=\"alias-name\"\n                                placement=\"bottom-left\"\n                                tooltip=\"{{ 'ASSIGN_ALIAS.NAME.TOOLTIP' | translate }}\"\n                                tooltipClass=\"table-tooltip assign-alias-tooltip\"\n                            >\n                                {{ 'ASSIGN_ALIAS.NAME.LABEL' | translate }}\n                            </label>\n                            <div class=\"has-no-edit-symbol\">\n                                <input\n                                    (contextmenu)=\"variablesService.onContextMenu($event)\"\n                                    [placeholder]=\"'ASSIGN_ALIAS.NAME.PLACEHOLDER' | translate\"\n                                    class=\"form__field--input\"\n                                    formControlName=\"name\"\n                                    id=\"alias-name\"\n                                    type=\"text\"\n                                />\n                            </div>\n                            <div\n                                *ngIf=\"\n                                    assignForm.controls['name'].invalid &&\n                                    (assignForm.controls['name'].dirty || assignForm.controls['name'].touched)\n                                \"\n                                class=\"error\"\n                            >\n                                <div\n                                    *ngIf=\"\n                                        assignForm.controls['name'].errors['pattern'] &&\n                                        assignForm.get('name').value.length > 6 &&\n                                        assignForm.get('name').value.length <= 25\n                                    \"\n                                >\n                                    {{ 'ASSIGN_ALIAS.FORM_ERRORS.NAME_WRONG' | translate }}\n                                </div>\n                                <div *ngIf=\"assignForm.get('name').value.length <= 6 || assignForm.get('name').value.length > 25\">\n                                    {{ 'ASSIGN_ALIAS.FORM_ERRORS.NAME_LENGTH' | translate }}\n                                </div>\n                            </div>\n                            <div *ngIf=\"alias.exists\" class=\"error\">\n                                <div>\n                                    {{ 'ASSIGN_ALIAS.FORM_ERRORS.NAME_EXISTS' | translate }}\n                                </div>\n                            </div>\n                            <div *ngIf=\"notEnoughMoney\" class=\"error\">\n                                <div>\n                                    {{ 'ASSIGN_ALIAS.FORM_ERRORS.NO_MONEY' | translate }}\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form__field textarea\">\n                            <label\n                                [delay]=\"50\"\n                                for=\"alias-comment\"\n                                placement=\"bottom-left\"\n                                tooltip=\"{{ 'ASSIGN_ALIAS.COMMENT.TOOLTIP' | translate }}\"\n                                tooltipClass=\"table-tooltip assign-alias-tooltip\"\n                            >\n                                {{ 'ASSIGN_ALIAS.COMMENT.LABEL' | translate }}\n                            </label>\n                            <textarea\n                                (contextmenu)=\"variablesService.onContextMenu($event)\"\n                                [maxLength]=\"variablesService.maxCommentLength\"\n                                class=\"scrolled-content\"\n                                formControlName=\"comment\"\n                                id=\"alias-comment\"\n                                placeholder=\"{{ 'ASSIGN_ALIAS.COMMENT.PLACEHOLDER' | translate }}\"\n                            >\n                            </textarea>\n                            <div *ngIf=\"assignForm.get('comment').value.length >= variablesService.maxCommentLength\" class=\"error\">\n                                {{ 'ASSIGN_ALIAS.FORM_ERRORS.MAX_LENGTH' | translate }}\n                            </div>\n                        </div>\n\n                        <p class=\"mb-2\">\n                            {{\n                                'ASSIGN_ALIAS.COST'\n                                    | translate\n                                        : {\n                                              value: alias.price | intToMoney,\n                                              currency: variablesService.defaultTicker\n                                          }\n                            }}\n                        </p>\n\n                        <button\n                            (click)=\"assignAlias()\"\n                            [disabled]=\"!assignForm.valid || !canRegister || notEnoughMoney\"\n                            class=\"primary big w-100\"\n                            type=\"button\"\n                        >\n                            {{ 'ASSIGN_ALIAS.BUTTON_ASSIGN' | translate }}\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                overflow: hidden;\n            }\n        `,\n    ],\n})\nexport class AssignAliasComponent implements OnInit, OnDestroy {\n    wallet: Wallet;\n\n    breadcrumbItems: BreadcrumbItems = [\n        {\n            routerLink: '/wallet/history',\n            title: this.variablesService.currentWallet.name,\n        },\n        {\n            title: 'BREADCRUMBS.ASSIGN_ALIAS',\n        },\n    ];\n\n    fb = inject(FormBuilder);\n\n    assignForm = this.fb.group({\n        name: this.fb.nonNullable.control('', [Validators.required, Validators.pattern(regExpAliasName)]),\n        comment: this.fb.nonNullable.control('', [Validators.maxLength(this.variablesService.maxCommentLength)]),\n    });\n\n    alias = {\n        name: '',\n        fee: this.variablesService.default_fee,\n        price: new BigNumber(0),\n        reward: '0',\n        rewardOriginal: '0',\n        comment: '',\n        exists: false,\n    };\n\n    canRegister = false;\n\n    notEnoughMoney = false;\n\n    private destroy$ = new Subject<void>();\n\n    constructor(\n        public variablesService: VariablesService,\n        private ngZone: NgZone,\n        private router: Router,\n        private backend: BackendService,\n        private modalService: ModalService,\n        private intToMoney: IntToMoneyPipe\n    ) {}\n\n    ngOnInit(): void {\n        this.wallet = this.variablesService.currentWallet;\n        this.assignForm\n            .get('name')\n            .valueChanges.pipe(takeUntil(this.destroy$))\n            .subscribe({\n                next: value => {\n                    this.canRegister = false;\n                    this.alias.exists = false;\n                    const newName = value.toLowerCase().replace('@', '');\n                    if (\n                        !(this.assignForm.controls['name'].errors && hasOwnProperty(this.assignForm.controls['name'].errors, 'pattern')) &&\n                        newName.length >= 6 &&\n                        newName.length <= 25\n                    ) {\n                        this.backend.getAliasInfoByName(newName, status => {\n                            this.ngZone.run(() => {\n                                this.alias.exists = status;\n                            });\n                            if (!status) {\n                                this.alias.price = new BigNumber(0);\n                                this.backend.getAliasCoast(newName, (statusPrice, dataPrice) => {\n                                    this.ngZone.run(() => {\n                                        if (statusPrice) {\n                                            this.alias.price = BigNumber.sum(dataPrice['coast'], this.variablesService.default_fee_big);\n                                        }\n                                        const unlocked_balance = new BigNumber(this.wallet.getBalanceByTicker('ZANO')?.unlocked || 0);\n                                        this.notEnoughMoney = this.alias.price.isGreaterThan(unlocked_balance);\n                                        this.alias.reward = this.intToMoney.transform(this.alias.price);\n                                        this.alias.rewardOriginal = this.intToMoney.transform(dataPrice['coast']);\n                                        this.canRegister = !this.notEnoughMoney;\n                                    });\n                                });\n                            } else {\n                                this.notEnoughMoney = false;\n                                this.alias.reward = '0';\n                                this.alias.rewardOriginal = '0';\n                            }\n                        });\n                    } else {\n                        this.notEnoughMoney = false;\n                        this.alias.reward = '0';\n                        this.alias.rewardOriginal = '0';\n                    }\n                    this.alias.name = newName;\n                },\n            });\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    assignAlias(): void {\n        const alias = this.backend.getWalletAlias(this.wallet.address);\n        if (hasOwnProperty(alias, 'name')) {\n            this.modalService.prepareModal('info', 'ASSIGN_ALIAS.ONE_ALIAS');\n        } else {\n            this.alias.comment = this.assignForm.get('comment').value;\n            this.backend.registerAlias(\n                this.wallet.wallet_id,\n                this.alias.name,\n                this.wallet.address,\n                this.alias.fee,\n                this.alias.comment,\n                this.alias.rewardOriginal,\n                async status => {\n                    if (status) {\n                        this.wallet.wakeAlias = true;\n                        this.modalService.prepareModal('info', 'ASSIGN_ALIAS.REQUEST_ADD_REG');\n                        await this.ngZone.run(async () => {\n                            await this.router.navigate(['/wallet/']);\n                        });\n                    }\n                }\n            );\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { paths, pathsChildrenAuth } from '../paths';\nimport { NoWalletComponent } from './no-wallet/no-wallet.component';\nimport { FullLayoutComponent } from '../../layouts/full-layout/full-layout.component';\n\nconst routes: Routes = [\n    {\n        path: paths.auth,\n        component: FullLayoutComponent,\n        children: [\n            {\n                path: pathsChildrenAuth.noWallet,\n                component: NoWalletComponent,\n            },\n        ],\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class AuthRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { NoWalletComponent } from './no-wallet/no-wallet.component';\nimport { SynchronizationStatusComponent } from '@parts/components/synchronization-status.component';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n    declarations: [NoWalletComponent],\n    imports: [CommonModule, AuthRoutingModule, TranslateModule, FlexLayoutModule, SynchronizationStatusComponent, MatIconModule],\n})\nexport class AuthModule {}\n","import { Component, inject, NgZone, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, ValidationErrors, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BackendService } from '@api/services/backend.service';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { Wallet } from '@api/models/wallet.model';\nimport { hasOwnProperty } from '@parts/functions/has-own-property';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { regExpPassword, ZanoValidators } from '@parts/utils/zano-validators';\nimport { WalletsService } from '@parts/services/wallets.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n    submitLoading$ = new BehaviorSubject(false);\n\n    resetLoading$ = new BehaviorSubject(false);\n\n    fb = inject(FormBuilder);\n\n    get zanoLogo(): string {\n        const {\n            settings: { isDarkTheme },\n        } = this.variablesService;\n        return isDarkTheme ? 'assets/icons/blue/zano-logo.svg' : 'assets/icons/blue/light-zano-logo.svg';\n    }\n\n    regForm = this.fb.group(\n        {\n            password: this.fb.nonNullable.control('', Validators.pattern(regExpPassword)),\n            confirmation: this.fb.nonNullable.control(''),\n        },\n        {\n            validators: [ZanoValidators.formMatch('password', 'confirmation')],\n        }\n    );\n\n    authForm = this.fb.group({\n        password: this.fb.nonNullable.control(''),\n    });\n\n    type = 'reg';\n\n    private destroy$ = new Subject<void>();\n\n    constructor(\n        public variablesService: VariablesService,\n        public walletsService: WalletsService,\n        private route: ActivatedRoute,\n        private router: Router,\n        private backend: BackendService,\n        private ngZone: NgZone\n    ) {}\n\n    ngOnInit(): void {\n        this.route.queryParams.pipe(takeUntil(this.destroy$)).subscribe({\n            next: params => {\n                if (params.type) {\n                    this.type = params.type;\n                }\n            },\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    onSubmitCreatePass(): void {\n        if (this.regForm.valid) {\n            this.variablesService.appPass = this.regForm.get('password').value; // the pass what was written in input of login form by user\n\n            this.backend.setMasterPassword({ pass: this.variablesService.appPass }, (status, data) => {\n                if (status) {\n                    this.backend.storeSecureAppData({\n                        pass: this.variablesService.appPass,\n                    });\n                    this.variablesService.appLogin = true;\n                    this.variablesService.dataIsLoaded = true;\n                    if (this.variablesService.settings.appLockTime) {\n                        this.variablesService.startCountdown();\n                    }\n                    this.ngZone.run(() => {\n                        this.router.navigate(['/']);\n                    });\n                } else {\n                    console.log(data['error_code']);\n                }\n            });\n        }\n    }\n\n    onSkipCreatePass(): void {\n        this.variablesService.appPass = '';\n        this.ngZone.run(() => {\n            this.variablesService.appLogin = true;\n            this.router.navigate(['/']);\n        });\n    }\n\n    resetJwtWalletRpc(): void {\n        this.backend.setupJwtWalletRpc({ secret: '', zanoCompation: false });\n    }\n\n    dropSecureAppData(): void {\n        this.resetLoading$.next(true);\n\n        // This delay is necessary for the loader to display, as the application freezes for a few seconds\n        setTimeout(() => {\n            this.resetJwtWalletRpc();\n            this.closeAllWallets();\n            this.backend.dropSecureAppData(() => {\n                this.resetLoading$.next(false);\n                this.onSkipCreatePass();\n            });\n            this.variablesService.contacts = [];\n        }, 500);\n    }\n\n    onSubmitAuthPass(): void {\n        this.submitLoading$.next(true);\n\n        // This delay is necessary for the loader to display, as the application freezes for a few seconds\n        setTimeout(() => {\n            if (this.authForm.valid) {\n                this.variablesService.appPass = this.authForm.get('password').value;\n                if (this.variablesService.dataIsLoaded) {\n                    this.backend.checkMasterPassword({ pass: this.variablesService.appPass }, status => {\n                        if (status) {\n                            this.variablesService.appLogin = true;\n                            if (this.variablesService.settings.appLockTime) {\n                                this.variablesService.startCountdown();\n                            }\n                            this.ngZone.run(() => {\n                                this.submitLoading$.next(false);\n                                this.router.navigate(['/'], {\n                                    queryParams: { prevUrl: 'login' },\n                                });\n                            });\n                        } else {\n                            this.ngZone.run(() => {\n                                this.submitLoading$.next(false);\n                                this.setAuthPassError({ wrong_password: true });\n                            });\n                        }\n                    });\n                } else {\n                    this.getData(this.variablesService.appPass);\n                }\n            } else {\n                this.submitLoading$.next(false);\n            }\n        }, 500);\n    }\n\n    getData(appPass): void {\n        this.backend.getSecureAppData({ pass: appPass }, (status, data) => {\n            if (!data.error_code) {\n                this.setAuthPassError(null);\n                this.variablesService.appLogin = true;\n                this.variablesService.dataIsLoaded = true;\n                if (this.variablesService.settings.appLockTime) {\n                    this.variablesService.startCountdown();\n                }\n                this.variablesService.appPass = appPass;\n                const isEmptyObject = Object.keys(data).length === 0 && data.constructor === Object;\n\n                if (this.variablesService.wallets.length > 0) {\n                    this.ngZone.run(() => {\n                        this.submitLoading$.next(false);\n                        this.router.navigate(['/wallet/']);\n                    });\n                    return;\n                }\n                if (hasOwnProperty(data, 'contracts')) {\n                    if (Object.keys(data['contacts']).length !== 0) {\n                        data['contacts'].map(contact => {\n                            this.variablesService.contacts.push(contact);\n                        });\n                    }\n                }\n                if (hasOwnProperty(data, 'wallets')) {\n                    if (Object.keys(data['wallets']).length !== 0) {\n                        this.getWalletData(data['wallets']);\n                    } else {\n                        this.ngZone.run(() => {\n                            this.submitLoading$.next(false);\n                            this.router.navigate(['/']);\n                        });\n                    }\n                }\n                if (!hasOwnProperty(data, 'wallets') && !hasOwnProperty(data, 'contracts')) {\n                    if (data.length !== 0 && !isEmptyObject) {\n                        this.getWalletData(data);\n                    } else {\n                        this.ngZone.run(() => {\n                            this.submitLoading$.next(false);\n                            this.router.navigate(['/']);\n                        });\n                    }\n                }\n\n                if (this.variablesService.settings.zanoCompanionForm.zanoCompation) {\n                    this.backend.setupJwtWalletRpc(this.variablesService.settings.zanoCompanionForm);\n                }\n            }\n\n            if (data.error_code === 'WRONG_PASSWORD') {\n                this.ngZone.run(() => {\n                    this.submitLoading$.next(false);\n                    this.setAuthPassError({ wrong_password: true });\n                });\n            }\n        });\n    }\n\n    getWalletData(walletData): void {\n        let openWallets = 0;\n        let runWallets = 0;\n        walletData.forEach((wallet, wallet_index) => {\n            this.backend.openWallet(wallet.path, wallet.pass, this.variablesService.count, true, (open_status, open_data, open_error) => {\n                if (open_status || open_error === 'FILE_RESTORED') {\n                    openWallets++;\n                    this.ngZone.run(() => {\n                        const new_wallet = new Wallet(\n                            open_data.wallet_id,\n                            wallet.name,\n                            wallet.pass,\n                            open_data['wi'].path,\n                            open_data['wi'].address,\n                            open_data['wi'].balance,\n                            open_data['wi'].unlocked_balance,\n                            open_data['wi'].mined_total,\n                            open_data['wi'].tracking_hey\n                        );\n                        new_wallet.alias = this.backend.getWalletAlias(new_wallet.address);\n                        if (wallet.staking) {\n                            new_wallet.staking = true;\n                            this.backend.startPosMining(new_wallet.wallet_id);\n                        } else {\n                            new_wallet.staking = false;\n                        }\n                        new_wallet.is_auditable = open_data['wi'].is_auditable;\n                        new_wallet.is_watch_only = open_data['wi'].is_watch_only;\n                        new_wallet.currentPage = 1;\n                        new_wallet.exclude_mining_txs = false;\n                        if (open_data.recent_history && open_data.recent_history.history) {\n                            new_wallet.total_history_item = open_data.recent_history.total_history_items;\n                            new_wallet.totalPages = Math.ceil(open_data.recent_history.total_history_items / this.variablesService.count);\n                            new_wallet.totalPages > this.variablesService.maxPages\n                                ? (new_wallet.pages = new Array(5).fill(1).map((value, index) => value + index))\n                                : (new_wallet.pages = new Array(new_wallet.totalPages).fill(1).map((value, index) => value + index));\n                            new_wallet.prepareHistory(open_data.recent_history.history);\n                        } else {\n                            new_wallet.total_history_item = 0;\n                            new_wallet.pages = new Array(1).fill(1);\n                            new_wallet.totalPages = 1;\n                        }\n                        this.walletsService.addWallet(new_wallet);\n                        if (this.variablesService.wallets.length === 1) {\n                            this.router.navigate(['/wallet/']);\n                        }\n                    });\n                    this.backend.runWallet(open_data.wallet_id, run_status => {\n                        if (run_status) {\n                            runWallets++;\n                        } else {\n                            if (wallet_index === walletData.length - 1 && runWallets === 0) {\n                                this.ngZone.run(() => {\n                                    this.router.navigate(['/']);\n                                });\n                            }\n                        }\n                    });\n                } else {\n                    if (wallet_index === walletData.length - 1 && openWallets === 0) {\n                        this.ngZone.run(() => {\n                            this.router.navigate(['/']);\n                        });\n                    }\n                }\n            });\n        });\n        this.submitLoading$.next(false);\n    }\n\n    closeAllWallets(): void {\n        this.variablesService.wallets.forEach(({ wallet_id }) => this.closeWallet(wallet_id));\n    }\n\n    closeWallet(wallet_id) {\n        this.backend.closeWallet(wallet_id, () => {\n            for (let i = this.variablesService.wallets.length - 1; i >= 0; i--) {\n                this.variablesService.wallets.splice(i, 1);\n                this.backend.storeSecureAppData();\n            }\n        });\n    }\n\n    private setAuthPassError(errors: ValidationErrors | null): void {\n        this.authForm.controls['password'].setErrors(errors);\n    }\n}\n","<div class=\"auth\" fxFlexFill fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <div class=\"auth-card\">\n        <div class=\"logo mb-3\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n            <img [src]=\"zanoLogo\" alt=\"zano-logo\" />\n        </div>\n\n        <form (ngSubmit)=\"onSubmitCreatePass()\" *ngIf=\"type === 'reg'\" [formGroup]=\"regForm\" class=\"form\">\n            <div class=\"auth-card-form\">\n                <div class=\"form__field mb-2\">\n                    <label for=\"master-pass\">{{ 'LOGIN.SETUP_MASTER_PASS' | translate }}</label>\n                    <input\n                        (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\n                        appAutofocus\n                        class=\"form__field--input\"\n                        formControlName=\"password\"\n                        id=\"master-pass\"\n                        placeholder=\"{{ 'PLACEHOLDERS.MASTER_PASS_PLACEHOLDER' | translate }}\"\n                        type=\"password\"\n                    />\n                    <div *ngIf=\"regForm.controls['password'].dirty && regForm.controls['password'].errors\" class=\"error\">\n                        <div *ngIf=\"regForm.controls['password'].errors.pattern\">\n                            {{ 'ERRORS.WRONG_PASSWORD' | translate }}\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"form__field\">\n                    <label for=\"confirm-pass\">{{ 'LOGIN.SETUP_CONFIRM_PASS' | translate }}</label>\n                    <input\n                        (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\n                        class=\"form__field--input\"\n                        formControlName=\"confirmation\"\n                        id=\"confirm-pass\"\n                        placeholder=\"{{ 'PLACEHOLDERS.PLACEHOLDER_CONFIRM' | translate }}\"\n                        type=\"password\"\n                    />\n                    <div\n                        *ngIf=\"regForm.controls['password'].dirty && regForm.controls['confirmation'].dirty && regForm.errors\"\n                        class=\"error\"\n                    >\n                        <div *ngIf=\"regForm.errors['mismatch']\">\n                            {{ 'LOGIN.FORM_ERRORS.MISMATCH' | translate }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <button\n                [disabled]=\"\n                    !regForm.controls['password'].value.length ||\n                    !regForm.controls['confirmation'].value.length ||\n                    (regForm.errors && regForm.errors['mismatch']) ||\n                    regForm.controls['password'].errors\n                \"\n                class=\"primary big w-100 mb-1\"\n                type=\"submit\"\n            >\n                {{ 'LOGIN.BUTTON_NEXT' | translate }}\n            </button>\n\n            <button\n                (click)=\"onSkipCreatePass()\"\n                [disabled]=\"regForm.controls['password'].value.length || regForm.controls['confirmation'].value.length\"\n                class=\"primary big w-100\"\n                type=\"button\"\n            >\n                {{ 'LOGIN.BUTTON_SKIP' | translate }}\n            </button>\n        </form>\n\n        <form (ngSubmit)=\"onSubmitAuthPass()\" *ngIf=\"type !== 'reg'\" [formGroup]=\"authForm\" class=\"form\">\n            <div class=\"auth-card-form\">\n                <div class=\"form__field\">\n                    <label for=\"master-pass-login\">{{ 'LOGIN.MASTER_PASS' | translate }}</label>\n                    <input\n                        (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\n                        [placeholder]=\"'PLACEHOLDERS.MASTER_PASS_PLACEHOLDER' | translate\"\n                        appAutofocus\n                        autofocus\n                        class=\"form__field--input\"\n                        formControlName=\"password\"\n                        id=\"master-pass-login\"\n                        type=\"password\"\n                    />\n                    <div\n                        *ngIf=\"\n                            authForm.controls['password'].invalid &&\n                            (authForm.controls['password'].dirty || authForm.controls['password'].touched)\n                        \"\n                        class=\"error\"\n                    >\n                        <div *ngIf=\"authForm.controls['password'].hasError('wrong_password')\">\n                            {{ 'LOGIN.FORM_ERRORS.INVALID_PASS' | translate }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <button class=\"primary big w-100 mb-1\" type=\"submit\">\n                {{ 'LOGIN.BUTTON_NEXT' | translate }}\n                <span *ngIf=\"submitLoading$ | async\" [ngTemplateOutlet]=\"loaderTemp\" class=\"ml-1\"></span>\n            </button>\n\n            <button (click)=\"dropSecureAppData()\" class=\"outline big w-100\" type=\"button\">\n                {{ 'LOGIN.BUTTON_RESET' | translate }}\n                <span *ngIf=\"resetLoading$ | async\" [ngTemplateOutlet]=\"loaderTemp\" class=\"ml-1\"></span>\n            </button>\n        </form>\n    </div>\n\n    <app-synchronization-status></app-synchronization-status>\n</div>\n\n<ng-template #loaderTemp>\n    <zano-loader></zano-loader>\n</ng-template>\n","import { Component, NgZone } from '@angular/core';\nimport { CREATE_NEW_WALLET_HELP_PAGE } from '@parts/data/constants';\nimport { Router } from '@angular/router';\nimport { BackendService } from '@api/services/backend.service';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n    selector: 'app-no-wallet',\n    templateUrl: './no-wallet.component.html',\n    styleUrls: ['./no-wallet.component.scss'],\n})\nexport class NoWalletComponent {\n    get zanoLogo(): string {\n        const {\n            settings: { isDarkTheme },\n        } = this.variablesService;\n        return isDarkTheme ? 'assets/icons/blue/zano-logo.svg' : 'assets/icons/blue/light-zano-logo.svg';\n    }\n\n    constructor(\n        public variablesService: VariablesService,\n        private router: Router,\n        private backend: BackendService,\n        private ngZone: NgZone,\n        private translate: TranslateService\n    ) {}\n\n    openWallet(): void {\n        this.backend.openFileDialog(\n            this.translate.instant('MAIN.CHOOSE_PATH'),\n            '*',\n            this.variablesService.settings.default_path,\n            (file_status, file_data) => {\n                if (file_status) {\n                    this.variablesService.settings.default_path = file_data.path.substr(0, file_data.path.lastIndexOf('/'));\n                    this.ngZone.run(() => {\n                        this.router\n                            .navigate(['/open'], {\n                                queryParams: { path: file_data.path },\n                            })\n                            .then();\n                    });\n                } else {\n                    console.log(file_data['error_code']);\n                }\n            }\n        );\n    }\n\n    openInBrowser(): void {\n        this.backend.openUrlInBrowser(CREATE_NEW_WALLET_HELP_PAGE);\n    }\n}\n","<div class=\"auth\" fxFlexFill fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <div class=\"auth-card\">\n        <div class=\"logo mb-3\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n            <img [src]=\"zanoLogo\" alt=\"zano-logo\" />\n        </div>\n\n        <h4 class=\"mb-2 text-align-center\">{{ 'MAIN.TITLE' | translate }}</h4>\n\n        <button [routerLink]=\"['/create']\" class=\"primary big w-100 mb-1\" type=\"button\">\n            {{ 'MAIN.BUTTON_NEW_WALLET' | translate }}\n        </button>\n\n        <button (click)=\"openWallet()\" class=\"primary big w-100 mb-1\" type=\"button\">\n            {{ 'MAIN.BUTTON_OPEN_WALLET' | translate }}\n        </button>\n\n        <button [routerLink]=\"['/restore']\" class=\"outline big w-100 mb-2\" type=\"button\">\n            {{ 'MAIN.BUTTON_RESTORE_BACKUP' | translate }}\n        </button>\n\n        <p (click)=\"openInBrowser()\" class=\"text-align-center cursor-pointer\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n            <mat-icon svgIcon=\"zano-question\" class=\"mr-1\"></mat-icon>\n            <span class=\"color-primary\">{{ 'MAIN.HELP' | translate }}</span>\n        </p>\n    </div>\n\n    <app-synchronization-status></app-synchronization-status>\n</div>\n","import { Component, inject, NgZone } from '@angular/core';\nimport { NonNullableFormBuilder, Validators } from '@angular/forms';\nimport { BackendService } from '@api/services/backend.service';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { ModalService } from '@parts/services/modal.service';\nimport { Router } from '@angular/router';\nimport { Wallet } from '@api/models/wallet.model';\nimport { TranslateService } from '@ngx-translate/core';\nimport { regExpPassword, ZanoValidators } from '@parts/utils/zano-validators';\nimport { WalletsService } from '@parts/services/wallets.service';\nimport { BreadcrumbItems } from '@parts/components/breadcrumbs/breadcrumbs.models';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n    selector: 'app-create-wallet',\n    template: `\n        <div class=\"page-container\">\n            <div class=\"toolbar mb-2\">\n                <div class=\"left\">\n                    <app-back-button></app-back-button>\n                    <h1 class=\"ml-2\">{{ 'BREADCRUMBS.ADD_WALLET' | translate }}</h1>\n                </div>\n                <div class=\"right\"></div>\n            </div>\n\n            <div class=\"page-content\">\n                <app-breadcrumbs class=\"mb-2\" [items]=\"breadcrumbItems\"></app-breadcrumbs>\n\n                <div class=\"scrolled-content\">\n                    <form [formGroup]=\"createForm\" class=\"form\">\n                        <div class=\"form__field\">\n                            <label for=\"wallet-name\">{{ 'CREATE_WALLET.NAME' | translate }}</label>\n                            <input\n                                (contextmenu)=\"variablesService.onContextMenu($event)\"\n                                [placeholder]=\"'PLACEHOLDERS.WALLET_NAME_PLACEHOLDER' | translate\"\n                                [readonly]=\"createForm.controls.path.valid\"\n                                class=\"form__field--input\"\n                                formControlName=\"name\"\n                                id=\"wallet-name\"\n                                maxlength=\"{{ variablesService.maxWalletNameLength }}\"\n                                type=\"text\"\n                            />\n                            <div\n                                *ngIf=\"\n                                    createForm.controls.name.invalid && (createForm.controls.name.dirty || createForm.controls.name.touched)\n                                \"\n                                class=\"error\"\n                            >\n                                <div *ngIf=\"createForm.controls.name.hasError('duplicate')\">\n                                    {{ 'CREATE_WALLET.FORM_ERRORS.NAME_DUPLICATE' | translate }}\n                                </div>\n                                <div *ngIf=\"createForm.controls.name.hasError('required')\">\n                                    {{ 'CREATE_WALLET.FORM_ERRORS.NAME_REQUIRED' | translate }}\n                                </div>\n                            </div>\n                            <div *ngIf=\"createForm.controls.name.value.length > variablesService.maxWalletNameLength\" class=\"error\">\n                                {{ 'CREATE_WALLET.FORM_ERRORS.MAX_LENGTH' | translate }}\n                            </div>\n                        </div>\n\n                        <div class=\"form__field\">\n                            <label for=\"wallet-password\">{{ 'CREATE_WALLET.PASS' | translate }}</label>\n                            <input\n                                (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\n                                [readonly]=\"createForm.controls.path.valid\"\n                                class=\"form__field--input\"\n                                formControlName=\"password\"\n                                id=\"wallet-password\"\n                                placeholder=\"{{ 'PLACEHOLDERS.PLACEHOLDER_NEW' | translate }}\"\n                                type=\"password\"\n                            />\n                            <div *ngIf=\"createForm.controls.path.dirty && createForm.controls.password.invalid\" class=\"error\">\n                                <div *ngIf=\"createForm.controls.password.hasError('pattern')\">\n                                    {{ 'ERRORS.WRONG_PASSWORD' | translate }}\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form__field\">\n                            <label for=\"confirm-wallet-password\">{{ 'CREATE_WALLET.CONFIRM' | translate }}</label>\n                            <input\n                                (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\n                                [class.invalid]=\"createForm.hasError('mismatch') && createForm.controls.confirm.value.length > 0\"\n                                [readonly]=\"createForm.controls.path.valid\"\n                                class=\"form__field--input\"\n                                formControlName=\"confirm\"\n                                id=\"confirm-wallet-password\"\n                                placeholder=\"{{ 'PLACEHOLDERS.PLACEHOLDER_CONFIRM' | translate }}\"\n                                type=\"password\"\n                            />\n                            <div\n                                *ngIf=\"\n                                    createForm.controls.confirm.dirty &&\n                                    createForm.hasError('mismatch') &&\n                                    createForm.controls.confirm.value.length > 0\n                                \"\n                                class=\"error\"\n                            >\n                                {{ 'CREATE_WALLET.FORM_ERRORS.CONFIRM_NOT_MATCH' | translate }}\n                            </div>\n                        </div>\n\n                        <button *ngIf=\"createForm.controls.path.valid\" class=\"outline big w-100 mb-2\" disabled type=\"button\">\n                            <mat-icon svgIcon=\"zano-check-circle\" class=\"mr-1\"></mat-icon>\n                            {{ savedWalletName }}\n                        </button>\n\n                        <button\n                            *ngIf=\"createForm.controls.path.invalid\"\n                            (click)=\"selectWalletLocation()\"\n                            [disabled]=\"\n                                createForm.controls.name.invalid || createForm.controls.password.invalid || createForm.hasError('mismatch')\n                            \"\n                            class=\"outline big w-100 mb-2\"\n                            type=\"button\"\n                        >\n                            {{ 'CREATE_WALLET.BUTTON_SELECT' | translate }}\n                        </button>\n\n                        <button (click)=\"createWallet()\" [disabled]=\"createForm.invalid\" class=\"primary big w-100\" type=\"button\">\n                            {{ 'CREATE_WALLET.BUTTON_CREATE' | translate }}\n                            <span class=\"ml-1\" *ngIf=\"loading$ | async\" [ngTemplateOutlet]=\"loaderTemp\"></span>\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </div>\n\n        <ng-template #loaderTemp><zano-loader></zano-loader></ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                overflow: hidden;\n            }\n        `,\n    ],\n})\nexport class CreateWalletComponent {\n    variablesService = inject(VariablesService);\n\n    loading$ = new BehaviorSubject(false);\n\n    breadcrumbItems: BreadcrumbItems = [\n        {\n            routerLink: '/add-wallet',\n            title: 'BREADCRUMBS.ADD_WALLET',\n        },\n        {\n            title: 'BREADCRUMBS.CREATE_WALLET',\n        },\n    ];\n\n    walletsService = inject(WalletsService);\n\n    fb = inject(NonNullableFormBuilder);\n\n    createForm = this.fb.group(\n        {\n            name: this.fb.control('', [Validators.required, ZanoValidators.duplicate(this.variablesService.walletNamesForComparisons)]),\n            password: this.fb.control('', Validators.pattern(regExpPassword)),\n            confirm: this.fb.control(''),\n            path: this.fb.control('', Validators.required),\n        },\n        {\n            validators: [ZanoValidators.formMatch('password', 'confirm')],\n        }\n    );\n\n    private router = inject(Router);\n\n    private backend = inject(BackendService);\n\n    private modalService = inject(ModalService);\n\n    private ngZone = inject(NgZone);\n\n    private translate = inject(TranslateService);\n\n    get savedWalletName(): string {\n        const path = this.createForm.get('path').value;\n        return path.substr(path.lastIndexOf('/') + 1, path.length - 1);\n    }\n\n    createWallet(): void {\n        this.loading$.next(true);\n\n        // This delay is necessary for the loader to display, as the application freezes for a few seconds\n        setTimeout(() => {\n            const { path: selectedPath, password, name } = this.createForm.getRawValue();\n            this.backend.generateWallet(selectedPath, password, async (generate_status, generate_data, errorCode) => {\n                if (generate_status) {\n                    const { wallet_id } = generate_data;\n                    const { path, address, balance, unlocked_balance, mined_total, tracking_hey } = generate_data['wi'];\n                    const wallet = new Wallet(\n                        wallet_id,\n                        name,\n                        password,\n                        path,\n                        address,\n                        balance,\n                        unlocked_balance,\n                        mined_total,\n                        tracking_hey\n                    );\n                    wallet.alias = this.backend.getWalletAlias(address);\n                    wallet.total_history_item = 0;\n                    wallet.pages = new Array(1).fill(1);\n                    wallet.totalPages = 1;\n                    wallet.currentPage = 1;\n                    this.walletsService.addWallet(wallet);\n                    await this.backend.runWallet(wallet_id, async (run_status, run_data) => {\n                        if (run_status) {\n                            await this.ngZone.run(async () => {\n                                if (this.variablesService.appPass) {\n                                    this.backend.storeSecureAppData();\n                                }\n                                this.variablesService.setCurrentWallet(wallet_id);\n                                this.loading$.next(false);\n                                await this.router.navigate(['/seed-phrase'], { queryParams: { wallet_id } });\n                            });\n                        } else {\n                            console.log(run_data['error_code']);\n                            this.ngZone.run(() => {\n                                this.loading$.next(false);\n                            });\n                        }\n                    });\n                } else {\n                    const errorTranslationKey =\n                        errorCode === 'ALREADY_EXISTS' ? 'CREATE_WALLET.ERROR_CANNOT_SAVE_TOP' : 'CREATE_WALLET.ERROR_CANNOT_SAVE_SYSTEM';\n                    this.modalService.prepareModal('error', errorTranslationKey);\n\n                    this.ngZone.run(() => {\n                        this.loading$.next(false);\n                    });\n                }\n            });\n        }, 500);\n    }\n\n    selectWalletLocation(): void {\n        const caption = this.translate.instant('CREATE_WALLET.TITLE_SAVE');\n        const fileMask = '*';\n        const { default_path } = this.variablesService.settings;\n        this.backend.saveFileDialog(caption, fileMask, default_path, (file_status, file_data) => {\n            if (file_status) {\n                this.ngZone.run(() => {\n                    const { path } = file_data;\n                    this.createForm.get('path').patchValue(path);\n                    this.variablesService.settings.default_path = path.substr(0, path.lastIndexOf('/'));\n                });\n            }\n        });\n    }\n}\n","import { delay, takeUntil } from 'rxjs/operators';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { VariablesService } from '@parts/services/variables.service';\n\n@Component({\n    selector: 'app-deeplink',\n    template: `\n        <ng-container *ngIf=\"deeplink$ | async\">\n            <app-deeplink-modal *ngIf=\"variablesService?.daemon_state === 2 || !variablesService?.sync_started\"></app-deeplink-modal>\n\n            <app-sync-modal *ngIf=\"variablesService?.daemon_state !== 2 || variablesService?.sync_started\"> </app-sync-modal>\n        </ng-container>\n    `,\n    styles: [],\n})\nexport class DeeplinkComponent implements OnInit, OnDestroy {\n    deeplink$ = new BehaviorSubject<string | null>(null);\n\n    private destroy$ = new Subject<void>();\n\n    constructor(public variablesService: VariablesService) {}\n\n    ngOnInit(): void {\n        this.variablesService.deeplink$.pipe(delay(200), takeUntil(this.destroy$)).subscribe({\n            next: data => {\n                this.deeplink$.next(data);\n            },\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DeeplinkModalModule } from './modals/deeplink-modal/deeplink-modal.module';\nimport { DeeplinkComponent } from './deeplink.component';\nimport { SyncModalModule } from './modals/sync-modal/sync-modal.module';\n\n@NgModule({\n    declarations: [DeeplinkComponent],\n    imports: [CommonModule, DeeplinkModalModule, SyncModalModule],\n    exports: [DeeplinkComponent, DeeplinkModalModule, SyncModalModule],\n})\nexport class DeeplinkModule {}\n","import { Component, HostBinding, NgZone, OnDestroy, OnInit, Renderer2 } from '@angular/core';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { DeeplinkParams, PushOffer, Wallet } from '@api/models/wallet.model';\nimport { BigNumber } from 'bignumber.js';\nimport { MIXIN } from '@parts/data/constants';\nimport { Subject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { BackendService } from '@api/services/backend.service';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-deeplink-modal',\n    template: `\n        <div class=\"modal deeplink-modal-wrapper\" fxFlex=\"0 1 54rem\" fxLayout=\"column\">\n            <ng-container *ngIf=\"walletsToPay.length > 1 && !secondStep\">\n                <div class=\"content mb-2\" fxFlex=\"0 0 auto\" fxLayout=\"column\">\n                    <div class=\"form__field\" fxFlex=\"0 0 auto\">\n                        <label>Select wallet for action:</label>\n                        <ng-select\n                            [(ngModel)]=\"walletToPayId\"\n                            [clearable]=\"false\"\n                            [items]=\"walletsToPay\"\n                            [searchable]=\"false\"\n                            bindLabel=\"name\"\n                            bindValue=\"wallet_id\"\n                        >\n                            <ng-template let-item=\"item\" ng-label-tmp>\n                                {{ item.name }}\n                            </ng-template>\n                            <ng-template let-index=\"index\" let-item=\"item\" ng-option-tmp>\n                                {{ item.name }}\n                            </ng-template>\n                        </ng-select>\n                    </div>\n                </div>\n\n                <div class=\"controls\" fxFlex=\"0 0 auto\" fxLayout=\"row nowrap\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"1rem\">\n                    <button (click)=\"canselAction()\" class=\"outline big w-100\" type=\"button\">\n                        {{ 'EXPORT_HISTORY.CANCEL' | translate }}\n                    </button>\n                    <button (click)=\"nextStep()\" class=\"primary big w-100\" type=\"submit\">Next...</button>\n                </div>\n            </ng-container>\n\n            <ng-container *ngIf=\"secondStep && marketplaceModalShow && actionData.action === 'marketplace_offer_create'\">\n                <h4 class=\"mb-2\" fxFlex=\"0 0 auto\">Creating a marketplace offer</h4>\n                <div class=\"content scrolled-content mb-2\" fxFlex=\"1 1 auto\" fxLayout=\"column\">\n                    <div class=\"table-info\" fxFlex=\"0 0 auto\">\n                        <div class=\"row\">\n                            <div class=\"label max-w-19-rem w-100\">\n                                {{ 'Offer title' | translate }}\n                            </div>\n                            <div class=\"text\">{{ actionData.title }}</div>\n                        </div>\n\n                        <hr class=\"separator\" />\n\n                        <div class=\"row\">\n                            <div class=\"label max-w-19-rem w-100\">\n                                {{ 'Description' | translate }}\n                            </div>\n                            <div class=\"text\">{{ actionData.description }}</div>\n                        </div>\n\n                        <hr class=\"separator\" />\n\n                        <div class=\"row\">\n                            <div class=\"label max-w-19-rem w-100\">\n                                {{ 'Category' | translate }}\n                            </div>\n                            <div class=\"text\">{{ actionData.category }}</div>\n                        </div>\n\n                        <hr class=\"separator\" />\n\n                        <div class=\"row\">\n                            <div class=\"label max-w-19-rem w-100\">\n                                {{ 'Price' | translate }}\n                            </div>\n                            <div class=\"text\">\n                                {{ actionData.price }}\n                                {{ this.variablesService.defaultTicker }}\n                            </div>\n                        </div>\n\n                        <hr class=\"separator\" />\n\n                        <div class=\"row\">\n                            <div class=\"label max-w-19-rem w-100\">\n                                {{ 'Preview url' | translate }}\n                            </div>\n                            <div class=\"text\">{{ actionData.url || actionData.img_url }}</div>\n                        </div>\n\n                        <hr class=\"separator\" />\n\n                        <div class=\"row\">\n                            <div class=\"label max-w-19-rem w-100\">\n                                {{ 'Contacts' | translate }}\n                            </div>\n                            <div class=\"text\">{{ actionData.contact }}</div>\n                        </div>\n\n                        <hr class=\"separator\" />\n\n                        <div class=\"row\">\n                            <div class=\"label max-w-19-rem w-100\">\n                                {{ 'Comments' | translate }}\n                            </div>\n                            <div class=\"text\">\n                                {{ actionData.comment || actionData.comments }}\n                            </div>\n                        </div>\n\n                        <hr class=\"separator\" />\n\n                        <div class=\"row\">\n                            <div class=\"label max-w-19-rem w-100\">\n                                {{ 'Mixins' | translate }}\n                            </div>\n                            <div class=\"text\">{{ actionData.mixins || defaultMixin }}</div>\n                        </div>\n\n                        <hr class=\"separator\" />\n\n                        <div class=\"row\">\n                            <div class=\"label max-w-19-rem w-100\">\n                                {{ 'Transaction fee' | translate }}\n                            </div>\n                            <div class=\"text\">\n                                {{ actionData.price * (actionData.fee || this.variablesService.default_fee) }}\n                                {{ this.variablesService.defaultTicker }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"controls\" fxFlex=\"0 0 auto\" fxLayout=\"row nowrap\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"1rem\">\n                    <button (click)=\"canselAction()\" class=\"outline big w-100\" type=\"button\">\n                        {{ 'EXPORT_HISTORY.CANCEL' | translate }}\n                    </button>\n                    <button (click)=\"marketplaceSend()\" class=\"primary big w-100\" type=\"submit\">Sign & Send...</button>\n                </div>\n            </ng-container>\n\n            <ng-container *ngIf=\"marketplaceConfirmHash\">\n                <h4 class=\"mb-2\" fxFlex=\"0 0 auto\">Operation successful</h4>\n\n                <div class=\"content scrolled-content mb-2\" fxFlex=\"1 1 auto\" fxLayout=\"column\">\n                    <div class=\"table-info\" fxFlex=\"0 0 auto\">\n                        <div class=\"row\">\n                            <div class=\"label max-w-19-rem w-100\">\n                                {{ 'Operation hash' | translate }}\n                            </div>\n                            <div\n                                (contextmenu)=\"variablesService.onContextMenuOnlyCopy($event, marketplaceConfirmHash)\"\n                                class=\"text\"\n                                fxLayout=\"row\"\n                                fxLayoutAlign=\"start center\"\n                            >\n                                {{ marketplaceConfirmHash }}\n                                <mat-icon\n                                    (click)=\"copyHash()\"\n                                    [svgIcon]=\"copyAnimation ? 'zano-check' : 'zano-copy'\"\n                                    class=\"ml-1\"\n                                ></mat-icon>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"controls\" fxFlex=\"0 0 auto\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n                    <button (click)=\"canselAction()\" class=\"primary big w-100\" type=\"button\">Close</button>\n                </div>\n            </ng-container>\n\n            <ng-container *ngIf=\"!walletsToPay.length\">\n                <h4 class=\"mb-2\" fxFlex=\"0 0 auto\">Your wallets have not loaded yet. Try this action a little later.</h4>\n\n                <div class=\"controls\" fxFlex=\"0 0 auto\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n                    <button (click)=\"canselAction()\" class=\"primary big w-100\" type=\"button\">Ok</button>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    styleUrls: ['./deeplink-modal.component.scss'],\n})\nexport class DeeplinkModalComponent implements OnInit, OnDestroy {\n    @HostBinding('class.modal-overlay') modalOverlay = true;\n\n    secondStep = false;\n\n    walletToPayId = 0;\n\n    nextStepInterval;\n\n    marketplaceModalShow = true;\n\n    copyAnimation = false;\n\n    marketplaceConfirmHash: any = null;\n\n    actionData: DeeplinkParams = {};\n\n    defaultMixin = MIXIN;\n\n    walletsToPay: Array<Wallet> = [];\n\n    private destroy$ = new Subject<void>();\n\n    constructor(\n        public variablesService: VariablesService,\n        private _router: Router,\n        private backend: BackendService,\n        private ngZone: NgZone,\n        private renderer: Renderer2\n    ) {\n        this.walletsToPay = this.variablesService.wallets.filter(wallet => !wallet.is_watch_only || !wallet.is_auditable);\n    }\n\n    ngOnInit(): void {\n        this.renderer.addClass(document.body, 'no-scroll');\n\n        this.variablesService.deeplink$.pipe(takeUntil(this.destroy$)).subscribe({\n            next: deeplink => {\n                this.actionData = {};\n\n                if (deeplink) {\n                    if (this.walletsToPay.length === 0) {\n                        this.canselAction();\n                        return;\n                    }\n                    this.actionData = this.parseDeeplink(deeplink);\n                    if (this.walletsToPay.length === 1) {\n                        this.walletToPayId = this.walletsToPay[0].wallet_id;\n                        const { daemon_state, sync_started } = this.variablesService;\n\n                        if (daemon_state === 2 && sync_started === false) {\n                            this.nextStep();\n                        } else {\n                            this.nextStepInterval = setInterval(() => {\n                                if (daemon_state === 2 && sync_started === false) {\n                                    this.nextStep();\n                                    clearInterval(this.nextStepInterval);\n                                }\n                            }, 1500);\n                        }\n                    }\n                }\n            },\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.next();\n        this.variablesService.deeplink$.next(null);\n        this.renderer.removeClass(document.body, 'no-scroll');\n    }\n\n    parseDeeplink(deeplink): DeeplinkParams {\n        const quotesRex = new RegExp(/'|\"|”|%E2%80%9D|%22/g);\n        const spaceSymbolRex = new RegExp(/%20/g);\n        const newObj = {};\n\n        const newString = deeplink.substr(5); // delete zano:;\n        newString.split('&').forEach(str => {\n            const [key, value] = str.split('=');\n            newObj[key] = value.replace(quotesRex, '').replace(spaceSymbolRex, ' ').trim();\n        });\n        return newObj;\n    }\n\n    canselAction(): void {\n        this.variablesService.deeplink$.next(null);\n        this.variablesService.sendActionData$.next({});\n        this.actionData = {};\n        this.secondStep = false;\n    }\n\n    marketplaceSend(): void {\n        const offerObject: PushOffer = {\n            wallet_id: this.walletToPayId,\n            od: {\n                ap: this.actionData.price || '',\n                at: '1',\n                cat: this.actionData.category || '',\n                cnt: this.actionData.contact || '',\n                com: this.actionData.comment || this.actionData.comments || '',\n                do: this.actionData.description || '',\n                et: 10,\n                fee: new BigNumber('' + (+this.actionData.fee || +this.variablesService.default_fee) * 1000000000000),\n                lci: '',\n                lco: 'World Wide',\n                ot: 1,\n                pt: 'Credit cards, BTC, ZANO, ETH',\n                t: this.actionData.title || '',\n                url: this.actionData.url || this.actionData.img_url || '',\n            },\n        };\n        this.backend.push_offer(offerObject, (status, data) => {\n            this.ngZone.run(() => {\n                if (data.success) {\n                    this.marketplaceModalShow = false;\n                    this.marketplaceConfirmHash = data.tx_hash;\n                } else {\n                    this.canselAction();\n                }\n            });\n        });\n    }\n\n    copyHash(): void {\n        this.backend.setClipboard(this.marketplaceConfirmHash);\n        this.copyAnimation = true;\n        setTimeout(() => (this.copyAnimation = false), 2000);\n    }\n\n    nextStep(): void {\n        if (this.actionData.action === 'send') {\n            this.variablesService.sendActionData$.next(this.actionData);\n            this.variablesService.deeplink$.next(null);\n            this.variablesService.setCurrentWallet(this.walletToPayId);\n            this._router.navigate(['/wallet/send']).then();\n            this.secondStep = false;\n        } else if (this.actionData.action === 'escrow') {\n            this.variablesService.sendActionData$.next(this.actionData);\n            this.variablesService.deeplink$.next(null);\n            this.variablesService.setCurrentWallet(this.walletToPayId);\n            this._router.navigate(['/wallet/contracts/purchase']).then();\n            this.secondStep = false;\n        } else {\n            this.secondStep = true;\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DeeplinkModalComponent } from './deeplink-modal.component';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { FormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n    declarations: [DeeplinkModalComponent],\n    imports: [CommonModule, NgSelectModule, FormsModule, FlexLayoutModule, TranslateModule, MatIconModule],\n    exports: [DeeplinkModalComponent],\n})\nexport class DeeplinkModalModule {}\n","import { Component, HostBinding, OnDestroy, OnInit, Renderer2 } from '@angular/core';\nimport { VariablesService } from '@parts/services/variables.service';\n\n@Component({\n    selector: 'app-sync-modal',\n    template: `\n        <div class=\"modal sync-modal-wrapper\">\n            <div class=\"content\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n                <h3 class=\"mb-2\">This action is not available during synchronization...</h3>\n                <button (click)=\"canselAction()\" class=\"primary big max-w-19-rem w-100\" type=\"button\">OK</button>\n            </div>\n        </div>\n    `,\n    styleUrls: ['./sync-modal.component.scss'],\n})\nexport class SyncModalComponent implements OnInit, OnDestroy {\n    @HostBinding('class.modal-overlay') modalOverlay = true;\n\n    constructor(private renderer: Renderer2, public variablesService: VariablesService) {}\n\n    ngOnInit(): void {\n        this.renderer.addClass(document.body, 'no-scroll');\n    }\n\n    ngOnDestroy(): void {\n        this.renderer.removeClass(document.body, 'no-scroll');\n    }\n\n    canselAction(): void {\n        this.variablesService.deeplink$.next(null);\n        this.variablesService.sendActionData$.next({});\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SyncModalComponent } from './sync-modal.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n    declarations: [SyncModalComponent],\n    imports: [CommonModule, FlexLayoutModule],\n    exports: [SyncModalComponent],\n})\nexport class SyncModalModule {}\n","import { Component, NgZone, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BackendService } from '@api/services/backend.service';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { ModalService } from '@parts/services/modal.service';\nimport { Wallet } from '@api/models/wallet.model';\nimport { BigNumber } from 'bignumber.js';\nimport { BreadcrumbItems } from '@parts/components/breadcrumbs/breadcrumbs.models';\n\n@Component({\n    selector: 'app-edit-alias',\n    template: `\n        <div class=\"page-container\">\n            <div class=\"toolbar mb-2\">\n                <div class=\"left\">\n                    <app-back-button></app-back-button>\n                    <h1 class=\"ml-2\">{{ 'BREADCRUMBS.EDIT_ALIAS' | translate }}</h1>\n                </div>\n                <div class=\"right\"></div>\n            </div>\n\n            <div class=\"page-content\">\n                <app-breadcrumbs class=\"mb-2\" [items]=\"breadcrumbItems\"></app-breadcrumbs>\n\n                <div class=\"scrolled-content\">\n                    <form class=\"form\">\n                        <div class=\"form__field\">\n                            <label for=\"alias-name\">\n                                {{ 'EDIT_ALIAS.NAME.LABEL' | translate }}\n                            </label>\n                            <input\n                                [value]=\"alias.name\"\n                                class=\"form__field--input\"\n                                id=\"alias-name\"\n                                placeholder=\"{{ 'EDIT_ALIAS.NAME.PLACEHOLDER' | translate }}\"\n                                readonly\n                                type=\"text\"\n                            />\n                        </div>\n\n                        <div class=\"form__field textarea\">\n                            <label for=\"alias-comment\">\n                                {{ 'EDIT_ALIAS.COMMENT.LABEL' | translate }}\n                            </label>\n                            <textarea\n                                (contextmenu)=\"variablesService.onContextMenu($event)\"\n                                [(ngModel)]=\"alias.comment\"\n                                [maxlength]=\"variablesService.maxCommentLength + ''\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                id=\"alias-comment\"\n                                placeholder=\"{{ 'EDIT_ALIAS.COMMENT.PLACEHOLDER' | translate }}\"\n                            >\n                            </textarea>\n                            <div *ngIf=\"alias.comment.length > 0 && notEnoughMoney\" class=\"error\">\n                                {{ 'EDIT_ALIAS.FORM_ERRORS.NO_MONEY' | translate }}\n                            </div>\n                            <div *ngIf=\"alias.comment.length >= variablesService.maxCommentLength\" class=\"error\">\n                                {{ 'EDIT_ALIAS.FORM_ERRORS.MAX_LENGTH' | translate }}\n                            </div>\n                        </div>\n\n                        <div class=\"alias-cost mb-2\">\n                            {{\n                                'EDIT_ALIAS.COST'\n                                    | translate\n                                        : {\n                                              value: variablesService.default_fee,\n                                              currency: variablesService.defaultTicker\n                                          }\n                            }}\n                        </div>\n\n                        <button\n                            (click)=\"updateAlias()\"\n                            [disabled]=\"\n                                notEnoughMoney ||\n                                oldAliasComment === alias.comment ||\n                                alias.comment.length > variablesService.maxCommentLength\n                            \"\n                            class=\"primary big w-100\"\n                            type=\"button\"\n                        >\n                            {{ 'EDIT_ALIAS.BUTTON_EDIT' | translate }}\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                overflow: hidden;\n            }\n        `,\n    ],\n})\nexport class EditAliasComponent implements OnInit {\n    wallet: Wallet;\n\n    alias: any;\n\n    breadcrumbItems: BreadcrumbItems = [\n        {\n            routerLink: '/wallet/history',\n            title: this.variablesService.currentWallet.name,\n        },\n        {\n            title: 'BREADCRUMBS.EDIT_ALIAS',\n        },\n    ];\n\n    oldAliasComment: string;\n\n    notEnoughMoney: boolean;\n\n    requestProcessing = false;\n\n    constructor(\n        public variablesService: VariablesService,\n        private router: Router,\n        private backend: BackendService,\n        private modalService: ModalService,\n        private ngZone: NgZone\n    ) {}\n\n    ngOnInit(): void {\n        this.wallet = this.variablesService.currentWallet;\n        const alias = this.backend.getWalletAlias(this.wallet.address);\n        this.alias = {\n            name: alias.name,\n            address: alias.address,\n            comment: alias.comment,\n        };\n        this.oldAliasComment = alias.comment;\n        const balance = new BigNumber(this.wallet.getBalanceByTicker('ZANO')?.unlocked || 0);\n        this.notEnoughMoney = balance.isLessThan(this.variablesService.default_fee_big);\n    }\n\n    updateAlias(): void {\n        if (\n            this.requestProcessing ||\n            this.notEnoughMoney ||\n            this.oldAliasComment === this.alias.comment ||\n            this.alias.comment.length > this.variablesService.maxCommentLength\n        ) {\n            return;\n        }\n        this.requestProcessing = true;\n        this.backend.updateAlias(this.wallet.wallet_id, this.alias, this.variablesService.default_fee, status => {\n            if (status) {\n                this.modalService.prepareModal('success', '');\n                this.wallet.alias['comment'] = this.alias.comment;\n                this.ngZone.run(() => {\n                    this.router.navigate(['/wallet/']);\n                });\n            }\n            this.requestProcessing = false;\n        });\n    }\n}\n","import { Component, NgZone } from '@angular/core';\nimport { BackendService } from '@api/services/backend.service';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { Contact } from '@api/models/contact.model';\nimport { ModalService } from '@parts/services/modal.service';\nimport { Papa } from 'ngx-papaparse';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-export-import',\n    template: `\n        <div class=\"page-container\">\n            <div class=\"toolbar mb-2\">\n                <div class=\"left\">\n                    <app-back-button></app-back-button>\n                    <h1 class=\"ml-2\">{{ 'CONTACTS.IMPORT_EXPORT' | translate }}</h1>\n                </div>\n                <div class=\"right\"></div>\n            </div>\n\n            <div class=\"page-content\">\n                <div class=\"scrolled-content\">\n                    <div class=\"controls flex\">\n                        <button (click)=\"import()\" class=\"primary big max-w-19-rem w-100 mr-1\" type=\"button\">\n                            {{ 'CONTACTS.IMPORT' | translate }}\n                        </button>\n                        <button (click)=\"export()\" class=\"primary big max-w-19-rem w-100\" type=\"button\">\n                            {{ 'CONTACTS.EXPORT' | translate }}\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            .head {\n                justify-content: flex-end;\n            }\n\n            .contacts-title {\n                font-size: 1.7rem;\n                margin-bottom: 1rem;\n            }\n\n            .btn-wrapper {\n                display: flex;\n                align-items: center;\n                justify-content: space-between;\n                margin: 0 -0.5rem;\n                padding: 1.5rem 0;\n            }\n\n            .btn-wrapper button {\n                flex: 1 0 auto;\n                margin: 0 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ExportImportComponent {\n    constructor(\n        private variablesService: VariablesService,\n        private backend: BackendService,\n        private modalService: ModalService,\n        private papa: Papa,\n        private translate: TranslateService,\n        private router: Router,\n        private ngZone: NgZone\n    ) {}\n\n    import(): void {\n        this.backend.openFileDialog('', '*', this.variablesService.settings.default_path, (file_status, file_data) => {\n            if (file_status) {\n                this.variablesService.settings.default_path = file_data.path.substr(0, file_data.path.lastIndexOf('/'));\n                if (this.isValid(file_data.path)) {\n                    this.backend.loadFile(file_data.path, (status, data) => {\n                        if (!status) {\n                            this.modalService.prepareModal('error', 'CONTACTS.ERROR_IMPORT_EMPTY');\n                        } else {\n                            const options = {\n                                header: true,\n                            };\n                            const elements = this.papa.parse(data, options);\n                            const isArray = Array.isArray(elements.data);\n                            if (isArray && elements.data.length !== 0 && elements.errors.length === 0) {\n                                if (this.variablesService.contacts.length === 0) {\n                                    elements.data.forEach(element => {\n                                        this.variablesService.contacts.push(element);\n                                    });\n                                } else {\n                                    elements.data.forEach(element => {\n                                        const indexName = this.variablesService.contacts.findIndex(\n                                            contact => contact.name === element.name\n                                        );\n                                        const indexAddress = this.variablesService.contacts.findIndex(\n                                            contact => contact.address === element.address\n                                        );\n                                        if (indexAddress === -1 && indexName === -1) {\n                                            this.variablesService.contacts.push(element);\n                                        }\n                                        if (indexName !== -1 && indexAddress === -1) {\n                                            this.variablesService.contacts.push({\n                                                name: `${(element.name as string) || '---'} ${\n                                                    this.translate.instant('CONTACTS.COPY') as string\n                                                }`,\n                                                address: element.address,\n                                                notes: element.notes,\n                                            });\n                                        }\n                                    });\n                                }\n                                this.backend.getContactAlias();\n                                this.ngZone.run(() => {\n                                    this.router.navigate(['/contacts']);\n                                });\n                            }\n                            if (elements.errors.length > 0) {\n                                this.modalService.prepareModal('error', 'CONTACTS.ERROR_IMPORT');\n                                console.log(elements.errors);\n                            }\n                        }\n                    });\n                } else {\n                    this.modalService.prepareModal('error', 'CONTACTS.ERROR_TYPE_FILE');\n                }\n            }\n        });\n    }\n\n    export(): void {\n        const contacts: Array<Contact> = [];\n        this.variablesService.contacts.forEach(contact => {\n            delete contact.alias;\n            contacts.push(contact);\n        });\n\n        this.backend.saveFileDialog('', '*', this.variablesService.settings.default_path, (file_status, file_data) => {\n            if (this.variablesService.contacts.length === 0 && !(file_data.error_code === 'CANCELED')) {\n                this.modalService.prepareModal('error', 'CONTACTS.ERROR_EMPTY_LIST');\n            }\n            const path = this.isValid(file_data.path) ? file_data.path : `${(file_data.path as string) || 'base-name'}.csv`;\n            if (file_status && this.isValid(path) && this.variablesService.contacts.length > 0) {\n                this.backend.storeFile(path, this.papa.unparse(contacts));\n            }\n            if (!(file_data.error_code === 'CANCELED') && !this.isValid(path)) {\n                this.modalService.prepareModal('error', 'CONTACTS.ERROR_EXPORT');\n            }\n        });\n    }\n\n    isValid(file): boolean {\n        return file.endsWith('.csv');\n    }\n}\n","import { Component, inject, NgZone, OnDestroy, OnInit } from '@angular/core';\nimport { NonNullableFormBuilder, Validators } from '@angular/forms';\nimport { BackendService } from '@api/services/backend.service';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { ModalService } from '@parts/services/modal.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Wallet } from '@api/models/wallet.model';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { regExpPassword, ZanoValidators } from '@parts/utils/zano-validators';\nimport { WalletsService } from '@parts/services/wallets.service';\nimport { notFileZanoWallet, wrongPassword } from '@parts/utils/zano-errors';\nimport { BreadcrumbItems } from '@parts/components/breadcrumbs/breadcrumbs.models';\n\n@Component({\n    selector: 'app-open-wallet',\n    template: `\n        <div class=\"page-container\">\n            <div class=\"toolbar mb-2\">\n                <div class=\"left\">\n                    <app-back-button></app-back-button>\n                    <h1 class=\"ml-2\">{{ 'BREADCRUMBS.OPEN_WALLET' | translate }}</h1>\n                </div>\n                <div class=\"right\"></div>\n            </div>\n\n            <div class=\"page-content\">\n                <app-breadcrumbs class=\"mb-2\" [items]=\"breadcrumbItems\"></app-breadcrumbs>\n\n                <div class=\"scrolled-content\">\n                    <form [formGroup]=\"openWalletForm\" (ngSubmit)=\"openWallet()\" class=\"form\">\n                        <div class=\"form__field\">\n                            <label for=\"wallet-name\">\n                                {{ 'OPEN_WALLET.NAME' | translate }}\n                                <span class=\"color-red\">*</span>\n                            </label>\n                            <input\n                                (contextmenu)=\"variablesService.onContextMenu($event)\"\n                                [maxLength]=\"variablesService.maxWalletNameLength\"\n                                [placeholder]=\"'PLACEHOLDERS.WALLET_NAME_PLACEHOLDER' | translate\"\n                                class=\"form__field--input\"\n                                formControlName=\"name\"\n                                id=\"wallet-name\"\n                                type=\"text\"\n                            />\n                            <div\n                                *ngIf=\"\n                                    openWalletForm.controls.name.invalid &&\n                                    (openWalletForm.controls.name.dirty || openWalletForm.controls.name.touched)\n                                \"\n                                class=\"error\"\n                            >\n                                <div *ngIf=\"openWalletForm.controls.name.errors['duplicate']\">\n                                    {{ 'OPEN_WALLET.FORM_ERRORS.NAME_DUPLICATE' | translate }}\n                                </div>\n                                <div *ngIf=\"openWalletForm.controls.name.errors['required']\">\n                                    {{ 'OPEN_WALLET.FORM_ERRORS.NAME_REQUIRED' | translate }}\n                                </div>\n                                <div *ngIf=\"openWalletForm.controls.name.errors['maxLength']\">\n                                    {{ 'OPEN_WALLET.FORM_ERRORS.MAX_LENGTH' | translate }}\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form__field\">\n                            <label for=\"wallet-password\">{{ 'OPEN_WALLET.PASS' | translate }}</label>\n                            <input\n                                (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\n                                class=\"form__field--input\"\n                                formControlName=\"password\"\n                                id=\"wallet-password\"\n                                placeholder=\"{{ 'PLACEHOLDERS.PASS_PLACEHOLDER' | translate }}\"\n                                type=\"password\"\n                            />\n                            <div\n                                *ngIf=\"\n                                    openWalletForm.controls.password.invalid &&\n                                    (openWalletForm.controls.password.dirty || openWalletForm.controls.password.touched)\n                                \"\n                                class=\"error\"\n                            >\n                                <div *ngIf=\"openWalletForm.controls.password.hasError('wrongPassword')\">\n                                    {{ openWalletForm.controls.password.errors['wrongPassword'].errorText | translate }}\n                                </div>\n                            </div>\n                        </div>\n                        <button [disabled]=\"openWalletForm.invalid\" class=\"primary big max-w-19-rem w-100\" type=\"submit\">\n                            {{ 'OPEN_WALLET.BUTTON' | translate }}\n                            <span class=\"ml-1\" *ngIf=\"loading$ | async\" [ngTemplateOutlet]=\"loaderTemp\"></span>\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </div>\n\n        <ng-template #loaderTemp><zano-loader></zano-loader></ng-template>\n    `,\n})\nexport class OpenWalletComponent implements OnInit, OnDestroy {\n    loading$ = new BehaviorSubject(false);\n\n    fb = inject(NonNullableFormBuilder);\n\n    breadcrumbItems: BreadcrumbItems = [\n        {\n            routerLink: '/add-wallet',\n            title: 'BREADCRUMBS.ADD_WALLET',\n        },\n        {\n            title: 'BREADCRUMBS.OPEN_WALLET',\n        },\n    ];\n\n    openWalletForm = this.fb.group({\n        name: this.fb.control('', [\n            Validators.required,\n            Validators.maxLength(this.variablesService.maxWalletNameLength),\n            ZanoValidators.duplicate(this.variablesService.walletNamesForComparisons),\n        ]),\n        password: this.fb.control('', [Validators.pattern(regExpPassword)]),\n        filePath: this.fb.control('', Validators.required),\n    });\n\n    private destroy$ = new Subject<void>();\n\n    constructor(\n        public walletsService: WalletsService,\n        public variablesService: VariablesService,\n        private route: ActivatedRoute,\n        private router: Router,\n        private backend: BackendService,\n        private modalService: ModalService,\n        private ngZone: NgZone,\n        private translate: TranslateService\n    ) {}\n\n    ngOnInit(): void {\n        this.route.queryParams.pipe(takeUntil(this.destroy$)).subscribe({\n            next: params => {\n                if (!params.path) {\n                    return;\n                }\n\n                this.openWalletForm.controls.filePath.patchValue(params.path);\n\n                let filename = '';\n                if (params.path.lastIndexOf('.') === -1) {\n                    filename = params.path.substr(params.path.lastIndexOf('/') + 1);\n                } else {\n                    filename = params.path.substr(\n                        params.path.lastIndexOf('/') + 1,\n                        params.path.lastIndexOf('.') - 1 - params.path.lastIndexOf('/')\n                    );\n                }\n                if (filename.length > 25) {\n                    filename = filename.slice(0, 25);\n                }\n                this.openWalletForm.controls.name.patchValue(filename);\n                this.openWalletForm.controls.name.markAsTouched();\n            },\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    openWallet(): void {\n        this.loading$.next(true);\n\n        if (this.openWalletForm.valid) {\n            // This delay is necessary for the loader to display, as the application freezes for a few seconds\n            setTimeout(() => {\n                const { filePath, password, name } = this.openWalletForm.getRawValue();\n                const { count: txs_to_return } = this.variablesService;\n                this.backend.openWallet(\n                    filePath,\n                    password,\n                    txs_to_return,\n                    false,\n                    (openStatus, openData, errorCode: 'WRONG_PASSWORD' | 'FILE_NOT_FOUND' | 'INVALID_FILE' | 'ALREADY_EXISTS' | string) => {\n                        console.log('openData', openData);\n                        if (errorCode === 'WRONG_PASSWORD') {\n                            this.ngZone.run(() => {\n                                this.openWalletForm.controls.password.setErrors({\n                                    wrongPassword,\n                                });\n                                this.loading$.next(false);\n                            });\n                            return;\n                        }\n\n                        let errorText = errorCode;\n\n                        if (errorCode === 'FILE_NOT_FOUND') {\n                            errorText = this.translate.instant('OPEN_WALLET.FILE_NOT_FOUND1');\n                            errorText += ':<br>' + filePath;\n                            errorText += this.translate.instant('OPEN_WALLET.FILE_NOT_FOUND2');\n                        }\n\n                        if (errorCode === 'INVALID_FILE') {\n                            errorText = this.translate.instant(notFileZanoWallet.errorText);\n                        }\n\n                        if (['INVALID_FILE', 'FILE_NOT_FOUND'].includes(errorCode)) {\n                            this.modalService.prepareModal('error', errorText);\n                            this.ngZone.run(() => {\n                                this.loading$.next(false);\n                            });\n                            return;\n                        }\n\n                        if (openStatus || errorCode === 'FILE_RESTORED') {\n                            let exists = false;\n                            this.variablesService.wallets.forEach(wallet => {\n                                if (wallet.address === openData['wi'].address) {\n                                    exists = true;\n                                }\n                            });\n\n                            if (exists) {\n                                this.modalService.prepareModal('error', 'OPEN_WALLET.WITH_ADDRESS_ALREADY_OPEN');\n                                this.backend.closeWallet(openData.wallet_id, () => {\n                                    this.ngZone.run(() => {\n                                        this.loading$.next(false);\n                                        this.router.navigate(['/']);\n                                    });\n                                });\n                            } else {\n                                const new_wallet = new Wallet(\n                                    openData.wallet_id,\n                                    name,\n                                    password,\n                                    openData['wi'].path,\n                                    openData['wi'].address,\n                                    openData['wi'].balance,\n                                    openData['wi'].unlocked_balance,\n                                    openData['wi'].mined_total,\n                                    openData['wi'].tracking_hey\n                                );\n                                new_wallet.alias = this.backend.getWalletAlias(new_wallet.address);\n                                new_wallet.currentPage = 1;\n                                new_wallet.open_from_exist = true;\n                                new_wallet.exclude_mining_txs = false;\n                                new_wallet.is_auditable = openData['wi'].is_auditable;\n                                new_wallet.is_watch_only = openData['wi'].is_watch_only;\n                                if (openData.recent_history && openData.recent_history.history) {\n                                    new_wallet.total_history_item = openData.recent_history.total_history_items;\n                                    new_wallet.totalPages = Math.ceil(\n                                        openData.recent_history.total_history_items / this.variablesService.count\n                                    );\n                                    new_wallet.totalPages > this.variablesService.maxPages\n                                        ? (new_wallet.pages = new Array(5).fill(1).map((value, index) => value + index))\n                                        : (new_wallet.pages = new Array(new_wallet.totalPages)\n                                              .fill(1)\n                                              .map((value, index) => value + index));\n                                    new_wallet.prepareHistory(openData.recent_history.history);\n                                } else {\n                                    new_wallet.total_history_item = 0;\n                                    new_wallet.pages = new Array(1).fill(1);\n                                    new_wallet.totalPages = 1;\n                                }\n                                this.walletsService.addWallet(new_wallet);\n                                this.backend.runWallet(openData.wallet_id, (run_status, run_data) => {\n                                    if (run_status) {\n                                        if (this.variablesService.appPass) {\n                                            this.backend.storeSecureAppData();\n                                        }\n                                        this.ngZone.run(() => {\n                                            this.variablesService.setCurrentWallet(openData.wallet_id);\n                                            this.router.navigate(['/wallet/']);\n                                            this.loading$.next(false);\n                                        });\n                                    } else {\n                                        console.log(run_data['error_code']);\n                                        this.ngZone.run(() => {\n                                            this.loading$.next(false);\n                                        });\n                                    }\n                                });\n                            }\n                        }\n                    }\n                );\n            }, 500);\n        } else {\n            this.loading$.next(false);\n        }\n    }\n}\n","import { RouterModule, Routes } from '@angular/router';\nimport { paths } from './paths';\nimport { WithSidebarLayoutComponent } from '../layouts/with-sidebar-layout/with-sidebar-layout.component';\nimport { AddWalletComponent } from './add-wallet/add-wallet.component';\nimport { WalletDetailsComponent } from './wallet-details/wallet-details.component';\nimport { FullLayoutComponent } from '../layouts/full-layout/full-layout.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { CreateWalletComponent } from './create-wallet/create-wallet.component';\nimport { OpenWalletComponent } from './open-wallet/open-wallet.component';\nimport { RestoreWalletComponent } from './restore-wallet/restore-wallet.component';\nimport { SeedPhraseComponent } from './seed-phrase/seed-phrase.component';\nimport { AssignAliasComponent } from './assign-alias/assign-alias.component';\nimport { EditAliasComponent } from './edit-alias/edit-alias.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { DeeplinkComponent } from './deeplink/deeplink.component';\nimport { NgModule } from '@angular/core';\nimport { ExportImportComponent } from './export-import/export-import.component';\nimport { TransferAliasComponent } from './transfer-alias/transfer-alias.component';\n\nconst routes: Routes = [\n    {\n        path: paths.addWallet,\n        component: WithSidebarLayoutComponent,\n        children: [\n            {\n                path: '',\n                component: AddWalletComponent,\n            },\n        ],\n    },\n    {\n        path: paths.details,\n        component: WithSidebarLayoutComponent,\n        children: [\n            {\n                path: '',\n                component: WalletDetailsComponent,\n            },\n        ],\n    },\n    {\n        path: paths.login,\n        component: FullLayoutComponent,\n        children: [\n            {\n                path: '',\n                component: LoginComponent,\n            },\n        ],\n    },\n    {\n        path: paths.create,\n        component: WithSidebarLayoutComponent,\n        children: [\n            {\n                path: '',\n                component: CreateWalletComponent,\n            },\n        ],\n    },\n    {\n        path: paths.open,\n        component: WithSidebarLayoutComponent,\n        children: [\n            {\n                path: '',\n                component: OpenWalletComponent,\n            },\n        ],\n    },\n    {\n        path: paths.restore,\n        component: WithSidebarLayoutComponent,\n        children: [\n            {\n                path: '',\n                component: RestoreWalletComponent,\n            },\n        ],\n    },\n    {\n        path: paths.seedPhrase,\n        component: WithSidebarLayoutComponent,\n        children: [\n            {\n                path: '',\n                component: SeedPhraseComponent,\n            },\n        ],\n    },\n    {\n        path: paths.assignAlias,\n        component: WithSidebarLayoutComponent,\n        children: [\n            {\n                path: '',\n                component: AssignAliasComponent,\n            },\n        ],\n    },\n    {\n        path: paths.editAlias,\n        component: WithSidebarLayoutComponent,\n        children: [\n            {\n                path: '',\n                component: EditAliasComponent,\n            },\n        ],\n    },\n    {\n        path: paths.transferAlias,\n        component: WithSidebarLayoutComponent,\n        children: [\n            {\n                path: '',\n                component: TransferAliasComponent,\n            },\n        ],\n    },\n    {\n        path: paths.settings,\n        component: WithSidebarLayoutComponent,\n        children: [\n            {\n                path: '',\n                component: SettingsComponent,\n            },\n        ],\n    },\n    {\n        path: paths.import,\n        component: WithSidebarLayoutComponent,\n        children: [\n            {\n                path: '',\n                component: ExportImportComponent,\n            },\n        ],\n    },\n    {\n        path: paths.deeplink,\n        component: WithSidebarLayoutComponent,\n        children: [\n            {\n                path: '',\n                component: DeeplinkComponent,\n            },\n        ],\n    },\n    {\n        path: '',\n        redirectTo: paths.addWallet,\n        pathMatch: 'full',\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class PagesRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthModule } from './auth/auth.module';\nimport { WalletModule } from './wallet/wallet.module';\nimport { PagesRoutingModule } from './pages-routing.module';\nimport { LoginComponent } from './auth/login/login.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { AddWalletComponent } from './add-wallet/add-wallet.component';\nimport { CreateWalletComponent } from './create-wallet/create-wallet.component';\nimport { OpenWalletComponent } from './open-wallet/open-wallet.component';\nimport { RestoreWalletComponent } from './restore-wallet/restore-wallet.component';\nimport { SeedPhraseComponent } from './seed-phrase/seed-phrase.component';\nimport { AssignAliasComponent } from './assign-alias/assign-alias.component';\nimport { EditAliasComponent } from './edit-alias/edit-alias.component';\nimport { ModalContainerComponent } from '@parts/modals/modal-container/modal-container.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { DefaultImgModule, DisablePriceFetchModule } from '@parts/directives';\nimport { TooltipModule } from '@parts/directives/tooltip/tooltip.module';\nimport { ConfirmModalModule } from '@parts/modals/confirm-modal/confirm-modal.module';\nimport { DeeplinkModule } from './deeplink/deeplink.module';\nimport { FullLayoutModule } from '../layouts/full-layout/full-layout.module';\nimport { WithSidebarLayoutModule } from '../layouts/with-sidebar-layout/with-sidebar-layout.module';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { TransferAliasComponent } from './transfer-alias/transfer-alias.component';\nimport {\n    ContractStatusMessagesPipeModule,\n    ContractTimeLeftPipeModule,\n    HistoryTypeMessagesPipeModule,\n    IntToMoneyPipeModule,\n    IsAvailableAliasNamePipeModule,\n    MoneyToIntPipeModule,\n    SafeHtmlPipeModule,\n    ShortStringPipe,\n} from '@parts/pipes';\nimport { InputValidateModule } from '@parts/directives/input-validate';\nimport { InputDisableSelectionModule } from '@parts/directives/input-disable-selection';\nimport { CheckboxComponent } from '@parts/components/checkbox.component';\nimport { CopyButtonComponent } from '@parts/components/copy-button.component';\nimport { StakingSwitchComponent } from '@parts/components/staking-switch.component';\nimport { SwitchComponent } from '@parts/components/switch.component';\nimport { SynchronizationStatusComponent } from '@parts/components/synchronization-status.component';\nimport { LoaderComponent } from '@parts/components/loader.component';\nimport { AutoFocusDirective } from '@parts/directives/autofocus.directive';\nimport { BreadcrumbsComponent } from '@parts/components/breadcrumbs/breadcrumbs.component';\nimport { BackButtonComponent } from '@parts/components/back-button/back-button.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { IsVisibleControlErrorPipe } from '@parts/pipes/is-visible-control-error.pipe';\n\n@NgModule({\n    declarations: [\n        LoginComponent,\n        SettingsComponent,\n        AddWalletComponent,\n        CreateWalletComponent,\n        OpenWalletComponent,\n        RestoreWalletComponent,\n        SeedPhraseComponent,\n        AssignAliasComponent,\n        EditAliasComponent,\n        TransferAliasComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        PagesRoutingModule,\n        AuthModule,\n        WalletModule,\n        NgSelectModule,\n        TranslateModule.forChild(),\n        FlexLayoutModule,\n        DisablePriceFetchModule,\n        TooltipModule,\n        ConfirmModalModule,\n        DeeplinkModule,\n        FullLayoutModule,\n        WithSidebarLayoutModule,\n        OverlayModule,\n        DefaultImgModule,\n        ContractStatusMessagesPipeModule,\n        ContractTimeLeftPipeModule,\n        HistoryTypeMessagesPipeModule,\n        IntToMoneyPipeModule,\n        IsAvailableAliasNamePipeModule,\n        MoneyToIntPipeModule,\n        SafeHtmlPipeModule,\n        ShortStringPipe,\n        InputValidateModule,\n        InputDisableSelectionModule,\n        CheckboxComponent,\n        CopyButtonComponent,\n        StakingSwitchComponent,\n        SwitchComponent,\n        SynchronizationStatusComponent,\n        LoaderComponent,\n        AutoFocusDirective,\n        BreadcrumbsComponent,\n        BackButtonComponent,\n        MatIconModule,\n        IsVisibleControlErrorPipe,\n    ],\n})\nexport class PagesModule {}\n","export enum paths {\n    auth = 'auth',\n    addWallet = 'add-wallet',\n    login = 'login',\n    wallet = 'wallet',\n    create = 'create',\n    open = 'open',\n    restore = 'restore',\n    seedPhrase = 'seed-phrase',\n    details = 'details',\n    assignAlias = 'assign-alias',\n    editAlias = 'edit-alias',\n    transferAlias = 'transfer-alias',\n    settings = 'settings',\n    import = 'import',\n    deeplink = 'deeplink',\n}\n\nexport enum pathsChildrenAuth {\n    noWallet = 'no-wallet',\n}\n\nexport enum pathsChildrenWallet {\n    assets = 'assets',\n    send = 'send',\n    receive = 'receive',\n    history = 'history',\n    contracts = 'contracts',\n    staking = 'staking',\n}\n\nexport enum pathsChildrenContracts {\n    purchase = 'purchase',\n}\n","import { Component, inject, NgZone, OnDestroy, OnInit } from '@angular/core';\nimport { NonNullableFormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { BackendService } from '@api/services/backend.service';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { ModalService } from '@parts/services/modal.service';\nimport { Wallet } from '@api/models/wallet.model';\nimport { TranslateService } from '@ngx-translate/core';\nimport { debounceTime, startWith, takeUntil } from 'rxjs/operators';\nimport { combineLatest, Subject } from 'rxjs';\nimport { regExpPassword, ZanoValidators } from '@parts/utils/zano-validators';\nimport { WalletsService } from '@parts/services/wallets.service';\nimport { BreadcrumbItems } from '@parts/components/breadcrumbs/breadcrumbs.models';\n\ninterface SeedPhraseInfo {\n    address: string;\n    hash_sum_matched: boolean;\n    require_password: boolean;\n    syntax_correct: boolean;\n    tracking: boolean;\n}\n\n@Component({\n    selector: 'app-restore-wallet',\n    templateUrl: './restore-wallet.component.html',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                overflow: hidden;\n            }\n        `,\n    ],\n})\nexport class RestoreWalletComponent implements OnInit, OnDestroy {\n    public readonly breadcrumbItems: BreadcrumbItems = [\n        {\n            routerLink: '/add-wallet',\n            title: 'BREADCRUMBS.ADD_WALLET',\n        },\n        {\n            title: 'BREADCRUMBS.RESTORE_WALLET',\n        },\n    ];\n\n    public selectedLocationWalletName: string;\n\n    public selectedLocationWalletPath: string;\n\n    public seedPhraseInfo: SeedPhraseInfo = null;\n\n    public readonly walletsService: WalletsService = inject(WalletsService);\n\n    public readonly variablesService: VariablesService = inject(VariablesService);\n\n    private readonly _fb: NonNullableFormBuilder = inject(NonNullableFormBuilder);\n\n    public readonly form = this._fb.group(\n        {\n            name: this._fb.control('', [\n                Validators.required,\n                Validators.maxLength(this.variablesService.maxWalletNameLength),\n                ZanoValidators.duplicate(this.variablesService.walletNamesForComparisons),\n            ]),\n            seedPhrase: this._fb.control('', Validators.required),\n            password: this._fb.control('', Validators.pattern(regExpPassword)),\n            confirm: this._fb.control(''),\n            seedPassword: this._fb.control('', Validators.pattern(regExpPassword)),\n        },\n        {\n            validators: [ZanoValidators.formMatch('password', 'confirm')],\n        }\n    );\n\n    private _destroy$: Subject<void> = new Subject<void>();\n\n    private readonly _router: Router = inject(Router);\n\n    private readonly _backend: BackendService = inject(BackendService);\n\n    private readonly _modalService: ModalService = inject(ModalService);\n\n    private readonly _ngZone: NgZone = inject(NgZone);\n\n    private readonly _translate: TranslateService = inject(TranslateService);\n\n    private submitting: boolean = false;\n\n    get isDisabledCreatedWallet(): boolean {\n        return this.form.invalid || !this.selectedLocationWalletPath || this.submitting;\n    }\n\n    get invalidSeedPhraseInfo(): boolean {\n        if (!this.seedPhraseInfo) {\n            return true;\n        }\n\n        const { syntax_correct, require_password, hash_sum_matched } = this.seedPhraseInfo;\n        return (!syntax_correct || !require_password || !hash_sum_matched) && (!syntax_correct || require_password);\n    }\n\n    ngOnInit(): void {\n        const {\n            controls: { seedPassword, seedPhrase },\n        } = this.form;\n\n        const obs1 = seedPhrase.valueChanges;\n        const obs2 = seedPassword.valueChanges.pipe(startWith(seedPassword.value));\n\n        combineLatest([obs1, obs2])\n            .pipe(debounceTime(500), takeUntil(this._destroy$))\n            .subscribe({\n                next: ([seed_phrase, seed_password]) => {\n                    const params = { seed_phrase, seed_password };\n\n                    this._backend.getSeedPhraseInfo(params, (status, data) => {\n                        this._ngZone.run(() => {\n                            if (!status) {\n                                this.seedPhraseInfo = undefined;\n                                return;\n                            }\n\n                            this.seedPhraseInfo = data;\n                        });\n                    });\n\n                    this._backend.isValidRestoreWalletText(params, (_, data) => {\n                        this._ngZone.run(() => {\n                            const control = this.form.get('seedPhrase');\n                            if (data !== 'TRUE') {\n                                control.setErrors({ password_seed_phrase_not_valid: true });\n                            } else {\n                                control.updateValueAndValidity({ emitEvent: false });\n                            }\n                        });\n                    });\n                },\n            });\n    }\n\n    ngOnDestroy(): void {\n        this.variablesService.opening_wallet = null;\n\n        this._destroy$.next();\n        this._destroy$.complete();\n    }\n\n    restore(): void {\n        this.submitting = true;\n        const { name, password, seedPhrase, seedPassword } = this.form.getRawValue();\n        this._backend.restoreWallet(this.selectedLocationWalletPath, password, seedPhrase, seedPassword, (status, data) => {\n            this._ngZone.run(() => {\n                if (status) {\n                    const { wallet_id } = data;\n                    const { path, address, balance, unlocked_balance, mined_total, tracking_hey, is_auditable, is_watch_only } = data['wi'];\n                    const wallet: Wallet = new Wallet(\n                        wallet_id,\n                        name,\n                        password,\n                        path,\n                        address,\n                        balance,\n                        unlocked_balance,\n                        mined_total,\n                        tracking_hey\n                    );\n                    wallet.is_auditable = is_auditable;\n                    wallet.is_watch_only = is_watch_only;\n\n                    wallet.restore = true;\n\n                    wallet.alias = this._backend.getWalletAlias(wallet.address);\n\n                    wallet.currentPage = 1;\n                    wallet.pages = new Array(1).fill(1);\n                    wallet.totalPages = 1;\n                    wallet.total_history_item = 0;\n\n                    if (data.recent_history && data.recent_history.history) {\n                        wallet.totalPages = Math.ceil(data.recent_history.total_history_items / this.variablesService.count);\n                        wallet.totalPages > this.variablesService.maxPages\n                            ? (wallet.pages = new Array(5).fill(1).map((value, index) => value + index))\n                            : (wallet.pages = new Array(wallet.totalPages).fill(1).map((value, index) => value + index));\n                        wallet.prepareHistory(data.recent_history.history);\n                    }\n\n                    this.variablesService.opening_wallet = wallet;\n\n                    this._runWallet();\n                } else {\n                    this._modalService.prepareModal('error', 'RESTORE_WALLET.NOT_CORRECT_FILE_OR_PASSWORD');\n                    this.submitting = false;\n                }\n            });\n        });\n    }\n\n    selectLocation(): void {\n        const caption = this._translate.instant('RESTORE_WALLET.CHOOSE_PATH');\n        const fileMask = '*';\n        const {\n            settings: { default_path },\n        } = this.variablesService;\n\n        this._backend.saveFileDialog(caption, fileMask, default_path, (status, data) => {\n            this._ngZone.run(() => {\n                if (status) {\n                    const startWalletName = data.path.lastIndexOf('/') + 1;\n                    const endWalletName = data.path.length - 1;\n                    this.selectedLocationWalletName = data.path.substr(startWalletName, endWalletName);\n                    this.selectedLocationWalletPath = data.path;\n\n                    this.variablesService.settings.default_path = data.path.substr(0, data.path.lastIndexOf('/'));\n                }\n            });\n        });\n    }\n\n    private _runWallet(): void {\n        const { opening_wallet, wallets, appPass } = this.variablesService;\n        const { wallet_id, address } = opening_wallet;\n\n        // Add flag when wallet was restored form seed\n        this.variablesService.after_sync_request[wallet_id] = true;\n\n        const exists: boolean = wallets.some((wallet: Wallet): boolean => wallet.address === address);\n\n        if (exists) {\n            this.variablesService.opening_wallet = null;\n\n            this._modalService.prepareModal('error', 'OPEN_WALLET.WITH_ADDRESS_ALREADY_OPEN');\n\n            this._backend.closeWallet(wallet_id, () => {\n                this._ngZone.run(() => {\n                    this._router.navigate(['/']);\n                });\n            });\n\n            return;\n        }\n\n        this.walletsService.addWallet(opening_wallet);\n\n        this._backend.runWallet(wallet_id, (status, data) => {\n            this._ngZone.run(() => {\n                if (status) {\n                    if (appPass) {\n                        this._backend.storeSecureAppData();\n                    }\n\n                    this.variablesService.setCurrentWallet(wallet_id);\n                    this.variablesService.opening_wallet = null;\n\n                    this._router.navigate(['/wallet/']);\n                } else {\n                    this._modalService.prepareModal('error', data['error_code']);\n                    this.submitting = false;\n                    console.error(data['error_code']);\n                }\n            });\n        });\n    }\n}\n","<div class=\"page-container\">\n    <div class=\"toolbar mb-2\">\n        <div class=\"left\">\n            <app-back-button></app-back-button>\n            <h1 class=\"ml-2\">{{ 'BREADCRUMBS.ADD_WALLET' | translate }}</h1>\n        </div>\n        <div class=\"right\"></div>\n    </div>\n\n    <div class=\"page-content\">\n        <app-breadcrumbs class=\"mb-2\" [items]=\"breadcrumbItems\"></app-breadcrumbs>\n\n        <div class=\"scrolled-content\">\n            <form [formGroup]=\"form\" class=\"form\" (ngSubmit)=\"restore()\">\n                <!-- Name -->\n                <div class=\"form__field\">\n                    <label for=\"name\">{{ 'RESTORE_WALLET.LABEL_NAME' | translate }}</label>\n                    <input\n                        (contextmenu)=\"variablesService.onContextMenu($event)\"\n                        [placeholder]=\"'PLACEHOLDERS.WALLET_NAME_PLACEHOLDER' | translate\"\n                        class=\"form__field--input\"\n                        formControlName=\"name\"\n                        id=\"name\"\n                        type=\"text\"\n                    />\n                    <ng-container *ngIf=\"form.get('name') as control\">\n                        <div *ngIf=\"control | isVisibleControlError\" class=\"error\">\n                            <div *ngIf=\"control.hasError('duplicate')\">\n                                {{ 'RESTORE_WALLET.FORM_ERRORS.NAME_DUPLICATE' | translate }}\n                            </div>\n                            <div *ngIf=\"control.hasError('maxlength')\">\n                                {{ 'RESTORE_WALLET.FORM_ERRORS.MAX_LENGTH' | translate }}\n                            </div>\n                            <div *ngIf=\"control.hasError('required')\">\n                                {{ 'RESTORE_WALLET.FORM_ERRORS.NAME_REQUIRED' | translate }}\n                            </div>\n                        </div>\n                    </ng-container>\n                </div>\n\n                <!-- Password -->\n                <div class=\"form__field\">\n                    <label for=\"password\">{{ 'RESTORE_WALLET.PASS' | translate }}</label>\n                    <input\n                        (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\n                        class=\"form__field--input\"\n                        formControlName=\"password\"\n                        id=\"password\"\n                        [placeholder]=\"'PLACEHOLDERS.WALET_PASSWORD_PLACEHOLDER' | translate\"\n                        type=\"password\"\n                    />\n                    <ng-container *ngIf=\"form.get('password') as control\">\n                        <div *ngIf=\"control | isVisibleControlError\" class=\"error\">\n                            <div *ngIf=\"control.hasError('pattern')\">\n                                {{ 'ERRORS.WRONG_PASSWORD' | translate }}\n                            </div>\n                        </div>\n                    </ng-container>\n                </div>\n\n                <!-- Confirm Password -->\n                <div class=\"form__field\">\n                    <label for=\"confirm\">{{ 'RESTORE_WALLET.CONFIRM' | translate }}</label>\n                    <input\n                        (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\n                        class=\"form__field--input\"\n                        formControlName=\"confirm\"\n                        id=\"confirm\"\n                        [placeholder]=\"'PLACEHOLDERS.CONFIRM_WALET_PASSWORD_PLACEHOLDER' | translate\"\n                        type=\"password\"\n                    />\n                    <div *ngIf=\"form.hasError('mismatch')\" class=\"error\">\n                        {{ 'RESTORE_WALLET.FORM_ERRORS.CONFIRM_NOT_MATCH' | translate }}\n                    </div>\n                </div>\n\n                <!-- Seed phrase -->\n                <div class=\"form__field\">\n                    <label for=\"seed-phrase\">{{ 'RESTORE_WALLET.LABEL_PHRASE_KEY' | translate }}</label>\n                    <input\n                        (contextmenu)=\"variablesService.onContextMenu($event)\"\n                        [placeholder]=\"'PLACEHOLDERS.SEED_PHRASE_PLACEHOLDER' | translate\"\n                        class=\"form__field--input\"\n                        formControlName=\"seedPhrase\"\n                        id=\"seed-phrase\"\n                        type=\"text\"\n                    />\n                    <ng-container *ngIf=\"form.get('seedPhrase') as control\">\n                        <div\n                            *ngIf=\"(control.invalid || !this.seedPhraseInfo?.syntax_correct) && (control.dirty || control.touched)\"\n                            class=\"error\"\n                        >\n                            <div *ngIf=\"control.hasError('required')\">\n                                {{ 'RESTORE_WALLET.FORM_ERRORS.KEY_REQUIRED' | translate }}\n                            </div>\n                            <div *ngIf=\"control.hasError('password_seed_phrase_not_valid') && seedPhraseInfo.require_password\">\n                                {{ 'RESTORE_WALLET.FORM_ERRORS.PASSWORD_SEED_PHRASE_INCORRECT' | translate }}\n                            </div>\n                            <div *ngIf=\"!this.seedPhraseInfo?.syntax_correct\">\n                                {{ 'RESTORE_WALLET.FORM_ERRORS.SEED_PHRASE_IS_NO_VALID' | translate }}\n                            </div>\n                        </div>\n                    </ng-container>\n                </div>\n\n                <!-- Seed password -->\n                <ng-container *ngIf=\"seedPhraseInfo\">\n                    <ng-container *ngIf=\"seedPhraseInfo.syntax_correct && seedPhraseInfo.require_password\">\n                        <div class=\"form__field\">\n                            <label for=\"seed-password\">{{ 'RESTORE_WALLET.SEED_PASSWORD' | translate }}</label>\n                            <input\n                                class=\"form__field--input\"\n                                formControlName=\"seedPassword\"\n                                [ngClass]=\"{\n                                    invalid: !seedPhraseInfo.hash_sum_matched\n                                }\"\n                                id=\"seed-password\"\n                                [placeholder]=\"'PLACEHOLDERS.SEED_PHRASE_PLACEHOLDER' | translate\"\n                                type=\"password\"\n                            />\n                            <ng-container *ngIf=\"form.get('seedPassword') as control\">\n                                <div *ngIf=\"(control.dirty || control.touched) && !seedPhraseInfo.hash_sum_matched\" class=\"error\">\n                                    <span>{{ 'RESTORE_WALLET.FORM_ERRORS.INCORRECT_PASSWORD' | translate }}</span>\n                                </div>\n                            </ng-container>\n                            <div *ngIf=\"seedPhraseInfo.hash_sum_matched\" class=\"success\">\n                                <span>{{ 'RESTORE_WALLET.OK' | translate }}</span>\n                            </div>\n                        </div>\n                    </ng-container>\n                </ng-container>\n\n                <button (click)=\"selectLocation()\" [disabled]=\"invalidSeedPhraseInfo\" class=\"outline big w-100 mb-2\" type=\"button\">\n                    {{ selectedLocationWalletName ?? 'RESTORE_WALLET.BUTTON_SELECT' | translate }}\n                </button>\n\n                <button type=\"submit\" [disabled]=\"isDisabledCreatedWallet\" class=\"primary big w-100 mb-2\">\n                    {{ 'RESTORE_WALLET.BUTTON_CREATE' | translate }}\n                </button>\n            </form>\n        </div>\n    </div>\n</div>\n","import { Component, inject, NgZone, OnDestroy, OnInit } from '@angular/core';\nimport { BackendService } from '@api/services/backend.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { hasOwnProperty } from '@parts/functions/has-own-property';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { regExpPassword, ZanoValidators } from '@parts/utils/zano-validators';\nimport { WalletsService } from '@parts/services/wallets.service';\nimport { Wallet } from '@api/models/wallet.model';\nimport { BreadcrumbItems } from '@parts/components/breadcrumbs/breadcrumbs.models';\n\n@Component({\n    selector: 'app-seed-phrase',\n    template: `\n        <div class=\"page-container\">\n            <div class=\"toolbar mb-2\">\n                <div class=\"left\">\n                    <app-back-button></app-back-button>\n                    <h1 class=\"ml-2\">{{ 'BREADCRUMBS.ADD_WALLET' | translate }}</h1>\n                </div>\n                <div class=\"right\"></div>\n            </div>\n\n            <div class=\"page-content\">\n                <app-breadcrumbs class=\"mb-2\" [items]=\"breadcrumbItems\"></app-breadcrumbs>\n\n                <div class=\"scrolled-content\">\n                    <div class=\"wrap-seed-phrase\" fxFlex=\"100\" fxLayout=\"column\">\n                        <form [formGroup]=\"detailsForm\" class=\"form\">\n                            <div class=\"form__field\">\n                                <label>{{ 'WALLET_DETAILS.LABEL_NAME' | translate }}</label>\n                                <input\n                                    (contextmenu)=\"variablesService.onContextMenu($event)\"\n                                    [maxLength]=\"variablesService.maxWalletNameLength\"\n                                    [placeholder]=\"'PLACEHOLDERS.WALLET_NAME_PLACEHOLDER' | translate\"\n                                    class=\"form__field--input\"\n                                    formControlName=\"name\"\n                                    id=\"wallet-name\"\n                                    readonly\n                                    type=\"text\"\n                                />\n                                <div\n                                    *ngIf=\"\n                                        detailsForm.controls['name'].invalid &&\n                                        (detailsForm.controls['name'].dirty || detailsForm.controls['name'].touched)\n                                    \"\n                                    class=\"error\"\n                                >\n                                    <div *ngIf=\"detailsForm.controls['name'].errors['duplicate']\">\n                                        {{ 'WALLET_DETAILS.FORM_ERRORS.NAME_DUPLICATE' | translate }}\n                                    </div>\n                                    <div *ngIf=\"detailsForm.get('name').value.length >= variablesService.maxWalletNameLength\">\n                                        {{ 'WALLET_DETAILS.FORM_ERRORS.MAX_LENGTH' | translate }}\n                                    </div>\n                                    <div *ngIf=\"detailsForm.controls['name'].errors['required']\">\n                                        {{ 'WALLET_DETAILS.FORM_ERRORS.NAME_REQUIRED' | translate }}\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"form__field\">\n                                <label for=\"wallet-location\">{{ 'WALLET_DETAILS.LABEL_FILE_LOCATION' | translate }}</label>\n                                <input class=\"form__field--input\" formControlName=\"path\" id=\"wallet-location\" readonly type=\"text\" />\n                            </div>\n                        </form>\n\n                        <ng-container *ngIf=\"!showSeed; else seedPhraseContent\">\n                            <form (ngSubmit)=\"onSubmitSeed()\" [formGroup]=\"seedPhraseForm\" class=\"form form__card pb-2\">\n                                <div class=\"form__field\">\n                                    <label for=\"create-password\">{{ 'WALLET_DETAILS.CREATE_PASSWORD_SECURE' | translate }}</label>\n                                    <input\n                                        class=\"form__field--input\"\n                                        formControlName=\"password\"\n                                        id=\"create-password\"\n                                        placeholder=\"{{ 'PLACEHOLDERS.PASSWORD_PLACEHOLDER' | translate }}\"\n                                        type=\"password\"\n                                    />\n                                </div>\n\n                                <div class=\"form__field\">\n                                    <label for=\"confirm-password\">{{ 'WALLET_DETAILS.FORM.CONFIRM_PASSWORD' | translate }}</label>\n                                    <input\n                                        [class.invalid]=\"seedPhraseForm.invalid && seedPhraseForm.get('confirmPassword').value.length > 0\"\n                                        class=\"form__field--input\"\n                                        formControlName=\"confirmPassword\"\n                                        id=\"confirm-password\"\n                                        placeholder=\"{{ 'PLACEHOLDERS.PLACEHOLDER_CONFIRM' | translate }}\"\n                                        type=\"password\"\n                                    />\n                                    <div\n                                        *ngIf=\"\n                                            seedPhraseForm.invalid &&\n                                            (seedPhraseForm.controls['confirmPassword'].dirty ||\n                                                seedPhraseForm.controls['confirmPassword'].touched)\n                                        \"\n                                        class=\"error\"\n                                    >\n                                        <div *ngIf=\"seedPhraseForm.invalid && seedPhraseForm.get('confirmPassword').value.length > 0\">\n                                            {{ 'WALLET_DETAILS.FORM_ERRORS.PASSWORDS_DONT_MATCH' | translate }}\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <button [disabled]=\"!seedPhraseForm.valid\" class=\"primary w-100 big mb-2\" type=\"submit\">\n                                    <mat-icon svgIcon=\"zano-check-shield\" class=\"mr-1\"></mat-icon>\n                                    {{ 'WALLET_DETAILS.FORM.GENERATE_SECURE_SEED' | translate }}\n                                </button>\n\n                                <p class=\"text-align-center color-primary\">\n                                    <mat-icon svgIcon=\"zano-info\" class=\"mr-1\"></mat-icon>\n                                    {{ 'WALLET_DETAILS.FORM.SECURED_SEED_WILL_REQUIRE' | translate }}\n                                </p>\n                            </form>\n                        </ng-container>\n\n                        <ng-template #seedPhraseContent>\n                            <div class=\"seed-phrase form__card pb-2\">\n                                <div class=\"header mb-2\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n                                    <div class=\"left\">\n                                        <span>{{ 'WALLET_DETAILS.LABEL_SEED_PHRASE' | translate }}</span>\n                                    </div>\n                                    <div class=\"right\">\n                                        <span\n                                            *ngIf=\"seedPhraseForm.controls.password.value.length === 0\"\n                                            class=\"status color-red\"\n                                            fxLayout=\"row\"\n                                            fxLayoutAlign=\"start center\"\n                                        >\n                                            {{ 'WALLET_DETAILS.SEED_IS_UNSECURED' | translate }}\n                                            <mat-icon svgIcon=\"zano-unsecured\" class=\"ml-1\"></mat-icon>\n                                        </span>\n                                        <span\n                                            *ngIf=\"seedPhraseForm.controls.password.value.length > 0\"\n                                            class=\"status color-aqua\"\n                                            fxLayout=\"row\"\n                                            fxLayoutAlign=\"start center\"\n                                        >\n                                            {{ 'WALLET_DETAILS.SEED_IS_SECURED' | translate }}\n                                            <mat-icon svgIcon=\"zano-secured\" class=\"ml-1\"></mat-icon>\n                                        </span>\n                                    </div>\n                                </div>\n                                <div\n                                    (contextmenu)=\"variablesService.onContextMenuOnlyCopy($event, seedPhrase)\"\n                                    class=\"content mb-1\"\n                                    fxLayout=\"row wrap\"\n                                >\n                                    <ng-container *ngFor=\"let word of seedPhrase.split(' '); let index = index\">\n                                        <div\n                                            class=\"item p-1 mr-1 mb-1 border-radius-0_8-rem\"\n                                            fxLayout=\"row nowrap\"\n                                            fxLayoutAlign=\"start center\"\n                                        >\n                                            <div class=\"number p-1 mr-1\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n                                                {{ index + 1 }}\n                                            </div>\n                                            <span class=\"word\">{{ word }}</span>\n                                        </div>\n                                    </ng-container>\n                                </div>\n                                <div class=\"footer max-w-50-rem w-100\" fxLayout=\"column\" fxLayoutAlign=\"start center\">\n                                    <div *ngIf=\"showSeed\" class=\"wrap-buttons w-100 mb-2\" fxLayout=\"row nowrap\">\n                                        <button (click)=\"copySeedPhrase()\" class=\"outline big w-100\" type=\"button\">\n                                            <ng-container *ngIf=\"!seedPhraseCopied\">\n                                                <mat-icon svgIcon=\"zano-copy\" class=\"mr-1\"></mat-icon>\n                                                {{ 'SEED_PHRASE.BUTTON_COPY' | translate }}\n                                            </ng-container>\n                                            <ng-container *ngIf=\"seedPhraseCopied\">\n                                                <mat-icon svgIcon=\"zano-check\" class=\"mr-1\"></mat-icon>\n                                                {{ 'SEED_PHRASE.BUTTON_COPIED' | translate }}\n                                            </ng-container>\n                                        </button>\n                                    </div>\n                                    <p *ngIf=\"seedPhraseForm.controls.password.value.length > 0\" class=\"text-align-center\">\n                                        <mat-icon svgIcon=\"zano-info\" class=\"mr-1\"></mat-icon>\n                                        <span class=\"color-primary\">{{ 'WALLET_DETAILS.REMEMBER_YOU_WILL_REQUIRE' | translate }}</span>\n                                    </p>\n                                </div>\n                            </div>\n                        </ng-template>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                overflow: hidden;\n            }\n        `,\n    ],\n})\nexport class SeedPhraseComponent implements OnInit, OnDestroy {\n    seedPhrase = '';\n\n    breadcrumbItems: BreadcrumbItems = [\n        {\n            routerLink: '/add-wallet',\n            title: 'BREADCRUMBS.ADD_WALLET',\n        },\n        {\n            title: 'BREADCRUMBS.SAVE_PHRASE',\n        },\n    ];\n\n    showSeed = false;\n\n    wallet_id: number;\n\n    wallet!: Wallet;\n\n    seedPhraseCopied = false;\n\n    progressWidth = '66%';\n\n    fb = inject(FormBuilder);\n\n    detailsForm = this.fb.group({\n        name: this.fb.nonNullable.control('', [ZanoValidators.duplicate(this.variablesService.walletNamesForComparisons)]),\n        path: this.fb.nonNullable.control(''),\n    });\n\n    seedPhraseForm = this.fb.group(\n        {\n            password: this.fb.nonNullable.control('', Validators.pattern(regExpPassword)),\n            confirmPassword: this.fb.nonNullable.control('', Validators.pattern(regExpPassword)),\n        },\n        {\n            validators: [ZanoValidators.formMatch('password', 'confirmPassword')],\n        }\n    );\n\n    private destroy$ = new Subject<void>();\n\n    constructor(\n        public walletsService: WalletsService,\n        public variablesService: VariablesService,\n        private route: ActivatedRoute,\n        private backend: BackendService,\n        private ngZone: NgZone\n    ) {}\n\n    ngOnInit(): void {\n        this.showSeed = false;\n        this.getWallet();\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    copySeedPhrase(): void {\n        this.backend.setClipboard(this.seedPhrase, () => {\n            this.ngZone.run(() => {\n                setTimeout(() => {\n                    this.seedPhraseCopied = false;\n                }, 4000);\n                this.seedPhraseCopied = true;\n            });\n        });\n    }\n\n    showSeedPhrase(): void {\n        this.showSeed = true;\n        this.progressWidth = '100%';\n    }\n\n    onSubmitSeed(): void {\n        if (this.seedPhraseForm.valid) {\n            this.showSeedPhrase();\n            const wallet_id = this.wallet_id;\n            const seed_password = this.seedPhraseForm.controls.password.value;\n            this.backend.getSmartWalletInfo({ wallet_id, seed_password }, (status, data) => {\n                if (hasOwnProperty(data, 'seed_phrase')) {\n                    this.ngZone.run(() => {\n                        this.seedPhrase = data['seed_phrase'].trim();\n                    });\n                }\n            });\n        }\n    }\n\n    private setWalletInfoNamePath(): void {\n        this.detailsForm.get('name').setValue(this.wallet.name);\n        this.detailsForm.get('path').setValue(this.wallet.path);\n    }\n\n    private getWallet(): void {\n        this.route.queryParams.pipe(takeUntil(this.destroy$)).subscribe({\n            next: params => {\n                if (params.wallet_id) {\n                    this.wallet_id = +params.wallet_id;\n                    this.wallet = this.walletsService.getWalletById(this.wallet_id);\n                    if (this.wallet) {\n                        this.setWalletInfoNamePath();\n                    }\n                }\n            },\n        });\n    }\n}\n","import { Component, inject, NgZone, OnInit, Renderer2 } from '@angular/core';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { BackendService } from '@api/services/backend.service';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { scaleItems } from '@parts/data/scale-items';\nimport { regExpPassword, ZanoValidators } from '@parts/utils/zano-validators';\nimport { generateRandomString } from '@parts/utils/generate-random-string';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-settings',\n    templateUrl: './settings.component.html',\n    styleUrls: [`./settings.component.scss`],\n})\nexport class SettingsComponent implements OnInit {\n    ifSaved = false;\n\n    isSecretWasCopied: boolean = false;\n\n    secretWasCopiedTimeout;\n\n    scale: string;\n\n    appUseTor: boolean;\n\n    fb = inject(FormBuilder);\n\n    changeForm = this.fb.group(\n        {\n            password: this.fb.nonNullable.control('', Validators.compose([Validators.pattern(regExpPassword)])),\n            new_password: this.fb.nonNullable.control('', Validators.compose([Validators.required, Validators.pattern(regExpPassword)])),\n            new_confirmation: this.fb.nonNullable.control(''),\n            appPass: this.fb.nonNullable.control(this.variablesService.appPass ?? ''),\n        },\n        {\n            validators: [\n                ZanoValidators.formMatch('new_password', 'new_confirmation'),\n                ZanoValidators.formMatch('password', 'appPass', 'pass_mismatch'),\n            ],\n        }\n    );\n\n    zanoCompanionForm: FormGroup<{\n        zanoCompation: FormControl<boolean>;\n        secret: FormControl<string>;\n    }> = this.fb.group({\n        zanoCompation: this.fb.nonNullable.control({ value: false, disabled: !this.variablesService.hasAppPass }),\n        secret: this.fb.nonNullable.control(\n            { value: '', disabled: false },\n            {\n                validators: Validators.compose([]),\n            }\n        ),\n    });\n\n    public currentNotificationsState;\n\n    languagesOptions = [\n        {\n            name: 'en',\n            language: 'SETTINGS.LANGUAGE.EN',\n        },\n        {\n            name: 'fr',\n            language: 'SETTINGS.LANGUAGE.FR',\n        },\n        {\n            name: 'de',\n            language: 'SETTINGS.LANGUAGE.DE',\n        },\n        {\n            name: 'id',\n            language: 'SETTINGS.LANGUAGE.ID',\n        },\n        {\n            name: 'it',\n            language: 'SETTINGS.LANGUAGE.IT',\n        },\n        {\n            name: 'pt',\n            language: 'SETTINGS.LANGUAGE.PT',\n        },\n    ];\n\n    appLockOptions = [\n        {\n            time: 5,\n            translationKey: 'SETTINGS.APP_LOCK.TIME1',\n        },\n        {\n            time: 15,\n            translationKey: 'SETTINGS.APP_LOCK.TIME2',\n        },\n        {\n            time: 60,\n            translationKey: 'SETTINGS.APP_LOCK.TIME3',\n        },\n        {\n            time: 0,\n            translationKey: 'SETTINGS.APP_LOCK.TIME4',\n        },\n    ];\n\n    appScaleOptions = scaleItems;\n\n    appLogOptions = [\n        {\n            id: -1,\n        },\n        {\n            id: 0,\n        },\n        {\n            id: 1,\n        },\n        {\n            id: 2,\n        },\n        {\n            id: 3,\n        },\n        {\n            id: 4,\n        },\n    ];\n\n    currentBuild = '';\n\n    appPass: any;\n\n    constructor(\n        public translate: TranslateService,\n        public variablesService: VariablesService,\n        private renderer: Renderer2,\n        public backend: BackendService,\n        private ngZone: NgZone\n    ) {\n        this.scale = this.variablesService.settings.scale;\n        this.appUseTor = this.variablesService.settings.appUseTor;\n        this.zanoCompanionForm.setValue(this.variablesService.settings.zanoCompanionForm, { emitEvent: false });\n\n        this.backend.getOptions();\n    }\n\n    ngOnInit(): void {\n        this.backend.getVersion((version, type, error) => {\n            this.ngZone.run(() => {\n                if (!error) {\n                    this.currentBuild = version;\n                    this.variablesService.testnet = false;\n                    if (type === 'testnet') {\n                        this.currentBuild += ' TESTNET';\n                        this.variablesService.testnet = true;\n                    }\n                    this.variablesService.networkType = type;\n                } else {\n                    this.currentBuild = 'There was an error getting the build version';\n                }\n            });\n        });\n\n        this.backend.getIsDisabledNotifications(state => {\n            this.currentNotificationsState = state;\n        });\n\n        this.zanoCompanionForm.valueChanges.pipe(debounceTime(200)).subscribe({\n            next: () => {\n                const value = this.zanoCompanionForm.getRawValue();\n                const { zanoCompation, secret } = value;\n\n                if (zanoCompation && !secret) {\n                    this.generateSecret();\n                    return;\n                }\n\n                if (!zanoCompation && secret) {\n                    this.zanoCompanionForm.controls.secret.patchValue('');\n                    return;\n                }\n\n                if ((zanoCompation && secret) || (!zanoCompation && !secret)) {\n                    this.backend.setupJwtWalletRpc(value);\n                    return;\n                }\n            },\n        });\n    }\n\n    copySecret(): void {\n        const { secret } = this.zanoCompanionForm.getRawValue();\n\n        this.backend.setClipboard(secret);\n\n        this.isSecretWasCopied = true;\n        this.secretWasCopiedTimeout = setTimeout(() => {\n            this.isSecretWasCopied = false;\n            clearTimeout(this.secretWasCopiedTimeout);\n        }, 3000);\n    }\n\n    private generateSecret(): void {\n        this.zanoCompanionForm.get('secret').setValue(generateRandomString(40));\n    }\n\n    regenerateSecret(): void {\n        this.generateSecret();\n    }\n\n    setScale(): void {\n        this.scale = this.variablesService.settings.scale;\n        this.renderer.setStyle(document.documentElement, 'font-size', this.scale);\n        this.backend.storeAppData();\n    }\n\n    onSubmitChangePass(): void {\n        if (this.changeForm.valid) {\n            this.variablesService.appPass = this.changeForm.get('new_password').value;\n\n            this.backend.setMasterPassword({ pass: this.variablesService.appPass }, (status, data) => {\n                if (status) {\n                    this.backend.storeSecureAppData({\n                        pass: this.variablesService.appPass,\n                    });\n                    this.variablesService.appLogin = true;\n                    this.variablesService.dataIsLoaded = true;\n                    if (this.variablesService.settings.appLockTime) {\n                        this.variablesService.startCountdown();\n                    }\n                    this.ngZone.run(() => {\n                        this.zanoCompanionForm.controls.zanoCompation.enable({ emitEvent: false });\n                        this.onSave();\n                    });\n                } else {\n                    console.log(data['error_code']);\n                }\n            });\n\n            this.changeForm.reset();\n        }\n    }\n\n    toggleNotifications(): void {\n        if (!this.currentNotificationsState) {\n            this.backend.setIsDisabledNotifications('true');\n            this.currentNotificationsState = true;\n        } else {\n            this.backend.setIsDisabledNotifications('false');\n            this.currentNotificationsState = false;\n        }\n    }\n\n    toggleUseTor(): void {\n        this.appUseTor = !this.appUseTor;\n        this.variablesService.settings.appUseTor = this.appUseTor;\n        this.backend.setEnableTor(this.appUseTor);\n        this.backend.storeAppData();\n    }\n\n    onSave(): void {\n        this.ifSaved = true;\n        setTimeout(() => {\n            this.ifSaved = false;\n        }, 3000);\n    }\n\n    onLockChange(): void {\n        this.variablesService.restartCountdown();\n    }\n\n    onLogChange(): void {\n        this.backend.setLogLevel(this.variablesService.settings.appLog);\n        this.backend.storeAppData();\n    }\n\n    onLanguageChange(): void {\n        this.translate.use(this.variablesService.settings.language);\n        this.backend.storeAppData();\n    }\n\n    showPrice(): void {\n        this.variablesService.visibilityBalance$.next(!this.variablesService.visibilityBalance$.value);\n        this.backend.storeAppData();\n    }\n\n    toggleDarkTheme(): void {\n        const { settings, isDarkTheme$ } = this.variablesService;\n        const isDarkTheme: boolean = !settings.isDarkTheme;\n        this.variablesService.settings.isDarkTheme = isDarkTheme;\n        isDarkTheme$.next(isDarkTheme);\n\n        this.backend.storeAppData();\n    }\n}\n","<div class=\"page-container\">\n    <div class=\"toolbar mb-2\">\n        <div class=\"left\">\n            <app-back-button></app-back-button>\n            <h1 class=\"ml-2\">{{ 'SETTINGS.TITLE' | translate }}</h1>\n        </div>\n        <div class=\"right\"></div>\n    </div>\n\n    <div class=\"page-content\">\n        <div class=\"scrolled-content\">\n            <div class=\"settings\" fxFlex=\"0 1 50rem\" fxFlexFill fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\n                <div class=\"form__field\">\n                    <label>{{ 'SETTINGS.LANGUAGE.TITLE' | translate }}</label>\n                    <ng-select\n                        (change)=\"onLanguageChange()\"\n                        [(ngModel)]=\"variablesService.settings.language\"\n                        [clearable]=\"false\"\n                        [items]=\"languagesOptions\"\n                        [searchable]=\"false\"\n                        bindLabel=\"language\"\n                        bindValue=\"name\"\n                        class=\"with-circle\"\n                    >\n                        <ng-template let-item=\"item\" ng-label-tmp>\n                            {{ item.language | translate }}\n                        </ng-template>\n                        <ng-template let-index=\"index\" let-item=\"item\" ng-option-tmp>\n                            {{ item.language | translate }}\n                        </ng-template>\n                    </ng-select>\n                </div>\n\n                <div class=\"form__field\">\n                    <label>{{ 'SETTINGS.APP_LOCK.TITLE' | translate }}</label>\n                    <ng-select\n                        (change)=\"onLockChange()\"\n                        [(ngModel)]=\"variablesService.settings.appLockTime\"\n                        [clearable]=\"false\"\n                        [items]=\"appLockOptions\"\n                        [searchable]=\"false\"\n                        bindLabel=\"translationKey\"\n                        bindValue=\"time\"\n                        class=\"with-circle\"\n                    >\n                        <ng-template let-item=\"item\" ng-label-tmp>\n                            {{ item.translationKey | translate }}\n                        </ng-template>\n                        <ng-template let-index=\"index\" let-item=\"item\" ng-option-tmp>\n                            {{ item.translationKey | translate }}\n                        </ng-template>\n                    </ng-select>\n                </div>\n\n                <div class=\"form__field\">\n                    <label>{{ 'SETTINGS.SCALE.TITLE' | translate }}</label>\n                    <ng-select\n                        (change)=\"setScale()\"\n                        [(ngModel)]=\"variablesService.settings.scale\"\n                        [clearable]=\"false\"\n                        [items]=\"appScaleOptions\"\n                        [searchable]=\"false\"\n                        bindLabel=\"name\"\n                        bindValue=\"value\"\n                        class=\"with-circle\"\n                    >\n                        <ng-template let-item=\"item\" ng-label-tmp>\n                            {{ item.name | translate }}\n                        </ng-template>\n                        <ng-template let-index=\"index\" let-item=\"item\" ng-option-tmp>\n                            {{ item.name | translate }}\n                        </ng-template>\n                    </ng-select>\n                </div>\n\n                <div class=\"form__field\">\n                    <label>{{ 'SETTINGS.APP_LOG_TITLE' | translate }}</label>\n                    <ng-select\n                        (change)=\"onLogChange()\"\n                        [(ngModel)]=\"variablesService.settings.appLog\"\n                        [clearable]=\"false\"\n                        [items]=\"appLogOptions\"\n                        [searchable]=\"false\"\n                        bindLabel=\"id\"\n                        bindValue=\"id\"\n                        class=\"with-circle\"\n                    >\n                    </ng-select>\n                </div>\n\n                <div class=\"form__field\">\n                    <label>{{ 'SETTINGS.NOTIFICATIONS' | translate }}</label>\n                    <app-switch (emitChange)=\"toggleNotifications()\" [value]=\"currentNotificationsState\"></app-switch>\n                </div>\n\n                <div class=\"form__field\">\n                    <label>{{ 'SETTINGS.USE_TOR_TO_RELAY_TRANSACTIONS' | translate }} (Temporarily disabled)</label>\n                    <app-switch (emitChange)=\"toggleUseTor()\" [disabled]=\"true\" [value]=\"false && appUseTor\"></app-switch>\n                </div>\n\n                <div class=\"form__field\">\n                    <label>{{ 'SETTINGS.DARK_THEME' | translate }}</label>\n                    <app-switch (emitChange)=\"toggleDarkTheme()\" [value]=\"variablesService.settings.isDarkTheme\"></app-switch>\n                </div>\n\n                <div class=\"form__field\">\n                    <label>{{ 'SETTINGS.SHOW_BALANCE' | translate }}</label>\n                    <app-switch (emitChange)=\"showPrice()\" [value]=\"this.variablesService.visibilityBalance$ | async\"></app-switch>\n                </div>\n\n                <form [formGroup]=\"zanoCompanionForm\">\n                    <div class=\"form__field\">\n                        <label>\n                            {{ 'SETTINGS.FORM.ZANO_COMPANION.LABELS.LABEL1' | translate }}\n                            <ng-container *ngIf=\"!variablesService.appPass\">\n                                {{ 'SETTINGS.FORM.ZANO_COMPANION.LABELS.LABEL4' | translate }}\n                            </ng-container>\n                        </label>\n                        <app-switch formControlName=\"zanoCompation\"></app-switch>\n                    </div>\n                    <ng-container *ngIf=\"zanoCompanionForm.controls.zanoCompation.getRawValue()\">\n                        <div class=\"form__card\">\n                            <div class=\"form__field form__field--secret\">\n                                <label for=\"field-secret\">{{ 'SETTINGS.FORM.ZANO_COMPANION.LABELS.LABEL2' | translate }}</label>\n                                <input\n                                    (contextmenu)=\"\n                                        variablesService.onContextMenuOnlyCopy($event, zanoCompanionForm.controls['secret'].value)\n                                    \"\n                                    [class.invalid]=\"zanoCompanionForm.controls['secret'].invalid\"\n                                    [readonly]=\"true\"\n                                    formControlName=\"secret\"\n                                    class=\"form__field--input\"\n                                    id=\"field-secret\"\n                                    type=\"text\"\n                                />\n\n                                <button class=\"btn--copy\" (click)=\"copySecret()\">\n                                    <mat-icon svgIcon=\"zano-copy\"></mat-icon>\n                                </button>\n\n                                <button class=\"btn--regenerate\" (click)=\"regenerateSecret()\">\n                                    <mat-icon svgIcon=\"zano-regenerate\"></mat-icon>\n                                </button>\n\n                                <div *ngIf=\"isSecretWasCopied\" class=\"info success\" style=\"text-align: right\">\n                                    {{ 'SETTINGS.SECRET_WAS_COPIED' | translate }}\n                                </div>\n                            </div>\n\n                            <div class=\"form__field\">\n                                <label for=\"field-port\">{{ 'SETTINGS.FORM.ZANO_COMPANION.LABELS.LABEL3' | translate }}</label>\n                                <input\n                                    (contextmenu)=\"\n                                        variablesService.onContextMenuOnlyCopy($event, this.variablesService.rpc_port?.toString())\n                                    \"\n                                    [readonly]=\"true\"\n                                    [value]=\"this.variablesService.rpc_port\"\n                                    class=\"form__field--input\"\n                                    id=\"field-port\"\n                                    type=\"text\"\n                                />\n                            </div>\n                        </div>\n                    </ng-container>\n                </form>\n\n                <form (ngSubmit)=\"onSubmitChangePass()\" [formGroup]=\"changeForm\">\n                    <h4 class=\"master-password-title mb-2\">\n                        {{ 'SETTINGS.MASTER_PASSWORD.TITLE' | translate }}\n                    </h4>\n\n                    <div class=\"form__card\">\n                        <div *ngIf=\"variablesService.appPass\" class=\"form__field\">\n                            <label for=\"old-password\">{{ 'SETTINGS.MASTER_PASSWORD.OLD' | translate }}</label>\n                            <input\n                                (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\n                                [class.invalid]=\"\n                                    changeForm.invalid &&\n                                    changeForm.controls['password'].valid &&\n                                    (changeForm.controls['password'].dirty || changeForm.controls['password'].touched) &&\n                                    changeForm.errors &&\n                                    changeForm.errors['pass_mismatch'] &&\n                                    changeForm.get('password').value.length > 0\n                                \"\n                                class=\"form__field--input\"\n                                formControlName=\"password\"\n                                id=\"old-password\"\n                                placeholder=\"{{ 'PLACEHOLDERS.PLACEHOLDER_OLD' | translate }}\"\n                                type=\"password\"\n                            />\n                            <div\n                                *ngIf=\"\n                                    changeForm.invalid &&\n                                    changeForm.controls['password'].valid &&\n                                    (changeForm.controls['password'].dirty || changeForm.controls['password'].touched) &&\n                                    changeForm.errors &&\n                                    changeForm.errors['pass_mismatch'] &&\n                                    changeForm.get('password').value.length > 0\n                                \"\n                                class=\"error\"\n                            >\n                                {{ 'SETTINGS.FORM_ERRORS.CURRENT_PASS_NOT_MATCH' | translate }}\n                            </div>\n                        </div>\n\n                        <div class=\"form__field\">\n                            <label for=\"new-password\">{{ 'SETTINGS.MASTER_PASSWORD.NEW' | translate }}</label>\n                            <input\n                                (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\n                                [class.invalid]=\"changeForm.controls['new_password'].touched && changeForm.controls['new_password'].invalid\"\n                                class=\"form__field--input\"\n                                formControlName=\"new_password\"\n                                id=\"new-password\"\n                                placeholder=\"{{ 'PLACEHOLDERS.PLACEHOLDER_NEW' | translate }}\"\n                                type=\"password\"\n                            />\n                            <div\n                                *ngIf=\"changeForm.controls['new_password'].touched && changeForm.controls['new_password'].invalid\"\n                                class=\"error\"\n                            >\n                                <div *ngIf=\"changeForm.controls['new_password'].errors?.pattern\">\n                                    {{ 'ERRORS.WRONG_PASSWORD_MUST_BE' | translate }} a-zA-Z0-9_.*|~!?@#$%^&+&#123;}()<>:;\"'-=,/[]*$\n                                </div>\n                                <div *ngIf=\"changeForm.controls['new_password'].hasError('required')\">\n                                    {{ 'ERRORS.REQUIRED' | translate }}\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form__field\">\n                            <label for=\"confirm-password\">{{ 'SETTINGS.MASTER_PASSWORD.CONFIRM' | translate }}</label>\n                            <input\n                                (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\n                                [class.invalid]=\"\n                                    changeForm.invalid &&\n                                    (changeForm.controls['new_confirmation'].dirty || changeForm.controls['new_confirmation'].touched) &&\n                                    changeForm.errors &&\n                                    changeForm.errors['mismatch'] &&\n                                    changeForm.get('new_confirmation').value.length > 0\n                                \"\n                                class=\"form__field--input\"\n                                formControlName=\"new_confirmation\"\n                                id=\"confirm-password\"\n                                placeholder=\"{{ 'PLACEHOLDERS.PLACEHOLDER_CONFIRM' | translate }}\"\n                                type=\"password\"\n                            />\n                            <div\n                                *ngIf=\"\n                                    changeForm.invalid &&\n                                    (changeForm.controls['new_confirmation'].dirty || changeForm.controls['new_confirmation'].touched) &&\n                                    changeForm.errors &&\n                                    changeForm.errors['mismatch'] &&\n                                    changeForm.get('new_confirmation').value.length > 0\n                                \"\n                                class=\"error\"\n                            >\n                                {{ 'SETTINGS.FORM_ERRORS.CONFIRM_NOT_MATCH' | translate }}\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"submit-button-container\">\n                        <button [disabled]=\"!changeForm.valid\" class=\"primary big max-w-19-rem w-100\" type=\"submit\">\n                            {{ 'SETTINGS.MASTER_PASSWORD.BUTTON' | translate }}\n                        </button>\n                        <span *ngIf=\"ifSaved\" [class.active]=\"ifSaved\" class=\"ml-1 color-aqua\">{{\n                            'SETTINGS.SETTINGS_SAVED' | translate\n                        }}</span>\n                    </div>\n                </form>\n\n                <p class=\"mt-2\">Build version: {{ currentBuild }}</p>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, NgZone, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BackendService } from '@api/services/backend.service';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { ModalService } from '@parts/services/modal.service';\nimport { Wallet } from '@api/models/wallet.model';\nimport { hasOwnProperty } from '@parts/functions/has-own-property';\nimport BigNumber from 'bignumber.js';\nimport { BreadcrumbItems } from '@parts/components/breadcrumbs/breadcrumbs.models';\n\n@Component({\n    selector: 'app-transfer-alias',\n    template: `\n        <div class=\"page-container\">\n            <div class=\"toolbar mb-2\">\n                <div class=\"left\">\n                    <app-back-button></app-back-button>\n                    <h1 class=\"ml-2\">{{ 'BREADCRUMBS.TRANSFER_ALIAS' | translate }}</h1>\n                </div>\n                <div class=\"right\"></div>\n            </div>\n\n            <div class=\"page-content\">\n                <app-breadcrumbs class=\"mb-2\" [items]=\"breadcrumbItems\"></app-breadcrumbs>\n\n                <div class=\"scrolled-content\">\n                    <form class=\"form\">\n                        <div class=\"form__field\">\n                            <label for=\"alias-name\">\n                                {{ 'TRANSFER_ALIAS.NAME.LABEL' | translate }}\n                            </label>\n                            <input\n                                [value]=\"alias.name\"\n                                class=\"form__field--input\"\n                                id=\"alias-name\"\n                                name=\"alias-name\"\n                                placeholder=\"{{ 'EDIT_ALIAS.NAME.PLACEHOLDER' | translate }}\"\n                                readonly\n                                type=\"text\"\n                            />\n                        </div>\n\n                        <div class=\"form__field textarea\">\n                            <label for=\"alias-comment\">\n                                {{ 'TRANSFER_ALIAS.COMMENT.LABEL' | translate }}\n                            </label>\n                            <textarea\n                                [(ngModel)]=\"alias.comment\"\n                                id=\"alias-comment\"\n                                name=\"alias-comment\"\n                                placeholder=\"{{ 'EDIT_ALIAS.COMMENT.PLACEHOLDER' | translate }}\"\n                            ></textarea>\n                        </div>\n\n                        <div class=\"form__field\">\n                            <label for=\"alias-transfer\">\n                                {{ 'TRANSFER_ALIAS.ADDRESS.LABEL' | translate }}\n                            </label>\n                            <input\n                                (contextmenu)=\"variablesService.onContextMenu($event)\"\n                                (input)=\"changeAddress()\"\n                                [(ngModel)]=\"transferAddress\"\n                                [class.invalid]=\"\n                                    transferAddress.length > 0 &&\n                                    (transferAddressAlias ||\n                                        !transferAddressValid ||\n                                        (transferAddressValid && !permissionSend) ||\n                                        notEnoughMoney)\n                                \"\n                                class=\"form__field--input\"\n                                id=\"alias-transfer\"\n                                name=\"alias-transfer\"\n                                placeholder=\"{{ 'TRANSFER_ALIAS.ADDRESS.PLACEHOLDER' | translate }}\"\n                                type=\"text\"\n                            />\n                            <div\n                                *ngIf=\"\n                                    transferAddress.length > 0 &&\n                                    (transferAddressAlias ||\n                                        !transferAddressValid ||\n                                        (transferAddressValid && !permissionSend) ||\n                                        notEnoughMoney)\n                                \"\n                                class=\"error\"\n                            >\n                                <div *ngIf=\"!transferAddressValid\">\n                                    {{ 'TRANSFER_ALIAS.FORM_ERRORS.WRONG_ADDRESS' | translate }}\n                                </div>\n                                <div *ngIf=\"transferAddressAlias || (transferAddressValid && !permissionSend)\">\n                                    {{ 'TRANSFER_ALIAS.FORM_ERRORS.ALIAS_EXISTS' | translate }}\n                                </div>\n                                <div *ngIf=\"notEnoughMoney\">\n                                    {{ 'TRANSFER_ALIAS.FORM_ERRORS.NO_MONEY' | translate }}\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"alias-cost mb-2\">\n                            {{\n                                'TRANSFER_ALIAS.COST'\n                                    | translate\n                                        : {\n                                              value: variablesService.default_fee,\n                                              currency: variablesService.defaultTicker\n                                          }\n                            }}\n                        </div>\n\n                        <button\n                            (click)=\"transferAlias()\"\n                            [disabled]=\"transferAddressAlias || !transferAddressValid || notEnoughMoney\"\n                            class=\"primary big w-100\"\n                            type=\"button\"\n                        >\n                            {{ 'TRANSFER_ALIAS.BUTTON_TRANSFER' | translate }}\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                overflow: hidden;\n            }\n        `,\n    ],\n})\nexport class TransferAliasComponent implements OnInit {\n    wallet: Wallet;\n\n    alias: any;\n\n    breadcrumbItems: BreadcrumbItems = [\n        {\n            routerLink: '/wallet/history',\n            title: this.variablesService.currentWallet.name,\n        },\n        {\n            title: 'BREADCRUMBS.TRANSFER_ALIAS',\n        },\n    ];\n\n    transferAddress = '';\n\n    transferAddressValid: boolean;\n\n    transferAddressAlias: boolean;\n\n    permissionSend: boolean;\n\n    notEnoughMoney: boolean;\n\n    requestProcessing = false;\n\n    constructor(\n        public variablesService: VariablesService,\n        private router: Router,\n        private backend: BackendService,\n        private modalService: ModalService,\n        private ngZone: NgZone\n    ) {}\n\n    ngOnInit(): void {\n        this.wallet = this.variablesService.currentWallet;\n        const alias = this.backend.getWalletAlias(this.wallet.address);\n        this.alias = {\n            name: alias.name,\n            address: alias.address,\n            comment: alias.comment,\n            tracking_key: alias.tracking_key,\n        };\n        const unlocked_balance = new BigNumber(this.wallet.getBalanceByTicker('ZANO')?.unlocked || 0);\n        this.notEnoughMoney = unlocked_balance.isLessThan(this.variablesService.default_fee_big);\n    }\n\n    changeAddress(): void {\n        this.backend.validateAddress(this.transferAddress, status => {\n            this.transferAddressValid = status;\n            if (status) {\n                this.backend.getPoolInfo((statusPool, dataPool) => {\n                    if (hasOwnProperty(dataPool, 'aliases_que') && dataPool.aliases_que.length) {\n                        this.setStatus(!dataPool.aliases_que.some(el => el.address === this.transferAddress));\n                    } else {\n                        this.setStatus(status);\n                    }\n                });\n            } else {\n                this.setStatus(false);\n            }\n        });\n    }\n\n    setStatus(statusSet): void {\n        this.permissionSend = statusSet;\n        if (statusSet) {\n            this.backend.getAliasByAddress(this.transferAddress, status => {\n                this.ngZone.run(() => {\n                    if (status) {\n                        this.transferAddressAlias = true;\n                        this.permissionSend = false;\n                    } else {\n                        this.transferAddressAlias = false;\n                    }\n                });\n            });\n        } else {\n            this.ngZone.run(() => {\n                this.transferAddressAlias = false;\n            });\n        }\n    }\n\n    transferAlias(): void {\n        if (this.requestProcessing || !this.permissionSend || !this.transferAddressValid || this.notEnoughMoney) {\n            return;\n        }\n        this.requestProcessing = true;\n        const newAlias = {\n            name: this.alias.name,\n            address: this.transferAddress,\n            comment: this.alias.comment,\n            tracking_key: this.alias.tracking_key,\n        };\n        this.backend.updateAlias(this.wallet.wallet_id, newAlias, this.variablesService.default_fee, (status, data) => {\n            if (status && hasOwnProperty(data, 'success') && data.success) {\n                this.modalService.prepareModal('info', 'TRANSFER_ALIAS.REQUEST_SEND_REG');\n                this.ngZone.run(() => {\n                    this.router.navigate(['/wallet/']);\n                });\n            }\n            this.requestProcessing = false;\n        });\n    }\n}\n","import { Component, inject, NgZone } from '@angular/core';\nimport { NonNullableFormBuilder, Validators } from '@angular/forms';\nimport { BackendService } from '@api/services/backend.service';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { Router } from '@angular/router';\nimport { hasOwnProperty } from '@parts/functions/has-own-property';\nimport { regExpPassword, ZanoValidators } from '@parts/utils/zano-validators';\nimport { BreadcrumbItems } from '@parts/components/breadcrumbs/breadcrumbs.models';\n\n@Component({\n    selector: 'app-wallet-details',\n    template: `\n        <div class=\"page-container\">\n            <div class=\"toolbar mb-2\">\n                <div class=\"left\">\n                    <app-back-button></app-back-button>\n                    <h1 class=\"ml-2\">{{ 'BREADCRUMBS.WALLET_DETAILS' | translate }}</h1>\n                </div>\n                <div class=\"right\"></div>\n            </div>\n\n            <div class=\"page-content\">\n                <app-breadcrumbs class=\"mb-2\" [items]=\"breadcrumbItems\"></app-breadcrumbs>\n\n                <div class=\"scrolled-content\">\n                    <div fxFlexFill fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\n                        <form (ngSubmit)=\"beforeSubmitDetails()\" [formGroup]=\"detailsForm\" class=\"form\">\n                            <div class=\"form__field\">\n                                <label for=\"wallet-name\">{{ 'WALLET_DETAILS.LABEL_NAME' | translate }}</label>\n                                <input\n                                    (contextmenu)=\"variablesService.onContextMenu($event)\"\n                                    [maxLength]=\"variablesService.maxWalletNameLength\"\n                                    [placeholder]=\"'PLACEHOLDERS.WALLET_NAME_PLACEHOLDER' | translate\"\n                                    class=\"form__field--input\"\n                                    formControlName=\"name\"\n                                    id=\"wallet-name\"\n                                    type=\"text\"\n                                />\n                                <div\n                                    *ngIf=\"\n                                        detailsForm.controls.name.invalid &&\n                                        (detailsForm.controls.name.dirty || detailsForm.controls.name.touched)\n                                    \"\n                                    class=\"error\"\n                                >\n                                    <div *ngIf=\"detailsForm.controls.name.errors['duplicate']\">\n                                        {{ 'WALLET_DETAILS.FORM_ERRORS.NAME_DUPLICATE' | translate }}\n                                    </div>\n                                    <div *ngIf=\"detailsForm.controls.name.value.length >= variablesService.maxWalletNameLength\">\n                                        {{ 'WALLET_DETAILS.FORM_ERRORS.MAX_LENGTH' | translate }}\n                                    </div>\n                                    <div *ngIf=\"detailsForm.controls.name.hasError('required')\">\n                                        {{ 'WALLET_DETAILS.FORM_ERRORS.NAME_REQUIRED' | translate }}\n                                    </div>\n                                </div>\n                            </div>\n                            <div fxLayout=\"row nowrap\" fxLayoutAlign=\"start center\" fxLayoutGap=\"1rem\">\n                                <button [disabled]=\"detailsForm.invalid\" class=\"primary big max-w-19-rem w-100 mb-1\" type=\"submit\">\n                                    {{ 'SETTINGS.MASTER_PASSWORD.BUTTON' | translate }}\n                                </button>\n                                <p *ngIf=\"ifSaved\" class=\"color-aqua\">Saved!</p>\n                            </div>\n                            <div class=\"form__field\">\n                                <label for=\"wallet-location\">{{ 'WALLET_DETAILS.LABEL_FILE_LOCATION' | translate }}</label>\n                                <input\n                                    (contextmenu)=\"variablesService.onContextMenuOnlyCopy($event, detailsForm.controls.path.value)\"\n                                    class=\"form__field--input cursor-default\"\n                                    formControlName=\"path\"\n                                    id=\"wallet-location\"\n                                    readonly\n                                    type=\"text\"\n                                />\n                            </div>\n                        </form>\n\n                        <ng-container\n                            *ngIf=\"!variablesService.currentWallet?.is_auditable && !variablesService.currentWallet?.is_watch_only\"\n                        >\n                            <ng-container *ngIf=\"!showSeed; else seedPhraseContent\">\n                                <form\n                                    (ngSubmit)=\"beforeSubmitPasswordSeedPhrase()\"\n                                    [formGroup]=\"passwordSeedPhraseForm\"\n                                    class=\"form form__card pb-2\"\n                                    fxFlex=\"0 0 auto\"\n                                    fxLayout=\"column\"\n                                    fxLayoutAlign=\"start center\"\n                                >\n                                    <div class=\"form__field\">\n                                        <label for=\"create-password\">{{ 'WALLET_DETAILS.CREATE_PASSWORD_SECURE' | translate }}</label>\n                                        <input\n                                            class=\"form__field--input\"\n                                            formControlName=\"password\"\n                                            id=\"create-password\"\n                                            placeholder=\"{{ 'PLACEHOLDERS.PASSWORD_PLACEHOLDER' | translate }}\"\n                                            type=\"password\"\n                                        />\n                                    </div>\n\n                                    <div class=\"form__field\">\n                                        <label for=\"confirm-password\">{{ 'WALLET_DETAILS.FORM.CONFIRM_PASSWORD' | translate }}</label>\n                                        <input\n                                            [class.invalid]=\"\n                                                passwordSeedPhraseForm.invalid &&\n                                                passwordSeedPhraseForm.get('confirmPassword').value.length > 0\n                                            \"\n                                            class=\"form__field--input\"\n                                            formControlName=\"confirmPassword\"\n                                            id=\"confirm-password\"\n                                            placeholder=\"{{ 'PLACEHOLDERS.PLACEHOLDER_CONFIRM' | translate }}\"\n                                            type=\"password\"\n                                        />\n                                        <div\n                                            *ngIf=\"\n                                                passwordSeedPhraseForm.invalid &&\n                                                (passwordSeedPhraseForm.controls['confirmPassword'].dirty ||\n                                                    passwordSeedPhraseForm.controls['confirmPassword'].touched)\n                                            \"\n                                            class=\"error\"\n                                        >\n                                            <div\n                                                *ngIf=\"\n                                                    passwordSeedPhraseForm.invalid &&\n                                                    passwordSeedPhraseForm.get('confirmPassword').value.length > 0\n                                                \"\n                                            >\n                                                {{ 'WALLET_DETAILS.FORM_ERRORS.PASSWORDS_DONT_MATCH' | translate }}\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <button [disabled]=\"!passwordSeedPhraseForm.valid\" class=\"primary big w-100 mb-2\" type=\"submit\">\n                                        <mat-icon svgIcon=\"zano-check-shield\" class=\"mr-1\"></mat-icon>\n                                        {{ 'WALLET_DETAILS.FORM.GENERATE_SECURE_SEED' | translate }}\n                                    </button>\n\n                                    <p class=\"color-primary\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n                                        <mat-icon svgIcon=\"zano-info\" class=\"mr-1\"></mat-icon>\n                                        {{ 'WALLET_DETAILS.FORM.SECURED_SEED_WILL_REQUIRE' | translate }}\n                                    </p>\n                                </form>\n                            </ng-container>\n\n                            <ng-template #seedPhraseContent>\n                                <div class=\"seed-phrase form__card pb-2\" fxFlex=\"0 0 auto\" fxLayout=\"column\">\n                                    <div class=\"header mb-2\" fxFlex=\"0 0 auto\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n                                        <div class=\"left\">\n                                            <span>{{ 'WALLET_DETAILS.LABEL_SEED_PHRASE' | translate }}</span>\n                                        </div>\n                                        <div class=\"right\">\n                                            <span\n                                                *ngIf=\"passwordSeedPhraseForm.controls.password.value.length === 0\"\n                                                class=\"status color-red\"\n                                                fxLayout=\"row\"\n                                                fxLayoutAlign=\"start center\"\n                                            >\n                                                {{ 'WALLET_DETAILS.SEED_IS_UNSECURED' | translate }}\n                                                <mat-icon svgIcon=\"zano-unsecured\" class=\"ml-1\"></mat-icon>\n                                            </span>\n                                            <span\n                                                *ngIf=\"passwordSeedPhraseForm.controls.password.value.length > 0\"\n                                                class=\"status color-aqua\"\n                                                fxLayout=\"row\"\n                                                fxLayoutAlign=\"start center\"\n                                            >\n                                                {{ 'WALLET_DETAILS.SEED_IS_SECURED' | translate }}\n                                                <mat-icon svgIcon=\"zano-secured\" class=\"ml-1\"></mat-icon>\n                                            </span>\n                                        </div>\n                                    </div>\n                                    <div\n                                        (contextmenu)=\"variablesService.onContextMenuOnlyCopy($event, seedPhrase)\"\n                                        class=\"content mb-1\"\n                                        fxLayout=\"row wrap\"\n                                    >\n                                        <ng-container *ngFor=\"let word of seedPhrase.split(' '); let index = index\">\n                                            <div\n                                                class=\"item p-1 mr-1 mb-1 border-radius-0_8-rem\"\n                                                fxLayout=\"row nowrap\"\n                                                fxLayoutAlign=\"start center\"\n                                            >\n                                                <div class=\"number p-1 mr-1\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n                                                    {{ index + 1 }}\n                                                </div>\n                                                <span class=\"word\" fxLayout=\"row\">{{ word }}</span>\n                                            </div>\n                                        </ng-container>\n                                    </div>\n                                    <div class=\"footer max-w-50-rem w-100\" fxLayout=\"column\">\n                                        <button (click)=\"copySeedPhrase()\" class=\"outline big w-100 mb-2\" type=\"button\">\n                                            <ng-container *ngIf=\"!seedPhraseCopied\">\n                                                <mat-icon svgIcon=\"zano-copy\" class=\"mr-1\"></mat-icon>\n                                                {{ 'SEED_PHRASE.BUTTON_COPY' | translate }}\n                                            </ng-container>\n                                            <ng-container *ngIf=\"seedPhraseCopied\">\n                                                <mat-icon svgIcon=\"zano-check\" class=\"mr-1\"></mat-icon>\n                                                {{ 'SEED_PHRASE.BUTTON_COPIED' | translate }}\n                                            </ng-container>\n                                        </button>\n                                        <p *ngIf=\"passwordSeedPhraseForm.controls.password.value.length > 0\" class=\"text-align-center\">\n                                            <mat-icon svgIcon=\"zano-info\" class=\"mr-1\"></mat-icon>\n                                            <span class=\"color-primary\">{{ 'WALLET_DETAILS.REMEMBER_YOU_WILL_REQUIRE' | translate }}</span>\n                                        </p>\n                                    </div>\n                                </div>\n                            </ng-template>\n                        </ng-container>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n})\nexport class WalletDetailsComponent {\n    breadcrumbItems: BreadcrumbItems = [\n        {\n            routerLink: '/wallet/history',\n            title: this.variablesService.currentWallet.name,\n        },\n        {\n            title: 'BREADCRUMBS.WALLET_DETAILS',\n        },\n    ];\n\n    seedPhrase = '';\n\n    showSeed = false;\n\n    seedPhraseCopied = false;\n\n    ifSaved = false;\n\n    fb = inject(NonNullableFormBuilder);\n\n    detailsForm = this.fb.group({\n        name: this.fb.control('', [Validators.required, ZanoValidators.duplicate(this.variablesService.walletNamesForComparisons)]),\n        path: this.fb.control(''),\n    });\n\n    passwordSeedPhraseForm = this.fb.group(\n        {\n            password: this.fb.control('', Validators.pattern(regExpPassword)),\n            confirmPassword: this.fb.control('', Validators.pattern(regExpPassword)),\n        },\n        {\n            validators: [ZanoValidators.formMatch('password', 'confirmPassword')],\n        }\n    );\n\n    constructor(\n        public variablesService: VariablesService,\n        private router: Router,\n        private backend: BackendService,\n        private ngZone: NgZone\n    ) {\n        const { currentWallet } = this.variablesService;\n        const { name, path } = currentWallet;\n        this.detailsForm.patchValue(\n            {\n                name,\n                path,\n            },\n            {\n                emitEvent: false,\n            }\n        );\n    }\n\n    beforeSubmitPasswordSeedPhrase(): void {\n        if (this.passwordSeedPhraseForm.invalid) {\n            this.passwordSeedPhraseForm.updateValueAndValidity();\n            this.passwordSeedPhraseForm.markAllAsTouched();\n            return;\n        }\n\n        this.submitPasswordSeedPhrase();\n    }\n\n    submitPasswordSeedPhrase(): void {\n        const { wallet_id } = this.variablesService.currentWallet;\n        const { password: seed_password } = this.passwordSeedPhraseForm.getRawValue();\n        this.backend.getSmartWalletInfo({ wallet_id, seed_password }, (status, data) => {\n            if (hasOwnProperty(data, 'seed_phrase')) {\n                this.ngZone.run(() => {\n                    this.showSeed = true;\n                    this.seedPhrase = data['seed_phrase'].trim();\n                });\n            }\n        });\n    }\n\n    beforeSubmitDetails(): void {\n        if (this.detailsForm.invalid) {\n            this.detailsForm.updateValueAndValidity();\n            this.detailsForm.markAllAsTouched();\n            return;\n        }\n\n        this.submitDetails();\n    }\n\n    submitDetails(): void {\n        const getRawValue = this.detailsForm.getRawValue();\n        const { name } = getRawValue;\n        this.variablesService.currentWallet.name = name;\n        this.detailsForm.reset(getRawValue);\n        this.refreshDetailsFormValidators();\n        this.ifSaved = true;\n        setTimeout(() => {\n            this.ifSaved = false;\n        }, 3000);\n    }\n\n    copySeedPhrase(): void {\n        this.backend.setClipboard(this.seedPhrase, () => {\n            this.ngZone.run(() => {\n                setTimeout(() => {\n                    this.seedPhraseCopied = false;\n                }, 4000);\n                this.seedPhraseCopied = true;\n            });\n        });\n    }\n\n    private refreshDetailsFormValidators(): void {\n        const walletNamesForComparisons = this.variablesService.walletNamesForComparisons;\n        const validatorsForName = [Validators.required, ZanoValidators.duplicate(walletNamesForComparisons)];\n        this.detailsForm.controls.name.clearValidators();\n        this.detailsForm.controls.name.setValidators(validatorsForName);\n        this.detailsForm.controls.name.updateValueAndValidity();\n    }\n}\n","import { Component, inject, OnDestroy, OnInit } from '@angular/core';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { Subject } from 'rxjs';\nimport { AssetBalance, ParamsRemoveCustomAssetId } from '@api/models/assets.model';\nimport { PaginatePipeArgs } from 'ngx-pagination';\nimport { takeUntil } from 'rxjs/operators';\nimport { CdkOverlayOrigin } from '@angular/cdk/overlay';\nimport { AssetDetailsComponent } from '@parts/modals/asset-details/asset-details.component';\nimport { Dialog, DialogConfig } from '@angular/cdk/dialog';\nimport { BackendService } from '@api/services/backend.service';\nimport { ConfirmModalComponent, ConfirmModalData } from '@parts/modals/confirm-modal/confirm-modal.component';\nimport { WalletsService } from '@parts/services/wallets.service';\nimport { BigNumber } from 'bignumber.js';\nimport { LOCKED_BALANCE_HELP_PAGE } from '@parts/data/constants';\nimport { IntToMoneyPipe } from '@parts/pipes';\nimport { TranslateService } from '@ngx-translate/core';\nimport { defaultImgSrc, zanoAssetInfo } from '@parts/data/assets';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-assets',\n    template: `\n        <div fxFlexFill fxLayout=\"column\">\n            <div class=\"scrolled-content\" [class.mb-2]=\"isShowPagination\" fxFlex=\"1 1 auto\">\n                <table class=\"zano-table assets-table\">\n                    <thead>\n                        <tr>\n                            <th>\n                                <div class=\"bg title\">\n                                    {{ 'ASSETS.TABLE.LABELS.NAME' | translate }}\n                                </div>\n                            </th>\n                            <th>\n                                <div class=\"bg title\">\n                                    {{ 'ASSETS.TABLE.LABELS.BALANCE' | translate }}\n                                </div>\n                            </th>\n                            <th>\n                                <div class=\"bg title\">\n                                    {{ 'ASSETS.TABLE.LABELS.VALUE' | translate }}\n                                </div>\n                            </th>\n                            <th>\n                                <div class=\"bg title\">\n                                    {{ 'ASSETS.TABLE.LABELS.PRICE' | translate }}\n                                </div>\n                            </th>\n                            <th>\n                                <div class=\"bg title\">&nbsp;</div>\n                            </th>\n                        </tr>\n                        <div class=\"row-divider\"></div>\n                    </thead>\n                    <tbody>\n                        <ng-container *ngIf=\"variablesService.currentWallet.balances$ | async as assets\">\n                            <ng-container *ngFor=\"let asset of assets | paginate : paginatePipeArgs; trackBy: trackByAssets\">\n                                <tr\n                                    [delay]=\"500\"\n                                    [placement]=\"'bottom'\"\n                                    [timeDelay]=\"1000\"\n                                    [tooltipClass]=\"'balance-tooltip'\"\n                                    [tooltip]=\"getBalanceTooltip(asset)\"\n                                >\n                                    <td>\n                                        <div class=\"text-ellipsis\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"2rem\">\n                                            <div class=\"token-logo mr-1\">\n                                                <img\n                                                    [src]=\"\n                                                        asset.asset_info.asset_id === zanoAssetInfo.asset_id\n                                                            ? zanoAssetInfo.logo\n                                                            : defaultImgSrc\n                                                    \"\n                                                    [alt]=\"asset.asset_info.ticker\"\n                                                    defaultImgAlt=\"default\"\n                                                    [defaultImgSrc]=\"defaultImgSrc\"\n                                                    appDefaultImg\n                                                />\n                                            </div>\n                                            <b class=\"text-ellipsis\">{{ asset.asset_info.full_name }}</b>\n                                        </div>\n                                    </td>\n                                    <td>\n                                        <div class=\"text-ellipsis\">\n                                            <b *appVisibilityBalance>\n                                                {{ asset.total | intToMoney : asset.asset_info.decimal_point }}\n                                                {{ asset.asset_info.ticker }}\n                                            </b>\n                                        </div>\n                                    </td>\n                                    <ng-container *ngIf=\"asset.asset_info.asset_id === zanoAssetInfo.asset_id; else templateNotLoadPrice\">\n                                        <td>\n                                            <div class=\"text-ellipsis\">\n                                                <b *appVisibilityBalance>{{\n                                                    (asset.total | intToMoney : asset.asset_info.decimal_point) *\n                                                        variablesService.zanoMoneyEquivalent | currency : 'USD'\n                                                }}</b>\n                                            </div>\n                                        </td>\n                                        <td>\n                                            <div class=\"text-ellipsis\">\n                                                <b class=\"mr-0_5\">{{ variablesService.zanoMoneyEquivalent | currency : 'USD' }}</b>\n                                                <span\n                                                    [class.color-aqua]=\"variablesService.zanoMoneyEquivalentPercent > 0\"\n                                                    [class.color-red]=\"variablesService.zanoMoneyEquivalentPercent < 0\"\n                                                >\n                                                    {{ variablesService.zanoMoneyEquivalentPercent | number : '1.2-2' }}\n                                                    %\n                                                </span>\n                                            </div>\n                                        </td>\n                                    </ng-container>\n\n                                    <ng-template #templateNotLoadPrice>\n                                        <td></td>\n                                        <td></td>\n                                    </ng-template>\n                                    <td>\n                                        <div class=\"text-ellipsis\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\n                                            <button\n                                                #trigger=\"cdkOverlayOrigin\"\n                                                (click)=\"$event.stopPropagation(); toggleDropDownMenu(trigger, asset)\"\n                                                [disabled]=\"false\"\n                                                cdkOverlayOrigin\n                                                class=\"btn-icon circle row-options small ml-auto\"\n                                                type=\"button\"\n                                            >\n                                                <mat-icon class=\"small\" svgIcon=\"zano-row-options\"></mat-icon>\n                                            </button>\n                                        </div>\n                                    </td>\n                                </tr>\n                                <tr class=\"row-divider\"></tr>\n                            </ng-container>\n                        </ng-container>\n                    </tbody>\n                </table>\n            </div>\n\n            <pagination-template\n                *ngIf=\"isShowPagination\"\n                #p=\"paginationApi\"\n                [id]=\"paginationId\"\n                class=\"ngx-pagination custom-pagination\"\n                (pageChange)=\"currentPage = $event\"\n            >\n                <button (click)=\"p.previous()\" [disabled]=\"p.isFirstPage()\" class=\"pagination-previous btn-icon circle small mr-0_5\">\n                    <mat-icon svgIcon=\"zano-arrow-left\"></mat-icon>\n                </button>\n\n                <div *ngFor=\"let page of p.pages; trackBy: trackByPages\" [class.current]=\"p.getCurrent() === page.value\" class=\"mr-0_5\">\n                    <a (click)=\"p.setCurrent(page.value)\" *ngIf=\"p.getCurrent() !== page.value\">\n                        <span>{{ page.label }}</span>\n                    </a>\n                    <div *ngIf=\"p.getCurrent() === page.value\">\n                        <span>{{ page.label }}</span>\n                    </div>\n                </div>\n\n                <button (click)=\"p.next()\" [disabled]=\"p.isLastPage()\" class=\"pagination-next btn-icon circle small\">\n                    <mat-icon svgIcon=\"zano-arrow-right\"></mat-icon>\n                </button>\n            </pagination-template>\n        </div>\n\n        <ng-template\n            (backdropClick)=\"$event.stopPropagation(); isOpenDropDownMenu = false\"\n            [cdkConnectedOverlayBackdropClass]=\"'opacity-0'\"\n            [cdkConnectedOverlayHasBackdrop]=\"true\"\n            [cdkConnectedOverlayOrigin]=\"triggerOrigin\"\n            [cdkConnectedOverlayOpen]=\"isOpenDropDownMenu\"\n            [cdkConnectedOverlayPositions]=\"[\n                {\n                    originX: 'end',\n                    originY: 'top',\n                    overlayX: 'end',\n                    overlayY: 'top',\n                    offsetY: 30\n                }\n            ]\"\n            cdkConnectedOverlay\n        >\n            <ul (click)=\"isOpenDropDownMenu = false\" class=\"list\">\n                <li class=\"item\">\n                    <button class=\"w-100 px-2 py-1\" type=\"button\" (click)=\"assetDetails()\">\n                        <mat-icon svgIcon=\"zano-info-v2\" class=\"mr-1\"></mat-icon>\n                        <span>{{ 'ASSETS.DROP_DOWN_MENU.ASSET_DETAILS' | translate }}</span>\n                    </button>\n                </li>\n\n                <ng-container\n                    *ngIf=\"\n                        variablesService.currentWallet.loaded &&\n                        variablesService.daemon_state === 2 &&\n                        !variablesService.currentWallet.is_auditable &&\n                        !variablesService.currentWallet.is_watch_only\n                    \"\n                >\n                    <li class=\"item\">\n                        <button routerLink=\"/wallet/send\" [state]=\"{ asset: currentAsset }\" class=\"w-100 px-2 py-1\">\n                            <mat-icon svgIcon=\"zano-send\" class=\"mr-1\"></mat-icon>\n                            <span>{{ 'Send' | translate }}</span>\n                        </button>\n                    </li>\n\n                    <ng-container *ngIf=\"variablesService.is_hardfok_active$ | async\">\n                        <li class=\"item\">\n                            <button routerLink=\"/wallet/create-swap\" [state]=\"{ asset: currentAsset }\" class=\"w-100 px-2 py-1\">\n                                <mat-icon svgIcon=\"zano-swap\" class=\"mr-1\"></mat-icon>\n                                <span>{{ 'Swap' | translate }}</span>\n                            </button>\n                        </li>\n                    </ng-container>\n                </ng-container>\n\n                <ng-container *ngIf=\"currentAsset.asset_info.ticker !== 'ZANO'\">\n                    <li class=\"item\">\n                        <button class=\"w-100 px-2 py-1\" type=\"button\" (click)=\"beforeRemoveAsset()\">\n                            <mat-icon svgIcon=\"zano-delete\" class=\"mr-1\"></mat-icon>\n                            <span>{{ 'ASSETS.DROP_DOWN_MENU.REMOVE_ASSET' | translate }}</span>\n                        </button>\n                    </li>\n                </ng-container>\n            </ul>\n        </ng-template>\n    `,\n})\nexport class AssetsComponent implements OnInit, OnDestroy {\n    currentPage = 1;\n\n    itemsPerPage = 10;\n\n    paginationId = 'pagination-assets-id';\n    zanoAssetInfo = zanoAssetInfo;\n    defaultImgSrc = defaultImgSrc;\n    triggerOrigin!: CdkOverlayOrigin;\n    currentAsset!: AssetBalance;\n    isOpenDropDownMenu = false;\n    private destroy$ = new Subject<void>();\n    private readonly _matDialog: MatDialog = inject(MatDialog);\n\n    constructor(\n        public variablesService: VariablesService,\n        private backendService: BackendService,\n        private walletsService: WalletsService,\n        private dialog: Dialog,\n        private intToMoneyPipe: IntToMoneyPipe,\n        private translate: TranslateService\n    ) {}\n\n    get paginatePipeArgs(): PaginatePipeArgs {\n        return {\n            id: this.paginationId,\n            itemsPerPage: this.itemsPerPage,\n            currentPage: this.currentPage,\n        };\n    }\n\n    get isShowPagination(): boolean {\n        const { currentWallet } = this.variablesService;\n        if (currentWallet) {\n            const { balances } = currentWallet;\n            return (balances?.length || 0) > this.itemsPerPage;\n        }\n        return false;\n    }\n\n    ngOnInit(): void {\n        this.listenChangeWallet();\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    toggleDropDownMenu(trigger: CdkOverlayOrigin, asset: AssetBalance): void {\n        this.isOpenDropDownMenu = !this.isOpenDropDownMenu;\n        this.triggerOrigin = trigger;\n        this.currentAsset = asset;\n    }\n\n    trackByAssets(index: number, { asset_info: { asset_id } }: AssetBalance): number | string {\n        return asset_id || index;\n    }\n\n    trackByPages(index: number): number | string {\n        return index;\n    }\n\n    assetDetails(): void {\n        const config: MatDialogConfig = {\n            data: {\n                assetInfo: this.currentAsset.asset_info,\n            },\n        };\n        this._matDialog.open(AssetDetailsComponent, config);\n    }\n\n    beforeRemoveAsset(): void {\n        if (!this.currentAsset) {\n            return;\n        }\n        const { full_name } = this.currentAsset.asset_info;\n        const config: MatDialogConfig<ConfirmModalData> = {\n            data: {\n                title: `Do you want delete \"${full_name}\"`,\n            },\n        };\n\n        this._matDialog\n            .open<ConfirmModalComponent, ConfirmModalData, boolean>(ConfirmModalComponent, config)\n            .afterClosed().pipe(takeUntil(this.destroy$))\n            .subscribe({\n                next: confirmed => confirmed && this.removeAsset(),\n            });\n    }\n\n    removeAsset(): void {\n        const { wallet_id, sendMoneyParams } = this.variablesService.currentWallet;\n        const { asset_id } = this.currentAsset.asset_info;\n        const params: ParamsRemoveCustomAssetId = {\n            wallet_id,\n            asset_id,\n        };\n        this.backendService.removeCustomAssetId(params, () => {\n            this.walletsService.updateWalletInfo(wallet_id);\n            this.currentAsset = undefined;\n\n            if (sendMoneyParams) {\n                this.walletsService.currentWallet.sendMoneyParams.asset_id = zanoAssetInfo.asset_id;\n            }\n        });\n    }\n\n    getBalanceTooltip(balance: AssetBalance): HTMLDivElement {\n        const tooltip = document.createElement('div');\n        const scrollWrapper = document.createElement('div');\n        const visibilityBalance = this.variablesService.visibilityBalance$.value;\n\n        if (!balance) {\n            return null;\n        }\n\n        scrollWrapper.classList.add('balance-scroll-list');\n        [balance].forEach(({ unlocked, total, asset_info: { ticker, decimal_point } }: AssetBalance) => {\n            const available = document.createElement('span');\n            available.setAttribute('class', 'available');\n            available.innerText = `${this.translate.instant('WALLET.AVAILABLE_BALANCE')} `;\n            const availableB = document.createElement('b');\n            availableB.innerText = visibilityBalance\n                ? `${this.intToMoneyPipe.transform(unlocked, decimal_point)} ${ticker || '---'}`\n                : '******';\n            available.appendChild(availableB);\n            scrollWrapper.appendChild(available);\n\n            const locked = document.createElement('span');\n            locked.setAttribute('class', 'locked');\n            locked.innerText = `${this.translate.instant('WALLET.LOCKED_BALANCE')} `;\n            const lockedB = document.createElement('b');\n            lockedB.innerText = visibilityBalance\n                ? `${this.intToMoneyPipe.transform(new BigNumber(total).minus(unlocked), decimal_point)} ${ticker || '---'}`\n                : '******';\n            locked.appendChild(lockedB);\n            scrollWrapper.appendChild(locked);\n        });\n        tooltip.appendChild(scrollWrapper);\n        const link = document.createElement('span');\n        link.setAttribute('class', 'link');\n        link.innerHTML = this.translate.instant('WALLET.LOCKED_BALANCE_LINK');\n        link.addEventListener('click', () => {\n            this.backendService.openUrlInBrowser(LOCKED_BALANCE_HELP_PAGE);\n        });\n        tooltip.appendChild(link);\n        return tooltip;\n    }\n\n    private listenChangeWallet(): void {\n        this.variablesService.currentWalletChangedEvent.pipe(takeUntil(this.destroy$)).subscribe({\n            next: () => {\n                this.currentPage = 0;\n            },\n        });\n    }\n}\n","import { Component, inject, NgZone } from '@angular/core';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { NonNullableFormBuilder, ValidationErrors, Validators } from '@angular/forms';\nimport { AssetBalance, AssetInfo } from '@api/models/assets.model';\nimport BigNumber from 'bignumber.js';\nimport { intToMoney } from '@parts/functions/int-to-money';\nimport { insuficcientFunds } from '@parts/utils/zano-errors';\nimport { BackendService } from '@api/services/backend.service';\nimport { moneyToInt } from '@parts/functions/money-to-int';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-burn-custom-asset',\n    templateUrl: './burn-custom-asset.component.html',\n    styleUrls: ['./burn-custom-asset.component.scss'],\n})\nexport class BurnCustomAssetComponent {\n    public readonly variablesService: VariablesService = inject(VariablesService);\n\n    public readonly data: { assetInfo: AssetInfo } = inject(MAT_DIALOG_DATA);\n\n    public readonly matDialogRef: MatDialogRef<BurnCustomAssetComponent> = inject(MatDialogRef);\n\n    private readonly _fb: NonNullableFormBuilder = inject(NonNullableFormBuilder);\n\n    public readonly form = this._fb.group({\n        amount: this._fb.control('', [\n            Validators.required,\n            (control): ValidationErrors | null => {\n                const { value: amount } = control;\n                const {\n                    assetInfo: { asset_id },\n                } = this.data;\n                const { currentWallet, maximum_value } = this.variablesService;\n                const prepared_amount = new BigNumber(amount);\n                const assetBalance: AssetBalance | undefined = currentWallet.getBalanceByAssetId(asset_id);\n\n                if (!assetBalance) {\n                    return {\n                        asset_not_found: true,\n                    };\n                }\n\n                const {\n                    unlocked,\n                    asset_info: { decimal_point },\n                } = assetBalance;\n\n                const maximum_amount_by_decimal_point = intToMoney(maximum_value, decimal_point);\n                if (prepared_amount.isGreaterThan(maximum_amount_by_decimal_point)) {\n                    return { greater_than_maximum_amount: { max: maximum_amount_by_decimal_point } };\n                }\n\n                const preparedUnlocked = intToMoney(unlocked, decimal_point);\n                return prepared_amount.isGreaterThan(preparedUnlocked) ? { insuficcientFunds } : null;\n            },\n        ]),\n    });\n\n    private readonly _backendService: BackendService = inject(BackendService);\n\n    private readonly _ngZone: NgZone = inject(NgZone);\n\n    public submit(): void {\n        const { amount } = this.form.getRawValue();\n        const {\n            currentWallet: { wallet_id },\n        } = this.variablesService;\n        const {\n            assetInfo: { asset_id, decimal_point },\n        } = this.data;\n\n        const params = {\n            burn_amount: moneyToInt(amount, decimal_point).toString(),\n            asset_id,\n        };\n\n        this._backendService.asyncCall2a(\n            'call_wallet_rpc',\n            wallet_id,\n            {\n                jsonrpc: '2.0',\n                id: 0,\n                method: 'burn_asset',\n                params,\n            },\n            (job_id: number): void => {\n                this._ngZone.run(() => {\n                    this.matDialogRef.close(job_id);\n                });\n            }\n        );\n    }\n}\n","<form (ngSubmit)=\"submit()\" [formGroup]=\"form\">\n    <h3 mat-dialog-title>\n        {{ 'Burn' | translate }}\n    </h3>\n\n    <mat-dialog-content>\n        <div class=\"form__field mb-0\">\n            <label for=\"amount\">\n                {{ 'Amount' | translate }}\n                <span class=\"color-red\">*</span>\n            </label>\n\n            <input\n                (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\n                [class.invalid]=\"form.controls.amount.touched && form.controls.amount.invalid\"\n                [decimalPoint]=\"data.assetInfo.decimal_point\"\n                [placeholder]=\"'1000000' | translate\"\n                appInputValidate=\"money\"\n                autofocus\n                class=\"form__field--input\"\n                formControlName=\"amount\"\n                id=\"amount\"\n                name=\"amount\"\n                type=\"text\"\n            />\n\n            <div *ngIf=\"form.controls.amount.invalid && (form.controls.amount.touched || form.controls.amount.dirty)\" class=\"error\">\n                <div *ngIf=\"form.controls.amount.hasError('required')\">\n                    {{ 'ERRORS.REQUIRED' | translate }}\n                </div>\n                <div *ngIf=\"form.controls.amount.hasError('insuficcientFunds')\">\n                    {{ form.controls.amount.errors['insuficcientFunds'].errorText | translate }}\n                </div>\n                <div *ngIf=\"form.controls.amount.hasError('asset_not_found')\">\n                    {{ 'ERRORS.ASSET_NOT_FOUND' | translate }}\n                </div>\n                <div *ngIf=\"form.controls.amount.hasError('greater_than_maximum_amount')\">\n                    {{ 'ERRORS.MAX' | translate : { max: form.controls.amount.errors['greater_than_maximum_amount'].max } }}\n                </div>\n            </div>\n        </div>\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <div fxFlex=\"1 1 auto\" fxLayout=\"row nowrap\" fxLayoutGap=\"1rem\">\n            <button mat-dialog-close class=\"outline big w-100\" type=\"button\">\n                {{ 'Cancel' | translate }}\n            </button>\n            <button [disabled]=\"form.invalid\" class=\"primary big w-100\" type=\"submit\">\n                {{ 'Confirm' | translate }}\n            </button>\n        </div>\n    </mat-dialog-actions>\n</form>\n","import { Component, inject } from '@angular/core';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { NonNullableFormBuilder } from '@angular/forms';\nimport { ZanoValidators } from '@parts/utils/zano-validators';\nimport { DeployAssetParams } from '@api/models/custom-asstest.model';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-confirm-create-custom-asset',\n    templateUrl: './confirm-create-custom-asset.component.html',\n    styleUrls: ['./confirm-create-custom-asset.component.scss'],\n})\nexport class ConfirmCreateCustomAssetComponent {\n    public readonly variablesService: VariablesService = inject(VariablesService);\n\n    public readonly data: { asset_descriptor: DeployAssetParams['asset_descriptor'] } = inject(MAT_DIALOG_DATA);\n\n    private readonly fb: NonNullableFormBuilder = inject(NonNullableFormBuilder);\n\n    public readonly confirmForm = this.fb.group(\n        {\n            password: this.fb.control(''),\n            appPass: this.fb.control(this.variablesService.appPass || ''),\n        },\n        { validators: [ZanoValidators.formMatch('password', 'appPass', 'passwordNotMatch')] }\n    );\n}\n","<form [formGroup]=\"confirmForm\">\n    <h3 mat-dialog-title>\n        {{ 'CONFIRM_CREATE_CUSTOM_ASSET.TITLE' | translate }}\n    </h3>\n\n    <mat-dialog-content>\n        <div class=\"table-info mb-2\">\n            <div class=\"row\">\n                <div class=\"label max-w-19-rem w-100\">\n                    {{ 'CONFIRM_CREATE_CUSTOM_ASSET.TABLE.LABEL1' | translate }}\n                </div>\n                <div class=\"text\">\n                    {{ data.asset_descriptor.ticker }}\n                </div>\n            </div>\n\n            <hr class=\"separator\" />\n\n            <div class=\"row\">\n                <div class=\"label max-w-19-rem w-100\">\n                    {{ 'CONFIRM_CREATE_CUSTOM_ASSET.TABLE.LABEL2' | translate }}\n                </div>\n                <div class=\"text\">\n                    {{ data.asset_descriptor.full_name }}\n                </div>\n            </div>\n\n            <hr class=\"separator\" />\n\n            <div class=\"row\">\n                <div class=\"label max-w-19-rem w-100\">\n                    {{ 'CONFIRM_CREATE_CUSTOM_ASSET.TABLE.LABEL3' | translate }}\n                </div>\n                <div class=\"text\">\n                    {{ data.asset_descriptor.total_max_supply | intToMoney : data.asset_descriptor.decimal_point }}\n                </div>\n            </div>\n\n            <hr class=\"separator\" />\n\n            <div class=\"row\">\n                <div class=\"label max-w-19-rem w-100\">\n                    {{ 'CONFIRM_CREATE_CUSTOM_ASSET.TABLE.LABEL4' | translate }}\n                </div>\n                <div class=\"text\">\n                    {{ data.asset_descriptor.current_supply | intToMoney : data.asset_descriptor.decimal_point }}\n                </div>\n            </div>\n\n            <hr class=\"separator\" />\n\n            <div class=\"row\">\n                <div class=\"label max-w-19-rem w-100\">\n                    {{ 'CONFIRM_CREATE_CUSTOM_ASSET.TABLE.LABEL5' | translate }}\n                </div>\n                <div class=\"text\">\n                    {{ data.asset_descriptor.decimal_point }}\n                </div>\n            </div>\n\n            <hr class=\"separator\" />\n\n            <div class=\"row\">\n                <div class=\"label max-w-19-rem w-100\">\n                    {{ 'CONFIRM_CREATE_CUSTOM_ASSET.TABLE.LABEL6' | translate }}\n                </div>\n                <div class=\"text\">\n                    {{ data.asset_descriptor.meta_info }}\n                </div>\n            </div>\n        </div>\n\n        <div *ngIf=\"variablesService.appPass\" class=\"form__field mb-0\">\n            <label for=\"password\">\n                {{ 'LOGIN.MASTER_PASS' | translate }}\n                <span class=\"color-red\">*</span>\n            </label>\n            <input\n                (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\n                [class.invalid]=\"confirmForm.touched && confirmForm.invalid\"\n                [placeholder]=\"'PLACEHOLDERS.MASTER_PASS_PLACEHOLDER' | translate\"\n                autofocus\n                class=\"form__field--input\"\n                formControlName=\"password\"\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n            />\n            <div *ngIf=\"confirmForm.touched && confirmForm.invalid\" class=\"error\">\n                <div *ngIf=\"confirmForm.hasError('passwordNotMatch')\">\n                    {{ 'LOGIN.FORM_ERRORS.WRONG_PASSWORD' | translate }}\n                </div>\n                <div *ngIf=\"confirmForm.controls.password.hasError('required')\">\n                    {{ 'LOGIN.FORM_ERRORS.PASS_REQUIRED' | translate }}\n                </div>\n            </div>\n        </div>\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <div fxFlex=\"1 1 auto\" fxLayout=\"row nowrap\" fxLayoutGap=\"1rem\">\n            <button [mat-dialog-close]=\"false\" class=\"outline big w-100\" type=\"button\">\n                {{ 'CONFIRM_CREATE_CUSTOM_ASSET.BUTTONS.BUTTON1' | translate }}\n            </button>\n            <button [mat-dialog-close]=\"true\" [disabled]=\"confirmForm.invalid\" class=\"primary big w-100\"\n                    type=\"submit\">\n                {{ 'CONFIRM_CREATE_CUSTOM_ASSET.BUTTONS.BUTTON2' | translate }}\n            </button>\n        </div>\n    </mat-dialog-actions>\n</form>\n","import { Component, inject, NgZone } from '@angular/core';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { NonNullableFormBuilder, ValidationErrors, Validators } from '@angular/forms';\nimport { AssetInfo } from '@api/models/assets.model';\nimport { EmitParams } from '@api/models/custom-asstest.model';\nimport { BackendService } from '@api/services/backend.service';\nimport { intToMoney } from '@parts/functions/int-to-money';\nimport BigNumber from 'bignumber.js';\nimport { moneyToInt } from '@parts/functions/money-to-int';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-emit-custom-asset',\n    templateUrl: './emit-custom-asset.component.html',\n    styleUrls: ['./emit-custom-asset.component.scss'],\n})\nexport class EmitCustomAssetComponent {\n    public readonly variablesService: VariablesService = inject(VariablesService);\n\n    public readonly data: { assetInfo: AssetInfo } = inject(MAT_DIALOG_DATA);\n\n    public readonly matDialogRef: MatDialogRef<EmitCustomAssetComponent> = inject(MatDialogRef);\n\n    private readonly _backendService: BackendService = inject(BackendService);\n\n    private readonly _fb: NonNullableFormBuilder = inject(NonNullableFormBuilder);\n\n    public readonly form = this._fb.group({\n        amount: this._fb.control('', [\n            Validators.required,\n            (control): ValidationErrors | null => {\n                const {\n                    assetInfo: { total_max_supply, current_supply, decimal_point },\n                } = this.data;\n                const { value: amount } = control;\n\n                const prepared_total_max_supply: BigNumber = new BigNumber(intToMoney(total_max_supply, decimal_point));\n                const prepared_current_supply: BigNumber = new BigNumber(intToMoney(current_supply, decimal_point));\n                if (prepared_current_supply.plus(amount).isGreaterThan(prepared_total_max_supply)) {\n                    return { greater_than_total_max_supply: { max: prepared_total_max_supply.toString() } };\n                }\n                return null;\n            },\n        ]),\n    });\n\n    private _ngZone: NgZone = inject(NgZone);\n\n    public submit(): void {\n        const {\n            currentWallet: { wallet_id, address },\n        } = this.variablesService;\n        const {\n            assetInfo: { asset_id, decimal_point },\n        } = this.data;\n        const { amount } = this.form.getRawValue();\n        const params: EmitParams = {\n            asset_id,\n            destinations: [\n                {\n                    address,\n                    amount: moneyToInt(amount, decimal_point).toString(),\n                    asset_id: '0000000000000000000000000000000000000000000000000000000000000000',\n                },\n            ],\n        };\n\n        this._backendService.asyncCall2a(\n            'call_wallet_rpc',\n            wallet_id,\n            {\n                jsonrpc: '2.0',\n                id: 0,\n                method: 'emit_asset',\n                params,\n            },\n            async (job_id: number): Promise<void> => {\n                this._ngZone.run(() => {\n                    this.matDialogRef.close(job_id);\n                });\n            }\n        );\n    }\n}\n","<form (ngSubmit)=\"submit()\" [formGroup]=\"form\">\n    <h3 mat-dialog-title>\n        {{ 'Emit' | translate }}\n    </h3>\n\n    <mat-dialog-content>\n        <div class=\"form__field mb-0\">\n            <label for=\"amount\">\n                {{ 'Amount' | translate }}\n                <span class=\"color-red\">*</span>\n            </label>\n            <input\n                (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\n                [class.invalid]=\"form.controls.amount.touched && form.controls.amount.invalid\"\n                [decimalPoint]=\"data.assetInfo.decimal_point\"\n                [placeholder]=\"'1000000' | translate\"\n                appInputValidate=\"money\"\n                autofocus\n                class=\"form__field--input\"\n                formControlName=\"amount\"\n                id=\"amount\"\n                name=\"amount\"\n                type=\"text\"\n            />\n            <div *ngIf=\"form.controls.amount.touched && form.controls.amount.invalid\" class=\"error\">\n                <div *ngIf=\"form.controls.amount.hasError('required')\">\n                    {{ 'ERRORS.REQUIRED' | translate }}\n                </div>\n                <div *ngIf=\"form.controls.amount.hasError('greater_than_total_max_supply')\">\n                    {{ 'ERRORS.GREATER_THAN_TOTAL_MAX_SUPPLY' | translate }}\n                </div>\n            </div>\n        </div>\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <div fxFlex=\"1 1 auto\" fxLayout=\"row nowrap\" fxLayoutGap=\"1rem\">\n            <button mat-dialog-close class=\"outline big w-100\" type=\"button\">\n                {{ 'Cancel' | translate }}\n            </button>\n            <button [disabled]=\"form.invalid\" class=\"primary big w-100\" type=\"submit\">\n                {{ 'Confirm' | translate }}\n            </button>\n        </div>\n    </mat-dialog-actions>\n</form>\n","import { Component, ElementRef, inject, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { AsyncCommandResults, BackendService } from '@api/services/backend.service';\nimport { Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-transaction-details-for-custom-assets',\n    templateUrl: './transaction-details-for-custom-assets.component.html',\n    styleUrls: ['./transaction-details-for-custom-assets.component.scss'],\n})\nexport class TransactionDetailsForCustomAssetsComponent implements OnInit, OnDestroy {\n    status: 'loading' | 'success' | 'error' = 'loading';\n\n    data: { job_id: number } = inject(MAT_DIALOG_DATA);\n\n    details: { key: string; value: any }[] = [];\n\n    @ViewChild('elDetailsList', { static: true }) elDetailsList: ElementRef;\n\n    isShowDetailsState: boolean = false;\n\n    private _backendService: BackendService = inject(BackendService);\n\n    private _destroy$: Subject<void> = new Subject<void>();\n\n    ngOnInit(): void {\n        this._backendService.dispatchAsyncCallResult$\n            .pipe(\n                filter(Boolean),\n                filter(({ job_id }: AsyncCommandResults) => this.data.job_id === job_id),\n                takeUntil(this._destroy$)\n            )\n            .subscribe({\n                next: ({ response }) => {\n                    if (response.error) {\n                        this.status = 'error';\n                        this.details = [{ key: 'Error', value: response.error.message }];\n                    } else {\n                        this.status = 'success';\n                        this.details = Object.entries(response.result).map(([key, value]) => ({ key, value }));\n                    }\n                },\n            });\n    }\n\n    ngOnDestroy(): void {\n        this._destroy$.next();\n        this._destroy$.complete();\n    }\n\n    toggleDetails(): void {\n        this.isShowDetailsState = !this.isShowDetailsState;\n        setTimeout(() => this.scrollToBottomDetailsList(), 100);\n    }\n\n    private scrollToBottomDetailsList(): void {\n        if (this.elDetailsList) {\n            const { nativeElement } = this.elDetailsList;\n            nativeElement.scrollTop = nativeElement.scrollHeight;\n        }\n    }\n}\n","<h3 mat-dialog-title>\n    {{ 'SEND_DETAILS_MODAL.TITLE1' | translate }}\n</h3>\n\n<mat-dialog-content fxLayout=\"column\">\n    <div class=\"status mb-2\" fxFlex=\"0 0 auto\" fxLayout=\"column\" fxLayoutAlign=\" center\">\n        <div *ngIf=\"status === 'success'\" class=\"image\">\n            <img alt=\"success\" src=\"assets/icons/aqua/transaction_success.svg\" />\n        </div>\n\n        <div *ngIf=\"status === 'error'\" class=\"image\">\n            <img alt=\"failed\" class=\"image\" src=\"assets/icons/red/transaction_failed.svg\" />\n        </div>\n\n        <div *ngIf=\"status === 'loading'\" class=\"loader\"></div>\n\n        <p class=\"color-primary mt-2\">\n            {{\n                {\n                    success: 'TOR_LIB_STATE.STATE_SENT_SUCCESS',\n                    error: 'TOR_LIB_STATE.STATE_SEND_FAILED',\n                    loading: 'Loading...'\n                }[status] | translate\n            }}\n        </p>\n    </div>\n\n    <div *ngIf=\"details.length\" class=\"details border-radius-0_8-rem overflow-hidden\" fxFlex=\"0 0 auto\" fxLayout=\"column\">\n        <div\n            (click)=\"toggleDetails()\"\n            class=\"header overflow-hidden py-1 px-2 w-100 cursor-pointer\"\n            fxLayout=\"row\"\n            fxLayoutAlign=\"space-between center\"\n        >\n            <p class=\"title text-ellipsis mr-2\">\n                {{ 'SEND_DETAILS_MODAL.TITLE2' | translate }}\n            </p>\n            <button fxLayout=\"row\" fxLayoutAlign=\"center center\">\n                <mat-icon\n                    class=\"ml-1\"\n                    svgIcon=\"zano-dropdown-arrow-down\"\n                    [ngClass]=\"{\n                        'rotate-180': isShowDetailsState\n                    }\"\n                ></mat-icon>\n            </button>\n        </div>\n        <div\n            [class.px-2]=\"isShowDetailsState\"\n            [class.py-1]=\"isShowDetailsState\"\n            [fxHide]=\"!isShowDetailsState\"\n            class=\"details-wrapper\"\n            fxFlex=\"1 1 auto\"\n            fxLayout=\"row\"\n        >\n            <ul #elDetailsList class=\"details-list scrolled-content\">\n                <ng-container *ngFor=\"let detail of details\">\n                    <li class=\"item mb-1 color-primary\" fxLayout=\"row nowrap\" fxLayoutAlign=\"start center\">\n                        <span class=\"text word-break-break-all\" [ngClass]=\"{ 'color-red': status === 'error' }\">\n                            {{ detail.key }}: {{ detail.value || 'Opps unknown error...' }}</span\n                        >\n                    </li>\n                </ng-container>\n            </ul>\n        </div>\n    </div>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n    <div fxFlex=\"1 1 auto\" fxLayout=\"row nowrap\" fxLayoutGap=\"1rem\">\n        <button [mat-dialog-close]=\"status === 'success'\" class=\"outline big w-100\" type=\"button\">\n            {{ 'MODALS.OK' | translate }}\n        </button>\n    </div>\n</mat-dialog-actions>\n","import { Component, inject, NgZone } from '@angular/core';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { NonNullableFormBuilder, ValidationErrors, Validators } from '@angular/forms';\nimport { AssetInfo } from '@api/models/assets.model';\nimport { BackendService } from '@api/services/backend.service';\nimport { UpdateAssetParams } from '@api/models/custom-asstest.model';\nimport { regExpHex } from '@parts/utils/zano-validators';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-update-custom-asset',\n    templateUrl: './update-custom-asset.component.html',\n    styleUrls: ['./update-custom-asset.component.scss'],\n})\nexport class UpdateCustomAssetComponent {\n    public readonly variablesService: VariablesService = inject(VariablesService);\n    public readonly data: { assetInfo: AssetInfo } = inject(MAT_DIALOG_DATA);\n    public readonly matDialogRef: MatDialogRef<UpdateCustomAssetComponent> = inject(MatDialogRef);\n    private readonly _backendService: BackendService = inject(BackendService);\n    private readonly fb: NonNullableFormBuilder = inject(NonNullableFormBuilder);\n    private _ngZone: NgZone = inject(NgZone);\n    public readonly form = this.fb.group({\n        owner: this.fb.control('', [\n            Validators.required,\n            (control): ValidationErrors | null => {\n                if (control.value.length === 64) {\n                    if (!regExpHex.test(control.value)) {\n                        return { hex_not_valid: true };\n                    } else {\n                        return null;\n                    }\n                }\n\n                if (control.value) {\n                    this._backendService.validateAddress(control.value, (status, data) => {\n                        this._ngZone.run(() => {\n                            if (status === false) {\n                                control.setErrors(Object.assign({ address_not_valid: true }, control.errors));\n                            } else {\n                                if (control.hasError('address_not_valid')) {\n                                    delete control.errors['address_not_valid'];\n                                    if (Object.keys(control.errors).length === 0) {\n                                        control.setErrors(null);\n                                    }\n                                }\n                            }\n                        });\n                    });\n                    return control.hasError('address_not_valid') ? { address_not_valid: true } : null;\n                }\n\n                return null;\n            },\n        ]),\n    });\n\n    public submit(): void {\n        const { wallet_id } = this.variablesService.currentWallet;\n        const { asset_id } = this.data.assetInfo;\n        const { owner } = this.form.getRawValue();\n        const params: UpdateAssetParams = {\n            asset_id,\n            asset_descriptor: {\n                owner,\n            },\n        };\n\n        this._backendService.asyncCall2a(\n            'call_wallet_rpc',\n            wallet_id,\n            {\n                jsonrpc: '2.0',\n                id: 0,\n                method: 'update_asset',\n                params,\n            },\n            async (job_id: number): Promise<void> => {\n                this._ngZone.run(() => {\n                    this.matDialogRef.close(job_id);\n                });\n            }\n        );\n    }\n}\n","<form (ngSubmit)=\"submit()\" [formGroup]=\"form\">\n    <h3 mat-dialog-title>\n        {{ 'Update asset' | translate }}\n    </h3>\n    <mat-dialog-content>\n        <div class=\"form__field mb-0\">\n            <label for=\"owner\">\n                {{ 'Owner' | translate }}\n                <span class=\"color-red\">*</span>\n            </label>\n            <input\n                (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\n                [class.invalid]=\"form.controls.owner.touched && form.controls.owner.invalid\"\n                [placeholder]=\"'Owner' | translate\"\n                autofocus\n                class=\"form__field--input\"\n                formControlName=\"owner\"\n                id=\"owner\"\n                name=\"owner\"\n                type=\"text\"\n            />\n            <div *ngIf=\"form.controls.owner.invalid && (form.controls.owner.touched || form.controls.owner.dirty)\" class=\"error\">\n                <div *ngIf=\"form.controls.owner.hasError('required')\">\n                    {{ 'ERRORS.REQUIRED' | translate }}\n                </div>\n                <div *ngIf=\"form.controls.owner.hasError('hex_not_valid')\">\n                    {{ 'ERRORS.HEX_NOT_VALID' | translate }}\n                </div>\n                <div *ngIf=\"form.controls.owner.hasError('address_not_valid')\">\n                    {{ 'ERRORS.ADDRESS_NOT_VALID' | translate }}\n                </div>\n            </div>\n        </div>\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <div fxFlex=\"1 1 auto\" fxLayout=\"row nowrap\" fxLayoutGap=\"1rem\">\n            <button mat-dialog-close class=\"outline big w-100\" type=\"button\">\n                {{ 'Cancel' | translate }}\n            </button>\n            <button [disabled]=\"form.invalid\" class=\"primary big w-100\" type=\"submit\">\n                {{ 'Confirm' | translate }}\n            </button>\n        </div>\n    </mat-dialog-actions>\n</form>\n","import { Component, inject, NgZone } from '@angular/core';\nimport { BreadcrumbItems } from '@parts/components/breadcrumbs/breadcrumbs.models';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { AbstractControl, FormControl, FormGroup, NonNullableFormBuilder, ValidationErrors, Validators } from '@angular/forms';\nimport { ConfirmCreateCustomAssetComponent } from '../../modals/confirm-create-custom-asset/confirm-create-custom-asset.component';\nimport { AssetDescriptor, DeployAssetParams, Destinations } from '@api/models/custom-asstest.model';\nimport { filter, take } from 'rxjs/operators';\nimport { BackendService } from '@api/services/backend.service';\nimport { Router } from '@angular/router';\nimport { BigNumber } from 'bignumber.js';\nimport { intToMoney } from '@parts/functions/int-to-money';\nimport { moneyToInt } from '@parts/functions/money-to-int';\nimport { TransactionDetailsForCustomAssetsComponent } from '../../modals/transaction-details-for-custom-assets/transaction-details-for-custom-assets.component';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\n\ntype CreateNewAssetFrom = FormGroup<{\n    ticker: FormControl<string>;\n    full_name: FormControl<string>;\n    total_max_supply: FormControl<string>;\n    current_supply: FormControl<string>;\n    decimal_point: FormControl<string>;\n    meta_info: FormControl<string>;\n    hidden_supply: FormControl<boolean>;\n}>;\n\n@Component({\n    selector: 'app-create-new-asset',\n    templateUrl: './create-new-asset.component.html',\n    styleUrls: ['./create-new-asset.component.scss'],\n})\nexport class CreateNewAssetComponent {\n    public readonly breadcrumbItems: BreadcrumbItems = [\n        {\n            routerLink: '/custom-assets',\n            title: 'CREATE_NEW_ASSETS.BREADCRUMBS.BREADCRUMB1',\n        },\n        {\n            title: 'CREATE_NEW_ASSETS.BREADCRUMBS.BREADCRUMB2',\n        },\n    ];\n\n    public readonly variablesService: VariablesService = inject(VariablesService);\n\n    private readonly _backendService: BackendService = inject(BackendService);\n\n    private readonly _fb: NonNullableFormBuilder = inject(NonNullableFormBuilder);\n\n    public form: CreateNewAssetFrom = this._fb.group(\n        {\n            ticker: this._fb.control<string>(undefined, [Validators.required, Validators.minLength(2), Validators.maxLength(30)]),\n            full_name: this._fb.control<string>(undefined, [Validators.required, Validators.minLength(2), Validators.maxLength(150)]),\n            total_max_supply: this._fb.control<string>(undefined, [Validators.required]),\n            current_supply: this._fb.control<string>(undefined, [Validators.required]),\n            decimal_point: this._fb.control<string>('12', [Validators.required, Validators.min(0), Validators.max(18)]),\n            meta_info: this._fb.control<string>('', [Validators.maxLength(255)]),\n            hidden_supply: this._fb.control<boolean>(false),\n        },\n        {\n            validators: [\n                (control: AbstractControl) => {\n                    const error = {\n                        current_supply: 'ERRORS.CANNOT_BE_GREATER_THAN_TOTAL_MAX_SUPPLY',\n                    };\n                    const total_max_supply = new BigNumber(control.get('total_max_supply').value);\n                    const current_supply = new BigNumber(control.get('current_supply').value);\n\n                    if (total_max_supply.isLessThan(current_supply)) {\n                        return error;\n                    }\n\n                    return null;\n                },\n                (control: AbstractControl): ValidationErrors => {\n                    const { maximum_value } = this.variablesService;\n                    const { value: decimal_point } = control.get('decimal_point');\n                    const { value: total_max_supply } = control.get('total_max_supply');\n\n                    const prepared_total_max_supply = new BigNumber(total_max_supply);\n                    const max = new BigNumber(intToMoney(maximum_value, +decimal_point || 0));\n                    const error = { greater_than_max: { max: max.toString() } };\n\n                    if (prepared_total_max_supply.isGreaterThan(max)) {\n                        return error;\n                    }\n\n                    return null;\n                },\n            ],\n        }\n    );\n\n    private readonly _router: Router = inject(Router);\n\n    private readonly _matDialog: MatDialog = inject(MatDialog);\n\n    private readonly _ngZone: NgZone = inject(NgZone);\n\n    details(job_id: number): void {\n        const config: MatDialogConfig = {\n            data: {\n                job_id,\n            },\n            disableClose: true,\n        };\n        this._matDialog\n            .open(TransactionDetailsForCustomAssetsComponent, config)\n            .afterClosed()\n            .pipe(filter(Boolean), take(1))\n            .subscribe({\n                next: async () => {\n                    await this._ngZone.run(async () => {\n                        await this._router.navigate(['/wallet/custom-assets']);\n                    });\n                },\n            });\n    }\n\n    submit(): void {\n        const { address, wallet_id } = this.variablesService.currentWallet;\n        const { ticker, full_name, meta_info, hidden_supply, current_supply, total_max_supply, decimal_point } = this.form.getRawValue();\n\n        let countDestination = 1;\n        let destinationAmount: string = moneyToInt(current_supply, decimal_point).toString();\n        const halfDestinationAmount: string = new BigNumber(destinationAmount).div(2).toString();\n\n        if (\n            !halfDestinationAmount.includes('.') &&\n            new BigNumber(halfDestinationAmount).plus(halfDestinationAmount).eq(destinationAmount)\n        ) {\n            countDestination = 2;\n            destinationAmount = halfDestinationAmount;\n        }\n\n        const asset_descriptor: AssetDescriptor = {\n            ticker,\n            full_name,\n            meta_info,\n            hidden_supply,\n            decimal_point: new BigNumber(decimal_point).toNumber(),\n            total_max_supply: moneyToInt(total_max_supply, decimal_point).toString(),\n        };\n        const destinations: Destinations = [];\n\n        for (let i = 0; i < countDestination; i++) {\n            destinations.push({\n                address,\n                amount: destinationAmount,\n                asset_id: '0000000000000000000000000000000000000000000000000000000000000000',\n            });\n        }\n\n        const params: DeployAssetParams = {\n            asset_descriptor,\n            destinations,\n        };\n\n        const config: MatDialogConfig = {\n            disableClose: true,\n            data: {\n                asset_descriptor: {\n                    ...asset_descriptor,\n                    current_supply: moneyToInt(current_supply, decimal_point).toString(),\n                },\n            },\n        };\n        this._matDialog\n            .open(ConfirmCreateCustomAssetComponent, config)\n            .afterClosed()\n            .pipe(filter(Boolean), take(1))\n            .subscribe({\n                next: () => {\n                    this._backendService.asyncCall2a(\n                        'call_wallet_rpc',\n                        wallet_id,\n                        {\n                            jsonrpc: '2.0',\n                            id: 0,\n                            method: 'deploy_asset',\n                            params,\n                        },\n                        async (job_id: number): Promise<void> => {\n                            this._ngZone.run(() => this.details(job_id));\n                        }\n                    );\n                },\n            });\n    }\n}\n","<div class=\"scrolled-content\" fxFlex=\"1 1 auto\" fxLayout=\"column\">\n    <app-breadcrumbs [items]=\"breadcrumbItems\" class=\"mb-2\"></app-breadcrumbs>\n\n    <form (ngSubmit)=\"submit()\" [formGroup]=\"form\" class=\"form\" fxFlex=\"0 1 50rem\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\n        <!-- ticker -->\n        <div class=\"form__field--row\">\n            <div class=\"form__field\">\n                <label for=\"ticker\">\n                    {{ 'CREATE_NEW_ASSETS.FORM.LABELS.LABEL1' | translate }}\n                    <span class=\"color-red\">*</span>\n                </label>\n                <input\n                    (contextmenu)=\"variablesService.onContextMenu($event)\"\n                    [placeholder]=\"'CT' | translate\"\n                    class=\"form__field--input\"\n                    formControlName=\"ticker\"\n                    id=\"ticker\"\n                    type=\"text\"\n                />\n                <div *ngIf=\"form.controls.ticker.invalid && (form.controls.ticker.dirty || form.controls.ticker.touched)\" class=\"error\">\n                    <div *ngIf=\"form.controls.ticker.errors['required']\">\n                        {{ 'ERRORS.REQUIRED' | translate }}\n                    </div>\n\n                    <div *ngIf=\"form.controls.ticker.errors['minlength'] as err\">\n                        {{ 'ERRORS.MIN_LENGTH' | translate : { requiredLength: err.requiredLength } }}\n                    </div>\n\n                    <div *ngIf=\"form.controls.ticker.errors['maxlength'] as err\">\n                        {{ 'ERRORS.MAX_LENGTH' | translate : { requiredLength: err.requiredLength } }}\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"form__field\">\n                <label for=\"full_name\">\n                    {{ 'CREATE_NEW_ASSETS.FORM.LABELS.LABEL2' | translate }}\n                    <span class=\"color-red\">*</span>\n                </label>\n                <input\n                    (contextmenu)=\"variablesService.onContextMenu($event)\"\n                    [placeholder]=\"'CREATE_NEW_ASSETS.FORM.PLACEHOLDERS.PLACEHOLDER1' | translate\"\n                    class=\"form__field--input\"\n                    formControlName=\"full_name\"\n                    id=\"full_name\"\n                    type=\"text\"\n                />\n                <div\n                    *ngIf=\"form.controls.full_name.invalid && (form.controls.full_name.dirty || form.controls.full_name.touched)\"\n                    class=\"error\"\n                >\n                    <div *ngIf=\"form.controls.full_name.errors['required']\">\n                        {{ 'ERRORS.REQUIRED' | translate }}\n                    </div>\n\n                    <div *ngIf=\"form.controls.full_name.errors['minlength'] as err\">\n                        {{ 'ERRORS.MIN_LENGTH' | translate : { requiredLength: err.requiredLength } }}\n                    </div>\n\n                    <div *ngIf=\"form.controls.full_name.errors['maxLength'] as err\">\n                        {{ 'ERRORS.MAX_LENGTH' | translate : { requiredLength: err.requiredLength } }}\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- total_max_supply -->\n        <div class=\"form__field--row\">\n            <div class=\"form__field\">\n                <label for=\"total_max_supply\">\n                    {{ 'CREATE_NEW_ASSETS.FORM.LABELS.LABEL3' | translate }}\n                    <span class=\"color-red\">*</span>\n                </label>\n                <input\n                    (contextmenu)=\"variablesService.onContextMenu($event)\"\n                    [placeholder]=\"'1000000000' | translate\"\n                    appInputValidate=\"money\"\n                    [decimalPoint]=\"+form.controls.decimal_point.value\"\n                    class=\"form__field--input\"\n                    formControlName=\"total_max_supply\"\n                    id=\"total_max_supply\"\n                    type=\"text\"\n                />\n                <div\n                    *ngIf=\"\n                        form.controls.total_max_supply.invalid &&\n                        (form.controls.total_max_supply.dirty || form.controls.total_max_supply.touched)\n                    \"\n                    class=\"error\"\n                >\n                    <span *ngIf=\"form.controls.total_max_supply.errors['required']\">\n                        {{ 'ERRORS.REQUIRED' | translate }}\n                    </span>\n                </div>\n\n                <div *ngIf=\"form.hasError('greater_than_max') && (form.dirty || form.touched)\" class=\"error\">\n                    {{ 'ERRORS.TO_BIG_TOTAL_SUPPLY' | translate }}\n                    {{ 'ERRORS.MAX' | translate : { max: form.errors['greater_than_max'].max } }}\n                </div>\n            </div>\n\n            <!-- current_supply -->\n            <div class=\"form__field\">\n                <label for=\"current_supply\">\n                    {{ 'CREATE_NEW_ASSETS.FORM.LABELS.LABEL4' | translate }}\n                    <span class=\"color-red\">*</span>\n                </label>\n                <input\n                    (contextmenu)=\"variablesService.onContextMenu($event)\"\n                    [placeholder]=\"'1000000000' | translate\"\n                    appInputValidate=\"money\"\n                    [decimalPoint]=\"+form.controls.decimal_point.value\"\n                    class=\"form__field--input\"\n                    formControlName=\"current_supply\"\n                    id=\"current_supply\"\n                    type=\"text\"\n                />\n                <div\n                    *ngIf=\"\n                        form.controls.current_supply.invalid && (form.controls.current_supply.dirty || form.controls.current_supply.touched)\n                    \"\n                    class=\"error\"\n                >\n                    <div *ngIf=\"form.controls.current_supply.errors['required']\">\n                        {{ 'ERRORS.REQUIRED' | translate }}\n                    </div>\n                </div>\n                <div *ngIf=\"form.hasError('current_supply') && (form.dirty || form.touched)\" class=\"error\">\n                    {{ form.errors['current_supply'] | translate }}\n                </div>\n            </div>\n        </div>\n\n        <!-- decimal_point -->\n        <div class=\"form__field\">\n            <label for=\"decimal_point\">\n                {{ 'CREATE_NEW_ASSETS.FORM.LABELS.LABEL5' | translate }}\n                <span class=\"color-red\">*</span>\n            </label>\n            <input\n                (contextmenu)=\"variablesService.onContextMenu($event)\"\n                [placeholder]=\"'12' | translate\"\n                appInputValidate=\"integer\"\n                class=\"form__field--input\"\n                formControlName=\"decimal_point\"\n                id=\"decimal_point\"\n                type=\"text\"\n            />\n            <div\n                *ngIf=\"form.controls.decimal_point.invalid && (form.controls.decimal_point.dirty || form.controls.decimal_point.touched)\"\n                class=\"error\"\n            >\n                <div *ngIf=\"form.controls.decimal_point.errors['required']\">\n                    {{ 'ERRORS.REQUIRED' | translate }}\n                </div>\n\n                <div *ngIf=\"form.controls.decimal_point.errors['min'] as error\">\n                    {{ 'ERRORS.MIN' | translate : { min: error.min } }}\n                </div>\n\n                <div *ngIf=\"form.controls.decimal_point.errors['max'] as error\">\n                    {{ 'ERRORS.MAX' | translate : { max: error.max } }}\n                </div>\n            </div>\n        </div>\n\n        <!-- meta_info -->\n        <div class=\"form__field textarea\">\n            <label for=\"meta_info\">\n                {{ 'CREATE_NEW_ASSETS.FORM.LABELS.LABEL6' | translate }}\n            </label>\n            <textarea\n                [placeholder]=\"'CREATE_NEW_ASSETS.FORM.PLACEHOLDERS.PLACEHOLDER2' | translate\"\n                formControlName=\"meta_info\"\n                id=\"meta_info\"\n            ></textarea>\n\n            <div\n                *ngIf=\"form.controls.meta_info.invalid && (form.controls.meta_info.dirty || form.controls.meta_info.touched)\"\n                class=\"error\"\n            >\n                <div *ngIf=\"form.controls.meta_info.errors['maxlength'] as err\">\n                    {{ 'ERRORS.MAX_LENGTH' | translate : { requiredLength: err.requiredLength } }}\n                </div>\n            </div>\n        </div>\n\n        <button [disabled]=\"form.invalid\" class=\"primary big max-w-19-rem w-100\" type=\"submit\">\n            {{ 'CREATE_NEW_ASSETS.FORM.BUTTONS.BUTTON1' | translate }}\n        </button>\n    </form>\n</div>\n","import { Component, inject, OnInit } from '@angular/core';\nimport { PaginatePipeArgs } from 'ngx-pagination';\nimport { CdkOverlayOrigin, ConnectedPosition } from '@angular/cdk/overlay';\nimport { AssetInfo } from '@api/models/assets.model';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { WalletsService } from '@parts/services/wallets.service';\nimport { AssetDetailsComponent } from '@parts/modals/asset-details/asset-details.component';\nimport { UpdateCustomAssetComponent } from '../../modals/update-custom-asset/update-custom-asset.component';\nimport { BurnCustomAssetComponent } from '../../modals/burn-custom-asset/burn-custom-asset.component';\nimport { EmitCustomAssetComponent } from '../../modals/emit-custom-asset/emit-custom-asset.component';\nimport { filter, switchMap } from 'rxjs/operators';\nimport { TransactionDetailsForCustomAssetsComponent } from '../../modals/transaction-details-for-custom-assets/transaction-details-for-custom-assets.component';\nimport { Observable, take } from 'rxjs';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-custom-assets',\n    templateUrl: './custom-assets.component.html',\n    styleUrls: ['./custom-assets.component.scss'],\n})\nexport class CustomAssetsComponent implements OnInit {\n    paginationId: string = 'pagination-custom-assets-id';\n\n    triggerOrigin: CdkOverlayOrigin | undefined;\n\n    currentAssetInfo: AssetInfo | undefined;\n\n    isOpenDropDownMenu: boolean = false;\n\n    connectedOverlayPositions: ConnectedPosition[] = [\n        {\n            originX: 'end',\n            originY: 'top',\n            overlayX: 'end',\n            overlayY: 'top',\n            offsetY: 30,\n        },\n    ];\n    paginateArgs: PaginatePipeArgs = {\n        id: this.paginationId,\n        itemsPerPage: 10,\n        currentPage: 1,\n    };\n\n    public variablesService: VariablesService = inject(VariablesService);\n\n    private readonly _matDialog: MatDialog = inject(MatDialog);\n\n    private readonly _walletsService: WalletsService = inject(WalletsService);\n\n    get assets(): AssetInfo[] {\n        return this._walletsService.currentWallet?.assetsInfoWhitelist?.own_assets ?? [];\n    }\n\n    get isShowPagination(): boolean {\n        const { currentWallet } = this.variablesService;\n        if (!currentWallet) {\n            return false;\n        }\n        const {\n            assetsInfoWhitelist: { own_assets },\n        } = currentWallet;\n        return own_assets?.length > this.paginateArgs.itemsPerPage;\n    }\n\n    ngOnInit(): void {\n        this._loadAssets();\n    }\n\n    toggleDropDownMenu(trigger: CdkOverlayOrigin, asset: AssetInfo): void {\n        this.isOpenDropDownMenu = !this.isOpenDropDownMenu;\n        this.triggerOrigin = trigger;\n        this.currentAssetInfo = asset;\n    }\n\n    closeDropDownMenu(): void {\n        this.isOpenDropDownMenu = false;\n    }\n\n    trackByAssets(index: number): number | string {\n        return index;\n    }\n\n    trackByPages(index: number): number | string {\n        return index;\n    }\n\n    openDialog(type: 'assetDetails' | 'emit' | 'burn' | 'update'): void {\n        const config: MatDialogConfig = {\n            data: {\n                assetInfo: this.currentAssetInfo,\n            },\n        };\n\n        let closed: Observable<number | undefined>;\n\n        switch (type) {\n            case 'assetDetails': {\n                this._matDialog.open(AssetDetailsComponent, config);\n                return;\n            }\n            case 'emit': {\n                closed = this._matDialog\n                    .open<EmitCustomAssetComponent, any, number | undefined>(EmitCustomAssetComponent, config)\n                    .afterClosed();\n                break;\n            }\n            case 'burn': {\n                closed = this._matDialog\n                    .open<BurnCustomAssetComponent, any, number | undefined>(BurnCustomAssetComponent, config)\n                    .afterClosed();\n                break;\n            }\n            case 'update': {\n                closed = this._matDialog\n                    .open<UpdateCustomAssetComponent, any, number | undefined>(UpdateCustomAssetComponent, config)\n                    .afterClosed();\n                break;\n            }\n        }\n\n        closed\n            .pipe(\n                filter(job_id => typeof job_id === 'number'),\n                switchMap(job_id => {\n                    const config: MatDialogConfig = {\n                        data: {\n                            job_id,\n                        },\n                    };\n                    return this._matDialog\n                        .open<TransactionDetailsForCustomAssetsComponent, any, boolean>(TransactionDetailsForCustomAssetsComponent, config)\n                        .afterClosed();\n                }),\n                filter(Boolean),\n                take(1)\n            )\n            .subscribe({\n                next: () => this._loadAssets(),\n            });\n    }\n\n    private _loadAssets(): void {\n        const {\n            currentWallet: { wallet_id },\n        } = this._walletsService;\n        this._walletsService.loadAssetsWhitelist(wallet_id);\n    }\n}\n","<div [ngClass]=\"{ center: !assets.length }\" class=\"container\">\n    <ng-container *ngIf=\"assets.length; else emptyTemplate\">\n        <div class=\"scrolled-content mb-2\" fxFlex=\"1 1 auto\">\n            <table class=\"zano-table\">\n                <thead>\n                    <tr>\n                        <th>\n                            <div class=\"bg title\">\n                                {{ 'CUSTOM_ASSETS.TABLE.LABELS.LABEL1' | translate }}\n                            </div>\n                        </th>\n                        <th>\n                            <div class=\"bg title\">\n                                {{ 'CUSTOM_ASSETS.TABLE.LABELS.LABEL2' | translate }}\n                            </div>\n                        </th>\n                        <th>\n                            <div class=\"bg title\">\n                                {{ 'CUSTOM_ASSETS.TABLE.LABELS.LABEL3' | translate }}\n                            </div>\n                        </th>\n                        <th>\n                            <div class=\"bg title\">\n                                {{ 'CUSTOM_ASSETS.TABLE.LABELS.LABEL4' | translate }}\n                            </div>\n                        </th>\n                        <th>\n                            <div class=\"bg title\">\n                                {{ 'CUSTOM_ASSETS.TABLE.LABELS.LABEL5' | translate }}\n                            </div>\n                        </th>\n                        <th>\n                            <div class=\"bg title\">\n                                {{ 'CUSTOM_ASSETS.TABLE.LABELS.LABEL6' | translate }}\n                            </div>\n                        </th>\n                        <th>\n                            <div class=\"bg title\">&nbsp;</div>\n                        </th>\n                    </tr>\n                    <div class=\"row-divider\"></div>\n                </thead>\n                <tbody>\n                    <ng-container *ngFor=\"let asset of assets | paginate : paginateArgs; trackBy: trackByAssets\">\n                        <tr>\n                            <td (contextmenu)=\"variablesService.onContextMenuOnlyCopy($event, asset.asset_id)\">\n                                {{ asset.asset_id | zanoShortString }}\n                            </td>\n                            <td>{{ asset.ticker }}</td>\n                            <td>{{ asset.full_name }}</td>\n                            <td>{{ asset.total_max_supply | intToMoney : asset.decimal_point }}</td>\n                            <td>{{ asset.current_supply | intToMoney : asset.decimal_point }}</td>\n                            <td>{{ asset.decimal_point }}</td>\n                            <td>\n                                <div fxLayout=\"row\" fxLayoutAlign=\"end center\">\n                                    <button\n                                        #trigger=\"cdkOverlayOrigin\"\n                                        (click)=\"$event.stopPropagation(); toggleDropDownMenu(trigger, asset)\"\n                                        [disabled]=\"false\"\n                                        cdkOverlayOrigin\n                                        class=\"btn-icon circle row-options small ml-auto\"\n                                        type=\"button\"\n                                    >\n                                        <mat-icon class=\"small\" svgIcon=\"zano-row-options\"></mat-icon>\n                                    </button>\n                                </div>\n                            </td>\n                        </tr>\n                        <tr class=\"row-divider\"></tr>\n                    </ng-container>\n                </tbody>\n            </table>\n\n            <a class=\"btn create-new-asset primary big\" routerLink=\"/wallet/create-new-asset\">{{\n                'CUSTOM_ASSETS.BUTTONS.BUTTON1' | translate\n            }}</a>\n        </div>\n\n        <pagination-template\n            #p=\"paginationApi\"\n            (pageChange)=\"paginateArgs.currentPage = $event\"\n            *ngIf=\"isShowPagination\"\n            [id]=\"paginationId\"\n            class=\"ngx-pagination custom-pagination\"\n        >\n            <button (click)=\"p.previous()\" [disabled]=\"p.isFirstPage()\" class=\"pagination-previous btn-icon circle small mr-0_5\">\n                <mat-icon svgIcon=\"zano-arrow-left\"></mat-icon>\n            </button>\n\n            <div *ngFor=\"let page of p.pages; trackBy: trackByPages\" [class.current]=\"p.getCurrent() === page.value\" class=\"mr-0_5\">\n                <a (click)=\"p.setCurrent(page.value)\" *ngIf=\"p.getCurrent() !== page.value\">\n                    <span>{{ page.label }}</span>\n                </a>\n                <div *ngIf=\"p.getCurrent() === page.value\">\n                    <span>{{ page.label }}</span>\n                </div>\n            </div>\n\n            <button (click)=\"p.next()\" [disabled]=\"p.isLastPage()\" class=\"pagination-next btn-icon circle small\">\n                <mat-icon svgIcon=\"zano-arrow-right\"></mat-icon>\n            </button>\n        </pagination-template>\n    </ng-container>\n\n    <ng-template #emptyTemplate>\n        <p class=\"mb-2\">{{ 'CUSTOM_ASSETS.TEXT.EMPTY' | translate }}</p>\n        <a class=\"btn create-new-asset primary big\" routerLink=\"/wallet/create-new-asset\">{{\n            'CUSTOM_ASSETS.BUTTONS.BUTTON1' | translate\n        }}</a>\n    </ng-template>\n</div>\n\n<ng-template\n    (backdropClick)=\"$event.stopPropagation(); closeDropDownMenu()\"\n    [cdkConnectedOverlayBackdropClass]=\"'opacity-0'\"\n    [cdkConnectedOverlayHasBackdrop]=\"true\"\n    [cdkConnectedOverlayOpen]=\"isOpenDropDownMenu\"\n    [cdkConnectedOverlayOrigin]=\"triggerOrigin\"\n    [cdkConnectedOverlayPositions]=\"connectedOverlayPositions\"\n    cdkConnectedOverlay\n>\n    <ul (click)=\"closeDropDownMenu()\" class=\"list\">\n        <li class=\"item\">\n            <button (click)=\"openDialog('assetDetails')\" class=\"w-100 px-2 py-1\" type=\"button\">\n                <mat-icon svgIcon=\"zano-info-v2\" class=\"mr-1\"></mat-icon>\n                <span>{{ 'CUSTOM_ASSETS.DROP_MENU.LABELS.LABEL1' | translate }}</span>\n            </button>\n        </li>\n        <li class=\"item\">\n            <button (click)=\"openDialog('emit')\" class=\"w-100 px-2 py-1\" type=\"button\">\n                <mat-icon svgIcon=\"zano-emit\" class=\"mr-1\"></mat-icon>\n                <span>{{ 'CUSTOM_ASSETS.DROP_MENU.LABELS.LABEL2' | translate }}</span>\n            </button>\n        </li>\n        <li class=\"item\">\n            <button (click)=\"openDialog('update')\" class=\"w-100 px-2 py-1\" type=\"button\">\n                <mat-icon svgIcon=\"zano-update\" class=\"mr-1\"></mat-icon>\n                <span>{{ 'CUSTOM_ASSETS.DROP_MENU.LABELS.LABEL3' | translate }}</span>\n            </button>\n        </li>\n        <li class=\"item\">\n            <button (click)=\"openDialog('burn')\" class=\"w-100 px-2 py-1\" type=\"button\">\n                <mat-icon svgIcon=\"zano-burn\" class=\"mr-1\"></mat-icon>\n                <span>{{ 'CUSTOM_ASSETS.DROP_MENU.LABELS.LABEL4' | translate }}</span>\n            </button>\n        </li>\n    </ul>\n</ng-template>\n","import { Component, NgZone, OnDestroy, OnInit } from '@angular/core';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { PaginationService } from '@store/pagination/pagination.service';\nimport { PaginationStore } from '@store/pagination/pagination.store';\nimport { Wallet } from '@api/models/wallet.model';\nimport { BackendService } from '@api/services/backend.service';\nimport { Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { hasOwnProperty } from '@parts/functions/has-own-property';\nimport { collapseOnLeaveAnimation, expandOnEnterAnimation } from 'angular-animations';\nimport { ZanoAssetInfo, zanoAssetInfo } from '@parts/data/assets';\n\n@Component({\n    selector: 'app-history',\n    templateUrl: './history.component.html',\n    styleUrls: ['./history.component.scss'],\n    animations: [expandOnEnterAnimation(), collapseOnLeaveAnimation()],\n})\nexport class HistoryComponent implements OnInit, OnDestroy {\n    public zanoAssetInfo: ZanoAssetInfo = zanoAssetInfo;\n\n    public opened_transaction_details: string | undefined;\n\n    public stop_paginate: boolean = false;\n\n    public mining: boolean = false;\n\n    public wallet: Wallet;\n\n    private _destroy$: Subject<void> = new Subject<void>();\n\n    constructor(\n        public variablesService: VariablesService,\n        private _pagination: PaginationService,\n        private _backendService: BackendService,\n        private _ngZone: NgZone,\n        private _paginationStore: PaginationStore\n    ) {}\n\n    get currentWallet(): Wallet {\n        return this.variablesService.currentWallet;\n    }\n\n    ngOnInit(): void {\n        this.init();\n\n        this.variablesService.currentWalletChangedEvent.pipe(filter(Boolean), takeUntil(this._destroy$)).subscribe({\n            next: (wallet: Wallet) => {\n                this.getRecentTransfers();\n                this.mining = wallet.exclude_mining_txs;\n            },\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.opened_transaction_details = undefined;\n\n        this._destroy$.next();\n        this._destroy$.complete();\n    }\n\n    init(): void {\n        let restore = false;\n        if (hasOwnProperty(this.variablesService.after_sync_request, String(this.variablesService.currentWallet.wallet_id))) {\n            restore = this.variablesService.after_sync_request[this.variablesService.currentWallet.wallet_id];\n        }\n        if (!this.variablesService.sync_started && restore && this.variablesService.currentWallet.wallet_id) {\n            this.wallet = this.variablesService.getNotLoadedWallet();\n            if (this.wallet) {\n                this.tick();\n            }\n            // if this is was restore wallet, and it was selected on moment when sync completed\n            this.getRecentTransfers();\n            this.variablesService.after_sync_request[this.variablesService.currentWallet.wallet_id] = false;\n        }\n        let after_sync_request = false;\n        if (hasOwnProperty(this.variablesService.after_sync_request, String(this.variablesService.currentWallet.wallet_id))) {\n            after_sync_request = this.variablesService.after_sync_request[this.variablesService.currentWallet.wallet_id];\n        }\n        if (after_sync_request && !this.variablesService.sync_started) {\n            // if user click on the wallet at the first time after restore.\n            this.getRecentTransfers();\n        }\n\n        if (hasOwnProperty(this.variablesService.stop_paginate, String(this.variablesService.currentWallet.wallet_id))) {\n            this.stop_paginate = this.variablesService.stop_paginate[this.variablesService.currentWallet.wallet_id];\n        } else {\n            this.stop_paginate = false;\n        }\n        // this will hide pagination a bit earlier\n        this.wallet = this.variablesService.getNotLoadedWallet();\n        if (this.wallet) {\n            this.tick();\n        }\n    }\n\n    resetPaginationValues(): void {\n        this._ngZone.run(() => {\n            const total_history_item = this.variablesService.currentWallet.total_history_item;\n            const count = this.variablesService.count;\n            this.variablesService.currentWallet.totalPages = Math.ceil(total_history_item / count);\n            this.variablesService.currentWallet.exclude_mining_txs = this.mining;\n            this.variablesService.currentWallet.currentPage = 1;\n\n            if (!this.variablesService.currentWallet.totalPages) {\n                this.variablesService.currentWallet.totalPages = 1;\n            }\n            this.variablesService.currentWallet.totalPages > this.variablesService.maxPages\n                ? (this.variablesService.currentWallet.pages = new Array(5).fill(1).map((value, index) => value + index))\n                : (this.variablesService.currentWallet.pages = new Array(this.variablesService.currentWallet.totalPages)\n                      .fill(1)\n                      .map((value, index) => value + index));\n        });\n    }\n\n    setPage(pageNumber: number): void {\n        // this is will allow pagination for wallets that was open from existed wallets'\n        if (pageNumber === this.variablesService.currentWallet.currentPage) {\n            return;\n        }\n        if (this.variablesService.currentWallet.open_from_exist && !this.variablesService.currentWallet.updated) {\n            this.variablesService.get_recent_transfers = false;\n            this.variablesService.currentWallet.updated = true;\n        }\n        // if not running get_recent_transfers callback\n        if (!this.variablesService.get_recent_transfers) {\n            this.variablesService.currentWallet.currentPage = pageNumber;\n        }\n        if (!this.variablesService.get_recent_transfers) {\n            this.getRecentTransfers();\n        }\n    }\n\n    toggleMiningTransactions(): void {\n        if (!this.variablesService.sync_started && !this.wallet) {\n            const value = this._paginationStore.value;\n            if (!value) {\n                this._paginationStore.setPage(1, 0, this.variablesService.currentWallet.wallet_id); // add back page for the first page\n            } else {\n                const pages = value.filter(item => item.walletID === this.variablesService.currentWallet.wallet_id);\n                if (pages.length === 0) {\n                    this._paginationStore.setPage(1, 0, this.variablesService.currentWallet.wallet_id); // add back page for the first page\n                }\n            }\n            this.mining = !this.mining;\n            this.resetPaginationValues();\n            this.getRecentTransfers();\n        }\n    }\n\n    getRecentTransfers(): void {\n        const offset = this._pagination.getOffset(this.variablesService.currentWallet.wallet_id);\n        const value = this._paginationStore.value;\n        const pages = value ? value.filter(item => item.walletID === this.variablesService.currentWallet.wallet_id) : [];\n        this._backendService.getRecentTransfers(\n            this.variablesService.currentWallet.wallet_id,\n            offset,\n            this.variablesService.count,\n            this.variablesService.currentWallet.exclude_mining_txs,\n            (status, data) => {\n                const isForward = this._paginationStore.isForward(pages, this.variablesService.currentWallet.currentPage);\n                if (this.mining && isForward && pages && pages.length === 1) {\n                    this.variablesService.currentWallet.currentPage = 1; // set init page after navigation back\n                }\n\n                const history = data && data.history;\n                this.variablesService.stop_paginate[this.variablesService.currentWallet.wallet_id] =\n                    (history && history.length < this.variablesService.count) || !history;\n                this.stop_paginate = this.variablesService.stop_paginate[this.variablesService.currentWallet.wallet_id];\n                if (!this.variablesService.stop_paginate[this.variablesService.currentWallet.wallet_id]) {\n                    const page = this.variablesService.currentWallet.currentPage + 1;\n                    if (isForward && this.mining && history && history.length === this.variablesService.count) {\n                        this._paginationStore.setPage(page, data.last_item_index, this.variablesService.currentWallet.wallet_id); // add back page for current page\n                    }\n                }\n\n                this._pagination.calcPages(data);\n                this._pagination.prepareHistory(data, status);\n\n                this._ngZone.run(() => {\n                    this.variablesService.get_recent_transfers = false;\n                    if (hasOwnProperty(this.variablesService.after_sync_request, String(this.variablesService.currentWallet.wallet_id))) {\n                        // this is will complete get_recent_transfers request\n                        // this will switch of\n                        this.variablesService.after_sync_request[this.variablesService.currentWallet.wallet_id] = false;\n                    }\n                });\n            }\n        );\n    }\n\n    tick(): void {\n        const walletInterval = setInterval(() => {\n            this.wallet = this.variablesService.getNotLoadedWallet();\n            if (!this.wallet) {\n                clearInterval(walletInterval);\n            }\n        }, 1000);\n    }\n\n    toggleTransactionDetails(tx_hash: string): void {\n        if (tx_hash === this.opened_transaction_details) {\n            this.opened_transaction_details = undefined;\n        } else {\n            this.opened_transaction_details = tx_hash;\n        }\n    }\n}\n","<div class=\"history-wrap\" fxFlexFill fxLayout=\"column\">\n    <div class=\"wrap-table scrolled-content mb-2\" fxFlex=\"1 1 auto\">\n        <table class=\"zano-table history-table\">\n            <thead>\n                <tr>\n                    <th>\n                        <div class=\"bg title\">{{ 'HISTORY.STATUS' | translate }}</div>\n                    </th>\n                    <th>\n                        <div class=\"bg title\">{{ 'HISTORY.AMOUNT' | translate }}</div>\n                    </th>\n                    <th>\n                        <div class=\"bg title\">{{ 'HISTORY.FEE' | translate }}</div>\n                    </th>\n                    <th>\n                        <div class=\"bg title\">{{ 'HISTORY.ADDRESS' | translate }}</div>\n                    </th>\n                    <th>\n                        <div class=\"bg title\">{{ 'HISTORY.DATE' | translate }}</div>\n                    </th>\n                </tr>\n                <div class=\"row-divider\"></div>\n            </thead>\n            <tbody>\n                <ng-container *ngFor=\"let transaction of variablesService.currentWallet.history; let i = index\">\n                    <tr\n                        (click)=\"toggleTransactionDetails(transaction.tx_hash)\"\n                        [class.locked-transaction]=\"!transaction.is_mining && transaction.unlock_time > 0\"\n                    >\n                        <!-- Status -->\n                        <td>\n                            <app-transaction-status [transaction]=\"transaction\"></app-transaction-status>\n                        </td>\n\n                        <!-- Amount -->\n                        <td>\n                            <ng-container *ngFor=\"let item of transaction | getAmountItems : currentWallet\">\n                                <div class=\"cell-amount\" *appVisibilityBalance>\n                                    <div class=\"amount\">{{ item.amount }}</div>\n                                    <span class=\"ticker\">{{ item.ticker }}</span>\n                                </div>\n                            </ng-container>\n                        </td>\n\n                        <!-- Fee -->\n                        <td>\n                            <div class=\"cell-fee\" *ngIf=\"transaction | isVisibleFee\">\n                                <ng-container *ngIf=\"transaction?.subtransfers?.length\">\n                                    <ng-container *ngIf=\"transaction.fee; else noFeeTemplate\">\n                                        <mat-icon svgIcon=\"zano-fire\" class=\"mr-1\" style=\"opacity: 50\"></mat-icon>\n\n                                        {{ transaction.fee | intToMoney }}\n                                        {{ variablesService.defaultTicker }}\n                                    </ng-container>\n\n                                    <ng-template #noFeeTemplate>\n                                        <span>{{ 'HISTORY.NO_FEE' | translate }}</span>\n                                    </ng-template>\n                                </ng-container>\n                            </div>\n                        </td>\n\n                        <!-- Address -->\n                        <td class=\"remote-address\">\n                            <ng-container [ngSwitch]=\"true\">\n                                <ng-container *ngSwitchCase=\"!(transaction.tx_type === 0)\">\n                                    <div class=\"text-ellipsis\">\n                                        <span>\n                                            {{ transaction | historyTypeMessages }}\n                                        </span>\n                                    </div>\n                                </ng-container>\n\n                                <ng-container *ngSwitchCase=\"transaction.tx_type === 0\">\n                                    <div\n                                        *ngIf=\"\n                                                    transaction.remote_addresses &&\n                                                    transaction.remote_addresses[0] &&\n                                                    !transaction.remote_aliases?.[0]?.trim()?.length\n                                                  \"\n                                        class=\"text-ellipsis\"\n                                    >\n                                        <span\n                                            (contextmenu)=\"variablesService.onContextMenuOnlyCopy($event, transaction.remote_addresses[0])\"\n                                        >\n                                            {{ transaction.remote_addresses[0] | zanoShortString }}\n                                        </span>\n                                    </div>\n                                    <ng-container *ngIf=\"transaction.remote_aliases && transaction.remote_aliases?.[0]?.trim()?.length\">\n                                        <div fxLayout=\"row wrap\">\n                                            <ng-container *ngFor=\"let alias of transaction.remote_aliases\">\n                                                <ng-container *ngIf=\"alias && alias.length\">\n                                                    <div\n                                                        (contextmenu)=\"variablesService.onContextMenuOnlyCopy($event, '@' + alias)\"\n                                                        [class.available]=\"alias.length >= 1 && alias.length <= 5\"\n                                                        [class.mb-0_5]=\"transaction.remote_aliases.length >= 2\"\n                                                        [class.mr-0_5]=\"transaction.remote_aliases.length >= 2\"\n                                                        class=\"alias\"\n                                                        fxLayout=\"row inline\"\n                                                    >\n                                                        {{ '@' + alias }}\n                                                    </div>\n                                                </ng-container>\n                                            </ng-container>\n                                        </div>\n                                    </ng-container>\n                                </ng-container>\n\n                                <ng-container\n                                    *ngSwitchCase=\"\n                                        !(transaction.remote_addresses?.length || transaction.remote_aliases?.length) &&\n                                        transaction.tx_type === 0\n                                    \"\n                                >\n                                    {{ 'HISTORY.HIDDEN' | translate }}\n                                </ng-container>\n                            </ng-container>\n                        </td>\n\n                        <!-- Date -->\n                        <td>\n                            <div class=\"text-ellipsis\">\n                                {{ transaction.timestamp * 1000 | date : 'dd-MM-yyyy HH:mm' }}\n                            </div>\n                        </td>\n                    </tr>\n\n                    <div class=\"row-divider\"></div>\n\n                    <tr>\n                        <td colspan=\"5\" [ngStyle]=\"{ padding: '0', 'border-radius': '0.8rem' }\">\n                            <app-transaction-details\n                                *ngIf=\"transaction.tx_hash === opened_transaction_details\"\n                                @expandOnEnter\n                                @collapseOnLeave\n                                [transaction]=\"transaction\"\n                            ></app-transaction-details>\n                        </td>\n                    </tr>\n\n                    <tr\n                        *ngIf=\"transaction.tx_hash === opened_transaction_details as state\"\n                        [@expandOnEnter]=\"{ value: state, params: { duration: 150 } }\"\n                        [@collapseOnLeave]=\"{\n                            value: state,\n                            params: { duration: 400 }\n                        }\"\n                        class=\"row-divider\"\n                    ></tr>\n                </ng-container>\n            </tbody>\n        </table>\n    </div>\n\n    <div class=\"pagination-wrapper\">\n        <div class=\"pagination\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n            <div class=\"left\" fxLayout=\"row\" fxLayoutAlign=\" center\">\n                <button\n                    (click)=\"setPage(variablesService.currentWallet.currentPage - 1)\"\n                    [disabled]=\"\n                        variablesService.currentWallet.currentPage === 1 ||\n                        variablesService.isCurrentWalletSync ||\n                        !variablesService.isCurrentWalletLoaded\n                    \"\n                    class=\"btn-icon circle small mr-1\"\n                >\n                    <mat-icon svgIcon=\"zano-arrow-left\"></mat-icon>\n                </button>\n\n                <ng-container *ngIf=\"!mining\">\n                    <button\n                        (click)=\"setPage(page)\"\n                        *ngFor=\"let page of variablesService.currentWallet.pages\"\n                        [disabled]=\"variablesService.isCurrentWalletSync || !variablesService.isCurrentWalletLoaded\"\n                        [class.color-primary]=\"variablesService.currentWallet.currentPage === page\"\n                        class=\"mr-0_5\"\n                    >\n                        {{ page }}\n                    </button>\n                </ng-container>\n\n                <ng-container *ngIf=\"mining\">\n                    <button\n                        (click)=\"setPage(variablesService.currentWallet.currentPage)\"\n                        [disabled]=\"stop_paginate || variablesService.isCurrentWalletSync || !variablesService.isCurrentWalletLoaded\"\n                        [ngClass]=\"{\n                            'color-primary': variablesService.currentWallet.currentPage,\n                            disabled: variablesService.isCurrentWalletSync || !variablesService.isCurrentWalletLoaded\n                        }\"\n                        class=\"mr-0_5\"\n                    >\n                        {{ variablesService.currentWallet.currentPage }}\n                    </button>\n                </ng-container>\n\n                <button\n                    (click)=\"setPage(variablesService.currentWallet.currentPage + 1)\"\n                    [disabled]=\"stop_paginate || variablesService.isCurrentWalletSync || !variablesService.isCurrentWalletLoaded\"\n                    class=\"btn-icon circle small ml-0_5\"\n                >\n                    <mat-icon svgIcon=\"zano-arrow-right\"></mat-icon>\n                </button>\n            </div>\n            <div class=\"right\" fxLayout=\"row\" fxLayoutAlign=\" center\">\n                <span class=\"switch-text mr-2\">Hide mining transactions</span>\n                <app-switch\n                    (emitChange)=\"toggleMiningTransactions()\"\n                    [disabled]=\"variablesService.isCurrentWalletSync || !variablesService.isCurrentWalletLoaded\"\n                    [value]=\"mining\"\n                ></app-switch>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport QRCode from 'qrcode';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { RCV_ADDR_QR_SCALE } from '@parts/data/constants';\n\n@Component({\n    selector: 'app-receive',\n    template: `\n        <div class=\"container overflow-auto\" fxFlexFill fxLayout=\"column\" fxLayoutAlign=\"center center\">\n            <div class=\"wrap-qr mb-2\">\n                <img alt=\"qr-code\" [src]=\"qrImageSrc\" />\n            </div>\n\n            <div\n                class=\"address border-radius-0_8-rem overflow-hidden pl-1 pr-0_5 pt-0_5 pb-0_5\"\n                fxFlex=\"0 0 auto\"\n                fxLayout=\"row\"\n                fxLayoutAlign=\"space-between center\"\n            >\n                <span\n                    [delay]=\"150\"\n                    [placement]=\"'bottom'\"\n                    [timeout]=\"0\"\n                    [tooltipClass]=\"'table-tooltip'\"\n                    [tooltip]=\"variablesService.currentWallet.address\"\n                    class=\"text-ellipsis mr-1\"\n                    >{{ variablesService.currentWallet.address | zanoShortString : 9 : 9 }}</span\n                >\n                <app-copy-button [value]=\"variablesService.currentWallet.address\"> </app-copy-button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class ReceiveComponent implements OnInit {\n    qrImageSrc: string;\n\n    constructor(public variablesService: VariablesService) {}\n\n    ngOnInit(): void {\n        QRCode.toDataURL(this.variablesService.currentWallet.address, {\n            width: 200 * RCV_ADDR_QR_SCALE,\n            height: 200 * RCV_ADDR_QR_SCALE,\n        })\n            .then(url => {\n                this.qrImageSrc = url;\n            })\n            .catch(err => {\n                console.error(err);\n            });\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\nimport {\n    AsyncCommandResults,\n    BackendService,\n    CurrentActionState,\n    ResponseAsyncTransfer,\n    StatusCurrentActionState,\n} from '@api/services/backend.service';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { BLOCK_EXPLORER_TN_TX_URL_PREFIX, BLOCK_EXPLORER_TX_URL_PREFIX } from '@parts/data/constants';\n\nconst successfulStatuses: string[] = [\n    StatusCurrentActionState.STATE_SENDING,\n    StatusCurrentActionState.STATE_SENT_SUCCESS,\n    StatusCurrentActionState.STATE_INITIALIZING,\n    StatusCurrentActionState.STATE_DOWNLOADING_CONSENSUS,\n    StatusCurrentActionState.STATE_MAKING_TUNNEL_A,\n    StatusCurrentActionState.STATE_MAKING_TUNNEL_B,\n    StatusCurrentActionState.STATE_CREATING_STREAM,\n    StatusCurrentActionState.STATE_SUCCESS,\n];\n\nconst failedStatuses: string[] = [StatusCurrentActionState.STATE_SEND_FAILED, StatusCurrentActionState.STATE_FAILED];\n\n@Component({\n    selector: 'app-send-details-modal',\n    templateUrl: './send-details-modal.component.html',\n    styleUrls: ['./send-details-modal.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SendDetailsModalComponent implements OnInit, OnDestroy {\n    @HostBinding('class.modal-overlay') modalOverlay = true;\n\n    @Input() job_id: number;\n\n    @Output() eventClose = new EventEmitter<boolean>();\n\n    @ViewChild('elDetailsList', { static: true }) elDetailsList: ElementRef;\n\n    responseData$ = new BehaviorSubject<ResponseAsyncTransfer>(null);\n\n    stateDetails$ = new BehaviorSubject<boolean>(false);\n\n    currentActionState$ = new BehaviorSubject<CurrentActionState>(null);\n\n    currentActionStates$ = new BehaviorSubject<CurrentActionState[]>([]);\n\n    success = false;\n\n    private destroy$: Subject<void> = new Subject<void>();\n\n    constructor(private backendService: BackendService, private variablesService: VariablesService, private renderer: Renderer2) {}\n\n    get currentActionState(): CurrentActionState {\n        return this.currentActionState$.value;\n    }\n\n    get currentActionStates(): CurrentActionState[] {\n        return this.currentActionStates$.value;\n    }\n\n    get isSentSuccess(): boolean {\n        return this.currentActionState && this.currentActionState.status === StatusCurrentActionState.STATE_SENT_SUCCESS;\n    }\n\n    get isSentFailed(): boolean {\n        return this.currentActionState && this.currentActionState.status === StatusCurrentActionState.STATE_SEND_FAILED;\n    }\n\n    get isDetailsNotEmpty(): boolean {\n        return !!(this.responseData$.value || this.currentActionStates$.value.length > 0);\n    }\n\n    ngOnInit(): void {\n        this.renderer.addClass(document.body, 'no-scroll');\n        const {\n            currentWallet: { wallet_id },\n            settings: { appUseTor },\n        } = this.variablesService;\n\n        if (appUseTor) {\n            this.backendService.handleCurrentActionState$.pipe(filter(Boolean), takeUntil(this.destroy$)).subscribe({\n                next: (currentActionState: CurrentActionState) => {\n                    this.currentActionState$.next(currentActionState);\n                    this.currentActionStates$.next([...this.currentActionStates, currentActionState]);\n                },\n            });\n        } else {\n            const actionState: CurrentActionState = {\n                status: StatusCurrentActionState.STATE_INITIALIZING,\n                wallet_id,\n            };\n            this.currentActionState$.next(actionState);\n            this.currentActionStates$.next([...this.currentActionStates, actionState]);\n        }\n\n        this.backendService.dispatchAsyncCallResult$\n            .pipe(\n                filter(Boolean),\n                filter(({ job_id, response }: AsyncCommandResults<ResponseAsyncTransfer>) => this.job_id === job_id && !!response),\n                takeUntil(this.destroy$)\n            )\n            .subscribe({\n                next: ({ response }: AsyncCommandResults<ResponseAsyncTransfer>) => {\n                    const { response_data } = response;\n                    const success = response_data?.success ?? false;\n                    this.success = success;\n\n                    const actionState: CurrentActionState = {\n                        status: success ? StatusCurrentActionState.STATE_SENT_SUCCESS : StatusCurrentActionState.STATE_SEND_FAILED,\n                        wallet_id,\n                    };\n                    this.currentActionState$.next(actionState);\n                    this.currentActionStates$.next([...this.currentActionStates, actionState]);\n\n                    this.responseData$.next(response);\n                },\n            });\n    }\n\n    ngOnDestroy(): void {\n        this.renderer.removeClass(document.body, 'no-scroll');\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    toggleDetails(): void {\n        this.stateDetails$.next(!this.stateDetails$.value);\n        setTimeout(() => this.scrollToBottomDetailsList(), 100);\n    }\n\n    trackBy(index: number): number {\n        return index;\n    }\n\n    isSuccess(action: CurrentActionState): boolean {\n        return successfulStatuses.includes(action && action.status);\n    }\n\n    isFailed(action: CurrentActionState): boolean {\n        return failedStatuses.includes(action && action.status);\n    }\n\n    private scrollToBottomDetailsList(): void {\n        if (this.elDetailsList) {\n            const { nativeElement } = this.elDetailsList;\n            nativeElement.scrollTop = nativeElement.scrollHeight;\n        }\n    }\n\n    openInBrowser(hash: string): void {\n        this.backendService.openUrlInBrowser(\n            (this.variablesService.testnet ? BLOCK_EXPLORER_TN_TX_URL_PREFIX : BLOCK_EXPLORER_TX_URL_PREFIX) + hash\n        );\n    }\n}\n","<div class=\"send-details-modal-wrapper\" fxFlex=\"0 1 54rem\">\n    <div class=\"wrapper w-100\" fxFlex fxLayout=\"column\">\n        <h3 class=\"title mb-2\" fxFlex=\"0 0 auto\">\n            {{ 'SEND_DETAILS_MODAL.TITLE1' | translate }}\n        </h3>\n\n        <div class=\"content mb-2 overflow-x-hidden overflow-y-auto\" fxFlex=\"1 1 auto\" fxLayout=\"column\">\n            <div class=\"status mb-2\" fxFlex=\"0 0 auto\" fxLayout=\"column\" fxLayoutAlign=\" center\">\n                <div *ngIf=\"isSentSuccess\" class=\"image\">\n                    <img alt=\"success\" src=\"assets/icons/aqua/transaction_success.svg\" />\n                </div>\n\n                <div *ngIf=\"isSentFailed\" class=\"image\">\n                    <img alt=\"failed\" class=\"image\" src=\"assets/icons/red/transaction_failed.svg\" />\n                </div>\n\n                <div *ngIf=\"!isSentSuccess && !isSentFailed\" class=\"loader\"></div>\n\n                <p class=\"color-primary mt-2\" *ngIf=\"currentActionState$ | async as currentActionState\">\n                    {{\n                        (currentActionState ? 'TOR_LIB_STATE' + '.' + currentActionState.status : 'TOR_LIB_STATE.STATE_INITIALIZING')\n                            | translate\n                    }}\n                    {{ !isSentSuccess && !isSentFailed ? '...' : '' }}\n                </p>\n\n                <ng-container *ngIf=\"responseData$ | async as data\">\n                    <ng-container\n                        *ngTemplateOutlet=\"\n                            errorCodesTemplate;\n                            context: {\n                                error_code: data.error_code\n                            }\n                        \"\n                    ></ng-container>\n                </ng-container>\n            </div>\n\n            <div class=\"details border-radius-0_8-rem overflow-hidden\" fxFlex=\"0 0 auto\" fxLayout=\"column\">\n                <div\n                    (click)=\"isDetailsNotEmpty && toggleDetails()\"\n                    class=\"header overflow-hidden py-1 px-2 w-100 cursor-pointer\"\n                    fxLayout=\"row\"\n                    fxLayoutAlign=\"space-between center\"\n                >\n                    <p class=\"title text-ellipsis mr-2\">\n                        {{ 'SEND_DETAILS_MODAL.TITLE2' | translate }}\n                    </p>\n                    <button *ngIf=\"isDetailsNotEmpty\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n                        <mat-icon\n                            svgIcon=\"zano-dropdown-arrow-down\"\n                            [ngClass]=\"{\n                                'rotate-180': stateDetails$ | async\n                            }\"\n                        ></mat-icon>\n                    </button>\n                </div>\n                <div\n                    [class.px-2]=\"stateDetails$ | async\"\n                    [class.py-1]=\"stateDetails$ | async\"\n                    [fxHide]=\"!(stateDetails$ | async)\"\n                    class=\"details-wrapper\"\n                    fxFlex=\"1 1 auto\"\n                    fxLayout=\"row\"\n                >\n                    <ul #elDetailsList class=\"details-list scrolled-content\">\n                        <li\n                            *ngFor=\"let action of currentActionStates$ | async; let last = last; trackBy: trackBy\"\n                            class=\"item mb-1 color-primary\"\n                            fxLayout=\"row nowrap\"\n                            fxLayoutAlign=\" center\"\n                        >\n                            <span class=\"text text-ellipsis mr-1\"\n                                >{{ 'TOR_LIB_STATE' + '.' + action?.status | translate\n                                }}{{ last && !isSentSuccess && !isSentFailed ? '...' : '' }}</span\n                            >\n                            <ng-container *ngIf=\"!last\">\n                                <img *ngIf=\"isSuccess(action)\" alt=\"success\" class=\"image\" src=\"assets/icons/blue/check_with_blue_bg.svg\" />\n\n                                <img *ngIf=\"isFailed(action)\" alt=\"failed\" class=\"image\" src=\"assets/icons/red/transaction_failed.svg\" />\n                            </ng-container>\n\n                            <ng-container *ngIf=\"last\">\n                                <img\n                                    *ngIf=\"last && isSentSuccess\"\n                                    alt=\"success\"\n                                    class=\"image\"\n                                    src=\"assets/icons/blue/check_with_blue_bg.svg\"\n                                />\n\n                                <img\n                                    *ngIf=\"last && isSentFailed\"\n                                    alt=\"failed\"\n                                    class=\"image\"\n                                    src=\"assets/icons/red/transaction_failed.svg\"\n                                />\n                            </ng-container>\n                        </li>\n\n                        <ng-container *ngIf=\"responseData$ | async as data\">\n                            <li class=\"item mb-1 color-primary\" fxLayout=\"row nowrap\" fxLayoutAlign=\" center\">\n                                <span class=\"word-break-break-all cursor-pointer\"\n                                      (click)=\"openInBrowser(data.response_data.tx_hash)\">\n                                    tx id: {{ data.response_data.tx_hash || '---' }}\n                                </span>\n                                <app-copy-button *ngIf=\"data.response_data.tx_hash\" [value]=\"data.response_data.tx_hash\" class=\"ml-1\">\n                                </app-copy-button>\n                            </li>\n                            <li class=\"item mb-1 color-primary\" fxLayout=\"row nowrap\" fxLayoutAlign=\" center\">\n                                <div class=\"word-break-break-all\">\n                                    tx size:\n                                    {{ data.response_data.tx_blob_size }}\n                                    bytes\n                                </div>\n                            </li>\n                            <li *ngIf=\"data.error_code !== 'OK'\" class=\"item\">\n                                <ng-container\n                                    *ngTemplateOutlet=\"\n                                        errorCodesTemplate;\n                                        context: {\n                                            prefix: 'Error:',\n                                            error_code: data.error_code\n                                        }\n                                    \"\n                                ></ng-container>\n                            </li>\n                        </ng-container>\n                    </ul>\n                </div>\n            </div>\n        </div>\n        <div class=\"controls\" fxFlex=\"0 0 auto\">\n            <button (click)=\"eventClose.emit(success)\" [disabled]=\"!isSentSuccess && !isSentFailed\" class=\"primary big w-100\">\n                {{ 'Ok' | translate }}\n            </button>\n        </div>\n    </div>\n</div>\n\n<ng-template #errorCodesTemplate let-prefix=\"prefix\" let-error_code=\"error_code\">\n    <ng-container [ngSwitch]=\"error_code\">\n        <ng-container *ngSwitchCase=\"'NOT_ENOUGH_MONEY'\">\n            <p class=\"color-red\">{{ prefix }} {{ 'SEND.ERROR_CODES' + '.' + error_code | translate }}</p>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'OK'\"></ng-container>\n        <ng-container *ngSwitchDefault>\n            <p class=\"color-red\">{{ prefix }} {{ error_code }}</p>\n        </ng-container>\n    </ng-container>\n</ng-template>\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    HostBinding,\n    inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2,\n} from '@angular/core';\nimport { NonNullableFormBuilder, Validators } from '@angular/forms';\nimport { SendMoneyFormParams } from '@api/models/send-money.model';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { ZanoValidators } from '@parts/utils/zano-validators';\nimport { BigNumber } from 'bignumber.js';\nimport { AssetBalance, PriceInfo } from '@api/models/assets.model';\n\n@Component({\n    selector: 'app-send-modal',\n    templateUrl: './send-modal.component.html',\n    styleUrls: ['./send-modal.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SendModalComponent implements OnInit, OnDestroy {\n    @HostBinding('class.modal-overlay') modalOverlay = true;\n\n    @Input() sendMoneyParams: SendMoneyFormParams;\n\n    @Input() priceInfo: PriceInfo;\n\n    @Output() confirmed: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    get amount(): string {\n        const { amount, isAmountUSD, asset_id } = this.sendMoneyParams;\n        const convertedAmountUSD = (): string => {\n            let usd = 0;\n\n            if (typeof this.priceInfo.data === 'object') {\n                const { data } = this.priceInfo;\n                usd = data.usd;\n            }\n\n            let decimal_point = 0;\n\n            const { currentWallet } = this.variablesService;\n            const asset: AssetBalance | undefined = currentWallet.getBalanceByAssetId(asset_id);\n\n            if (asset) {\n                const { asset_info } = asset;\n                decimal_point = asset_info.decimal_point;\n            }\n\n            const convertedAmount = new BigNumber(amount || 0).dividedBy(usd || 0).decimalPlaces(decimal_point);\n\n            return convertedAmount.toString();\n        };\n\n        return isAmountUSD ? convertedAmountUSD() : amount;\n    }\n\n    cdr = inject(ChangeDetectorRef);\n\n    fb = inject(NonNullableFormBuilder);\n\n    confirmForm = this.fb.group({\n        password: this.fb.control(''),\n        appPass: this.fb.control(''),\n    });\n\n    constructor(public variablesService: VariablesService, private renderer: Renderer2) {}\n\n    ngOnInit(): void {\n        this.renderer.addClass(document.body, 'no-scroll');\n        const { appPass } = this.variablesService;\n        if (appPass) {\n            this.confirmForm.controls.appPass.patchValue(appPass, {\n                emitEvent: false,\n            });\n            this.confirmForm.setValidators([ZanoValidators.formMatch('password', 'appPass', 'passwordNotMatch')]);\n            this.confirmForm.controls.password.setValidators([Validators.required]);\n            this.confirmForm.updateValueAndValidity();\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.renderer.removeClass(document.body, 'no-scroll');\n    }\n\n    beforeSubmit(): void {\n        if (this.confirmForm.invalid) {\n            this.confirmForm.markAsTouched();\n            this.confirmForm.updateValueAndValidity();\n            this.cdr.detectChanges();\n            return;\n        }\n\n        this.submit();\n    }\n\n    submit(): void {\n        this.confirmed.emit(true);\n    }\n\n    onClose(): void {\n        this.confirmed.emit(false);\n    }\n}\n","<div class=\"send-modal-wrapper\" fxLayout=\"row\">\n    <div class=\"wrapper\">\n        <form (ngSubmit)=\"beforeSubmit()\" [formGroup]=\"confirmForm\" class=\"overflow-hidden\" fxFlexFill fxLayout=\"column\">\n            <h3 class=\"title mb-2\" fxFlex=\"0 0 auto\">\n                {{ 'CONFIRM.TITLE' | translate }}\n            </h3>\n\n            <div class=\"content mb-2 w-100 overflow-x-hidden overflow-y-auto\" fxFlex=\"1 1 auto\">\n                <div class=\"table-info mb-2\">\n                    <div class=\"row\">\n                        <div class=\"label max-w-19-rem w-100\">\n                            {{ 'CONFIRM.MESSAGE.SEND' | translate }}\n                        </div>\n                        <div class=\"text\">\n                            {{ amount }}\n                            {{ (sendMoneyParams.asset_id | getAssetInfo)?.ticker || '***' }}\n                        </div>\n                    </div>\n\n                    <hr class=\"separator\" />\n\n                    <div class=\"row\">\n                        <div class=\"label max-w-19-rem w-100\">\n                            {{ 'CONFIRM.MESSAGE.FROM' | translate }}\n                        </div>\n                        <div class=\"text\">\n                            {{ variablesService.currentWallet.address }}\n                        </div>\n                    </div>\n\n                    <ng-container *ngIf=\"!!sendMoneyParams.address\">\n                        <hr class=\"separator\" />\n\n                        <div class=\"row\">\n                            <div class=\"label max-w-19-rem w-100\">\n                                {{ 'CONFIRM.MESSAGE.TO' | translate }}\n                            </div>\n                            <div class=\"text\">{{ sendMoneyParams.address }}</div>\n                        </div>\n                    </ng-container>\n\n                    <ng-container *ngIf=\"!!sendMoneyParams.comment\">\n                        <hr class=\"separator\" />\n\n                        <div class=\"row\">\n                            <div class=\"label max-w-19-rem w-100\">\n                                {{ 'CONFIRM.MESSAGE.COMMENT' | translate }}\n                            </div>\n                            <div class=\"text\">{{ sendMoneyParams.comment }}</div>\n                        </div>\n                    </ng-container>\n                </div>\n\n                <div *ngIf=\"variablesService.appPass\" class=\"form__field mb-0\">\n                    <label for=\"password\">\n                        {{ 'LOGIN.MASTER_PASS' | translate }}\n                        <span class=\"color-red\">*</span>\n                    </label>\n                    <input\n                        (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\n                        [placeholder]=\"'PLACEHOLDERS.MASTER_PASS_PLACEHOLDER' | translate\"\n                        autofocus\n                        class=\"form__field--input\"\n                        [class.invalid]=\"confirmForm.touched && confirmForm.invalid\"\n                        formControlName=\"password\"\n                        id=\"password\"\n                        name=\"password\"\n                        type=\"password\"\n                    />\n                    <div *ngIf=\"confirmForm.touched && confirmForm.invalid\" class=\"error\">\n                        <div *ngIf=\"confirmForm.hasError('passwordNotMatch')\">\n                            {{ 'LOGIN.FORM_ERRORS.WRONG_PASSWORD' | translate }}\n                        </div>\n                        <div *ngIf=\"confirmForm.controls.password.hasError('required')\">\n                            {{ 'LOGIN.FORM_ERRORS.PASS_REQUIRED' | translate }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"controls w-100\" fxFlex=\"0 0 auto\" fxLayout=\"row nowrap\" fxLayoutGap=\"1rem\">\n                <button (click)=\"onClose()\" class=\"outline big w-100\" type=\"button\">\n                    {{ 'CONFIRM.BUTTON_CANCEL' | translate }}\n                </button>\n                <button class=\"primary big w-100\" type=\"submit\">\n                    {{ 'CONFIRM.BUTTON_CONFIRM' | translate }}\n                </button>\n            </div>\n        </form>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SendModalComponent } from './send-modal/send-modal.component';\nimport { SendDetailsModalComponent } from './send-details-modal/send-details-modal.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { GetAssetInfoPipe } from '@parts/pipes';\nimport { CopyButtonComponent } from '@parts/components/copy-button.component';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n    declarations: [SendModalComponent, SendDetailsModalComponent],\n    imports: [CommonModule, TranslateModule, FlexLayoutModule, ReactiveFormsModule, GetAssetInfoPipe, CopyButtonComponent, MatIconModule],\n    exports: [SendModalComponent, SendDetailsModalComponent],\n})\nexport class WalletModalsModule {}\n","import { Component, inject, NgZone, OnDestroy } from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup, NonNullableFormBuilder, ValidationErrors, Validators } from '@angular/forms';\nimport { BackendService } from '@api/services/backend.service';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { BigNumber } from 'bignumber.js';\nimport { MIXIN } from '@parts/data/constants';\nimport { catchError, debounceTime, distinctUntilChanged, map, retry, startWith, switchMap, takeUntil, tap } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest, merge, Observable, of, Subject } from 'rxjs';\nimport { AssetBalance, PriceInfo } from '@api/models/assets.model';\nimport { regExpAliasName } from '@parts/utils/zano-validators';\nimport { insuficcientFunds } from '@parts/utils/zano-errors';\nimport { DeeplinkParams, defaultSendMoneyParams } from '@api/models/wallet.model';\nimport { WrapInfo } from '@api/models/wrap-info';\nimport { WrapInfoService } from '@api/services/wrap-info.service';\nimport { SendMoneyFormParams } from '@api/models/send-money.model';\nimport { defaultImgSrc, ZanoAssetInfo, zanoAssetInfo } from '@parts/data/assets';\nimport { moneyToInt } from '@parts/functions/money-to-int';\nimport { intToMoney } from '@parts/functions/int-to-money';\nimport { TranslateService } from '@ngx-translate/core';\nimport { WalletsService } from '@parts/services/wallets.service';\nimport { HttpClient } from '@angular/common/http';\n\ninterface AmountInputParams {\n    decimalPoint: number;\n    inputTicker: string;\n    hintTicker: string;\n    hintAmount: string;\n    reverseDisabled: boolean;\n}\n\n@Component({\n    selector: 'app-send',\n    templateUrl: 'send.component.html',\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class SendComponent implements OnDestroy {\n    job_id: number;\n\n    isSendModalState: boolean = false;\n\n    isSendDetailsModalState: boolean = false;\n\n    wrapInfo: WrapInfo;\n\n    loadingWrapInfo$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\n\n    isVisibleWrapInfoState$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n    aliasAddress: string;\n\n    isVisibleAdditionalOptionsState: boolean = false;\n\n    variablesService: VariablesService = inject(VariablesService);\n\n    wrapInfoService: WrapInfoService = inject(WrapInfoService);\n\n    assetItems$: Observable<(AssetBalance & { disabled: boolean })[]> = combineLatest([\n        this.variablesService.currentWallet.balances$,\n        this.isVisibleWrapInfoState$,\n    ]).pipe(\n        map(([balances, disabled]) => {\n            const items: (AssetBalance & { disabled: boolean })[] = [];\n\n            balances.forEach((balance: AssetBalance) => {\n                const {\n                    asset_info: { asset_id },\n                } = balance;\n\n                if (asset_id === zanoAssetInfo.asset_id) {\n                    return items.push({ ...balance, disabled: false });\n                }\n\n                return items.push({ ...balance, disabled });\n            });\n\n            return items;\n        })\n    );\n\n    lowerCaseDisabled$: BehaviorSubject<boolean> = new BehaviorSubject(true);\n\n    form: FormGroup<{\n        wallet_id: FormControl<number>;\n        address: FormControl<string>;\n        amount: FormControl<string>;\n        isAmountUSD: FormControl<boolean>;\n        comment: FormControl<string>;\n        asset_id: FormControl<string>;\n        mixin: FormControl<number>;\n        fee: FormControl<string>;\n        hide: FormControl<boolean>;\n    }>;\n\n    addressItems$: Observable<string[]>;\n\n    loadingAddressItems$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\n\n    amountInputParams: AmountInputParams = {\n        decimalPoint: 0,\n        inputTicker: '',\n        hintTicker: '',\n        hintAmount: '',\n        reverseDisabled: false,\n    };\n\n    errorMessages: { [key: string]: string | undefined } = {\n        address: undefined,\n        fee: undefined,\n    };\n    public readonly zanoAssetInfo: ZanoAssetInfo = zanoAssetInfo;\n    public priceInfo: PriceInfo = { success: false, data: 'Asset not found' };\n    private _priceInfo$: Subject<PriceInfo> = new Subject();\n    private _fb: NonNullableFormBuilder = inject(NonNullableFormBuilder);\n    private _httpClient: HttpClient = inject(HttpClient);\n    private _destroy$: Subject<void> = new Subject<void>();\n    private _backendService: BackendService = inject(BackendService);\n    private _ngZone: NgZone = inject(NgZone);\n    private _translateService: TranslateService = inject(TranslateService);\n    private _walletsService: WalletsService = inject(WalletsService);\n    private _openedWalletItems: string[] = this._walletsService.wallets.map(({ address, alias }) => alias?.name ?? address);\n    private _aliasItems: string[] = this.variablesService.aliases.map(({ name }) => name);\n\n    constructor() {\n        this._getWrapInfo();\n\n        this._createForm();\n    }\n\n    ngOnDestroy(): void {\n        this._destroy$.next();\n        this._destroy$.complete();\n    }\n\n    updateAddressErrorMessage(): void {\n        const {\n            controls: { address },\n        } = this.form;\n        let message: string | undefined;\n\n        switch (true) {\n            case address.hasError('address_not_valid'): {\n                message = 'SEND.FORM_ERRORS.ADDRESS_NOT_VALID';\n                break;\n            }\n            case address.hasError('alias_not_found'): {\n                message = 'SEND.FORM_ERRORS.ALIAS_NOT_FOUND';\n                break;\n            }\n            case address.hasError('alias_not_valid'): {\n                message = 'SEND.FORM_ERRORS.ALIAS_NOT_VALID';\n                break;\n            }\n            case address.hasError('required'): {\n                message = 'ERRORS.REQUIRED';\n                break;\n            }\n        }\n        this.errorMessages['address'] = message;\n    }\n\n    updateFeeErrorMessage(): void {\n        const {\n            controls: { fee },\n        } = this.form;\n        let message: string | undefined;\n\n        switch (true) {\n            case fee.hasError('less_min'): {\n                const { default_fee } = this.variablesService;\n                message = this._translateService.instant('SEND.FORM_ERRORS.FEE_MINIMUM', { fee: default_fee });\n                break;\n            }\n            case fee.hasError('required'): {\n                message = 'SEND.FORM_ERRORS.FEE_REQUIRED';\n                break;\n            }\n            case fee.hasError('greater_than_max_amount'): {\n                const { maximum_value } = this.variablesService;\n                const { decimal_point } = zanoAssetInfo;\n                const max = intToMoney(maximum_value, decimal_point);\n                message = this._translateService.instant('ERRORS.MAX', { max });\n            }\n        }\n\n        this.errorMessages['fee'] = message;\n    }\n\n    getSrcByAsset({ asset_info: { asset_id } }: AssetBalance): string {\n        switch (asset_id) {\n            case zanoAssetInfo.asset_id: {\n                return zanoAssetInfo.logo;\n            }\n            default: {\n                return defaultImgSrc;\n            }\n        }\n    }\n\n    isVisibleError(control: AbstractControl): boolean {\n        return control.invalid && (control.dirty || control.touched);\n    }\n\n    beforeSubmit(): void {\n        this.isSendModalState = true;\n    }\n\n    handleConfirmed(confirmed: boolean): void {\n        this.isSendModalState = false;\n        if (confirmed) {\n            this.submit();\n        }\n    }\n\n    submit(): void {\n        let sendMoneyParams = this.form.getRawValue();\n\n        const { address, asset_id, isAmountUSD } = sendMoneyParams;\n        let { amount } = sendMoneyParams;\n\n        const { currentWallet } = this.variablesService;\n        const asset: AssetBalance | undefined = currentWallet.getBalanceByAssetId(asset_id);\n\n        if (asset) {\n            const convertedAmountUSD = (): string => {\n                let usd = 0;\n\n                if (typeof this.priceInfo.data === 'object') {\n                    const { data } = this.priceInfo;\n                    usd = data.usd;\n                }\n\n                let decimal_point = 0;\n\n                if (asset) {\n                    const { asset_info } = asset;\n                    decimal_point = asset_info.decimal_point;\n                }\n\n                const convertedAmount = new BigNumber(amount || 0).dividedBy(usd || 0).decimalPlaces(decimal_point);\n\n                return convertedAmount.toString();\n            };\n\n            amount = isAmountUSD ? convertedAmountUSD() : amount;\n\n            sendMoneyParams = {\n                ...sendMoneyParams,\n                amount,\n            };\n        } else {\n            this.form.controls.asset_id.setErrors({\n                asset_not_found: true,\n            });\n            return;\n        }\n\n        if (address.indexOf('@') === 0) {\n            const aliasName = address;\n            const { aliases } = this.variablesService;\n            const alias = aliases.find(({ name }) => name === aliasName);\n\n            if (!alias) {\n                this.form.controls.address.setErrors({\n                    alias_not_found: true,\n                });\n                return;\n            }\n\n            sendMoneyParams = {\n                ...sendMoneyParams,\n                address: alias.address,\n            };\n        }\n\n        // Remove unused param\n        delete sendMoneyParams.isAmountUSD;\n\n        this._backendService.sendMoney(sendMoneyParams, (job_id: number) => {\n            this._ngZone.run(() => {\n                this.job_id = job_id;\n                this.isSendDetailsModalState = true;\n                this.variablesService.currentWallet.sendMoneyParams = null;\n            });\n        });\n    }\n\n    getReceivedValue(): number | BigNumber {\n        const {\n            controls: {\n                amount: { value: amount },\n                isAmountUSD: { value: isAmountUSD },\n                asset_id: { value: asset_id },\n            },\n        } = this.form;\n\n        const convertedAmountUSD = (): string => {\n            let usd = 0;\n\n            if (typeof this.priceInfo.data === 'object') {\n                const { data } = this.priceInfo;\n                usd = data.usd;\n            }\n\n            let decimal_point = 0;\n            const { currentWallet } = this.variablesService;\n            const asset: AssetBalance | undefined = currentWallet.getBalanceByAssetId(asset_id);\n\n            if (asset) {\n                const { asset_info } = asset;\n                decimal_point = asset_info.decimal_point;\n            }\n\n            const convertedAmount = new BigNumber(amount || 0).dividedBy(usd || 0).decimalPlaces(decimal_point);\n\n            return convertedAmount.toString();\n        };\n        const preparedAmount: BigNumber = moneyToInt(isAmountUSD ? convertedAmountUSD() : amount || '0');\n\n        const {\n            tx_cost: { zano_needed_for_erc20 },\n        } = this.wrapInfo;\n        const needed: BigNumber = new BigNumber(zano_needed_for_erc20);\n\n        if (preparedAmount && needed) {\n            return preparedAmount.minus(needed);\n        }\n        return 0;\n    }\n\n    handeCloseSendDetailsModal(success: boolean): void {\n        this.isSendDetailsModalState = false;\n        this.job_id = null;\n\n        if (success) {\n            const { currentWallet } = this.variablesService;\n            const { wallet_id } = currentWallet;\n            currentWallet.sendMoneyParams = null;\n\n            this.form.reset({ ...defaultSendMoneyParams, wallet_id }, { emitEvent: false });\n        }\n    }\n\n    pasteListenAddressField(event: ClipboardEvent): void {\n        event.preventDefault();\n        const {\n            controls: { address },\n        } = this.form;\n        const { clipboardData } = event;\n        let value: string = clipboardData.getData('Text') ?? '';\n        this.lowerCaseDisabled$.next(value.indexOf('@') !== 0);\n\n        if (value.indexOf('@') === 0) {\n            value = value.toLowerCase();\n        }\n\n        address.patchValue(value);\n    }\n\n    trackByFn(index: number, value: string): number | string {\n        return value ?? index;\n    }\n\n    toggleAmountUSD(): void {\n        const { isAmountUSD } = this.form.getRawValue();\n        this.form.controls.isAmountUSD.patchValue(!isAmountUSD);\n    }\n\n    private _createForm(): void {\n        const { currentWallet, default_fee, maxCommentLength, maximum_value } = this.variablesService;\n\n        let params: SendMoneyFormParams;\n\n        if (currentWallet.sendMoneyParams) {\n            params = currentWallet.sendMoneyParams;\n        } else {\n            params = {\n                ...defaultSendMoneyParams,\n                wallet_id: currentWallet.wallet_id,\n                fee: default_fee,\n            };\n        }\n\n        if (currentWallet.is_auditable && !currentWallet.is_watch_only) {\n            params.hide = true;\n        }\n\n        if (currentWallet.is_auditable) {\n            params.mixin = 0;\n        }\n\n        const state = history.state || {};\n        const history_asset: AssetBalance = state['asset'];\n\n        if (history_asset) {\n            const {\n                asset_info: { asset_id, decimal_point },\n            } = history_asset;\n            params.asset_id = asset_id;\n            if (params.amount) {\n                params.amount = intToMoney(moneyToInt(params.amount, decimal_point), decimal_point);\n            }\n        }\n\n        this.form = this._fb.group(\n            {\n                wallet_id: this._fb.control<number>(params.wallet_id, {\n                    validators: [Validators.required],\n                }),\n                address: this._fb.control<string>(params.address, {\n                    validators: [\n                        Validators.required,\n                        (control: AbstractControl): ValidationErrors | null => {\n                            this.aliasAddress = '';\n                            this.isVisibleWrapInfoState$.next(false);\n                            if (control.value) {\n                                if (control.value.indexOf('@') !== 0) {\n                                    this._backendService.validateAddress(control.value, (valid_status, data) => {\n                                        this._ngZone.run(() => {\n                                            this.isVisibleWrapInfoState$.next(data.error_code === 'WRAP');\n                                            if (data.error_code === 'WRAP') {\n                                                this.form.controls.asset_id.patchValue(zanoAssetInfo.asset_id);\n                                            }\n\n                                            if (valid_status === false && !this.isVisibleWrapInfoState$.value) {\n                                                control.setErrors(Object.assign({ address_not_valid: true }, control.errors));\n                                            } else {\n                                                if (control.hasError('address_not_valid')) {\n                                                    delete control.errors['address_not_valid'];\n                                                    if (Object.keys(control.errors).length === 0) {\n                                                        control.setErrors(null);\n                                                    }\n                                                }\n                                            }\n                                        });\n                                    });\n                                    return control.hasError('address_not_valid') ? { address_not_valid: true } : null;\n                                } else {\n                                    if (!regExpAliasName.test(control.value)) {\n                                        return { alias_not_valid: true };\n                                    } else {\n                                        this._backendService.getAliasInfoByName(\n                                            control.value.replace('@', ''),\n                                            (alias_status, alias_data) => {\n                                                this._ngZone.run(() => {\n                                                    this.aliasAddress = alias_data.address;\n                                                    if (alias_status) {\n                                                        if (control.hasError('alias_not_found')) {\n                                                            delete control.errors['alias_not_found'];\n                                                            if (Object.keys(control.errors).length === 0) {\n                                                                control.setErrors(null);\n                                                            }\n                                                        }\n                                                    } else {\n                                                        control.setErrors(Object.assign({ alias_not_found: true }, control.errors));\n                                                    }\n                                                });\n                                            }\n                                        );\n                                    }\n                                    return control.hasError('alias_not_found') ? { alias_not_found: true } : null;\n                                }\n                            }\n                            return null;\n                        },\n                    ],\n                }),\n                amount: this._fb.control<string>(params.amount, {\n                    validators: [\n                        Validators.required,\n                        ({ value }: AbstractControl): ValidationErrors | null => {\n                            const isZero: boolean = new BigNumber(value || 0).eq(0);\n\n                            if (isZero) {\n                                return { zero: true };\n                            }\n\n                            return null;\n                        },\n                    ],\n                }),\n                isAmountUSD: this._fb.control<boolean>(params.isAmountUSD),\n                comment: this._fb.control<string>(params.comment, {\n                    validators: [Validators.maxLength(maxCommentLength)],\n                }),\n                asset_id: this._fb.control<string>(params.asset_id, {\n                    validators: [Validators.required],\n                }),\n                mixin: this._fb.control<number>(\n                    { value: params.mixin, disabled: currentWallet.is_auditable },\n                    {\n                        validators: [Validators.required, Validators.min(0), Validators.max(1000)],\n                    }\n                ),\n                fee: this._fb.control<string>(params.fee, {\n                    validators: [\n                        Validators.required,\n                        (control: AbstractControl): ValidationErrors | null => {\n                            const max: BigNumber = new BigNumber(intToMoney(maximum_value, zanoAssetInfo.decimal_point));\n                            const amount: BigNumber = new BigNumber(control.value);\n                            return amount.isGreaterThan(max) ? { greater_than_max_amount: { max: max.toString() } } : null;\n                        },\n                        ({ value }: FormControl): ValidationErrors | null => {\n                            if (new BigNumber(value).isLessThan(default_fee)) {\n                                return { less_min: true };\n                            }\n                            return null;\n                        },\n                    ],\n                }),\n                hide: this._fb.control<boolean>({\n                    value: params.hide,\n                    disabled: currentWallet.is_auditable && !currentWallet.is_watch_only,\n                }),\n            },\n            {\n                validators: [\n                    (form: FormGroup): ValidationErrors | null => {\n                        const asset_id = form.controls.asset_id.value;\n                        const isAmountUSD = form.controls.isAmountUSD.value;\n\n                        const convertedAmountUSD = (): BigNumber => {\n                            let usd = 0;\n                            if (typeof this.priceInfo.data === 'object') {\n                                const { data } = this.priceInfo;\n                                usd = data.usd;\n                            }\n                            return new BigNumber(form.controls.amount.value).dividedBy(usd);\n                        };\n\n                        const amount: BigNumber = isAmountUSD ? convertedAmountUSD() : new BigNumber(form.controls.amount.value);\n\n                        const assetBalance: AssetBalance | undefined = currentWallet.getBalanceByAssetId(asset_id);\n\n                        if (this.isVisibleWrapInfoState$.value) {\n                            let error = null;\n\n                            if (!this.wrapInfo) {\n                                error = { wrap_info_null: true };\n                            }\n\n                            if (amount.isGreaterThan(intToMoney(new BigNumber(this.wrapInfo.unwraped_coins_left)))) {\n                                error = { great_than_unwraped_coins: true };\n                            }\n\n                            if (amount.isLessThan(intToMoney(new BigNumber(this.wrapInfo.tx_cost.zano_needed_for_erc20)))) {\n                                error = { less_than_zano_needed: true };\n                            }\n\n                            if (error) {\n                                form.controls.amount.setErrors(error);\n                            }\n                        }\n\n                        if (!assetBalance) {\n                            return {\n                                asset_not_found: true,\n                            };\n                        }\n\n                        const {\n                            unlocked,\n                            asset_info: { decimal_point },\n                        } = assetBalance;\n\n                        const maximum_amount_by_decimal_point = intToMoney(this.variablesService.maximum_value, decimal_point);\n                        if (amount.isGreaterThan(maximum_amount_by_decimal_point)) {\n                            return { greater_than_maximum_amount: { max: maximum_amount_by_decimal_point } };\n                        }\n\n                        const preparedUnlocked = intToMoney(unlocked, decimal_point);\n                        return amount.isGreaterThan(preparedUnlocked) ? { insuficcientFunds } : null;\n                    },\n                ],\n            }\n        );\n\n        this._listenSendActionData();\n\n        this._saveSendMoneyParams();\n\n        this._formListeners();\n\n        if (currentWallet.sendMoneyParams) {\n            this.form.markAllAsTouched();\n            this.form.updateValueAndValidity();\n            this._updateErrorMessages();\n        }\n    }\n\n    private _formListeners(): void {\n        const { currentWallet } = this.variablesService;\n        const { controls } = this.form;\n\n        combineLatest([\n            controls.asset_id.valueChanges.pipe(startWith(controls.asset_id.value)),\n            controls.isAmountUSD.valueChanges.pipe(startWith(controls.isAmountUSD.value), distinctUntilChanged()),\n            controls.amount.valueChanges.pipe(startWith(controls.amount.value)),\n            this._priceInfo$,\n        ])\n            .pipe(\n                map(([asset_id, isAmountUSD, amount, priceInfo]) => {\n                    const { decimal_point, ticker } = currentWallet.getBalanceByAssetId(asset_id)?.asset_info ?? {};\n\n                    const params: AmountInputParams = {\n                        decimalPoint: decimal_point,\n                        inputTicker: ticker,\n                        hintTicker: 'USD',\n                        hintAmount: '0',\n                        reverseDisabled: false,\n                    };\n\n                    const { success } = priceInfo;\n\n                    if (success) {\n                        const { data } = priceInfo;\n\n                        let usd = 0;\n\n                        if (typeof data === 'object') {\n                            usd = data.usd;\n                        }\n\n                        if (isAmountUSD) {\n                            params.decimalPoint = 2;\n                            params.inputTicker = 'USD';\n                            params.hintTicker = ticker;\n                            params.hintAmount = `~ ${new BigNumber(+amount ?? 0).dividedBy(usd ?? 0).decimalPlaces(decimal_point)}`;\n                        } else {\n                            params.decimalPoint = decimal_point;\n                            params.inputTicker = ticker;\n                            params.hintTicker = 'USD';\n                            params.hintAmount = `~ ${new BigNumber(usd ?? 0).multipliedBy(+amount ?? 0).decimalPlaces(2)}`;\n                        }\n                    } else {\n                        params.reverseDisabled = true;\n                        controls.isAmountUSD.patchValue(false);\n                    }\n\n                    return params;\n                })\n            )\n            .pipe(takeUntil(this._destroy$))\n            .subscribe({\n                next: params => {\n                    this.amountInputParams = params;\n                },\n            });\n\n        controls.asset_id.valueChanges\n            .pipe(\n                startWith(controls.asset_id.value),\n                switchMap(asset_id => {\n                    const default$ = of({\n                        success: false,\n                        data: 'Asset not found',\n                    });\n                    const price$ = this._httpClient.get<PriceInfo>(`https://explorer.zano.org/api/price?asset_id=${asset_id}`).pipe(\n                        retry(5),\n                        catchError((err: Error) => {\n                            return default$;\n                        })\n                    );\n                    return zanoAssetInfo.asset_id === asset_id ? price$ : default$;\n                }),\n                takeUntil(this._destroy$)\n            )\n            .subscribe({\n                next: (value: PriceInfo) => {\n                    this.priceInfo = value;\n                    this._priceInfo$.next(value);\n\n                    this.form.controls.amount.updateValueAndValidity({ emitEvent: false });\n                },\n            });\n\n        merge(controls.address.statusChanges, controls.address.valueChanges)\n            .pipe(takeUntil(this._destroy$))\n            .subscribe((): void => this.updateAddressErrorMessage());\n\n        merge(controls.fee.statusChanges, controls.fee.valueChanges)\n            .pipe(takeUntil(this._destroy$))\n            .subscribe((): void => this.updateFeeErrorMessage());\n\n        this.addressItems$ = controls.address.valueChanges.pipe(\n            startWith(controls.address.value),\n            tap(value => {\n                const condition = value[0] === '@';\n                this.lowerCaseDisabled$.next(!condition);\n                this.loadingAddressItems$.next(condition);\n            }),\n            debounceTime(250),\n            map(value => {\n                if (!value?.length) {\n                    return this._openedWalletItems;\n                }\n                if (value[0] === '@') {\n                    return this._aliasItems.filter(name => {\n                        return name.includes(value);\n                    });\n                }\n                return [];\n            }),\n            tap(() => this.loadingAddressItems$.next(false))\n        );\n    }\n\n    private _updateErrorMessages(): void {\n        this.updateAddressErrorMessage();\n        this.updateFeeErrorMessage();\n    }\n\n    private _saveSendMoneyParams(): void {\n        const { valueChanges } = this.form;\n        const { currentWallet } = this.variablesService;\n        valueChanges.pipe(debounceTime(200), takeUntil(this._destroy$)).subscribe({\n            next: (): void => {\n                currentWallet.sendMoneyParams = this.form.getRawValue();\n            },\n        });\n    }\n\n    private _getWrapInfo(): void {\n        this.wrapInfoService\n            .getWrapInfo()\n            .pipe(\n                tap(() => this.loadingWrapInfo$.next(true)),\n                retry(5),\n                takeUntil(this._destroy$)\n            )\n            .subscribe({\n                next: (wrapInfo: WrapInfo) => {\n                    this.wrapInfo = wrapInfo;\n                    this.loadingWrapInfo$.next(false);\n                },\n                error: () => {\n                    this.loadingWrapInfo$.next(false);\n                },\n                complete: () => {\n                    this.loadingWrapInfo$.next(false);\n                },\n            });\n    }\n\n    private _listenSendActionData(): void {\n        this.variablesService.sendActionData$.pipe(takeUntil(this._destroy$)).subscribe({\n            next: (value: DeeplinkParams) => {\n                if (value && value.action === 'send') {\n                    const { address, amount, comment, comments, mixins, fee, hide_sender } = value;\n                    this.isVisibleAdditionalOptionsState = true;\n                    this.form.patchValue({\n                        address,\n                        amount: amount || null,\n                        comment: comment || comments || '',\n                        mixin: +mixins || MIXIN,\n                        asset_id: zanoAssetInfo.asset_id,\n                        fee: fee || this.variablesService.default_fee,\n                        hide: hide_sender === 'true',\n                    });\n                    this.variablesService.sendActionData$.next({});\n                }\n            },\n        });\n    }\n}\n","<div class=\"container scrolled-content\" fxFlex=\"1 1 auto\">\n    <form (ngSubmit)=\"beforeSubmit()\" [formGroup]=\"form\" class=\"form\" fxFlex=\"0 1 50rem\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\n        <div class=\"form__field--row\">\n            <!-- Address -->\n            <ng-container\n                *ngIf=\"{\n                    items: addressItems$ | async,\n                    loading: loadingAddressItems$ | async,\n                    lowerCaseDisabled: lowerCaseDisabled$ | async\n                } as vm\"\n            >\n                <div class=\"form__field\">\n                    <label for=\"address\">\n                        {{ 'SEND.ADDRESS' | translate }}\n                        <span class=\"color-red\">*</span>\n                    </label>\n\n                    <input\n                        (blur)=\"updateAddressErrorMessage()\"\n                        (contextmenu)=\"variablesService.onContextMenu($event)\"\n                        (paste)=\"pasteListenAddressField($event)\"\n                        [lowerCaseDisabled]=\"vm.lowerCaseDisabled\"\n                        [matAutocomplete]=\"auto\"\n                        [placeholder]=\"'PLACEHOLDERS.ADDRESS_PLACEHOLDER' | translate\"\n                        class=\"form__field--input\"\n                        formControlName=\"address\"\n                        id=\"address\"\n                        lowerCase\n                        matAutocompletePosition=\"below\"\n                        type=\"text\"\n                    />\n\n                    <mat-autocomplete #auto=\"matAutocomplete\" class=\"zano-autocomplete-panel\">\n                        <mat-option *ngIf=\"vm.loading\" class=\"loading\" disabled>\n                            <zano-loader class=\"mx-auto\" style=\"display: block; width: fit-content\"></zano-loader>\n                        </mat-option>\n\n                        <mat-option *ngIf=\"form.controls.address.value[0] === '@' && vm.items?.length === 0 && !vm.loading\" disabled>\n                            <span class=\"pl-1\"> Not found aliases </span>\n                        </mat-option>\n\n                        <ng-container *ngIf=\"!vm.loading\">\n                            <mat-option *ngFor=\"let item of vm.items; trackBy: trackByFn\" [value]=\"item\">\n                                <!-- Alias -->\n                                <ng-container *ngIf=\"item[0] === '@'; else itemAddressTemplate\">\n                                    <div\n                                        [ngClass]=\"{\n                                            available: item.length >= 2 && item.length <= 6,\n                                            'pl-1': item.length > 6\n                                        }\"\n                                        class=\"alias\"\n                                    >\n                                        {{ item }}\n                                    </div>\n                                </ng-container>\n                                <!-- Address -->\n                                <ng-template #itemAddressTemplate>\n                                    <span class=\"pl-1\">{{ item | zanoShortString }}</span>\n                                </ng-template>\n                            </mat-option>\n                        </ng-container>\n                    </mat-autocomplete>\n\n                    <div *ngIf=\"isVisibleError(form.controls.address)\" class=\"error\">\n                        {{ errorMessages['address'] | translate }}\n                    </div>\n\n                    <div *ngIf=\"aliasAddress\" class=\"info text-ellipsis\">\n                        <span>{{ aliasAddress | zanoShortString }}</span>\n                    </div>\n                </div>\n            </ng-container>\n\n            <!-- Amount -->\n            <div class=\"form__field amount\">\n                <label for=\"send-amount\">\n                    {{ 'SEND.AMOUNT' | translate }}\n                    <span class=\"color-red\">*</span>\n                </label>\n\n                <input\n                    (contextmenu)=\"variablesService.onContextMenu($event)\"\n                    [decimalPoint]=\"amountInputParams.decimalPoint\"\n                    [placeholder]=\"form.value.isAmountUSD ? '0.00' : '0'\"\n                    appInputValidate=\"money\"\n                    class=\"form__field--input\"\n                    formControlName=\"amount\"\n                    id=\"send-amount\"\n                    type=\"text\"\n                />\n\n                <button (click)=\"toggleAmountUSD()\" [disabled]=\"amountInputParams.reverseDisabled\" class=\"btn-reverse\" type=\"button\">\n                    <mat-icon svgIcon=\"zano-swap\" class=\"small\"></mat-icon>\n                </button>\n\n                <div\n                    [delay]=\"150\"\n                    [placement]=\"'bottom'\"\n                    [timeDelay]=\"1000\"\n                    [timeout]=\"0\"\n                    [tooltipClass]=\"'table-tooltip'\"\n                    [tooltip]=\"amountInputParams.inputTicker\"\n                    class=\"ticker\"\n                >\n                    <div class=\"text-ellipsis\">\n                        {{ amountInputParams.inputTicker }}\n                    </div>\n                </div>\n\n                <div class=\"hint text-ellipsis\">{{ amountInputParams.hintAmount }} {{ amountInputParams.hintTicker }}</div>\n\n                <div *ngIf=\"isVisibleError(form.controls.amount) || isVisibleError(form)\" class=\"error\">\n                    <div *ngIf=\"form.controls.amount.hasError('zero')\">\n                        {{ 'SEND.FORM_ERRORS.AMOUNT_ZERO' | translate }}\n                    </div>\n                    <div *ngIf=\"form.controls.amount.hasError('great_than_unwraped_coins')\">\n                        {{ 'SEND.FORM_ERRORS.GREAT_THAN_UNWRAPPED_COINS' | translate }}\n                    </div>\n                    <div *ngIf=\"form.controls.amount.hasError('less_than_zano_needed')\">\n                        {{ 'SEND.FORM_ERRORS.LESS_THAN_ZANO_NEEDED' | translate }}\n                    </div>\n                    <div *ngIf=\"form.controls.amount.hasError('wrap_info_null')\">\n                        {{ 'SEND.FORM_ERRORS.WRAP_INFO_NULL' | translate }}\n                    </div>\n                    <div *ngIf=\"form.controls.amount.hasError('required')\">\n                        {{ 'ERRORS.REQUIRED' | translate }}\n                    </div>\n                    <div *ngIf=\"form.hasError('insuficcientFunds')\">\n                        {{ form.errors['insuficcientFunds'].errorText | translate }}\n                    </div>\n                    <div *ngIf=\"form.hasError('greater_than_maximum_amount')\">\n                        {{ 'ERRORS.MAX' | translate : { max: form.errors['greater_than_maximum_amount'].max } }}\n                    </div>\n                    <div *ngIf=\"form.hasError('asset_not_found')\">\n                        {{ 'ERRORS.ASSET_NOT_FOUND' | translate }}\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- Comment -->\n        <div class=\"form__field\">\n            <label for=\"send-comment\">{{ 'SEND.COMMENT' | translate }}</label>\n            <input\n                (contextmenu)=\"variablesService.onContextMenu($event)\"\n                [maxLength]=\"variablesService.maxCommentLength\"\n                class=\"form__field--input\"\n                formControlName=\"comment\"\n                id=\"send-comment\"\n                placeholder=\"{{ 'PLACEHOLDERS.COMMENT_PLACEHOLDER' | translate }}\"\n                type=\"text\"\n            />\n            <div *ngIf=\"isVisibleError(form.controls.comment)\" class=\"error\">\n                <div *ngIf=\"form.controls.comment.hasError('maxLength')\">\n                    {{ 'SEND.FORM_ERRORS.MAX_LENGTH' | translate }}\n                </div>\n            </div>\n        </div>\n\n        <!-- Wrap information -->\n        <ng-container *ngIf=\"isVisibleWrapInfoState$ | async\">\n            <div *ngIf=\"wrapInfo && !(loadingWrapInfo$ | async)\" class=\"wrap mt-2 mb-2 p-2\">\n                <div class=\"title\">\n                    {{ 'SEND.WRAP.TITLE' | translate }}\n                    <mat-icon svgIcon=\"zano-info\"></mat-icon>\n                </div>\n                <div class=\"text-wrap\">\n                    {{ 'SEND.WRAP.MAIN_TEXT' | translate }}\n                </div>\n                <div class=\"title\">{{ 'SEND.WRAP.ESTIMATE' | translate }}</div>\n                <table class=\"text-wrap\">\n                    <tr>\n                        <td>{{ 'SEND.WRAP.WILL_RECEIVE' | translate }}</td>\n                        <td *ngIf=\"!form.controls.amount.errors\">\n                            {{ getReceivedValue() | intToMoney }}\n                            {{ 'SEND.WRAP.wZANO' | translate }}\n                        </td>\n                        <td *ngIf=\"form.controls.amount.errors\">-</td>\n                    </tr>\n                    <tr>\n                        <td>{{ 'SEND.WRAP.FEE' | translate }}</td>\n                        <td>\n                            {{ wrapInfo?.tx_cost?.zano_needed_for_erc20 | intToMoney : zanoAssetInfo.decimal_point }}\n                            {{ 'SEND.WRAP.ZANO' | translate }}\n                            ({{ '$' + wrapInfo.tx_cost?.usd_needed_for_erc20 }})\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </ng-container>\n\n        <!-- Asset -->\n        <div class=\"form__field\">\n            <label>\n                {{ 'SEND.ASSET' | translate }}\n                <span class=\"color-red\">*</span>\n            </label>\n            <ng-select\n                (change)=\"form.controls.amount.updateValueAndValidity()\"\n                [bindValue]=\"'asset_info.asset_id'\"\n                [clearable]=\"false\"\n                [items]=\"assetItems$ | async\"\n                [searchable]=\"false\"\n                class=\"custom-select with-circle\"\n                formControlName=\"asset_id\"\n            >\n                <ng-template let-asset=\"item\" ng-label-tmp ng-option-tmp>\n                    <img [alt]=\"asset.asset_info.ticker\" [src]=\"getSrcByAsset(asset)\" height=\"15\" width=\"15\" />\n                    {{ asset.asset_info.full_name ?? '***' }}\n                    <ng-container *appVisibilityBalance>\n                        ({{ asset.total | intToMoney : asset.asset_info.decimal_point }} {{ asset.asset_info.ticker }})\n                    </ng-container>\n                </ng-template>\n            </ng-select>\n            <div *ngIf=\"isVisibleError(form.controls.asset_id) || isVisibleError(form)\" class=\"error\">\n                <div *ngIf=\"form.controls.asset_id.hasError('required')\">\n                    {{ 'ERRORS.REQUIRED' | translate }}\n                </div>\n                <div *ngIf=\"form.hasError('max_decimal_point')\">\n                    {{ 'ERRORS.MAX_DECIMAL_POINT' | translate : { max: form.errors['max_decimal_point'].max } }}\n                </div>\n            </div>\n        </div>\n\n        <!-- Details -->\n        <div class=\"details mb-2\">\n            <button\n                (click)=\"isVisibleAdditionalOptionsState = !isVisibleAdditionalOptionsState\"\n                [class.border-radius-all]=\"!isVisibleAdditionalOptionsState\"\n                class=\"header\"\n                type=\"button\"\n            >\n                <span>{{ 'SEND.DETAILS' | translate }}</span>\n                <mat-icon\n                    class=\"ml-1\"\n                    svgIcon=\"zano-dropdown-arrow-down\"\n                    [ngClass]=\"{\n                        'rotate-180': isVisibleAdditionalOptionsState\n                    }\"\n                ></mat-icon>\n            </button>\n\n            <div *ngIf=\"isVisibleAdditionalOptionsState\" class=\"content\">\n                <!-- MIXIN -->\n                <div class=\"form__field--row\">\n                    <div class=\"form__field\">\n                        <label for=\"send-mixin\">\n                            {{ 'SEND.MIXIN' | translate }}\n                            <span class=\"color-red\">*</span>\n                        </label>\n                        <input\n                            (contextmenu)=\"variablesService.onContextMenu($event)\"\n                            [placeholder]=\"'PLACEHOLDERS.AMOUNT_PLACEHOLDER' | translate\"\n                            appInputValidate=\"integer\"\n                            class=\"form__field--input\"\n                            formControlName=\"mixin\"\n                            id=\"send-mixin\"\n                            maxlength=\"3\"\n                            type=\"text\"\n                        />\n                        <div *ngIf=\"isVisibleError(form.controls.mixin)\" class=\"error\">\n                            <div *ngIf=\"form.controls.mixin.hasError('required')\">\n                                {{ 'ERRORS.REQUIRED' | translate }}\n                            </div>\n                            <div *ngIf=\"form.controls.mixin.hasError('min')\">\n                                {{ 'Min' }} {{ form.controls.mixin.getError('min')['min'] }}\n                            </div>\n                            <div *ngIf=\"form.controls.mixin.hasError('max')\">\n                                {{ 'Max' }} {{ form.controls.mixin.getError('max')['max'] }}\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form__field\">\n                        <label for=\"send-fee\">\n                            {{ 'SEND.FEE' | translate }}\n                            <span class=\"color-red\">*</span>\n                        </label>\n                        <input\n                            (blur)=\"updateFeeErrorMessage()\"\n                            (contextmenu)=\"variablesService.onContextMenu($event)\"\n                            [placeholder]=\"'PLACEHOLDERS.FEE_PLACEHOLDER' | translate\"\n                            appInputValidate=\"money\"\n                            class=\"form__field--input\"\n                            formControlName=\"fee\"\n                            id=\"send-fee\"\n                            type=\"text\"\n                        />\n                        <div *ngIf=\"isVisibleError(form.controls.fee)\" class=\"error\">\n                            {{ errorMessages['fee'] | translate }}\n                        </div>\n                    </div>\n                </div>\n\n                <!-- HIDE -->\n                <app-checkbox [label]=\"'SEND.HIDE' | translate\" class=\"mt-1\" formControlName=\"hide\"></app-checkbox>\n            </div>\n        </div>\n\n        <button [disabled]=\"form.invalid || !variablesService.currentWallet.loaded\" class=\"primary big max-w-19-rem w-100\" type=\"submit\">\n            {{ 'SEND.BUTTON' | translate }}\n        </button>\n    </form>\n</div>\n\n<app-send-modal\n    (confirmed)=\"handleConfirmed($event)\"\n    *ngIf=\"isSendModalState\"\n    [sendMoneyParams]=\"form.getRawValue()\"\n    [priceInfo]=\"priceInfo\"\n></app-send-modal>\n\n<app-send-details-modal\n    (eventClose)=\"handeCloseSendDetailsModal($event)\"\n    *ngIf=\"isSendDetailsModalState\"\n    [job_id]=\"job_id\"\n></app-send-details-modal>\n","import { Component, NgZone, OnDestroy, OnInit } from '@angular/core';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { Chart } from 'angular-highcharts';\nimport { BackendService } from '@api/services/backend.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { IntToMoneyPipe } from '@parts/pipes/int-to-money-pipe/int-to-money.pipe';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BigNumber } from 'bignumber.js';\nimport { combineLatest, Subject, Subscription } from 'rxjs';\nimport * as Highcharts from 'highcharts';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-staking',\n    template: `\n        <div class=\"chart-wrap\" fxFlexFill fxLayout=\"column\">\n            <div class=\"scrolled-content h-100\" fxFlex=\"1 1 auto\" fxLayout=\"column\">\n                <div class=\"chart-header mb-1\" fxFlex=\"0 0 auto\" fxLayout=\"column\">\n                    <div class=\"row\" fxFlex=\"0 0 auto\" fxLayout=\"row nowrap\" fxLayoutAlign=\"space-between start\" fxLayoutGap=\"1rem\">\n                        <div\n                            class=\"left\"\n                            fxFlex=\"1 1 calc(50% - 0.5rem)\"\n                            fxLayout=\"row wrap\"\n                            fxLayoutAlign=\"start center\"\n                            fxLayoutGap=\"1rem\"\n                        >\n                            <div class=\"items\" fxLayout=\"row wrap\" fxLayoutGap=\"1rem\">\n                                <div\n                                    *ngIf=\"\n                                        (!variablesService.currentWallet.is_auditable && !variablesService.currentWallet.is_watch_only) ||\n                                        (variablesService.currentWallet.is_auditable && !variablesService.currentWallet.is_watch_only)\n                                    \"\n                                    class=\"item overflow-hidden p-1 border-radius-0_8-rem mb-1\"\n                                    fxLayout=\"row nowrap\"\n                                    fxLayoutAlign=\"space-between center\"\n                                >\n                                    <div class=\"left overflow-hidden mr-1\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                                        {{ 'STAKING.TITLE' | translate }}\n                                    </div>\n\n                                    <div class=\"right overflow-hidden w-100\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\n                                        <app-staking-switch\n                                            [(staking)]=\"variablesService.currentWallet.staking\"\n                                            [wallet_id]=\"variablesService.currentWallet.wallet_id\"\n                                        >\n                                        </app-staking-switch>\n                                    </div>\n                                </div>\n                                <div\n                                    class=\"item overflow-hidden p-1 border-radius-0_8-rem mb-1\"\n                                    fxLayout=\"row nowrap\"\n                                    fxLayoutAlign=\"space-between center\"\n                                >\n                                    <div class=\"left overflow-hidden mr-1\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                                        {{ 'STAKING.TITLE_PENDING' | translate }}\n                                        :\n                                    </div>\n                                    <div class=\"right overflow-hidden w-100\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\n                                        <div class=\"text-ellipsis mr-1\">\n                                            {{ pending.total | intToMoney }}\n                                        </div>\n                                        {{ variablesService.defaultTicker }}\n                                    </div>\n                                </div>\n                                <div\n                                    class=\"item overflow-hidden p-1 border-radius-0_8-rem mb-1\"\n                                    fxLayout=\"row nowrap\"\n                                    fxLayoutAlign=\"space-between center\"\n                                >\n                                    <div class=\"left overflow-hidden mr-1\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                                        {{ 'STAKING.TITLE_TOTAL' | translate }}\n                                        :\n                                    </div>\n                                    <div class=\"right overflow-hidden w-100\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\n                                        <div class=\"text-ellipsis mr-1\">\n                                            {{ total | intToMoney }}\n                                        </div>\n                                        {{ variablesService.defaultTicker }}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"right\" fxFlex=\"1 1 calc(50% - 0.5rem)\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"1rem\">\n                            <div *ngIf=\"selectedDate && selectedDate.date\" class=\"selected overflow-hidden\" fxHide fxShow.lg fxShow.xl>\n                                <div class=\"overflow-hidden\" fxLayout=\"row\">\n                                    <div class=\"text-ellipsis\">\n                                        {{ selectedDate.date | date : 'EEEE, MMMM d, y' }}\n                                        {{ selectedDate.amount }}\n                                    </div>\n                                    <div class=\"ml-0_5\">\n                                        {{ variablesService.defaultTicker }}\n                                    </div>\n                                </div>\n                            </div>\n\n                            <ng-select\n                                (change)=\"changeGroup($event)\"\n                                [(ngModel)]=\"selectedGroup\"\n                                [clearable]=\"false\"\n                                [items]=\"groups\"\n                                [searchable]=\"false\"\n                                bindLabel=\"title\"\n                                bindValue=\"key\"\n                                class=\"selected-group max-w-19-rem w-100\"\n                            >\n                                <ng-template let-item=\"item\" ng-label-tmp>\n                                    Sort by {{ (item.title | translate | lowercase) + 's' }}\n                                </ng-template>\n                                <ng-template let-index=\"index\" let-item=\"item\" ng-option-tmp>\n                                    {{ item.title | translate }}\n                                </ng-template>\n                            </ng-select>\n                        </div>\n                    </div>\n                    <div\n                        class=\"row\"\n                        fxFlex=\"0 0 2rem\"\n                        fxHide.lg\n                        fxHide.xl\n                        fxLayout=\"row nowrap\"\n                        fxLayoutAlign=\"space-between center\"\n                        fxLayoutGap=\"1rem\"\n                        fxShow\n                    >\n                        <div class=\"left\"></div>\n                        <div class=\"right\" fxLayoutAlign=\"end center\">\n                            <div *ngIf=\"selectedDate && selectedDate.date\" class=\"selected overflow-hidden\">\n                                <div class=\"overflow-hidden\" fxLayout=\"row\">\n                                    <div class=\"text-ellipsis\">\n                                        {{ selectedDate.date | date : 'EEEE, MMMM d, y' }}\n                                        {{ selectedDate.amount }}\n                                    </div>\n                                    <div class=\"ml-0_5\">\n                                        {{ variablesService.defaultTicker }}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"chart border-radius-0_8-rem\" fxFlex=\"1 1 auto\" fxLayoutAlign=\" center\">\n                    <div [chart]=\"chart\"></div>\n                </div>\n\n                <div class=\"chart-options mt-2\" fxFlex=\"0 0 auto\" fxLayoutAlign=\" center\">\n                    <ng-container *ngFor=\"let period of periods; let last = last\">\n                        <button\n                            (click)=\"changePeriod(period)\"\n                            [class.active]=\"period.active\"\n                            [class.mr-1]=\"!last\"\n                            [class.outline]=\"!last\"\n                            [class.primary]=\"last\"\n                            class=\"big w-100\"\n                            type=\"button\"\n                        >\n                            {{ period.title }}\n                        </button>\n                    </ng-container>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: auto;\n            }\n        `,\n    ],\n})\nexport class StakingComponent implements OnInit, OnDestroy {\n    periods = [\n        {\n            title: this.translate.instant('STAKING.PERIOD.WEEK1'),\n            key: '1 week',\n            active: false,\n        },\n        {\n            title: this.translate.instant('STAKING.PERIOD.WEEK2'),\n            key: '2 week',\n            active: false,\n        },\n        {\n            title: this.translate.instant('STAKING.PERIOD.MONTH1'),\n            key: '1 month',\n            active: false,\n        },\n        {\n            title: this.translate.instant('STAKING.PERIOD.MONTH3'),\n            key: '3 month',\n            active: false,\n        },\n        {\n            title: this.translate.instant('STAKING.PERIOD.MONTH6'),\n            key: '6 month',\n            active: false,\n        },\n        {\n            title: this.translate.instant('STAKING.PERIOD.YEAR'),\n            key: '1 year',\n            active: false,\n        },\n        {\n            title: this.translate.instant('STAKING.PERIOD.ALL'),\n            key: 'All',\n            active: true,\n        },\n    ];\n\n    groups = [\n        {\n            title: this.translate.instant('STAKING.GROUP.DAY'),\n            key: 'day',\n            active: true,\n        },\n        {\n            title: this.translate.instant('STAKING.GROUP.WEEK'),\n            key: 'week',\n            active: false,\n        },\n        {\n            title: this.translate.instant('STAKING.GROUP.MONTH'),\n            key: 'month',\n            active: false,\n        },\n    ];\n\n    selectedGroup = this.groups[0].key;\n\n    selectedDate = {\n        date: null,\n        amount: null,\n    };\n\n    originalData = [];\n\n    chart: Chart;\n\n    total = new BigNumber(0);\n\n    pending = {\n        list: [],\n        total: new BigNumber(0),\n    };\n\n    themeChangesSubscription: Subscription;\n\n    private destroy$ = new Subject<void>();\n\n    constructor(\n        public variablesService: VariablesService,\n        private route: ActivatedRoute,\n        private backend: BackendService,\n        private ngZone: NgZone,\n        private intToMoneyPipe: IntToMoneyPipe,\n        private translate: TranslateService\n    ) {}\n\n    static makeGroupTime(key, date): number {\n        if (key === 'day') {\n            return date.setHours(0, 0, 0, 0);\n        } else if (key === 'week') {\n            return new Date(date.setDate(date.getDate() - date.getDay())).setHours(0, 0, 0, 0);\n        } else {\n            return new Date(date.setDate(1)).setHours(0, 0, 0, 0);\n        }\n    }\n\n    ngOnInit(): void {\n        this.route.parent.params.pipe(takeUntil(this.destroy$)).subscribe({\n            next: () => {\n                this.getMiningHistory();\n            },\n        });\n        this.variablesService.getHeightAppEvent.pipe(takeUntil(this.destroy$)).subscribe({\n            next: (newHeight: number) => {\n                if (!this.pending.total.isZero()) {\n                    const pendingCount = this.pending.list.length;\n                    for (let i = pendingCount - 1; i >= 0; i--) {\n                        if (newHeight - this.pending.list[i].h >= 10) {\n                            this.pending.list.splice(i, 1);\n                        }\n                    }\n                    if (pendingCount !== this.pending.list.length) {\n                        this.pending.total = new BigNumber(0);\n                        for (let i = 0; i < this.pending.list.length; i++) {\n                            this.pending.total = this.pending.total.plus(this.pending.list[i].a);\n                        }\n                    }\n                }\n            },\n        });\n        this.variablesService.getRefreshStackingEvent.pipe(takeUntil(this.destroy$)).subscribe({\n            next: (wallet_id: number) => {\n                if (this.variablesService.currentWallet.wallet_id === wallet_id) {\n                    this.getMiningHistory();\n                }\n            },\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    drawChart(data): void {\n        this.chart = new Chart({\n            title: { text: '' },\n            credits: { enabled: false },\n            exporting: { enabled: false },\n            legend: { enabled: false },\n            chart: {\n                type: 'line',\n                backgroundColor: 'transparent',\n                height: null,\n                events: {\n                    load: (): void => {\n                        this.changePeriod();\n                    },\n                },\n            },\n\n            yAxis: {\n                min: 0,\n                tickAmount: 5,\n                title: {\n                    text: '',\n                },\n                gridLineColor: '#2b3644',\n                gridLineWidth: 2,\n                lineColor: '#2b3644',\n                lineWidth: 2,\n                tickWidth: 2,\n                tickLength: 120,\n                tickColor: '#2b3644',\n                labels: {\n                    y: -8,\n                    align: 'left',\n                    x: -120,\n                    style: {\n                        color: '#e0e0e0',\n                        fontSize: '13px',\n                    },\n                    format: '{value} ' + this.variablesService.defaultTicker,\n                },\n            },\n\n            xAxis: {\n                type: 'datetime',\n                gridLineColor: '#2b3644',\n                lineColor: '#2b3644',\n                lineWidth: 2,\n                tickWidth: 2,\n                tickLength: 10,\n                tickColor: '#2b3644',\n                labels: {\n                    style: {\n                        color: '#e0e0e0',\n                        fontSize: '13px',\n                    },\n                },\n                minPadding: 0,\n                maxPadding: 0,\n                minRange: 86400000,\n                // tickInterval: 86400000,\n                minTickInterval: 3600000,\n            },\n\n            tooltip: {\n                enabled: false,\n            },\n\n            plotOptions: {\n                area: {\n                    fillColor: {\n                        linearGradient: {\n                            x1: 0,\n                            y1: 0,\n                            x2: 0,\n                            y2: 1,\n                        },\n                        stops: [\n                            [0, 'rgba(124,181,236,0.2)'],\n                            [1, 'rgba(124,181,236,0)'],\n                        ],\n                    },\n                    marker: {\n                        enabled: false,\n                        radius: 2,\n                    },\n                    lineWidth: 2,\n                    threshold: null,\n                },\n\n                series: {\n                    point: {\n                        events: {\n                            mouseOver: (obj): void => {\n                                this.selectedDate.date = obj.target['x'];\n                                this.selectedDate.amount = obj.target['y'];\n                            },\n                        },\n                    },\n                    events: {\n                        mouseOut: (): void => {\n                            this.selectedDate.date = null;\n                            this.selectedDate.amount = null;\n                        },\n                    },\n                },\n            },\n            series: [\n                {\n                    type: 'area',\n                    data: data,\n                },\n            ],\n        });\n    }\n\n    getMiningHistory(): void {\n        if (this.variablesService.currentWallet.loaded) {\n            this.backend.getMiningHistory(this.variablesService.currentWallet.wallet_id, (status, data) => {\n                this.total = new BigNumber(0);\n                this.pending.list = [];\n                this.pending.total = new BigNumber(0);\n                this.originalData = [];\n                if (data.mined_entries) {\n                    data.mined_entries.forEach((item, key) => {\n                        if (item.t.toString().length === 10) {\n                            data.mined_entries[key].t = new Date(item.t * 1000).setUTCMilliseconds(0);\n                        }\n                    });\n                    data.mined_entries.forEach(item => {\n                        this.total = this.total.plus(item.a);\n                        if (this.variablesService.height_app - item.h < 10) {\n                            this.pending.list.push(item);\n                            this.pending.total = this.pending.total.plus(item.a);\n                        }\n                        this.originalData.push([parseInt(item.t, 10), parseFloat(this.intToMoneyPipe.transform(item.a))]);\n                    });\n                    this.originalData = this.originalData.sort(function (a, b) {\n                        return a[0] - b[0];\n                    });\n                }\n                this.ngZone.run(() => {\n                    this.drawChart([]);\n                    this.themeChangesSubscription?.unsubscribe();\n                    this.themeChangesSubscription = combineLatest([this.chart.ref$, this.variablesService.isDarkTheme$])\n                        .pipe(takeUntil(this.destroy$))\n                        .subscribe({\n                            next: ([ref, isDarkTheme]) => {\n                                let option: Highcharts.Options = {};\n                                if (isDarkTheme) {\n                                    option = {\n                                        ...option,\n                                        plotOptions: {\n                                            area: {\n                                                fillColor: {\n                                                    linearGradient: {\n                                                        x1: 0,\n                                                        y1: 0,\n                                                        x2: 0,\n                                                        y2: 1,\n                                                    },\n                                                    stops: [\n                                                        [0, 'rgba(124,181,236,0.2)'],\n                                                        [1, 'rgba(124,181,236,0)'],\n                                                    ],\n                                                },\n                                                marker: {\n                                                    enabled: false,\n                                                    radius: 2,\n                                                },\n                                                lineWidth: 2,\n                                                threshold: null,\n                                            },\n                                        },\n                                        yAxis: {\n                                            gridLineColor: '#2b3644',\n                                            lineColor: '#2b3644',\n                                            tickColor: '#2b3644',\n                                            labels: {\n                                                style: {\n                                                    color: '#e0e0e0',\n                                                },\n                                            },\n                                        },\n\n                                        xAxis: {\n                                            gridLineColor: '#2b3644',\n                                            lineColor: '#2b3644',\n                                            tickColor: '#2b3644',\n                                            labels: {\n                                                style: {\n                                                    color: '#e0e0e0',\n                                                },\n                                            },\n                                        },\n                                    };\n                                } else {\n                                    option = {\n                                        ...option,\n                                        plotOptions: {\n                                            area: {\n                                                color: '#1F8FEB',\n                                                marker: {\n                                                    enabled: false,\n                                                    radius: 2,\n                                                },\n                                                lineWidth: 2,\n                                                threshold: null,\n                                            },\n                                        },\n                                        yAxis: {\n                                            gridLineColor: '#1F8FEB20',\n                                            lineColor: '#1F8FEB20',\n                                            tickColor: '#1F8FEB20',\n                                            labels: {\n                                                style: {\n                                                    color: '#0C0C3A',\n                                                },\n                                            },\n                                        },\n\n                                        xAxis: {\n                                            gridLineColor: '#1F8FEB20',\n                                            lineColor: '#1F8FEB20',\n                                            tickColor: '#1F8FEB20',\n                                            labels: {\n                                                style: {\n                                                    color: '#0C0C3A',\n                                                },\n                                            },\n                                        },\n                                    };\n                                }\n\n                                ref.update(option, true);\n                            },\n                        });\n                });\n            });\n        }\n    }\n\n    changePeriod(period?): void {\n        if (!this.chart) {\n            return;\n        }\n\n        if (period) {\n            this.periods.forEach(p => {\n                p.active = false;\n            });\n            period.active = true;\n        } else {\n            period = this.periods.find(p => p.active);\n        }\n\n        const d = new Date();\n        let min = null;\n        const newData = [];\n\n        const group = this.groups.find(g => g.active);\n\n        if (period.key === '1 week') {\n            this.originalData.forEach(item => {\n                const time = StakingComponent.makeGroupTime(group.key, new Date(item[0]));\n                const find = newData.find(itemNew => itemNew[0] === time);\n                if (find) {\n                    find[1] = new BigNumber(find[1]).plus(item[1]).toNumber();\n                } else {\n                    newData.push([time, item[1]]);\n                }\n            });\n            this.chart.ref?.series[0].setData(newData, true);\n            min = Date.UTC(d.getFullYear(), d.getMonth(), d.getDate() - 7, 0, 0, 0, 0);\n        } else if (period.key === '2 week') {\n            this.originalData.forEach(item => {\n                const time = StakingComponent.makeGroupTime(group.key, new Date(item[0]));\n                const find = newData.find(itemNew => itemNew[0] === time);\n                if (find) {\n                    find[1] = new BigNumber(find[1]).plus(item[1]).toNumber();\n                } else {\n                    newData.push([time, item[1]]);\n                }\n            });\n            this.chart.ref?.series[0].setData(newData, true);\n            min = Date.UTC(d.getFullYear(), d.getMonth(), d.getDate() - 14, 0, 0, 0, 0);\n        } else if (period.key === '1 month') {\n            this.originalData.forEach(item => {\n                const time = StakingComponent.makeGroupTime(group.key, new Date(item[0]));\n                const find = newData.find(itemNew => itemNew[0] === time);\n                if (find) {\n                    find[1] = new BigNumber(find[1]).plus(item[1]).toNumber();\n                } else {\n                    newData.push([time, item[1]]);\n                }\n            });\n            this.chart.ref?.series[0].setData(newData, true);\n            min = Date.UTC(d.getFullYear(), d.getMonth() - 1, d.getDate(), 0, 0, 0, 0);\n        } else if (period.key === '3 month') {\n            this.originalData.forEach(item => {\n                const time = StakingComponent.makeGroupTime(group.key, new Date(item[0]));\n                const find = newData.find(itemNew => itemNew[0] === time);\n                if (find) {\n                    find[1] = new BigNumber(find[1]).plus(item[1]).toNumber();\n                } else {\n                    newData.push([time, item[1]]);\n                }\n            });\n            this.chart.ref?.series[0].setData(newData, true);\n            min = Date.UTC(d.getFullYear(), d.getMonth() - 3, d.getDate(), 0, 0, 0, 0);\n        } else if (period.key === '6 month') {\n            this.originalData.forEach(item => {\n                const time = StakingComponent.makeGroupTime(group.key, new Date(item[0]));\n                const find = newData.find(itemNew => itemNew[0] === time);\n                if (find) {\n                    find[1] = new BigNumber(find[1]).plus(item[1]).toNumber();\n                } else {\n                    newData.push([time, item[1]]);\n                }\n            });\n            this.chart.ref?.series[0].setData(newData, true);\n            min = Date.UTC(d.getFullYear(), d.getMonth() - 6, d.getDate(), 0, 0, 0, 0);\n        } else if (period.key === '1 year') {\n            this.originalData.forEach(item => {\n                const time = StakingComponent.makeGroupTime(group.key, new Date(item[0]));\n                const find = newData.find(itemNew => itemNew[0] === time);\n                if (find) {\n                    find[1] = new BigNumber(find[1]).plus(item[1]).toNumber();\n                } else {\n                    newData.push([time, item[1]]);\n                }\n            });\n            this.chart.ref?.series[0].setData(newData, true);\n            min = Date.UTC(d.getFullYear() - 1, d.getMonth(), d.getDate(), 0, 0, 0, 0);\n        } else {\n            this.originalData.forEach(item => {\n                const time = StakingComponent.makeGroupTime(group.key, new Date(item[0]));\n                const find = newData.find(itemNew => itemNew[0] === time);\n                if (find) {\n                    find[1] = new BigNumber(find[1]).plus(item[1]).toNumber();\n                } else {\n                    newData.push([time, item[1]]);\n                }\n            });\n            this.chart.ref?.series[0].setData(newData, true);\n        }\n\n        this.chart.ref?.xAxis[0].setExtremes(min, null);\n    }\n\n    changeGroup(group): void {\n        this.groups.forEach(g => {\n            g.active = false;\n        });\n        group.active = true;\n        this.changePeriod();\n    }\n}\n","import { Component, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexModule } from '@angular/flex-layout';\nimport { GetAssetInfoPipe, IntToMoneyPipeModule } from '@parts/pipes';\nimport { NonNullableFormBuilder, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { ZanoValidators } from '@parts/utils/zano-validators';\nimport { ProposalDetails } from '@api/models/swap.model';\nimport { MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-swap-confirm-master-password',\n    standalone: true,\n    imports: [CommonModule, FlexModule, ReactiveFormsModule, TranslateModule, IntToMoneyPipeModule, GetAssetInfoPipe, MatDialogModule],\n    templateUrl: './swap-confirm-master-password.component.html',\n    styleUrls: ['./swap-confirm-master-password.component.scss'],\n})\nexport class SwapConfirmMasterPasswordComponent {\n    variablesService: VariablesService = inject(VariablesService);\n\n    fb: NonNullableFormBuilder = inject(NonNullableFormBuilder);\n\n    confirmForm = this.fb.group(\n        {\n            password: this.fb.control(''),\n            appPass: this.fb.control(this.variablesService.appPass || ''),\n        },\n        { validators: [ZanoValidators.formMatch('password', 'appPass', 'passwordNotMatch')] }\n    );\n\n    data: { proposalDetails: ProposalDetails } = inject(MAT_DIALOG_DATA);\n}\n","<form [formGroup]=\"confirmForm\">\n    <h3 mat-dialog-title>\n        {{ 'CONFIRM.TITLE' | translate }}\n    </h3>\n\n    <mat-dialog-content>\n        <div class=\"table-info mb-2\">\n            <div class=\"row\">\n                <div class=\"label max-w-19-rem w-100\">\n                    {{ 'CONFIRM_SWAP.FORM.TABLE.LABELS.LABEL1' | translate }}\n                </div>\n                <div class=\"text\">\n                    <ng-container *ngFor=\"let item of data.proposalDetails.to_initiator\">\n                        {{ item.amount | intToMoney : (item.asset_id | getAssetInfo)?.decimal_point }}\n                        {{ (item.asset_id | getAssetInfo)?.ticker || '***' }}\n                        <br />\n                    </ng-container>\n                </div>\n            </div>\n\n            <hr class=\"separator\" />\n\n            <div class=\"row\">\n                <div class=\"label max-w-19-rem w-100\">\n                    {{ 'CONFIRM_SWAP.FORM.TABLE.LABELS.LABEL2' | translate }}\n                </div>\n                <div class=\"text\">\n                    <ng-container *ngFor=\"let item of data.proposalDetails.to_finalizer\">\n                        {{ item.amount | intToMoney }}\n                        {{ (item.asset_id | getAssetInfo)?.ticker || '***' }}\n                        <br />\n                    </ng-container>\n                </div>\n            </div>\n        </div>\n\n        <div *ngIf=\"variablesService.appPass\" class=\"form__field mb-0\">\n            <label for=\"password\">\n                {{ 'LOGIN.MASTER_PASS' | translate }}\n                <span class=\"color-red\">*</span>\n            </label>\n            <input\n                (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\n                [class.invalid]=\"confirmForm.touched && confirmForm.invalid\"\n                [placeholder]=\"'PLACEHOLDERS.MASTER_PASS_PLACEHOLDER' | translate\"\n                autofocus\n                class=\"form__field--input\"\n                formControlName=\"password\"\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n            />\n            <div *ngIf=\"confirmForm.touched && confirmForm.invalid\" class=\"error\">\n                <div *ngIf=\"confirmForm.hasError('passwordNotMatch')\">\n                    {{ 'LOGIN.FORM_ERRORS.WRONG_PASSWORD' | translate }}\n                </div>\n                <div *ngIf=\"confirmForm.controls.password.hasError('required')\">\n                    {{ 'LOGIN.FORM_ERRORS.PASS_REQUIRED' | translate }}\n                </div>\n            </div>\n        </div>\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <div fxFlex=\"1 1 auto\" fxLayout=\"row nowrap\" fxLayoutGap=\"1rem\">\n            <button [mat-dialog-close]=\"false\" class=\"outline big w-100\" type=\"button\">\n                {{ 'CONFIRM.BUTTON_CANCEL' | translate }}\n            </button>\n            <button [mat-dialog-close]=\"true\" [disabled]=\"confirmForm.invalid\" class=\"primary big w-100\"\n                    type=\"submit\">\n                {{ 'CONFIRM.BUTTON_CONFIRM' | translate }}\n            </button>\n        </div>\n    </mat-dialog-actions>\n</form>\n","import { Component, inject, NgZone, OnDestroy, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BreadcrumbsComponent } from '@parts/components/breadcrumbs/breadcrumbs.component';\nimport { BreadcrumbItems } from '@parts/components/breadcrumbs/breadcrumbs.models';\nimport { Router, RouterLinkWithHref } from '@angular/router';\nimport { InputValidateModule } from '@parts/directives';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NonNullableFormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, filter, take, takeUntil } from 'rxjs/operators';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { ParamsCallRpc } from '@api/models/call_rpc.model';\nimport { BackendService } from '@api/services/backend.service';\nimport { IntToMoneyPipeModule } from '@parts/pipes';\nimport { SwapConfirmMasterPasswordComponent } from '../../modals/swap-confirm-master-password/swap-confirm-master-password.component';\nimport { ProposalDetails } from '@api/models/swap.model';\nimport { GetAssetInfoPipe } from '@parts/pipes/get-asset-info.pipe';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-confirm-swap',\n    standalone: true,\n    imports: [\n        CommonModule,\n        BreadcrumbsComponent,\n        RouterLinkWithHref,\n        InputValidateModule,\n        TranslateModule,\n        ReactiveFormsModule,\n        IntToMoneyPipeModule,\n        GetAssetInfoPipe,\n    ],\n    templateUrl: './confirm-swap.component.html',\n    styleUrls: ['./confirm-swap.component.scss'],\n})\nexport class ConfirmSwapComponent implements OnInit, OnDestroy {\n    breadcrumbItems: BreadcrumbItems = [\n        {\n            routerLink: '/wallet/swap',\n            title: 'CONFIRM_SWAP.BREADCRUMBS.ITEM1',\n        },\n        {\n            title: 'CONFIRM_SWAP.BREADCRUMBS.ITEM2',\n        },\n    ];\n\n    errorRpc: { code: number; message: string } | undefined;\n\n    variablesService = inject(VariablesService);\n\n    fb = inject(NonNullableFormBuilder);\n\n    form = this.fb.group({\n        hex_raw_proposal: this.fb.control<string>('', [Validators.required]),\n    });\n\n    proposalDetails: ProposalDetails | undefined;\n\n    hex_raw_proposal: string | undefined;\n\n    private backendService: BackendService = inject(BackendService);\n\n    private router: Router = inject(Router);\n\n    private ngZone: NgZone = inject(NgZone);\n\n    private _matDialog: MatDialog = inject(MatDialog);\n\n    private destroy$ = new Subject<void>();\n\n    ngOnInit(): void {\n        this.form.controls.hex_raw_proposal.valueChanges\n            .pipe(distinctUntilChanged(), debounceTime(500), takeUntil(this.destroy$))\n            .subscribe({\n                next: (hex_raw_proposal: string) => {\n                    this.hex_raw_proposal = hex_raw_proposal;\n                    this.getProposalDetails(hex_raw_proposal);\n                },\n            });\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    swapConfirmMasterPasswordDialog(): void {\n        const proposalDetails = this.proposalDetails;\n        const config: MatDialogConfig = {\n            data: {\n                proposalDetails,\n            },\n            disableClose: true,\n        };\n        this._matDialog\n            .open(SwapConfirmMasterPasswordComponent, config)\n            .afterClosed()\n            .pipe(filter(Boolean), take(1))\n            .subscribe({\n                next: () => this.acceptProposal(),\n            });\n    }\n\n    acceptProposal(): void {\n        if (!this.hex_raw_proposal) {\n            return;\n        }\n        const { wallet_id } = this.variablesService.currentWallet;\n        const hex_raw_proposal = this.hex_raw_proposal;\n\n        const params: ParamsCallRpc = {\n            jsonrpc: '2.0',\n            id: 0,\n            method: 'ionic_swap_accept_proposal',\n            params: { hex_raw_proposal },\n        };\n        this.backendService.call_wallet_rpc([wallet_id, params], (status, response_data) => {\n            this.ngZone.run(() => {\n                if (response_data.result?.['result_tx_id']) {\n                    this.router.navigate(['/wallet/history']).then();\n                } else {\n                    this.errorRpc = response_data.error;\n                }\n            });\n        });\n    }\n\n    private getProposalDetails(hex_raw_proposal: string): void {\n        const { wallet_id } = this.variablesService.currentWallet;\n\n        const params: ParamsCallRpc = {\n            jsonrpc: '2.0',\n            id: 0,\n            method: 'ionic_swap_get_proposal_info',\n            params: { hex_raw_proposal },\n        };\n\n        this.backendService.call_wallet_rpc([wallet_id, params], (status, response_data) => {\n            this.ngZone.run(() => {\n                const proposal = response_data?.result?.['proposal'];\n                if (proposal) {\n                    this.proposalDetails = proposal;\n                    this.errorRpc = undefined;\n                } else {\n                    this.proposalDetails = undefined;\n                    this.errorRpc = response_data.error;\n                }\n            });\n        });\n    }\n}\n","<div class=\"container scrolled-content\">\n    <app-breadcrumbs [items]=\"breadcrumbItems\" class=\"mb-2\"></app-breadcrumbs>\n\n    <form [formGroup]=\"form\" class=\"form\">\n        <div class=\"form__field textarea mb-2\">\n            <label for=\"swap-proposal-hex\">\n                {{ 'CONFIRM_SWAP.FORM.LABELS.LABEL1' | translate }}\n            </label>\n            <textarea\n                [placeholder]=\"'CONFIRM_SWAP.FORM.PLACEHOLDERS.PLACEHOLDER1' | translate\"\n                formControlName=\"hex_raw_proposal\"\n                id=\"swap-proposal-hex\"\n            ></textarea>\n        </div>\n\n        <div *ngIf=\"proposalDetails\" class=\"form__field mb-2\">\n            <label for=\"swap-proposal-hex\">\n                {{ 'CONFIRM_SWAP.FORM.LABELS.LABEL2' | translate }}\n            </label>\n            <div class=\"table-info\">\n                <div class=\"row\">\n                    <div class=\"label max-w-19-rem w-100\">\n                        {{ 'CONFIRM_SWAP.FORM.TABLE.LABELS.LABEL1' | translate }}\n                    </div>\n\n                    <div class=\"text\">\n                        <p *ngFor=\"let item of proposalDetails.to_initiator\">\n                            {{ item.amount | intToMoney : (item.asset_id | getAssetInfo)?.decimal_point }}\n                            {{ (item.asset_id | getAssetInfo)?.ticker || '***' }}\n                        </p>\n                    </div>\n                </div>\n\n                <hr class=\"separator\" />\n\n                <div class=\"row\">\n                    <div class=\"label max-w-19-rem w-100\">\n                        {{ 'CONFIRM_SWAP.FORM.TABLE.LABELS.LABEL2' | translate }}\n                    </div>\n                    <div class=\"text\">\n                        <p *ngFor=\"let item of proposalDetails.to_finalizer\">\n                            {{ item.amount | intToMoney : (item.asset_id | getAssetInfo)?.decimal_point }}\n                            {{ (item.asset_id | getAssetInfo)?.ticker || '***' }}\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"actions\">\n            <button (click)=\"swapConfirmMasterPasswordDialog()\" [disabled]=\"!proposalDetails\" class=\"btn primary big w-100\" type=\"button\">\n                {{ 'CONFIRM_SWAP.FORM.BUTTONS.BUTTON1' | translate }}\n            </button>\n\n            <a class=\"btn outline big w-100\" routerLink=\"/wallet/swap\">\n                {{ 'CONFIRM_SWAP.FORM.BUTTONS.BUTTON2' | translate }}\n            </a>\n        </div>\n\n        <div *ngIf=\"errorRpc\" class=\"error mt-2\">\n            {{ 'ERRORS.INVALID_PROPOSAL' | translate }}\n        </div>\n    </form>\n</div>\n","import { Component, inject, NgZone, OnDestroy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router, RouterLinkWithHref } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { BreadcrumbsComponent } from '@parts/components/breadcrumbs/breadcrumbs.component';\nimport { BreadcrumbItems } from '@parts/components/breadcrumbs/breadcrumbs.models';\nimport { DefaultImgModule, InputValidateModule, LowerCaseDirective } from '@parts/directives';\nimport {\n    AbstractControl,\n    FormBuilder,\n    FormControl,\n    FormGroup,\n    FormsModule,\n    ReactiveFormsModule,\n    ValidationErrors,\n    Validators,\n} from '@angular/forms';\nimport { IntToMoneyPipeModule, MoneyToIntPipeModule, ShortStringPipe } from '@parts/pipes';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { AssetBalance, AssetInfo } from '@api/models/assets.model';\nimport { defaultImgSrc, zanoAssetInfo } from '@parts/data/assets';\nimport { regExpAliasName } from '@parts/utils/zano-validators';\nimport { BackendService } from '@api/services/backend.service';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { debounceTime, map, startWith, tap } from 'rxjs/operators';\nimport { BigNumber } from 'bignumber.js';\nimport { assetHasNotBeenAddedToWallet, insuficcientFunds } from '@parts/utils/zano-errors';\nimport { ParamsCallRpc } from '@api/models/call_rpc.model';\nimport { LoaderComponent } from '@parts/components/loader.component';\nimport { Wallet } from '@api/models/wallet.model';\nimport { intToMoney } from '@parts/functions/int-to-money';\nimport { moneyToInt } from '@parts/functions/money-to-int';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatOptionModule } from '@angular/material/core';\nimport { WalletsService } from '@parts/services/wallets.service';\nimport { MatIconModule } from '@angular/material/icon';\n\n@Component({\n    selector: 'app-create-swap',\n    standalone: true,\n    imports: [\n        CommonModule,\n        RouterLinkWithHref,\n        TranslateModule,\n        BreadcrumbsComponent,\n        InputValidateModule,\n        ReactiveFormsModule,\n        DefaultImgModule,\n        NgSelectModule,\n        LowerCaseDirective,\n        ShortStringPipe,\n        FormsModule,\n        IntToMoneyPipeModule,\n        MoneyToIntPipeModule,\n        LoaderComponent,\n        MatAutocompleteModule,\n        MatOptionModule,\n        MatIconModule,\n    ],\n    templateUrl: './create-swap.component.html',\n    styleUrls: ['./create-swap.component.scss'],\n})\nexport class CreateSwapComponent implements OnDestroy {\n    breadcrumbItems: BreadcrumbItems = [\n        {\n            routerLink: '/wallet/swap',\n            title: 'CREATE_SWAP.BREADCRUMBS.ITEM1',\n        },\n        {\n            title: 'CREATE_SWAP.BREADCRUMBS.ITEM2',\n        },\n    ];\n\n    variablesService: VariablesService = inject(VariablesService);\n\n    fb: FormBuilder = inject(FormBuilder);\n\n    aliasAddress: string;\n\n    loading$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n    lowerCaseDisabled$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\n\n    errorRpc: { code: number; message: string } = null;\n\n    currentWallet: Wallet = this.variablesService.currentWallet;\n\n    allAssetsInfo: AssetInfo[] = this.currentWallet.allAssetsInfo;\n\n    sendingAssetsInfo$: Observable<AssetInfo[]>;\n\n    sendingDecimalPoint$: Observable<number>;\n\n    receivingAssetsInfo$: Observable<AssetInfo[]>;\n\n    receivingDecimalPoint$: Observable<number>;\n\n    form: FormGroup<{\n        sending: FormGroup<{\n            amount: FormControl<string>;\n            asset_id: FormControl<string>;\n        }>;\n        receiving: FormGroup<{\n            amount: FormControl<string>;\n            asset_id: FormControl<string>;\n        }>;\n        receiverAddress: FormControl<string>;\n    }>;\n\n    errorMessages: { [key: string]: string | undefined } = {\n        receiverAddress: undefined,\n    };\n\n    addressItems$: Observable<string[]>;\n\n    loadingAddressItems$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\n\n    private _walletsService: WalletsService = inject(WalletsService);\n\n    private _openedWalletItems: string[] = this._walletsService.wallets.map(({ address, alias }) => alias?.name ?? address);\n\n    private _aliasItems: string[] = this.variablesService.aliases.map(({ name }) => name);\n\n    private _backendService: BackendService = inject(BackendService);\n\n    private _ngZone: NgZone = inject(NgZone);\n\n    private _router = inject(Router);\n\n    private _destroy$ = new Subject<void>();\n\n    constructor() {\n        this._createForm();\n    }\n\n    ngOnDestroy(): void {\n        this._destroy$.next();\n        this._destroy$.complete();\n    }\n\n    getSrcByAssetInfo({ asset_id }: AssetInfo): string {\n        switch (asset_id) {\n            case zanoAssetInfo.asset_id: {\n                return zanoAssetInfo.logo;\n            }\n            default: {\n                return defaultImgSrc;\n            }\n        }\n    }\n\n    isVisibleErrorByControl(control: AbstractControl): boolean {\n        return control.invalid && (control.dirty || control.touched);\n    }\n\n    isVisibleErrorByForm(form: FormGroup): boolean {\n        return form.invalid && (form.dirty || form.touched);\n    }\n\n    reverse(): void {\n        const { sending, receiving } = this.form.getRawValue();\n\n        const markAllAsTouched = () => {\n            this.form.controls.sending.markAllAsTouched();\n            this.form.controls.receiving.markAllAsTouched();\n        };\n\n        markAllAsTouched();\n\n        this.form.patchValue({\n            sending: receiving,\n            receiving: sending,\n        });\n        this.form.controls.sending.controls.amount.updateValueAndValidity();\n        this.form.controls.receiving.controls.amount.updateValueAndValidity();\n    }\n\n    updateReceiverAddressErrorMessage(): void {\n        const {\n            controls: { receiverAddress },\n        } = this.form;\n        let message: string | undefined;\n\n        switch (true) {\n            case receiverAddress.hasError('address_not_valid'): {\n                message = 'SEND.FORM_ERRORS.ADDRESS_NOT_VALID';\n                break;\n            }\n            case receiverAddress.hasError('alias_not_found'): {\n                message = 'SEND.FORM_ERRORS.ALIAS_NOT_FOUND';\n                break;\n            }\n            case receiverAddress.hasError('alias_not_valid'): {\n                message = 'SEND.FORM_ERRORS.ALIAS_NOT_VALID';\n                break;\n            }\n            case receiverAddress.hasError('required'): {\n                message = 'ERRORS.REQUIRED';\n                break;\n            }\n        }\n        this.errorMessages['receiverAddress'] = message;\n    }\n\n    pasteListenReceiverAddressField(event: ClipboardEvent): void {\n        event.preventDefault();\n        const {\n            controls: { receiverAddress },\n        } = this.form;\n        const { clipboardData } = event;\n        let value: string = clipboardData.getData('Text') ?? '';\n        this.lowerCaseDisabled$.next(value.indexOf('@') !== 0);\n\n        if (value.indexOf('@') === 0) {\n            value = value.toLowerCase();\n        }\n\n        receiverAddress.patchValue(value);\n    }\n\n    trackByFn(index: number, value: string): number | string {\n        return value ?? index;\n    }\n\n    beforeSubmit(): void {\n        if (this.form.invalid) {\n            this.form.markAllAsTouched();\n            this.form.updateValueAndValidity();\n            return;\n        }\n        this.submit();\n    }\n\n    submit(): void {\n        this.loading$.next(true);\n        const { sending, receiving, receiverAddress } = this.form.getRawValue();\n        const { wallet_id } = this.variablesService.currentWallet;\n        const { default_fee_big } = this.variablesService;\n\n        const { currentWallet } = this.variablesService;\n\n        const sendingAsset: AssetInfo | undefined = currentWallet.getAssetInfoByAssetId(sending.asset_id);\n        const receivingAsset: AssetInfo | undefined = currentWallet.getAssetInfoByAssetId(receiving.asset_id);\n\n        if (!sendingAsset) {\n            this.form.controls.sending.controls.asset_id.setErrors({\n                alias_not_found: true,\n            });\n            return;\n        }\n\n        if (!receivingAsset) {\n            this.form.controls.receiving.controls.asset_id.setErrors({\n                alias_not_found: true,\n            });\n            return;\n        }\n\n        const params2: ParamsCallRpc = {\n            jsonrpc: '2.0',\n            id: 0,\n            method: 'ionic_swap_generate_proposal',\n            params: {\n                proposal: {\n                    to_finalizer: [\n                        {\n                            asset_id: sending.asset_id,\n                            amount: moneyToInt(sending.amount, sendingAsset.decimal_point),\n                        },\n                    ],\n                    to_initiator: [\n                        {\n                            asset_id: receiving.asset_id,\n                            amount: moneyToInt(receiving.amount, receivingAsset.decimal_point),\n                        },\n                    ],\n                    mixins: 10,\n                    fee_paid_by_a: default_fee_big,\n                    expiration_time: 0,\n                },\n            },\n        };\n\n        if (receiverAddress.indexOf('@') === 0) {\n            const aliasName = receiverAddress;\n            const { aliases } = this.variablesService;\n            const alias = aliases.find(({ name }) => name === aliasName);\n\n            if (!alias) {\n                this.form.controls.receiverAddress.setErrors({\n                    alias_not_found: true,\n                });\n                return;\n            }\n\n            params2.params['destination_address'] = alias.address;\n        } else {\n            params2.params['destination_address'] = receiverAddress;\n        }\n\n        this._backendService.call_wallet_rpc([wallet_id, params2], (status, response_data) => {\n            if (response_data?.result) {\n                this._ngZone.run(() => {\n                    this._router\n                        .navigateByUrl('/wallet/swap-proposal-hex', {\n                            state: {\n                                hex_raw_proposal: response_data.result['hex_raw_proposal'],\n                            },\n                        })\n                        .then();\n                });\n            } else {\n                this._ngZone.run(() => {\n                    this.errorRpc = response_data.error;\n                    this.loading$.next(false);\n                });\n            }\n        });\n    }\n\n    private _formListeners(): void {\n        this.sendingAssetsInfo$ = this.form.controls.receiving.controls.asset_id.valueChanges.pipe(\n            startWith(this.form.controls.receiving.controls.asset_id.value),\n            map(asset_id => this.allAssetsInfo.filter(v => v.asset_id !== asset_id))\n        );\n        this.receivingAssetsInfo$ = this.form.controls.sending.controls.asset_id.valueChanges.pipe(\n            startWith(this.form.controls.sending.controls.asset_id.value),\n            map(asset_id => this.allAssetsInfo.filter(v => v.asset_id !== asset_id))\n        );\n\n        const { currentWallet } = this.variablesService;\n\n        this.sendingDecimalPoint$ = this.form.controls.sending.controls.asset_id.valueChanges.pipe(\n            startWith(this.form.controls.sending.controls.asset_id.value),\n            map((asset_id: string) => {\n                return currentWallet.getBalanceByAssetId(asset_id)?.asset_info.decimal_point ?? 0;\n            })\n        );\n\n        this.receivingDecimalPoint$ = this.form.controls.receiving.controls.asset_id.valueChanges.pipe(\n            startWith(this.form.controls.receiving.controls.asset_id.value),\n            map((asset_id: string) => {\n                return currentWallet.getBalanceByAssetId(asset_id)?.asset_info.decimal_point ?? 0;\n            })\n        );\n\n        this.addressItems$ = this.form.controls.receiverAddress.valueChanges.pipe(\n            startWith(this.form.controls.receiverAddress.value),\n            tap(value => {\n                const condition = value[0] === '@';\n                this.lowerCaseDisabled$.next(!condition);\n                this.loadingAddressItems$.next(condition);\n            }),\n            debounceTime(250),\n            map(value => {\n                if (!value?.length) {\n                    return this._openedWalletItems;\n                }\n                if (value[0] === '@') {\n                    return this._aliasItems.filter(name => {\n                        return name.includes(value);\n                    });\n                }\n                return [];\n            }),\n            tap(() => this.loadingAddressItems$.next(false))\n        );\n    }\n\n    private _createForm(): void {\n        this.form = this.fb.group(\n            {\n                sending: this.fb.group(\n                    {\n                        amount: this.fb.control(null, {\n                            validators: [\n                                Validators.required,\n                                ({ value }: FormControl): ValidationErrors | null => {\n                                    const amount: BigNumber = new BigNumber(value);\n\n                                    if (amount.eq(0)) {\n                                        return { zero: true };\n                                    }\n\n                                    return null;\n                                },\n                            ],\n                        }),\n                        asset_id: this.fb.control(zanoAssetInfo.asset_id, [Validators.required]),\n                    },\n                    {\n                        validators: [\n                            (form: FormGroup): ValidationErrors | null => {\n                                const { value: asset_id } = form.get('asset_id');\n                                const { value: amount } = form.get('amount');\n                                const preparedAmount = new BigNumber(amount);\n\n                                const { maximum_value } = this.variablesService;\n                                if (!asset_id) {\n                                    return null;\n                                }\n\n                                const asset: AssetBalance | undefined = this.variablesService.currentWallet.balances?.find(\n                                    v => v.asset_info.asset_id === asset_id\n                                );\n                                if (asset) {\n                                    const {\n                                        asset_info: { decimal_point },\n                                        unlocked,\n                                    } = asset;\n                                    const maximum_amount_by_decimal_point = intToMoney(maximum_value, decimal_point);\n                                    if (preparedAmount.isGreaterThan(maximum_amount_by_decimal_point)) {\n                                        return { greater_than_maximum_amount: { max: maximum_amount_by_decimal_point } };\n                                    }\n\n                                    const preparedUnlocked = intToMoney(unlocked, decimal_point);\n                                    return preparedAmount.isGreaterThan(preparedUnlocked) ? { insuficcientFunds } : null;\n                                } else {\n                                    return { assetHasNotBeenAddedToWallet };\n                                }\n                            },\n                        ],\n                    }\n                ),\n                receiving: this.fb.group(\n                    {\n                        amount: this.fb.control(\n                            {\n                                value: null,\n                                disabled: this.currentWallet.isEmptyAssetsInfoWhitelist,\n                            },\n                            [\n                                Validators.required,\n                                (control: FormControl): ValidationErrors | null => {\n                                    if (!control.value) {\n                                        return null;\n                                    }\n\n                                    if (control.value === 0) {\n                                        return { zero: true };\n                                    }\n                                    return null;\n                                },\n                            ]\n                        ),\n                        asset_id: this.fb.control(\n                            {\n                                value: this.currentWallet.isEmptyAssetsInfoWhitelist\n                                    ? null\n                                    : this.allAssetsInfo[1].asset_id ?? zanoAssetInfo.asset_id,\n                                disabled: this.currentWallet.isEmptyAssetsInfoWhitelist,\n                            },\n                            [Validators.required]\n                        ),\n                    },\n                    {\n                        validators: [\n                            (form: FormGroup): ValidationErrors | null => {\n                                const asset_id = form.controls.asset_id.value;\n                                const amount = new BigNumber(form.controls.amount.value);\n                                if (!asset_id) {\n                                    return null;\n                                }\n\n                                const asset: AssetBalance | undefined = this.variablesService.currentWallet.balances?.find(\n                                    v => v.asset_info.asset_id === asset_id\n                                );\n                                if (asset) {\n                                    const {\n                                        asset_info: { decimal_point },\n                                    } = asset;\n                                    const maximum_amount_by_decimal_point = intToMoney(this.variablesService.maximum_value, decimal_point);\n                                    if (amount.isGreaterThan(maximum_amount_by_decimal_point)) {\n                                        return { greater_than_maximum_amount: { max: maximum_amount_by_decimal_point } };\n                                    }\n                                    return null;\n                                } else {\n                                    return { assetHasNotBeenAddedToWallet };\n                                }\n                            },\n                        ],\n                    }\n                ),\n                receiverAddress: this.fb.control('', [\n                    Validators.required,\n                    (control: FormControl): ValidationErrors | null => {\n                        this.aliasAddress = '';\n                        if (control.value) {\n                            if (control.value.indexOf('@') !== 0) {\n                                this._backendService.validateAddress(control.value, (valid_status, data) => {\n                                    this._ngZone.run(() => {\n                                        if (valid_status === false) {\n                                            control.setErrors(Object.assign({ address_not_valid: true }, control.errors));\n                                        } else {\n                                            if (control.hasError('address_not_valid')) {\n                                                delete control.errors['address_not_valid'];\n                                                if (Object.keys(control.errors).length === 0) {\n                                                    control.setErrors(null);\n                                                }\n                                            }\n                                        }\n                                    });\n                                });\n                                return control.hasError('address_not_valid') ? { address_not_valid: true } : null;\n                            } else {\n                                if (!regExpAliasName.test(control.value)) {\n                                    return { alias_not_valid: true };\n                                } else {\n                                    this._backendService.getAliasInfoByName(control.value.replace('@', ''), (alias_status, alias_data) => {\n                                        this._ngZone.run(() => {\n                                            this.aliasAddress = alias_data.address;\n                                            if (alias_status) {\n                                                if (control.hasError('alias_not_found')) {\n                                                    delete control.errors['alias_not_found'];\n                                                    if (Object.keys(control.errors).length === 0) {\n                                                        control.setErrors(null);\n                                                    }\n                                                }\n                                            } else {\n                                                control.setErrors(Object.assign({ alias_not_found: true }, control.errors));\n                                            }\n                                        });\n                                    });\n                                }\n                                return control.hasError('alias_not_found') ? { alias_not_found: true } : null;\n                            }\n                        }\n                        return null;\n                    },\n                ]),\n            },\n            {\n                validators: [\n                    (control: AbstractControl): ValidationErrors | null => {\n                        const condition = control.get('sending').get('asset_id').value === control.get('receiving').get('asset_id').value;\n                        if (condition) {\n                            control.get('receiving').get('asset_id').setErrors({ sameAssetsId: true });\n                        } else {\n                            control.get('receiving').get('asset_id').setErrors(null);\n                        }\n                        return null;\n                    },\n                ],\n            }\n        );\n\n        this._setSendingAssetIdFromHistoryState();\n\n        this._formListeners();\n    }\n\n    private _setSendingAssetIdFromHistoryState(): void {\n        const state = history.state || {};\n        const history_asset: AssetBalance = state['asset'];\n        if (history_asset) {\n            const { asset_info: { asset_id } } = history_asset;\n            this.form.patchValue({\n                sending: {\n                    asset_id,\n                },\n            });\n        }\n    }\n}\n","<div class=\"container scrolled-content\">\n    <app-breadcrumbs [items]=\"breadcrumbItems\" class=\"mb-2\"></app-breadcrumbs>\n\n    <form (ngSubmit)=\"beforeSubmit()\" [formGroup]=\"form\" class=\"form\">\n        <!-- Sending -->\n        <div class=\"form__row\" formGroupName=\"sending\">\n            <div class=\"form__field\">\n                <label for=\"sending-amount\">\n                    {{ 'CREATE_SWAP.FORM.LABELS.LABEL1' | translate }}\n                </label>\n                <input\n                    (contextmenu)=\"variablesService.onContextMenu($event)\"\n                    [decimalPoint]=\"sendingDecimalPoint$ | async\"\n                    [placeholder]=\"'CREATE_SWAP.FORM.PLACEHOLDERS.PLACEHOLDER1' | translate\"\n                    appInputValidate=\"money\"\n                    class=\"form__field--input\"\n                    formControlName=\"amount\"\n                    id=\"sending-amount\"\n                    type=\"text\"\n                />\n                <div\n                    *ngIf=\"isVisibleErrorByControl(form.controls.sending.controls.amount) || isVisibleErrorByForm(form.controls.sending)\"\n                    class=\"error\"\n                >\n                    <div *ngIf=\"form.controls.sending.controls.amount.hasError('zero')\">\n                        {{ 'SEND.FORM_ERRORS.AMOUNT_ZERO' | translate }}\n                    </div>\n                    <div *ngIf=\"form.controls.sending.controls.amount.hasError('required')\">\n                        {{ 'ERRORS.REQUIRED' | translate }}\n                    </div>\n                    <div *ngIf=\"form.controls.sending.hasError('greater_than_maximum_amount')\">\n                        {{ 'ERRORS.MAX' | translate : { max: form.controls.sending.errors['greater_than_maximum_amount'].max } }}\n                    </div>\n                    <div *ngIf=\"form.controls.sending.hasError('insuficcientFunds')\">\n                        {{ form.controls.sending.errors['insuficcientFunds'].errorText | translate }}\n                    </div>\n                    <div *ngIf=\"form.controls.sending.hasError('assetHasNotBeenAddedToWallet')\">\n                        {{ form.controls.sending.errors['assetHasNotBeenAddedToWallet'].errorText | translate }}\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"form__field\">\n                <label> &nbsp; </label>\n                <ng-select\n                    (change)=\"form.controls.sending.controls.amount.updateValueAndValidity()\"\n                    [bindValue]=\"'asset_id'\"\n                    [clearable]=\"false\"\n                    [items]=\"sendingAssetsInfo$ | async\"\n                    [searchable]=\"false\"\n                    class=\"custom-select with-circle\"\n                    formControlName=\"asset_id\"\n                >\n                    <ng-template let-assetInfo=\"item\" ng-label-tmp ng-option-tmp>\n                        <img [alt]=\"assetInfo.ticker\" [src]=\"getSrcByAssetInfo(assetInfo)\" height=\"15\" width=\"15\" />\n                        {{ assetInfo.full_name || '---' }}\n                    </ng-template>\n                </ng-select>\n            </div>\n        </div>\n        <!-- /Sending -->\n\n        <div class=\"wrapper-reverse\">\n            <button (click)=\"reverse()\" [disabled]=\"currentWallet.isEmptyAssetsInfoWhitelist\" class=\"revers\" type=\"button\">\n                <mat-icon class=\"rotate-90\" svgIcon=\"zano-swap\"></mat-icon>\n            </button>\n        </div>\n\n        <!-- Receiving -->\n        <div class=\"form__row\" formGroupName=\"receiving\">\n            <div class=\"form__field\">\n                <label for=\"receiving-amount\">\n                    {{ 'CREATE_SWAP.FORM.LABELS.LABEL2' | translate }}\n                </label>\n                <input\n                    [decimalPoint]=\"receivingDecimalPoint$ | async\"\n                    [placeholder]=\"'CREATE_SWAP.FORM.PLACEHOLDERS.PLACEHOLDER1' | translate\"\n                    appInputValidate=\"money\"\n                    class=\"form__field--input\"\n                    formControlName=\"amount\"\n                    id=\"receiving-amount\"\n                    type=\"text\"\n                />\n                <div\n                    *ngIf=\"\n                        isVisibleErrorByControl(form.controls.receiving.controls.amount) || isVisibleErrorByForm(form.controls.receiving)\n                    \"\n                    class=\"error\"\n                >\n                    <div *ngIf=\"form.controls.receiving.controls.amount.hasError('required')\">\n                        {{ 'ERRORS.REQUIRED' | translate }}\n                    </div>\n                    <div *ngIf=\"form.controls.receiving.controls.amount.hasError('zero')\">\n                        {{ 'SEND.FORM_ERRORS.AMOUNT_ZERO' | translate }}\n                    </div>\n                    <div *ngIf=\"form.controls.receiving.hasError('greater_than_maximum_amount')\">\n                        {{ 'ERRORS.MAX' | translate : { max: form.controls.receiving.errors['greater_than_maximum_amount'].max } }}\n                    </div>\n                    <div *ngIf=\"form.controls.receiving.hasError('assetHasNotBeenAddedToWallet')\">\n                        {{ form.controls.receiving.errors['assetHasNotBeenAddedToWallet'].errorText | translate }}\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"form__field\">\n                <label> &nbsp; </label>\n                <ng-select\n                    [bindValue]=\"'asset_id'\"\n                    [clearable]=\"false\"\n                    [items]=\"receivingAssetsInfo$ | async\"\n                    [searchable]=\"false\"\n                    class=\"custom-select with-circle\"\n                    formControlName=\"asset_id\"\n                >\n                    <ng-template let-assetInfo=\"item\" ng-label-tmp ng-option-tmp>\n                        <img [alt]=\"assetInfo.ticker\" [src]=\"getSrcByAssetInfo(assetInfo)\" height=\"15\" width=\"15\" />\n                        {{ assetInfo.full_name || '---' }}\n                    </ng-template>\n                </ng-select>\n                <div\n                    *ngIf=\"\n                        form.controls.receiving.controls.asset_id.invalid &&\n                        (form.controls.receiving.controls.asset_id.dirty ||\n                            form.controls.receiving.controls.asset_id.touched ||\n                            form.touched)\n                    \"\n                    class=\"error\"\n                >\n                    <div *ngIf=\"form.controls.receiving.controls.asset_id.hasError('sameAssetsId')\">\n                        {{ 'CREATE_SWAP.FORM.ERRORS.ERROR1' | translate }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!-- /Receiving -->\n\n        <!-- Receiving Address -->\n        <div\n            *ngIf=\"{\n                items: addressItems$ | async,\n                loading: loadingAddressItems$ | async,\n                lowerCaseDisabled: lowerCaseDisabled$ | async\n            } as vm\"\n            class=\"form__field\"\n        >\n            <label for=\"address\">\n                {{ 'CREATE_SWAP.FORM.LABELS.LABEL3' | translate }}\n                <span class=\"color-red\">*</span>\n            </label>\n\n            <input\n                (blur)=\"updateReceiverAddressErrorMessage()\"\n                (contextmenu)=\"variablesService.onContextMenu($event)\"\n                (paste)=\"pasteListenReceiverAddressField($event)\"\n                [lowerCaseDisabled]=\"vm.lowerCaseDisabled\"\n                [matAutocomplete]=\"auto\"\n                [placeholder]=\"'PLACEHOLDERS.ADDRESS_PLACEHOLDER' | translate\"\n                class=\"form__field--input\"\n                formControlName=\"receiverAddress\"\n                lowerCase\n                matAutocompletePosition=\"below\"\n                type=\"text\"\n                id=\"address\"\n            />\n\n            <mat-autocomplete #auto=\"matAutocomplete\" class=\"zano-autocomplete-panel\">\n                <mat-option *ngIf=\"vm.loading\" class=\"loading\" disabled>\n                    <zano-loader class=\"mx-auto\" style=\"display: block; width: fit-content\"></zano-loader>\n                </mat-option>\n\n                <mat-option *ngIf=\"form.controls.receiverAddress.value[0] === '@' && vm.items?.length === 0 && !vm.loading\" disabled>\n                    <span class=\"pl-1\"> Not found aliases </span>\n                </mat-option>\n\n                <ng-container *ngIf=\"!vm.loading\">\n                    <mat-option *ngFor=\"let item of vm.items; trackBy: trackByFn\" [value]=\"item\">\n                        <!-- Alias -->\n                        <ng-container *ngIf=\"item[0] === '@'; else itemAddressTemplate\">\n                            <div\n                                [ngClass]=\"{\n                                    available: item.length >= 2 && item.length <= 6,\n                                    'pl-1': item.length > 6\n                                }\"\n                                class=\"alias\"\n                            >\n                                {{ item }}\n                            </div>\n                        </ng-container>\n                        <!-- Address -->\n                        <ng-template #itemAddressTemplate>\n                            <span class=\"pl-1\">{{ item | zanoShortString }}</span>\n                        </ng-template>\n                    </mat-option>\n                </ng-container>\n            </mat-autocomplete>\n\n            <div *ngIf=\"isVisibleErrorByControl(form.controls.receiverAddress)\" class=\"error\">\n                {{ errorMessages['receiverAddress'] | translate }}\n            </div>\n\n            <div *ngIf=\"aliasAddress\" class=\"info text-ellipsis\">\n                <span>{{ aliasAddress | zanoShortString }}</span>\n            </div>\n        </div>\n        <!-- /Address -->\n\n        <div class=\"actions\">\n            <button [disabled]=\"form.invalid || (loading$ | async)\" class=\"btn primary big w-100\" type=\"submit\">\n                <ng-container *ngIf=\"!(loading$ | async)\">{{ 'CREATE_SWAP.FORM.BUTTONS.BUTTON1' | translate }} </ng-container>\n                <zano-loader *ngIf=\"loading$ | async\" [type]=\"'circle'\"></zano-loader>\n            </button>\n            <a class=\"btn outline big w-100\" routerLink=\"/wallet/swap\">{{ 'CREATE_SWAP.FORM.BUTTONS.BUTTON2' | translate }}</a>\n        </div>\n\n        <div *ngIf=\"errorRpc\" class=\"error mt-2\">\n            {{ 'ERRORS.INVALID_PROPOSAL' | translate }}\n        </div>\n    </form>\n</div>\n","import { Component, inject, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BreadcrumbsComponent } from '@parts/components/breadcrumbs/breadcrumbs.component';\nimport { BreadcrumbItems } from '@parts/components/breadcrumbs/breadcrumbs.models';\nimport { RouterLinkWithHref } from '@angular/router';\nimport { InputValidateModule } from '@parts/directives';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { BackendService } from '@api/services/backend.service';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { IDeactivateComponent } from '@parts/interfaces/deactivete-component.interface';\nimport { Observable } from 'rxjs';\nimport { Dialog, DialogConfig } from '@angular/cdk/dialog';\nimport { ConfirmModalComponent, ConfirmModalData } from '@parts/modals/confirm-modal/confirm-modal.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-swap-proposal-hex',\n    standalone: true,\n    imports: [\n        CommonModule,\n        BreadcrumbsComponent,\n        RouterLinkWithHref,\n        InputValidateModule,\n        TranslateModule,\n        ReactiveFormsModule,\n        MatIconModule,\n    ],\n    templateUrl: './swap-proposal-hex.component.html',\n    styleUrls: ['./swap-proposal-hex.component.scss'],\n})\nexport class SwapProposalHexComponent implements OnInit, IDeactivateComponent {\n    breadcrumbItems: BreadcrumbItems = [\n        {\n            routerLink: '/wallet/swap',\n            title: 'SWAP_PROPOSAL_HEX.BREADCRUMBS.ITEM1',\n        },\n        {\n            title: 'SWAP_PROPOSAL_HEX.BREADCRUMBS.ITEM2',\n        },\n    ];\n\n    copyAnimation = false;\n\n    copyAnimationTimeout: any;\n\n    fb = inject(FormBuilder);\n\n    form = this.fb.group({\n        hex_raw_proposal: this.fb.control('', [Validators.required]),\n    });\n\n    private readonly backendService: BackendService = inject(BackendService);\n\n    private readonly _matDialog: MatDialog = inject(MatDialog);\n\n    ngOnInit(): void {\n        this.setSwapProposalHexFromHistoryState();\n    }\n\n    copy(): void {\n        const { hex_raw_proposal } = this.form.getRawValue();\n        this.backendService.setClipboard(hex_raw_proposal);\n        this.copyAnimation = true;\n        this.copyAnimationTimeout = setTimeout(() => {\n            this.copyAnimation = false;\n            clearTimeout(this.copyAnimationTimeout);\n        }, 2000);\n    }\n\n    canExit(): Observable<boolean> | Promise<boolean> | boolean {\n        const config: MatDialogConfig<ConfirmModalData> = {\n            disableClose: true,\n            data: {\n                title: 'SWAP_PROPOSAL_HEX.MODALS.CONFIRM_MODAL.TITLE',\n                message: 'SWAP_PROPOSAL_HEX.MODALS.CONFIRM_MODAL.MESSAGE',\n                buttons: {\n                    submit: 'SWAP_PROPOSAL_HEX.MODALS.CONFIRM_MODAL.BUTTONS.SUBMIT',\n                    close: 'SWAP_PROPOSAL_HEX.MODALS.CONFIRM_MODAL.BUTTONS.CLOSE',\n                },\n            },\n        };\n        const dialogRef = this._matDialog\n            .open<ConfirmModalComponent, ConfirmModalData, boolean>(ConfirmModalComponent, config);\n        return dialogRef.afterClosed();\n    }\n\n    private setSwapProposalHexFromHistoryState(): void {\n        const historyState = history.state || {};\n        const hex_raw_proposal = historyState['hex_raw_proposal'];\n        if (hex_raw_proposal) {\n            this.form.controls.hex_raw_proposal.patchValue(hex_raw_proposal, { emitEvent: false });\n        }\n    }\n}\n","<div class=\"container scrolled-content\">\n    <app-breadcrumbs [items]=\"breadcrumbItems\" class=\"mb-2\"></app-breadcrumbs>\n\n    <form [formGroup]=\"form\" class=\"form\">\n        <div class=\"form__field textarea\">\n            <label for=\"swap-proposal-hex\">\n                {{ 'SWAP_PROPOSAL_HEX.FORM.LABELS.LABEL1' | translate }}\n            </label>\n            <textarea\n                [placeholder]=\"'SWAP_PROPOSAL_HEX.FORM.PLACEHOLDERS.PLACEHOLDER1' | translate\"\n                formControlName=\"hex_raw_proposal\"\n                id=\"swap-proposal-hex\"\n                readonly\n            ></textarea>\n        </div>\n\n        <div class=\"actions\">\n            <button (click)=\"copy()\" [disabled]=\"form.invalid\" class=\"btn primary big w-100\" type=\"button\">\n                <mat-icon class=\"mr-1\" [svgIcon]=\"copyAnimation ? 'zano-check' : 'zano-copy'\"></mat-icon>\n                {{ 'SWAP_PROPOSAL_HEX.FORM.BUTTONS.BUTTON1' | translate }}\n            </button>\n\n            <a class=\"btn outline big w-100\" routerLink=\"/wallet/swap\">\n                {{ 'SWAP_PROPOSAL_HEX.FORM.BUTTONS.BUTTON2' | translate }}\n            </a>\n        </div>\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexModule } from '@angular/flex-layout';\nimport { RouterLinkWithHref } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@Component({\n    selector: 'app-swap',\n    standalone: true,\n    imports: [CommonModule, FlexModule, RouterLinkWithHref, TranslateModule],\n    templateUrl: './swap.component.html',\n    styleUrls: ['./swap.component.scss'],\n})\nexport class SwapComponent implements OnInit {\n    constructor() {}\n\n    ngOnInit(): void {}\n}\n","<div class=\"container scrolled-content\">\n    <div class=\"actions\">\n        <a class=\"btn primary big w-100\" routerLink=\"/wallet/create-swap\">{{ 'SWAP.BUTTONS.BUTTON1' | translate }}</a>\n        <a class=\"btn primary big w-100\" routerLink=\"/wallet/confirm-swap\">{{ 'SWAP.BUTTONS.BUTTON2' | translate }}</a>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanDeactivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { IDeactivateComponent } from '@parts/interfaces/deactivete-component.interface';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SwapProposalHexGuard implements CanDeactivate<IDeactivateComponent> {\n    canDeactivate(\n        component: IDeactivateComponent,\n        currentRoute: ActivatedRouteSnapshot,\n        currentState: RouterStateSnapshot,\n        nextState?: RouterStateSnapshot\n    ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n        return component.canExit ? component.canExit() : true;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { WalletComponent } from './wallet/wallet.component';\nimport { paths, pathsChildrenWallet } from '../paths';\nimport { SendComponent } from './tabs/send/send.component';\nimport { ReceiveComponent } from './tabs/receive/receive.component';\nimport { HistoryComponent } from './tabs/history/history.component';\nimport { StakingComponent } from './tabs/staking/staking.component';\nimport { AssetsComponent } from './tabs/assets/assets.component';\nimport { WithSidebarLayoutComponent } from '../../layouts/with-sidebar-layout/with-sidebar-layout.component';\nimport { ConfirmSwapComponent } from './tabs/swap/pages/confirm-swap/confirm-swap.component';\nimport { SwapComponent } from './tabs/swap/pages/swap/swap.component';\nimport { CreateSwapComponent } from './tabs/swap/pages/create-swap/create-swap.component';\nimport { SwapProposalHexComponent } from './tabs/swap/pages/swap-proposal-hex/swap-proposal-hex.component';\nimport { SwapProposalHexGuard } from './tabs/swap/parts/guards/swap-proposal-hex.guard';\nimport { CustomAssetsComponent } from './tabs/custom-assets/pages/custom-assets/custom-assets.component';\nimport { CreateNewAssetComponent } from './tabs/custom-assets/pages/create-new-asset/create-new-asset.component';\n\nconst routes: Routes = [\n    {\n        path: paths.wallet,\n        component: WithSidebarLayoutComponent,\n        children: [\n            {\n                path: '',\n                component: WalletComponent,\n                children: [\n                    {\n                        path: pathsChildrenWallet.assets,\n                        component: AssetsComponent,\n                    },\n                    {\n                        path: pathsChildrenWallet.send,\n                        component: SendComponent,\n                    },\n                    {\n                        path: pathsChildrenWallet.receive,\n                        component: ReceiveComponent,\n                    },\n                    {\n                        path: pathsChildrenWallet.history,\n                        component: HistoryComponent,\n                    },\n                    {\n                        path: pathsChildrenWallet.staking,\n                        component: StakingComponent,\n                    },\n                    {\n                        path: 'swap',\n                        component: SwapComponent,\n                    },\n                    {\n                        path: 'create-swap',\n                        component: CreateSwapComponent,\n                    },\n                    {\n                        path: 'swap-proposal-hex',\n                        component: SwapProposalHexComponent,\n                        canDeactivate: [SwapProposalHexGuard],\n                    },\n                    {\n                        path: 'confirm-swap',\n                        component: ConfirmSwapComponent,\n                    },\n                    {\n                        path: 'custom-assets',\n                        component: CustomAssetsComponent,\n                    },\n                    {\n                        path: 'create-new-asset',\n                        component: CreateNewAssetComponent,\n                    },\n                    {\n                        path: '',\n                        redirectTo: pathsChildrenWallet.assets,\n                        pathMatch: 'full',\n                    },\n                ],\n            },\n        ],\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class WalletRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WalletRoutingModule } from './wallet-routing.module';\nimport { AssetsComponent } from './tabs/assets/assets.component';\nimport { WalletComponent } from './wallet/wallet.component';\nimport { FlexLayoutModule, FlexModule } from '@angular/flex-layout';\nimport { TooltipModule } from '@parts/directives/tooltip/tooltip.module';\nimport {\n    ContractStatusMessagesPipeModule,\n    HistoryTypeMessagesPipeModule,\n    IntToMoneyPipeModule,\n    IsAvailableAliasNamePipeModule,\n    ShortStringPipe,\n} from '@parts/pipes';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ConfirmModalModule } from '@parts/modals/confirm-modal/confirm-modal.module';\nimport { ExportHistoryModalModule } from './wallet/modals/export-history-modal/export-history-modal.module';\nimport { WalletDetailsComponent } from '../wallet-details/wallet-details.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { DefaultImgModule, InputValidateModule, LowerCaseDirective } from '@parts/directives';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { HistoryComponent } from './tabs/history/history.component';\nimport { StakingComponent } from './tabs/staking/staking.component';\nimport { ChartModule } from 'angular-highcharts';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { ReceiveComponent } from './tabs/receive/receive.component';\nimport { DialogModule } from '@angular/cdk/dialog';\nimport { SendComponent } from './tabs/send/send.component';\nimport { ExportImportComponent } from '../export-import/export-import.component';\nimport { CheckboxComponent } from '@parts/components/checkbox.component';\nimport { CopyButtonComponent } from '@parts/components/copy-button.component';\nimport { StakingSwitchComponent } from '@parts/components/staking-switch.component';\nimport { SwitchComponent } from '@parts/components/switch.component';\nimport { BreadcrumbsComponent } from '@parts/components/breadcrumbs/breadcrumbs.component';\nimport { BackButtonComponent } from '@parts/components/back-button/back-button.component';\nimport { WalletModalsModule } from './tabs/send/modals/wallet-modals.module';\nimport { GetAssetInfoPipe } from '@parts/pipes/get-asset-info.pipe';\nimport { MigrateWalletToZarcanumComponent } from './wallet/modals/migrate-wallet-to-zarcanum/migrate-wallet-to-zarcanum.component';\nimport { SuccessSweepBareOutsComponent } from './wallet/modals/success-sweep-bare-outs/success-sweep-bare-outs.component';\nimport { GetAmountItemsPipe } from '@parts/pipes/get-amount-items.pipe';\nimport { TransactionStatusComponent } from '@parts/components/transaction-status/transaction-status.component';\nimport { IsVisibleFeePipe } from '@parts/pipes/is-visible-fee.pipe';\nimport { CustomAssetsComponent } from './tabs/custom-assets/pages/custom-assets/custom-assets.component';\nimport { CreateNewAssetComponent } from './tabs/custom-assets/pages/create-new-asset/create-new-asset.component';\nimport { ConfirmCreateCustomAssetComponent } from './tabs/custom-assets/modals/confirm-create-custom-asset/confirm-create-custom-asset.component';\nimport { UpdateCustomAssetComponent } from './tabs/custom-assets/modals/update-custom-asset/update-custom-asset.component';\nimport { EmitCustomAssetComponent } from './tabs/custom-assets/modals/emit-custom-asset/emit-custom-asset.component';\nimport { BurnCustomAssetComponent } from './tabs/custom-assets/modals/burn-custom-asset/burn-custom-asset.component';\nimport { TransactionDetailsForCustomAssetsComponent } from './tabs/custom-assets/modals/transaction-details-for-custom-assets/transaction-details-for-custom-assets.component';\nimport { TransactionDetailsComponent } from '@parts/components/transaction-details.component';\nimport { VisibilityBalanceDirective } from '@parts/directives/visibility-balance.directive';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { LoaderComponent } from '@parts/components/loader.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { AssetDetailsComponent } from '@parts/modals/asset-details/asset-details.component';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n@NgModule({\n    declarations: [\n        WalletComponent,\n        AssetsComponent,\n        WalletDetailsComponent,\n        HistoryComponent,\n        StakingComponent,\n        ReceiveComponent,\n        ExportImportComponent,\n        SendComponent,\n        MigrateWalletToZarcanumComponent,\n        SuccessSweepBareOutsComponent,\n        CustomAssetsComponent,\n        CreateNewAssetComponent,\n        ConfirmCreateCustomAssetComponent,\n        UpdateCustomAssetComponent,\n        EmitCustomAssetComponent,\n        BurnCustomAssetComponent,\n        TransactionDetailsForCustomAssetsComponent,\n    ],\n    imports: [\n        CommonModule,\n        WalletRoutingModule,\n        FlexModule,\n        TooltipModule,\n        ShortStringPipe,\n        TranslateModule,\n        IsAvailableAliasNamePipeModule,\n        ConfirmModalModule,\n        ExportHistoryModalModule,\n        ReactiveFormsModule,\n        OverlayModule,\n        DefaultImgModule,\n        NgxPaginationModule,\n        SwitchComponent,\n        ChartModule,\n        NgSelectModule,\n        FormsModule,\n        FlexLayoutModule,\n        StakingSwitchComponent,\n        DialogModule,\n        IntToMoneyPipeModule,\n        ContractStatusMessagesPipeModule,\n        HistoryTypeMessagesPipeModule,\n        InputValidateModule,\n        CheckboxComponent,\n        AssetDetailsComponent,\n        CopyButtonComponent,\n        LowerCaseDirective,\n        BreadcrumbsComponent,\n        BackButtonComponent,\n        WalletModalsModule,\n        GetAssetInfoPipe,\n        GetAmountItemsPipe,\n        TransactionStatusComponent,\n        IsVisibleFeePipe,\n        TransactionDetailsComponent,\n        VisibilityBalanceDirective,\n        MatAutocompleteModule,\n        LoaderComponent,\n        MatInputModule,\n        MatIconModule,\n        MatDialogModule,\n    ],\n})\nexport class WalletModule {}\n","import { Component, inject, NgZone } from '@angular/core';\nimport { FormControl, NonNullableFormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { ZanoValidators } from '@parts/utils/zano-validators';\nimport { BackendService } from '@api/services/backend.service';\nimport { AssetBalance, ParamsAddCustomAssetId } from '@api/models/assets.model';\nimport { WalletsService } from '@parts/services/wallets.service';\nimport { wrongAssetId } from '@parts/utils/zano-errors';\nimport { CommonModule } from '@angular/common';\nimport { FlexModule } from '@angular/flex-layout';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { LoaderComponent } from '@parts/components/loader.component';\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-add-custom-token',\n    standalone: true,\n    templateUrl: './add-custom-token.component.html',\n    styleUrls: ['./add-custom-token.component.scss'],\n    imports: [CommonModule, FlexModule, TranslateModule, ReactiveFormsModule, LoaderComponent, MatDialogModule],\n})\nexport class AddCustomTokenComponent {\n    loading: boolean = false;\n\n    private fb: NonNullableFormBuilder = inject(NonNullableFormBuilder);\n\n    formGroup = this.fb.group<{ asset_id: FormControl<string> }>({\n        asset_id: this.fb.control('', Validators.compose([Validators.required, ZanoValidators.hash, Validators.maxLength(64)])),\n    });\n\n    public variablesService: VariablesService = inject(VariablesService);\n\n    public backendService: BackendService = inject(BackendService);\n\n    private walletsService: WalletsService = inject(WalletsService);\n\n    private ngZone: NgZone = inject(NgZone);\n\n    private matDialogRef: MatDialogRef<AssetBalance | undefined> = inject(MatDialogRef);\n\n    beforeSubmit(): void {\n        if (this.formGroup.invalid) {\n            this.formGroup.markAsTouched();\n            this.formGroup.updateValueAndValidity();\n            return;\n        }\n\n        this.submit();\n    }\n\n    submit(): void {\n        this.loading = true;\n        const { asset_id } = this.formGroup.getRawValue();\n        const { wallet_id } = this.variablesService.currentWallet;\n        const params: ParamsAddCustomAssetId = {\n            asset_id,\n            wallet_id,\n        };\n        this.backendService.addCustomAssetId(params, (status, { asset_descriptor }) => {\n            this.ngZone.run(() => {\n                if (status) {\n                    const asset: AssetBalance = {\n                        asset_info: {\n                            ...asset_descriptor,\n                            asset_id,\n                        },\n                        awaiting_in: 0,\n                        awaiting_out: 0,\n                        total: 0,\n                        unlocked: 0,\n                    };\n                    this.walletsService.updateWalletInfo(wallet_id);\n                    this.matDialogRef.close(asset);\n                } else {\n                    this.formGroup.controls.asset_id.setErrors({\n                        wrongAssetId,\n                    });\n                    this.loading = false;\n                }\n            });\n        });\n    }\n}\n","<form (ngSubmit)=\"beforeSubmit()\" [formGroup]=\"formGroup\">\n    <h3 mat-dialog-title>\n        {{ 'WALLET.MODAL_WHITELIST_ASSET.TITLE' | translate }}\n    </h3>\n\n    <mat-dialog-content>\n        <div class=\"form__field mb-0\">\n            <label for=\"asset_id\">{{ 'WALLET.MODAL_WHITELIST_ASSET.FIELD_TITLE' | translate }}</label>\n            <input\n                (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\n                class=\"form__field--input\"\n                formControlName=\"asset_id\"\n                id=\"asset_id\"\n                maxlength=\"64\"\n                name=\"asset_id\"\n                placeholder=\"Enter Asset ID\"\n                type=\"text\"\n            />\n            <ng-container *ngIf=\"formGroup.get('asset_id').touched\">\n                <div *ngIf=\"formGroup.get('asset_id').hasError('invalidHash')\" class=\"error\">\n                    {{ 'WALLET.MODAL_WHITELIST_ASSET.FORM_ERRORS.ERROR1' | translate }}\n                </div>\n                <div *ngIf=\"formGroup.get('asset_id').hasError('wrongAssetId')\" class=\"error\">\n                    {{ formGroup.get('asset_id').errors['wrongAssetId'].errorText | translate }}\n                </div>\n            </ng-container>\n        </div>\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <div fxFlex=\"1 1 auto\"  fxLayout=\"row nowrap\" fxLayoutGap=\"1rem\">\n            <button class=\"outline big w-100\" mat-dialog-close type=\"button\">\n                {{ 'MODALS.CANCEL' | translate }}\n            </button>\n            <button [disabled]=\"formGroup.invalid || loading\" class=\"primary big w-100\" type=\"submit\">\n                <ng-container *ngIf=\"!loading; else loadingTemplate\">\n                    {{ 'MODALS.ADD_TOKEN' | translate }}\n                </ng-container>\n                <ng-template #loadingTemplate>\n                    <zano-loader></zano-loader>\n                </ng-template>\n            </button>\n        </div>\n    </mat-dialog-actions>\n</form>\n","import { Component, inject } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BackendService } from '@api/services/backend.service';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-export-history-modal',\n    templateUrl: './export-history-modal.component.html',\n    styleUrls: ['./export-history-modal.component.scss'],\n})\nexport class ExportHistoryModalComponent {\n    posFilterIsOn: boolean = true;\n\n    exportData = {\n        wallet_id: 0,\n        include_pos_transactions: false,\n        path: 'C:\\\\some_file.txt',\n        format: 'json',\n    };\n\n    exportFormats = [\n        {\n            format: 'json',\n            formatName: 'JSON',\n        },\n        {\n            format: 'text',\n            formatName: 'Text',\n        },\n        {\n            format: 'csv',\n            formatName: 'CSV',\n        },\n    ];\n\n    currentFormat: string = this.exportFormats[0].format;\n\n    private backend: BackendService = inject(BackendService);\n\n    public variablesService: VariablesService = inject(VariablesService);\n\n    private translate: TranslateService = inject(TranslateService);\n\n    private matDialogRef: MatDialogRef<ExportHistoryModalComponent> = inject(MatDialogRef);\n\n    confirmExport(): void {\n        this.exportData.format = `${this.currentFormat}`;\n        this.exportData.wallet_id = this.variablesService.currentWallet.wallet_id;\n        this.exportData.include_pos_transactions = this.posFilterIsOn;\n\n        this.backend.saveFileDialog(\n            this.translate.instant('EXPORT_HISTORY.SAVED_FILE'),\n            `${this.exportData.format}`,\n            this.variablesService.settings.default_path,\n            (file_status, file_data) => {\n                if (this.exportData.format === 'text') {\n                    this.exportData.path = file_data.path + '.txt';\n                } else {\n                    this.exportData.path = file_data.path + `.${this.exportData.format}`;\n                }\n                if (file_status) {\n                    this.backend.exportWalletHistory(JSON.stringify(this.exportData));\n                    this.matDialogRef.close();\n                }\n            }\n        );\n    }\n}\n","<form>\n    <h4 mat-dialog-title>\n        {{ 'EXPORT_HISTORY.TITLE' | translate }}\n    </h4>\n\n    <mat-dialog-content style=\"overflow: visible\">\n        <div class=\"form__field\">\n            <label>Format:</label>\n            <ng-select\n                [(ngModel)]=\"currentFormat\"\n                [clearable]=\"false\"\n                [items]=\"exportFormats\"\n                [searchable]=\"false\"\n                bindLabel=\"formatName\"\n                bindValue=\"format\"\n                name=\"format\"\n            >\n                <ng-template let-item=\"item\" ng-label-tmp>\n                    {{ item.formatName }}\n                </ng-template>\n                <ng-template let-index=\"index\" let-item=\"item\" ng-option-tmp>\n                    {{ item.formatName }}\n                </ng-template>\n            </ng-select>\n        </div>\n\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n            <span class=\"color-primary mr-1\">{{ 'EXPORT_HISTORY.FILTER' | translate }}</span>\n            <app-switch (emitChange)=\"posFilterIsOn = !posFilterIsOn\" [value]=\"posFilterIsOn\"></app-switch>\n        </div>\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <div fxFlex=\"1 1 auto\" fxLayout=\"row nowrap\" fxLayoutGap=\"1rem\">\n            <button (click)=\"confirmExport()\" class=\"primary big w-100\" type=\"submit\">\n                {{ 'EXPORT_HISTORY.EXPORT' | translate }}\n            </button>\n            <button class=\"outline big w-100\" mat-dialog-close type=\"button\">\n                {{ 'EXPORT_HISTORY.CANCEL' | translate }}\n            </button>\n        </div>\n    </mat-dialog-actions>\n</form>\n\n","import { NgModule } from '@angular/core';\nimport { ExportHistoryModalComponent } from './export-history-modal.component';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FlexModule } from '@angular/flex-layout';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { FormsModule } from '@angular/forms';\nimport { CheckboxComponent } from '@parts/components/checkbox.component';\nimport { SwitchComponent } from '@parts/components/switch.component';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n@NgModule({\n    declarations: [ExportHistoryModalComponent],\n    exports: [ExportHistoryModalComponent],\n    imports: [CommonModule, TranslateModule, FlexModule, SwitchComponent, CheckboxComponent, NgSelectModule, FormsModule, MatDialogModule],\n})\nexport class ExportHistoryModalModule {}\n","import { Component, inject, NgZone } from '@angular/core';\nimport { GetBareOutsStats, SweepBareOuts } from '@api/models/rpc.models';\nimport { BackendService } from '@api/services/backend.service';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { ParamsCallRpc } from '@api/models/call_rpc.model';\nimport { ModalService } from '@parts/services/modal.service';\nimport { SuccessSweepBareOutsComponent } from '../success-sweep-bare-outs/success-sweep-bare-outs.component';\nimport { ZARCANUM_MIGRATION } from '@parts/data/constants';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogConfig, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-migrate-wallet-to-zarcanum',\n    templateUrl: './migrate-wallet-to-zarcanum.component.html',\n    styleUrls: ['./migrate-wallet-to-zarcanum.component.scss'],\n})\nexport class MigrateWalletToZarcanumComponent {\n    readonly data: GetBareOutsStats = inject<GetBareOutsStats>(MAT_DIALOG_DATA);\n\n    private readonly _matDialog: MatDialog = inject(MatDialog);\n\n    private readonly _matDialogRef: MatDialogRef<MigrateWalletToZarcanumComponent> = inject(MatDialogRef);\n\n    private readonly _backendService: BackendService = inject(BackendService);\n\n    private readonly _variableService: VariablesService = inject(VariablesService);\n\n    private readonly _modalService: ModalService = inject(ModalService);\n\n    private readonly _ngZone: NgZone = inject(NgZone);\n\n    migrate(): void {\n        const {\n            currentWallet: { wallet_id },\n        } = this._variableService;\n\n        const params: ParamsCallRpc = { id: 0, jsonrpc: '2.0', method: 'sweep_bare_outs', params: {} };\n        this._backendService.call_wallet_rpc([wallet_id, params], (status, response_data) => {\n            this._ngZone.run(() => {\n                if (response_data?.result) {\n                    const data = response_data.result;\n\n                    const config: MatDialogConfig<SweepBareOuts> = {\n                        data,\n                    };\n\n                    this._matDialog.open(SuccessSweepBareOutsComponent, config);\n                } else {\n                    const message = response_data.error;\n                    this._modalService.prepareModal('error', message);\n                }\n\n                this._matDialogRef.close();\n            });\n        });\n    }\n\n    openZarcanumMigration(): void {\n        this._backendService.openUrlInBrowser(ZARCANUM_MIGRATION);\n    }\n}\n","<h3 mat-dialog-title>\n    {{ 'MIGRATE_WALLET_TO_ZARCANUM.TITLE' | translate }}\n</h3>\n\n<mat-dialog-content>\n    <div class=\"details\">\n        <p class=\"mb-2 mt-2\">\n            {{\n                'MIGRATE_WALLET_TO_ZARCANUM.TEXT1'\n                    | translate\n                        : {\n                              total_bare_outs: data.total_bare_outs,\n                              total_amount: data.total_amount | intToMoney\n                          }\n            }}\n        </p>\n        <p (click)=\"openZarcanumMigration()\" class=\"text-align-center cursor-pointer mb-2\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n            <mat-icon class=\"mr-0_5\" svgIcon=\"zano-question\"></mat-icon>\n            <span class=\"color-primary\">{{ 'MIGRATE_WALLET_TO_ZARCANUM.LINK1' | translate }}</span>\n        </p>\n        <hr class=\"mb-2\" />\n        <p class=\"mb-2\">\n            {{\n                'MIGRATE_WALLET_TO_ZARCANUM.TEXT2'\n                    | translate\n                        : {\n                              txs_count: data.txs_count,\n                              expected_total_fee: data.expected_total_fee | intToMoney\n                          }\n            }}\n        </p>\n    </div>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n    <div fxFlex=\"1 1 auto\" fxLayout=\"row nowrap\" fxLayoutGap=\"1rem\">\n        <button (click)=\"migrate()\" class=\"primary big w-100\" type=\"button\">\n            {{ 'MIGRATE_WALLET_TO_ZARCANUM.BUTTON1' | translate }}\n        </button>\n    </div>\n</mat-dialog-actions>\n","import { Component, inject } from '@angular/core';\nimport { SweepBareOuts } from '@api/models/rpc.models';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-success-sweep-bare-outs',\n    templateUrl: './success-sweep-bare-outs.component.html',\n    styleUrls: ['./success-sweep-bare-outs.component.scss'],\n})\nexport class SuccessSweepBareOutsComponent {\n    readonly data: SweepBareOuts = inject<SweepBareOuts>(MAT_DIALOG_DATA);\n\n    stateDetails: boolean = false;\n\n    toggleDetails(): void {\n        this.stateDetails = !this.stateDetails;\n    }\n}\n","<h3 mat-dialog-title>\n    {{ 'SEND_DETAILS_MODAL.TITLE1' | translate }}\n</h3>\n\n<mat-dialog-content fxLayout=\"column\">\n    <div class=\"status mb-2\" fxFlex=\"0 0 auto\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n        <div class=\"image\">\n            <img alt=\"success\" src=\"assets/icons/aqua/transaction_success.svg\" />\n        </div>\n\n        <p class=\"color-primary mt-2\">\n            {{ 'TOR_LIB_STATE.STATE_SENT_SUCCESS' | translate }}\n        </p>\n    </div>\n\n    <div class=\"details border-radius-0_8-rem overflow-hidden\" fxFlex=\"0 0 auto\" fxLayout=\"column\">\n        <div\n            (click)=\"toggleDetails()\"\n            [ngStyle]=\"{ 'border-radius': (stateDetails) ? '0.8rem 0.8rem 0 0' : '0.8rem' }\"\n            class=\"header overflow-hidden py-1 px-2 w-100 cursor-pointer\"\n            fxLayout=\"row\"\n            fxLayoutAlign=\"space-between center\"\n        >\n            <p class=\"title text-ellipsis mr-2\">\n                {{ 'SEND_DETAILS_MODAL.TITLE2' | translate }}\n            </p>\n            <button fxLayout=\"row\" fxLayoutAlign=\"center center\">\n                <mat-icon\n                    [ngClass]=\"{\n                        'rotate-180': stateDetails\n                    }\"\n                    svgIcon=\"zano-dropdown-arrow-down\"\n                ></mat-icon>\n            </button>\n        </div>\n        <div\n            [class.px-2]=\"stateDetails\"\n            [class.py-1]=\"stateDetails\"\n            [fxHide]=\"!(stateDetails)\"\n            [ngStyle]=\"{ 'border-radius': (stateDetails) ? '0 0 0.8rem 0.8rem ' : '0' }\"\n            class=\"details-wrapper\"\n            fxFlex=\"1 1 auto\"\n            fxLayout=\"row\"\n        >\n            <ul class=\"details-list scrolled-content\">\n                <li class=\"item mb-1\" fxLayout=\"row nowrap\" fxLayoutAlign=\" center\">\n                    <p>\n                        {{\n                            'SUCCESS_SWEEP_BARE_OUTS.DETAILS'\n                                | translate\n                                : {\n                                    txs_sent: data.txs_sent,\n                                    bare_outs_swept: data.bare_outs_swept,\n                                    amount_swept: data.amount_swept | intToMoney,\n                                    fee_spent: data.fee_spent | intToMoney\n                                }\n                        }}\n                    </p>\n                </li>\n            </ul>\n        </div>\n    </div>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n    <div fxFlex=\"1 1 auto\">\n        <button class=\"primary big w-100\" mat-dialog-close>\n            {{ 'Ok' | translate }}\n        </button>\n    </div>\n</mat-dialog-actions>\n","import { Component, HostListener, inject, NgZone, OnDestroy, OnInit } from '@angular/core';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { BackendService, Commands } from '@api/services/backend.service';\nimport { Observable, Subject, take } from 'rxjs';\nimport { StateKeys, Store, Sync } from '@store/store';\nimport { distinctUntilChanged, filter, map, takeUntil } from 'rxjs/operators';\nimport { hasOwnProperty } from '@parts/functions/has-own-property';\nimport { Dialog, DialogConfig } from '@angular/cdk/dialog';\nimport { ConfirmModalComponent, ConfirmModalData } from '@parts/modals/confirm-modal/confirm-modal.component';\nimport { ExportHistoryModalComponent } from './modals/export-history-modal/export-history-modal.component';\nimport { AddCustomTokenComponent } from './modals/add-custom-token/add-custom-token.component';\nimport { AssetBalance } from '@api/models/assets.model';\nimport { AssetDetailsComponent } from '@parts/modals/asset-details/asset-details.component';\nimport { WalletsService } from '@parts/services/wallets.service';\nimport { Wallet } from '@api/models/wallet.model';\nimport { NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router, RouterEvent } from '@angular/router';\nimport { ZARCANUM_MIGRATION } from '@parts/data/constants';\nimport { MigrateWalletToZarcanumComponent } from './modals/migrate-wallet-to-zarcanum/migrate-wallet-to-zarcanum.component';\nimport { ScrollStrategy, ScrollStrategyOptions } from '@angular/cdk/overlay';\nimport { ParamsCallRpc } from '@api/models/call_rpc.model';\nimport { ModalService } from '@parts/services/modal.service';\nimport { GetBareOutsStats } from '@api/models/rpc.models';\nimport { BreakpointObserver } from '@angular/cdk/layout';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\n\ninterface Tab {\n    id: string;\n    title: string;\n    icon: string;\n    link: string;\n    disabled: boolean;\n    hidden: boolean;\n    indicator?: boolean;\n}\n\ntype TabNameKeys = 'assets' | 'history' | 'send' | 'receive' | 'swap' | 'staking' | 'custom-assets';\n\nconst objTabs: { [key in TabNameKeys]: Tab } = {\n    assets: {\n        id: 'assets',\n        title: 'WALLET.TABS.ASSETS',\n        icon: 'zano-balance',\n        link: '/assets',\n        disabled: false,\n        hidden: false,\n    },\n    history: {\n        id: 'history',\n        title: 'WALLET.TABS.HISTORY',\n        icon: 'zano-history',\n        link: '/history',\n        disabled: false,\n        hidden: false,\n    },\n    send: {\n        id: 'send',\n        title: 'WALLET.TABS.SEND',\n        icon: 'zano-send',\n        link: '/send',\n        disabled: false,\n        hidden: false,\n    },\n    receive: {\n        id: 'receive',\n        title: 'WALLET.TABS.RECEIVE',\n        icon: 'zano-receive',\n        link: '/receive',\n        disabled: false,\n        hidden: false,\n    },\n    swap: {\n        id: 'swap',\n        title: 'Swap',\n        icon: 'zano-swap',\n        link: '/swap',\n        disabled: false,\n        hidden: true,\n    },\n    // TODO: https://github.com/hyle-team/zano/issues/374\n    // contract: {\n    //     title: 'WALLET.TABS.CONTRACTS',\n    //     icon: 'document',\n    //     link: '/contracts',\n    //     disabled: false,\n    //     hidden: false\n    // },\n    staking: {\n        id: 'staking',\n        title: 'WALLET.TABS.STAKING',\n        icon: 'zano-staking',\n        link: '/staking',\n        indicator: false,\n        disabled: false,\n        hidden: false,\n    },\n    'custom-assets': {\n        id: 'custom-assets',\n        title: 'WALLET.TABS.CONTROL_ASSETS',\n        icon: 'zano-custom-asset',\n        link: '/custom-assets',\n        indicator: false,\n        disabled: false,\n        hidden: false,\n    },\n};\n\n@Component({\n    selector: 'app-wallet',\n    template: `\n        <div class=\"header mb-2\" fxFlex=\"0 0 auto\" fxLayout=\"row nowrap\" fxLayoutAlign=\"space-between start\" fxLayoutGap=\"1rem\">\n            <div class=\"left overflow-hidden\" fxFlex=\"1 1 auto\" fxLayoutAlign=\"start center\" fxLayout=\"row nowrap\" fxLayoutGap=\"3rem\">\n                <div class=\"wallet-wrapper\" fxLayout=\"column\" fxLayoutAlign=\"start start\">\n                    <div class=\"title\" fxLayout=\"row nowrap\" fxLayoutAlign=\"start center\">\n                        <h1 class=\"text-ellipsis mr-1\">\n                            {{ variablesService.currentWallet.address | zanoShortString }}\n                        </h1>\n\n                        <app-copy-button\n                            [delay]=\"150\"\n                            [placement]=\"'bottom'\"\n                            [timeout]=\"0\"\n                            [tooltipClass]=\"'table-tooltip'\"\n                            [tooltip]=\"variablesService.currentWallet.address\"\n                            [value]=\"variablesService.currentWallet.address\"\n                            class=\"mr-1\"\n                        >\n                        </app-copy-button>\n\n                        <div\n                            class=\"controls\"\n                            fxFlex=\"0 0 auto\"\n                            fxLayout=\"row\"\n                            fxLayoutAlign=\"start center\"\n                        >\n                            <ng-container\n                                *ngIf=\"\n                                    !variablesService.currentWallet.alias.hasOwnProperty('name') &&\n                                    variablesService.currentWallet.loaded &&\n                                    variablesService.daemon_state === 2 &&\n                                    variablesService.currentWallet.alias_available\n                                \"\n                            >\n                                <button [routerLink]=\"['/assign-alias']\" class=\"px-1 py-0_8 btn-light-background\">\n                                    {{ 'WALLET.REGISTER_ALIAS' | translate }}\n                                </button>\n                            </ng-container>\n\n                            <ng-container\n                                *ngIf=\"\n                                    variablesService.currentWallet.alias.hasOwnProperty('name') &&\n                                    variablesService.currentWallet.loaded &&\n                                    variablesService.daemon_state === 2\n                                \"\n                            >\n                                <div [class.available]=\"variablesService.currentWallet.alias | isAvailableAliasName\" class=\"alias mr-1\">\n                                    {{ variablesService.currentWallet.alias.name }}\n                                </div>\n\n                                <ng-container *ngIf=\"!variablesService.currentWallet.is_auditable\">\n                                    <ng-container *ngIf=\"variablesService.currentWallet.alias_available\">\n                                        <button\n                                            [delay]=\"500\"\n                                            [routerLink]=\"['/edit-alias']\"\n                                            [timeDelay]=\"500\"\n                                            class=\"btn-icon circle small mr-1\"\n                                            placement=\"bottom-right\"\n                                            tooltip=\"{{ 'WALLET.TOOLTIPS.EDIT_ALIAS' | translate }}\"\n                                            tooltipClass=\"table-tooltip account-tooltip\"\n                                        >\n                                            <mat-icon svgIcon=\"zano-edit\"></mat-icon>\n                                        </button>\n\n                                        <button\n                                            [delay]=\"500\"\n                                            [routerLink]=\"['/transfer-alias']\"\n                                            [timeDelay]=\"500\"\n                                            class=\"btn-icon circle small\"\n                                            placement=\"right\"\n                                            tooltip=\"{{ 'WALLET.TOOLTIPS.TRANSFER_ALIAS' | translate }}\"\n                                            tooltipClass=\"table-tooltip account-tooltip\"\n                                        >\n                                            <mat-icon svgIcon=\"zano-send\"></mat-icon>\n                                        </button>\n                                    </ng-container>\n                                </ng-container>\n                            </ng-container>\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"!variablesService.currentWallet.is_auditable && !variablesService.currentWallet.is_watch_only\">\n                    <ng-container *ngIf=\"variablesService.currentWallet.has_bare_unspent_outputs\">\n                        <hr fxFlex=\"0 0 1px\" style=\"height: 3.6rem; border: none; border-right: var(--table-rounded-corners-border)\" />\n                        <div class=\"migrate-alert\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"2rem\">\n                            <button class=\"btn-migrate\" type=\"button\" (click)=\"openMigrateWalletToZarcanum()\">\n                                {{ 'WALLET.MIGRATE.BUTTON2' | translate }}\n                            </button>\n\n                            <div class=\"migration-details\">\n                                <p class=\"text-wrap\">{{ 'WALLET.MIGRATE.TEXT1' | translate }}</p>\n                                <p\n                                    class=\"text-align-center cursor-pointer\"\n                                    fxLayout=\"row\"\n                                    fxLayoutAlign=\"start center\"\n                                    (click)=\"openZarcanumMigration()\"\n                                >\n                                    <mat-icon svgIcon=\"zano-info\" class=\"mr-0_5\"></mat-icon>\n                                    <span class=\"color-primary\">{{ 'WALLET.MIGRATE.BUTTON1' | translate }}</span>\n                                </p>\n                            </div>\n                        </div>\n                    </ng-container>\n                </ng-container>\n            </div>\n            <div class=\"right\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"1rem\">\n                <button\n                    class=\"btn-icon circle big\"\n                    (click)=\"variablesService.visibilityBalance$.next(!variablesService.visibilityBalance$.value)\"\n                >\n                    <mat-icon\n                        [svgIcon]=\"(variablesService.visibilityBalance$ | async) ? 'zano-hide-balance' : 'zano-show-balance'\"\n                    ></mat-icon>\n                </button>\n                <div class=\"dropdown\">\n                    <button\n                        (click)=\"$event.stopPropagation(); toggleMenuDropdown()\"\n                        #trigger=\"cdkOverlayOrigin\"\n                        cdkOverlayOrigin\n                        [disabled]=\"settingsButtonDisabled && !variablesService.currentWallet.loaded\"\n                        class=\"btn-icon circle big\"\n                        data-target=\"wallet-dropdown-button\"\n                    >\n                        <mat-icon svgIcon=\"zano-wallet-settings\"></mat-icon>\n                    </button>\n                </div>\n            </div>\n        </div>\n\n        <ng-template\n            (backdropClick)=\"$event.stopPropagation(); toggleMenuDropdown()\"\n            [cdkConnectedOverlayBackdropClass]=\"'opacity-0'\"\n            [cdkConnectedOverlayHasBackdrop]=\"true\"\n            [cdkConnectedOverlayOrigin]=\"trigger\"\n            [cdkConnectedOverlayOpen]=\"openDropdown\"\n            [cdkConnectedOverlayPositions]=\"[\n                {\n                    originX: 'end',\n                    originY: 'top',\n                    overlayX: 'end',\n                    overlayY: 'top',\n                    offsetY: 40\n                }\n            ]\"\n            cdkConnectedOverlay\n        >\n            <div (click)=\"toggleMenuDropdown()\" class=\"content-bottom-right py-0_5\">\n                <ul class=\"list\">\n                    <li class=\"item\">\n                        <button\n                            [delay]=\"500\"\n                            [disabled]=\"!variablesService.currentWallet.loaded\"\n                            [routerLink]=\"['/details']\"\n                            [timeDelay]=\"500\"\n                            class=\"w-100 px-2 py-1\"\n                            placement=\"left\"\n                            routerLinkActive=\"active\"\n                            tooltip=\"{{ 'WALLET.TOOLTIPS.SETTINGS' | translate }}\"\n                            tooltipClass=\"table-tooltip account-tooltip\"\n                            type=\"button\"\n                        >\n                            <mat-icon svgIcon=\"zano-settings\" class=\"mr-1\"></mat-icon>\n                            <span>{{ 'WALLET_DETAILS.WALLET_OPTIONS' | translate }}</span>\n                        </button>\n                    </li>\n                    <ng-container *ngIf=\"variablesService.is_hardfok_active$ | async\">\n                        <li class=\"item\">\n                            <button\n                                (click)=\"addCustomToken()\"\n                                [delay]=\"500\"\n                                [disabled]=\"false\"\n                                [timeDelay]=\"500\"\n                                class=\"w-100 px-2 py-1\"\n                                placement=\"left\"\n                                tooltip=\"{{ 'WALLET.TOOLTIPS.WHITELIST_ASSET' | translate }}\"\n                                tooltipClass=\"table-tooltip account-tooltip\"\n                                type=\"button\"\n                            >\n                                <mat-icon svgIcon=\"zano-plus\" class=\"mr-1\"></mat-icon>\n                                <span>{{ 'WALLET_DETAILS.WHITELIST_ASSET' | translate }}</span>\n                            </button>\n                        </li>\n                    </ng-container>\n                    <li class=\"item\">\n                        <button\n                            (click)=\"exportHistory()\"\n                            [delay]=\"500\"\n                            [disabled]=\"variablesService.currentWallet.history.length <= 0\"\n                            [timeDelay]=\"500\"\n                            class=\"w-100 px-2 py-1\"\n                            placement=\"left\"\n                            tooltip=\"{{ 'EXPORT_HISTORY.TOOLTIP' | translate }}\"\n                            tooltipClass=\"table-tooltip account-tooltip\"\n                            type=\"button\"\n                        >\n                            <mat-icon svgIcon=\"zano-export\" class=\"mr-1\"></mat-icon>\n                            <span>{{ 'EXPORT_HISTORY.EXPORT_BUTTON' | translate }}</span>\n                        </button>\n                    </li>\n                    <ng-container *ngIf=\"walletSyncVisible\">\n                        <li class=\"item\">\n                            <button\n                                (click)=\"resyncCurrentWallet(variablesService.currentWallet.wallet_id)\"\n                                [delay]=\"500\"\n                                [disabled]=\"!variablesService.currentWallet.loaded\"\n                                [timeDelay]=\"500\"\n                                class=\"w-100 px-2 py-1\"\n                                placement=\"left\"\n                                tooltip=\"{{ 'WALLET_DETAILS.RESYNC_WALLET' | translate }}\"\n                                tooltipClass=\"table-tooltip account-tooltip\"\n                                type=\"button\"\n                            >\n                                <mat-icon svgIcon=\"zano-update\" class=\"mr-1\"></mat-icon>\n                                <span>{{ 'WALLET_DETAILS.RESYNC_WALLET_BUTTON' | translate }}</span>\n                            </button>\n                        </li>\n                    </ng-container>\n                    <li class=\"item\">\n                        <button\n                            (click)=\"close(variablesService.currentWallet.wallet_id)\"\n                            [delay]=\"500\"\n                            [timeDelay]=\"500\"\n                            class=\"w-100 px-2 py-1\"\n                            placement=\"left\"\n                            tooltip=\"{{ 'WALLET.TOOLTIPS.REMOVE' | translate }}\"\n                            tooltipClass=\"table-tooltip account-tooltip\"\n                            type=\"button\"\n                        >\n                            <mat-icon svgIcon=\"zano-close-v2\" class=\"mr-1\"></mat-icon>\n                            <span>{{ 'WALLET_DETAILS.BUTTON_REMOVE' | translate }}</span>\n                        </button>\n                    </li>\n                </ul>\n            </div>\n        </ng-template>\n\n        <div class=\"tabs\">\n            <div class=\"tabs-header\">\n                <ng-container *ngFor=\"let tab of tabs\">\n                    <ng-container *ngIf=\"!tab.hidden\">\n                        <button\n                            [disabled]=\"tab.disabled\"\n                            [routerLink]=\"['/wallet' + tab.link]\"\n                            class=\"tab-header\"\n                            routerLinkActive=\"active\"\n                        >\n                            <mat-icon [svgIcon]=\"tab.icon\"></mat-icon>\n                            <span *ngIf=\"isViewTabName$ | async\" class=\"ml-1\">{{ tab.title | translate }}</span>\n                            <span *ngIf=\"tab.indicator\" class=\"indicator\">{{ variablesService.currentWallet.new_contracts }}</span>\n                        </button>\n                    </ng-container>\n                </ng-container>\n            </div>\n            <div class=\"tabs-content\">\n                <router-outlet></router-outlet>\n\n                <div *ngIf=\"loader\" class=\"wrapper-tab-preloader\">\n                    <div class=\"preloader\">\n                        <p class=\"mb-2\">\n                            {{ 'Loading...' | translate }}\n                        </p>\n                        <div class=\"loading-bar\"></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n})\nexport class WalletComponent implements OnInit, OnDestroy {\n    settingsButtonInterval;\n\n    private breakpointObserver: BreakpointObserver = inject(BreakpointObserver);\n\n    isViewTabName$: Observable<boolean> = this.breakpointObserver.observe(['(min-width: 1400px)']).pipe(map(({ matches }) => matches));\n\n    settingsButtonDisabled = true;\n\n    walletLoaded = false;\n\n    openDropdown: boolean;\n\n    walletSyncVisible = false;\n\n    tabs: Tab[] = [];\n\n    private destroy$ = new Subject<void>();\n\n    loader = true;\n\n    private readonly _matDialog: MatDialog = inject(MatDialog);\n\n    constructor(\n        private backend: BackendService,\n        public variablesService: VariablesService,\n        private ngZone: NgZone,\n        private store: Store,\n        private dialog: Dialog,\n        private modalService: ModalService,\n        private walletsService: WalletsService,\n        private router: Router\n    ) {\n\n        if (!this.variablesService.currentWallet && this.variablesService.wallets.length > 0) {\n            this.variablesService.setCurrentWallet(0);\n        }\n        this.walletLoaded = this.variablesService.currentWallet.loaded;\n\n        this.variablesService.currentWalletChangedEvent.pipe(takeUntil(this.destroy$)).subscribe({\n            next: (wallet: Wallet) => {\n                this.createTabs(wallet);\n                const disabled = !wallet.loaded;\n                this.setDisabledTabs(['send', 'swap', 'staking', 'custom-assets'], disabled);\n\n                this.variablesService.is_hardfok_active$.pipe(take(1)).subscribe({\n                    next: value => {\n                        const hidden = !value;\n                        this.setHiddenTabs(['swap'], hidden);\n                    },\n                });\n            },\n        });\n\n        this.variablesService.is_hardfok_active$.pipe(takeUntil(this.destroy$)).subscribe({\n            next: value => {\n                const hidden = !value;\n                this.setHiddenTabs(['swap'], hidden);\n            },\n        });\n\n        this.router.events.pipe(takeUntil(this.destroy$)).subscribe((e: RouterEvent) => {\n            this.navigationInterceptor(e);\n        });\n    }\n\n    navigationInterceptor(event: RouterEvent): void {\n        if (event instanceof NavigationStart) {\n            this.loader = true;\n        }\n        if (event instanceof NavigationEnd) {\n            setTimeout(() => {\n                this.loader = false;\n            }, 500);\n        }\n        if (event instanceof NavigationCancel) {\n            setTimeout(() => {\n                this.loader = false;\n            }, 500);\n        }\n        if (event instanceof NavigationError) {\n            setTimeout(() => {\n                this.loader = false;\n            }, 500);\n        }\n    }\n\n    createTabs({ is_auditable, is_watch_only }: Wallet): void {\n        const conditionForHiding: boolean = !is_auditable || !is_watch_only;\n        const tabs: Array<Tab> = [];\n\n        tabs.push(objTabs.assets);\n        tabs.push(objTabs.history);\n\n        if (conditionForHiding) {\n            tabs.push(objTabs.send);\n        }\n\n        tabs.push(objTabs.receive);\n\n        if (conditionForHiding) {\n            tabs.push(objTabs.swap);\n        }\n\n        tabs.push(objTabs.staking);\n\n        if (conditionForHiding) {\n            tabs.push(objTabs['custom-assets']);\n        }\n\n        this.tabs = tabs;\n    }\n\n    @HostListener('document:keydown.shift', ['$event.key'])\n    onKeyPressed(): void {\n        if (!this.openDropdown) {\n            this.walletSyncVisible = true;\n        }\n    }\n\n    @HostListener('document:keyup.shift', ['$event.key'])\n    onKeyUpPressed(): void {\n        if (!this.openDropdown) {\n            this.walletSyncVisible = false;\n        }\n    }\n\n    ngOnInit(): void {\n        this.settingsButtonInterval = setInterval(() => {\n            // tslint:disable-next-line:triple-equals\n            if (this.variablesService.daemon_state == 2 || this.walletLoaded) {\n                this.settingsButtonDisabled = false;\n                clearInterval(this.settingsButtonInterval);\n            }\n        }, 1000);\n        this.store\n            .select(StateKeys.sync)\n            .pipe(filter(Boolean), distinctUntilChanged(), takeUntil(this.destroy$))\n            .subscribe({\n                next: (value: any) => {\n                    const data = value.filter((item: Sync) => item.wallet_id === this.variablesService.currentWallet.wallet_id)[0];\n                    if (data && !data.sync) {\n                        let in_progress;\n                        const values = this.store.state.sync;\n                        if (values && values.length > 0) {\n                            in_progress = values.filter(item => item.sync);\n                            this.variablesService.sync_started = !!(in_progress && in_progress.length);\n                            if (!in_progress) {\n                                this.variablesService.sync_started = false;\n                                this.variablesService.sync_wallets[data.wallet_id] = false;\n                            }\n                        } else {\n                            this.variablesService.sync_started = false;\n                            this.variablesService.sync_wallets[data.wallet_id] = false;\n                        }\n                    }\n                },\n            });\n        if (hasOwnProperty(this.variablesService.currentWallet.alias, 'name')) {\n            this.variablesService.currentWallet.wakeAlias = false;\n        }\n        this.variablesService.getAliasChangedEvent.pipe(takeUntil(this.destroy$)).subscribe({\n            next: () => {\n                if (hasOwnProperty(this.variablesService.currentWallet.alias, 'name')) {\n                    this.variablesService.currentWallet.wakeAlias = false;\n                }\n            },\n        });\n        this.updateWalletStatus();\n    }\n\n    toggleMenuDropdown(): void {\n        if (!this.openDropdown) {\n            this.openDropdown = true;\n        } else {\n            this.openDropdown = false;\n            this.walletSyncVisible = false;\n        }\n    }\n\n    resyncCurrentWallet(wallet_id: number): void {\n        this.backend.resyncWallet(wallet_id);\n    }\n\n    close(wallet_id: number): void {\n        const config: MatDialogConfig<ConfirmModalData> = {\n            data: {\n                title: 'WALLET.CONFIRM.MESSAGE',\n                message: 'WALLET.CONFIRM.TITLE',\n            },\n        };\n\n        this._matDialog\n            .open<ConfirmModalComponent, ConfirmModalData, boolean>(ConfirmModalComponent, config)\n            .afterClosed().pipe(filter(Boolean), takeUntil(this.destroy$))\n            .subscribe({\n                next: () => {\n                    this.walletsService.closeWallet(wallet_id);\n                },\n            });\n    }\n\n    addCustomToken(): void {\n        this._matDialog\n            .open<AddCustomTokenComponent, void, AssetBalance | undefined>(AddCustomTokenComponent)\n            .afterClosed().pipe(\n                filter(response_data => Boolean(response_data)),\n                takeUntil(this.destroy$)\n            )\n            .subscribe({\n                next: asset => {\n                    const config: MatDialogConfig = {\n                        data: {\n                            assetInfo: asset.asset_info,\n                            title: 'You added new asset',\n                        },\n                    };\n                    this.ngZone.run(() => {\n                        this._matDialog.open(AssetDetailsComponent, config);\n                    });\n                },\n            });\n    }\n\n    exportHistory(): void {\n        this._matDialog.open(ExportHistoryModalComponent);\n    }\n\n    openZarcanumMigration(): void {\n        this.backend.openUrlInBrowser(ZARCANUM_MIGRATION);\n    }\n\n    openMigrateWalletToZarcanum(): void {\n        const {\n            currentWallet: { wallet_id },\n        } = this.variablesService;\n        const params: ParamsCallRpc = {\n            id: 0,\n            jsonrpc: '2.0',\n            method: 'get_bare_outs_stats',\n            params: {},\n        };\n        this.backend.call_wallet_rpc([wallet_id, params], (status, response_data) => {\n            this.ngZone.run(() => {\n                if (response_data?.result) {\n                    const data = response_data.result;\n\n                    const config: MatDialogConfig<GetBareOutsStats> = {\n                        data,\n                        disableClose: false\n                    };\n                    this._matDialog.open(MigrateWalletToZarcanumComponent, config);\n                } else {\n                    const message = response_data.error;\n                    this.modalService.prepareModal('error', message);\n                }\n            });\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    updateWalletStatus(): void {\n        this.backend.eventSubscribe(Commands.wallet_sync_progress, data => {\n            const wallet_id = data.wallet_id;\n            if (wallet_id === this.variablesService.currentWallet.wallet_id) {\n                this.ngZone.run(() => {\n                    this.walletLoaded = false;\n                });\n            }\n        });\n        this.backend.eventSubscribe(Commands.update_wallet_status, data => {\n            const wallet_state = data.wallet_state;\n            const wallet_id = data.wallet_id;\n            this.ngZone.run(() => {\n                if (wallet_id !== this.variablesService.currentWallet.wallet_id) {\n                    return;\n                }\n\n                if (wallet_state === 2) {\n                    this.walletLoaded = true;\n                    this.setDisabledTabs(['send', 'swap', 'staking', 'custom-assets'], false);\n                } else {\n                    this.walletLoaded = false;\n                    this.setDisabledTabs(['send', 'swap', 'staking', 'custom-assets'], true);\n                }\n            });\n        });\n    }\n\n    setHiddenTabs(ids: string[], hidden: boolean): void {\n        this.tabs.forEach(tab => {\n            if (ids.includes(tab.id)) {\n                tab.hidden = hidden;\n            }\n        });\n    }\n\n    setDisabledTabs(ids: string[], disabled: boolean): void {\n        this.tabs.forEach(tab => {\n            if (ids.includes(tab.id)) {\n                tab.disabled = disabled;\n            }\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BackButtonModule } from '@parts/directives/back-button/back-button.module';\nimport { MatIconModule } from '@angular/material/icon';\n\n@Component({\n    selector: 'app-back-button',\n    standalone: true,\n    imports: [CommonModule, BackButtonModule, MatIconModule],\n    templateUrl: './back-button.component.html',\n    styleUrls: ['./back-button.component.scss'],\n})\nexport class BackButtonComponent {}\n","<button appBackButton class=\"btn-icon circle big\" type=\"button\">\n    <mat-icon\n        [ngClass]=\"{\n            'rotate-90': true\n        }\"\n        svgIcon=\"zano-dropdown-arrow-down\"\n    ></mat-icon>\n</button>\n","import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterLink, RouterLinkWithHref } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { BreadcrumbItems } from '@parts/components/breadcrumbs/breadcrumbs.models';\n\n@Component({\n    selector: 'app-breadcrumbs',\n    standalone: true,\n    imports: [CommonModule, RouterLinkWithHref, TranslateModule, RouterLink],\n    templateUrl: './breadcrumbs.component.html',\n    styleUrls: ['./breadcrumbs.component.scss'],\n})\nexport class BreadcrumbsComponent {\n    @Input() items: BreadcrumbItems = [];\n}\n","<div class=\"breadcrumbs\">\n    <div *ngFor=\"let item of items\" class=\"breadcrumb\">\n        <ng-container *ngIf=\"item.routerLink; else templateTitle\">\n            <span class=\"link\" [routerLink]=\"item.routerLink\">{{ item.title | translate }}</span>\n        </ng-container>\n\n        <ng-template #templateTitle>\n            <span>{{ item.title | translate }}</span>\n        </ng-template>\n    </div>\n</div>\n","import { Component, EventEmitter, forwardRef, Input, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n    selector: 'app-checkbox',\n    template: `\n        <div class=\"checkbox\">\n            <input\n                (change)=\"handlerChange($event)\"\n                [checked]=\"value\"\n                [disabled]=\"disabled\"\n                [id]=\"id\"\n                [readonly]=\"readonly\"\n                type=\"checkbox\"\n            />\n            <label [for]=\"id\">{{ label }}</label>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: inline-flex;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => CheckboxComponent),\n            multi: true,\n        },\n    ],\n    standalone: true,\n    imports: [CommonModule],\n})\nexport class CheckboxComponent implements ControlValueAccessor {\n    @Input() value = false;\n\n    @Input() label = '';\n\n    @Input() id = 'id-' + Math.random();\n\n    @Input() disabled = false;\n\n    @Input() readonly = false;\n\n    @Output() emitChange = new EventEmitter<boolean>();\n\n    onChange!: (value: boolean) => void;\n\n    onTouched!: () => void;\n\n    handlerChange({ target }: Event): void {\n        const { checked } = target as HTMLInputElement;\n        this.value = checked;\n        this.emitChange.emit(checked);\n        if (this.onChange) {\n            this.onChange(checked);\n        }\n    }\n\n    registerOnChange(fn: any): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this.onTouched = fn;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    writeValue(value: boolean): void {\n        this.value = value;\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { BackendService } from '@api/services/backend.service';\nimport { VariablesService } from '../services/variables.service';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\n\n@Component({\n    selector: 'app-copy-button',\n    template: `\n        <button (click)=\"copy()\" [classList]=\"'btn-icon circle' + ' ' + size\">\n            <mat-icon [class]=\"size\" [svgIcon]=\"copyAnimation ? 'zano-check' : 'zano-copy'\"></mat-icon>\n        </button>\n    `,\n    styles: [],\n    standalone: true,\n    imports: [CommonModule, MatIconModule],\n})\nexport class CopyButtonComponent {\n    @Input() value: string;\n\n    @Input() size: 'small' | 'big' = 'small';\n\n    copyAnimation = false;\n\n    copyAnimationTimeout;\n\n    constructor(private backend: BackendService, public variablesService: VariablesService) {}\n\n    copy(): void {\n        this.backend.setClipboard(this.value || '');\n        this.copyAnimation = true;\n        this.copyAnimationTimeout = window.setTimeout(() => {\n            this.copyAnimation = false;\n            clearTimeout(this.copyAnimationTimeout);\n        }, 2000);\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { NgSwitch, NgSwitchCase, NgSwitchDefault } from '@angular/common';\n\ntype LoaderType = 'circle' | 'circle-2' | 'circle-3' | 'dots' | 'dots-2' | 'pulse';\n\n@Component({\n    selector: 'zano-loader',\n    standalone: true,\n    template: `\n        <ng-container [ngSwitch]=\"[type]\">\n            <!-- Loader 1-->\n            <div *ngSwitchCase=\"'circle'\" class=\"loader-1\">\n                <span></span>\n            </div>\n\n            <!-- Loader 2 -->\n            <div *ngSwitchCase=\"'circle-2'\" class=\"loader-2\">\n                <span></span>\n            </div>\n\n            <!-- Loader 3 -->\n            <div *ngSwitchCase=\"'circle-3'\" class=\"loader-3\">\n                <span></span>\n            </div>\n\n            <!-- Loader 4 -->\n            <div *ngSwitchCase=\"'dots'\" class=\"loader-4\">\n                <span></span>\n            </div>\n\n            <!-- Loader 5 -->\n            <div *ngSwitchCase=\"'dots-2'\" class=\"loader-5\">\n                <span></span>\n            </div>\n\n            <!-- Loader 6 -->\n            <div *ngSwitchCase=\"'pulse'\" class=\"loader-6\">\n                <span></span>\n            </div>\n\n            <!-- Default-->\n            <div *ngSwitchDefault class=\"loader-1\">\n                <span></span>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            /* Loader 1 */\n            .loader-1 {\n                height: 32px;\n                width: 32px;\n                -webkit-animation: loader-1-1 4.8s linear infinite;\n                animation: loader-1-1 4.8s linear infinite;\n            }\n\n            @-webkit-keyframes loader-1-1 {\n                0% {\n                    -webkit-transform: rotate(0deg);\n                }\n                100% {\n                    -webkit-transform: rotate(360deg);\n                }\n            }\n\n            @keyframes loader-1-1 {\n                0% {\n                    transform: rotate(0deg);\n                }\n                100% {\n                    transform: rotate(360deg);\n                }\n            }\n\n            .loader-1 span {\n                display: block;\n                position: absolute;\n                top: 0;\n                left: 0;\n                bottom: 0;\n                right: 0;\n                margin: auto;\n                height: 32px;\n                width: 32px;\n                clip: rect(0, 32px, 32px, 16px);\n                -webkit-animation: loader-1-2 1.2s linear infinite;\n                animation: loader-1-2 1.2s linear infinite;\n            }\n\n            @-webkit-keyframes loader-1-2 {\n                0% {\n                    -webkit-transform: rotate(0deg);\n                }\n                100% {\n                    -webkit-transform: rotate(220deg);\n                }\n            }\n\n            @keyframes loader-1-2 {\n                0% {\n                    transform: rotate(0deg);\n                }\n                100% {\n                    transform: rotate(220deg);\n                }\n            }\n\n            .loader-1 span::after {\n                content: '';\n                position: absolute;\n                top: 0;\n                left: 0;\n                bottom: 0;\n                right: 0;\n                margin: auto;\n                height: 32px;\n                width: 32px;\n                clip: rect(0, 32px, 32px, 16px);\n                border: 3px solid currentColor;\n                border-radius: 50%;\n                -webkit-animation: loader-1-3 1.2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n                animation: loader-1-3 1.2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n            }\n\n            @-webkit-keyframes loader-1-3 {\n                0% {\n                    -webkit-transform: rotate(-140deg);\n                }\n                50% {\n                    -webkit-transform: rotate(-160deg);\n                }\n                100% {\n                    -webkit-transform: rotate(140deg);\n                }\n            }\n\n            @keyframes loader-1-3 {\n                0% {\n                    transform: rotate(-140deg);\n                }\n                50% {\n                    transform: rotate(-160deg);\n                }\n                100% {\n                    transform: rotate(140deg);\n                }\n            }\n\n            /* Loader 2 */\n            .loader-2 {\n                display: block;\n                height: 32px;\n                width: 32px;\n                -webkit-animation: loader-2-1 3s linear infinite;\n                animation: loader-2-1 3s linear infinite;\n            }\n\n            @-webkit-keyframes loader-2-1 {\n                0% {\n                    -webkit-transform: rotate(0deg);\n                }\n                100% {\n                    -webkit-transform: rotate(360deg);\n                }\n            }\n\n            @keyframes loader-2-1 {\n                0% {\n                    transform: rotate(0deg);\n                }\n                100% {\n                    transform: rotate(360deg);\n                }\n            }\n\n            .loader-2 span {\n                display: block;\n                position: absolute;\n                top: 0;\n                left: 0;\n                bottom: 0;\n                right: 0;\n                margin: auto;\n                height: 32px;\n                width: 32px;\n                clip: rect(16px, 32px, 32px, 0);\n                -webkit-animation: loader-2-2 1.5s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n                animation: loader-2-2 1.5s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n            }\n\n            @-webkit-keyframes loader-2-2 {\n                0% {\n                    -webkit-transform: rotate(0deg);\n                }\n                100% {\n                    -webkit-transform: rotate(360deg);\n                }\n            }\n\n            @keyframes loader-2-2 {\n                0% {\n                    transform: rotate(0deg);\n                }\n                100% {\n                    transform: rotate(360deg);\n                }\n            }\n\n            .loader-2 span::before {\n                content: '';\n                display: block;\n                position: absolute;\n                top: 0;\n                left: 0;\n                bottom: 0;\n                right: 0;\n                margin: auto;\n                height: 32px;\n                width: 32px;\n                border: 3px solid transparent;\n                border-top: 3px solid currentColor;\n                border-radius: 50%;\n                -webkit-animation: loader-2-3 1.5s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n                animation: loader-2-3 1.5s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n            }\n\n            @-webkit-keyframes loader-2-3 {\n                0% {\n                    -webkit-transform: rotate(0deg);\n                }\n                100% {\n                    -webkit-transform: rotate(360deg);\n                }\n            }\n\n            @keyframes loader-2-3 {\n                0% {\n                    transform: rotate(0deg);\n                }\n                100% {\n                    transform: rotate(360deg);\n                }\n            }\n\n            .loader-2 span::after {\n                content: '';\n                display: block;\n                position: absolute;\n                top: 0;\n                left: 0;\n                bottom: 0;\n                right: 0;\n                margin: auto;\n                height: 32px;\n                width: 32px;\n                border: 3px solid rgba(255, 255, 255, 0.5);\n                border-radius: 50%;\n            }\n\n            /* Loader 3 */\n            .loader-3 {\n                display: block;\n                height: 32px;\n                width: 32px;\n            }\n\n            .loader-3 span {\n                display: block;\n                position: absolute;\n                top: 0;\n                left: 0;\n                bottom: 0;\n                right: 0;\n                margin: auto;\n                height: 32px;\n                width: 32px;\n            }\n\n            .loader-3 span::before {\n                content: '';\n                display: block;\n                position: absolute;\n                top: 0;\n                left: 0;\n                bottom: 0;\n                right: 0;\n                margin: auto;\n                height: 32px;\n                width: 32px;\n                border: 3px solid currentColor;\n                border-bottom: 3px solid transparent;\n                border-radius: 50%;\n                -webkit-animation: loader-3-1 1.5s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n                animation: loader-3-1 1.5s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n            }\n\n            @-webkit-keyframes loader-3-1 {\n                0% {\n                    -webkit-transform: rotate(0deg);\n                }\n                40% {\n                    -webkit-transform: rotate(180deg);\n                }\n                60% {\n                    -webkit-transform: rotate(180deg);\n                }\n                100% {\n                    -webkit-transform: rotate(360deg);\n                }\n            }\n\n            @keyframes loader-3-1 {\n                0% {\n                    transform: rotate(0deg);\n                }\n                40% {\n                    transform: rotate(180deg);\n                }\n                60% {\n                    transform: rotate(180deg);\n                }\n                100% {\n                    transform: rotate(360deg);\n                }\n            }\n\n            .loader-3 span::after {\n                content: '';\n                position: absolute;\n                top: 0;\n                left: 0;\n                bottom: 0;\n                right: 0;\n                margin: auto;\n                width: 6px;\n                height: 6px;\n                background: currentColor;\n                border-radius: 50%;\n                -webkit-animation: loader-3-2 1.5s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n                animation: loader-3-2 1.5s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n            }\n\n            @-webkit-keyframes loader-3-2 {\n                0% {\n                    -webkit-transform: translate3d(0, -32px, 0) scale(0, 2);\n                    opacity: 0;\n                }\n                50% {\n                    -webkit-transform: translate3d(0, 0, 0) scale(1.25, 1.25);\n                    opacity: 1;\n                }\n                100% {\n                    -webkit-transform: translate3d(0, 8px, 0) scale(0, 0);\n                    opacity: 0;\n                }\n            }\n\n            @keyframes loader-3-2 {\n                0% {\n                    transform: translate3d(0, -32px, 0) scale(0, 2);\n                    opacity: 0;\n                }\n                50% {\n                    transform: translate3d(0, 0, 0) scale(1.25, 1.25);\n                    opacity: 1;\n                }\n                100% {\n                    transform: translate3d(0, 8px, 0) scale(0, 0);\n                    opacity: 0;\n                }\n            }\n\n            /* Loader 4 */\n            .loader-4 {\n                height: 32px;\n                width: 32px;\n            }\n\n            .loader-4::after {\n                content: '';\n                display: block;\n                position: absolute;\n                top: 0;\n                left: 0;\n                bottom: 0;\n                right: 0;\n                margin: auto;\n                width: 12px;\n                height: 12px;\n                top: 0;\n                left: 0;\n                bottom: 0;\n                right: 0;\n                margin: auto;\n                background: currentColor;\n                border-radius: 50%;\n                -webkit-animation: loader-4-1 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n                animation: loader-4-1 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n            }\n\n            @-webkit-keyframes loader-4-1 {\n                0% {\n                    -webkit-transform: scale(0);\n                    opacity: 0;\n                }\n                50% {\n                    -webkit-transform: scale(1);\n                    opacity: 1;\n                }\n                100% {\n                    -webkit-transform: scale(0);\n                    opacity: 0;\n                }\n            }\n\n            @keyframes loader-4-1 {\n                0% {\n                    transform: scale(0);\n                    opacity: 0;\n                }\n                50% {\n                    transform: scale(1);\n                    opacity: 1;\n                }\n                100% {\n                    transform: scale(0);\n                    opacity: 0;\n                }\n            }\n\n            .loader-4 span {\n                display: block;\n                position: absolute;\n                top: 0;\n                left: 0;\n                bottom: 0;\n                right: 0;\n                margin: auto;\n                height: 32px;\n                width: 32px;\n                -webkit-animation: loader-4-2 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n                animation: loader-4-2 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n            }\n\n            @-webkit-keyframes loader-4-2 {\n                0% {\n                    -webkit-transform: rotate(0deg);\n                }\n                50% {\n                    -webkit-transform: rotate(180deg);\n                }\n                100% {\n                    -webkit-transform: rotate(360deg);\n                }\n            }\n\n            @keyframes loader-4-2 {\n                0% {\n                    transform: rotate(0deg);\n                }\n                50% {\n                    transform: rotate(180deg);\n                }\n                100% {\n                    transform: rotate(360deg);\n                }\n            }\n\n            .loader-4 span::before,\n            .loader-4 span::after {\n                content: '';\n                display: block;\n                position: absolute;\n                top: 0;\n                left: 0;\n                bottom: 0;\n                right: 0;\n                margin: auto;\n                height: 12px;\n                width: 12px;\n                background: currentColor;\n                border-radius: 50%;\n                -webkit-animation: loader-4-3 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n                animation: loader-4-3 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n            }\n\n            @-webkit-keyframes loader-4-3 {\n                0% {\n                    -webkit-transform: translate3d(0, 0, 0) scale(1);\n                }\n                50% {\n                    -webkit-transform: translate3d(-16px, 0, 0) scale(0.5);\n                }\n                100% {\n                    -webkit-transform: translate3d(0, 0, 0) scale(1);\n                }\n            }\n\n            @keyframes loader-4-3 {\n                0% {\n                    transform: translate3d(0, 0, 0) scale(1);\n                }\n                50% {\n                    transform: translate3d(-16px, 0, 0) scale(0.5);\n                }\n                100% {\n                    transform: translate3d(0, 0, 0) scale(1);\n                }\n            }\n\n            .loader-4 span::after {\n                -webkit-animation: loader-4-4 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n                animation: loader-4-4 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n            }\n\n            @-webkit-keyframes loader-4-4 {\n                0% {\n                    -webkit-transform: translate3d(0, 0, 0) scale(1);\n                }\n                50% {\n                    -webkit-transform: translate3d(16px, 0, 0) scale(0.5);\n                }\n                100% {\n                    -webkit-transform: translate3d(0, 0, 0) scale(1);\n                }\n            }\n\n            @keyframes loader-4-4 {\n                0% {\n                    transform: translate3d(0, 0, 0) scale(1);\n                }\n                50% {\n                    transform: translate3d(16px, 0, 0) scale(0.5);\n                }\n                100% {\n                    transform: translate3d(0, 0, 0) scale(1);\n                }\n            }\n\n            /* Loader 5 */\n            .loader-5 {\n                height: 32px;\n                width: 32px;\n                -webkit-animation: loader-5-1 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n                animation: loader-5-1 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n            }\n\n            @-webkit-keyframes loader-5-1 {\n                0% {\n                    -webkit-transform: rotate(0deg);\n                }\n                100% {\n                    -webkit-transform: rotate(360deg);\n                }\n            }\n\n            @keyframes loader-5-1 {\n                0% {\n                    transform: rotate(0deg);\n                }\n                100% {\n                    transform: rotate(360deg);\n                }\n            }\n\n            .loader-5::before {\n                content: '';\n                display: block;\n                position: absolute;\n                top: 0;\n                left: 0;\n                bottom: 0;\n                right: auto;\n                margin: auto;\n                width: 8px;\n                height: 8px;\n                background: currentColor;\n                border-radius: 50%;\n                -webkit-animation: loader-5-2 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n                animation: loader-5-2 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n            }\n\n            @-webkit-keyframes loader-5-2 {\n                0% {\n                    -webkit-transform: translate3d(0, 0, 0) scale(1);\n                }\n                50% {\n                    -webkit-transform: translate3d(24px, 0, 0) scale(0.5);\n                }\n                100% {\n                    -webkit-transform: translate3d(0, 0, 0) scale(1);\n                }\n            }\n\n            @keyframes loader-5-2 {\n                0% {\n                    transform: translate3d(0, 0, 0) scale(1);\n                }\n                50% {\n                    transform: translate3d(24px, 0, 0) scale(0.5);\n                }\n                100% {\n                    transform: translate3d(0, 0, 0) scale(1);\n                }\n            }\n\n            .loader-5::after {\n                content: '';\n                display: block;\n                position: absolute;\n                top: 0;\n                left: auto;\n                bottom: 0;\n                right: 0;\n                margin: auto;\n                width: 8px;\n                height: 8px;\n                background: currentColor;\n                border-radius: 50%;\n                -webkit-animation: loader-5-3 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n                animation: loader-5-3 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n            }\n\n            @-webkit-keyframes loader-5-3 {\n                0% {\n                    -webkit-transform: translate3d(0, 0, 0) scale(1);\n                }\n                50% {\n                    -webkit-transform: translate3d(-24px, 0, 0) scale(0.5);\n                }\n                100% {\n                    -webkit-transform: translate3d(0, 0, 0) scale(1);\n                }\n            }\n\n            @keyframes loader-5-3 {\n                0% {\n                    transform: translate3d(0, 0, 0) scale(1);\n                }\n                50% {\n                    transform: translate3d(-24px, 0, 0) scale(0.5);\n                }\n                100% {\n                    transform: translate3d(0, 0, 0) scale(1);\n                }\n            }\n\n            .loader-5 span {\n                display: block;\n                position: absolute;\n                top: 0;\n                left: 0;\n                bottom: 0;\n                right: 0;\n                margin: auto;\n                height: 32px;\n                width: 32px;\n            }\n\n            .loader-5 span::before {\n                content: '';\n                display: block;\n                position: absolute;\n                top: 0;\n                left: 0;\n                bottom: auto;\n                right: 0;\n                margin: auto;\n                width: 8px;\n                height: 8px;\n                background: currentColor;\n                border-radius: 50%;\n                -webkit-animation: loader-5-4 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n                animation: loader-5-4 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n            }\n\n            @-webkit-keyframes loader-5-4 {\n                0% {\n                    -webkit-transform: translate3d(0, 0, 0) scale(1);\n                }\n                50% {\n                    -webkit-transform: translate3d(0, 24px, 0) scale(0.5);\n                }\n                100% {\n                    -webkit-transform: translate3d(0, 0, 0) scale(1);\n                }\n            }\n\n            @keyframes loader-5-4 {\n                0% {\n                    transform: translate3d(0, 0, 0) scale(1);\n                }\n                50% {\n                    transform: translate3d(0, 24px, 0) scale(0.5);\n                }\n                100% {\n                    transform: translate3d(0, 0, 0) scale(1);\n                }\n            }\n\n            .loader-5 span::after {\n                content: '';\n                display: block;\n                position: absolute;\n                top: auto;\n                left: 0;\n                bottom: 0;\n                right: 0;\n                margin: auto;\n                width: 8px;\n                height: 8px;\n                background: currentColor;\n                border-radius: 50%;\n                -webkit-animation: loader-5-5 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n                animation: loader-5-5 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n            }\n\n            @-webkit-keyframes loader-5-5 {\n                0% {\n                    -webkit-transform: translate3d(0, 0, 0) scale(1);\n                }\n                50% {\n                    -webkit-transform: translate3d(0, -24px, 0) scale(0.5);\n                }\n                100% {\n                    -webkit-transform: translate3d(0, 0, 0) scale(1);\n                }\n            }\n\n            @keyframes loader-5-5 {\n                0% {\n                    transform: translate3d(0, 0, 0) scale(1);\n                }\n                50% {\n                    transform: translate3d(0, -24px, 0) scale(0.5);\n                }\n                100% {\n                    transform: translate3d(0, 0, 0) scale(1);\n                }\n            }\n\n            /* Loader 6 */\n            .loader-6 {\n                height: 32px;\n                width: 32px;\n            }\n\n            .loader-6 span {\n                display: block;\n                position: absolute;\n                top: 0;\n                left: 0;\n                bottom: 0;\n                right: 0;\n                margin: auto;\n                height: 32px;\n                width: 32px;\n            }\n\n            .loader-6 span::before,\n            .loader-6 span::after {\n                content: '';\n                display: block;\n                position: absolute;\n                top: 0;\n                left: 0;\n                bottom: 0;\n                right: 0;\n                margin: auto;\n                height: 32px;\n                width: 32px;\n                border: 2px solid currentColor;\n                border-radius: 50%;\n                opacity: 0;\n                -webkit-animation: loader-6-1 1.5s cubic-bezier(0.075, 0.82, 0.165, 1) infinite;\n                animation: loader-6-1 1.5s cubic-bezier(0.075, 0.82, 0.165, 1) infinite;\n            }\n\n            @-webkit-keyframes loader-6-1 {\n                0% {\n                    -webkit-transform: translate3d(0, 0, 0) scale(0);\n                    opacity: 1;\n                }\n                100% {\n                    -webkit-transform: translate3d(0, 0, 0) scale(1.5);\n                    opacity: 0;\n                }\n            }\n\n            @keyframes loader-6-1 {\n                0% {\n                    transform: translate3d(0, 0, 0) scale(0);\n                    opacity: 1;\n                }\n                100% {\n                    transform: translate3d(0, 0, 0) scale(1.5);\n                    opacity: 0;\n                }\n            }\n\n            .loader-6 span::after {\n                -webkit-animation: loader-6-2 1.5s cubic-bezier(0.075, 0.82, 0.165, 1) 0.25s infinite;\n                animation: loader-6-2 1.5s cubic-bezier(0.075, 0.82, 0.165, 1) 0.25s infinite;\n            }\n\n            @-webkit-keyframes loader-6-2 {\n                0% {\n                    -webkit-transform: translate3d(0, 0, 0) scale(0);\n                    opacity: 1;\n                }\n                100% {\n                    -webkit-transform: translate3d(0, 0, 0) scale(1);\n                    opacity: 0;\n                }\n            }\n\n            @keyframes loader-6-2 {\n                0% {\n                    transform: translate3d(0, 0, 0) scale(0);\n                    opacity: 1;\n                }\n                100% {\n                    transform: translate3d(0, 0, 0) scale(1);\n                    opacity: 0;\n                }\n            }\n        `,\n    ],\n    imports: [NgSwitch, NgSwitchCase, NgSwitchDefault],\n})\nexport class LoaderComponent {\n    @Input()\n    type: LoaderType = 'circle';\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ContextMenuComponent, ContextMenuModule, ContextMenuService } from '@perfectmemory/ngx-contextmenu';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { BackendService } from '@api/services/backend.service';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@Component({\n    selector: 'app-register-context-templates',\n    template: ` <context-menu #allContextMenu>\n            <ng-template (execute)=\"contextMenuCopy($event.value)\" contextMenuItem>{{ 'CONTEXT_MENU.COPY' | translate }}</ng-template>\n            <ng-template (execute)=\"contextMenuPaste($event.value)\" contextMenuItem>{{ 'CONTEXT_MENU.PASTE' | translate }}</ng-template>\n            <ng-template (execute)=\"contextMenuSelect($event.value)\" contextMenuItem>{{ 'CONTEXT_MENU.SELECT' | translate }}</ng-template>\n        </context-menu>\n        <context-menu #onlyCopyContextMenu>\n            <ng-template (execute)=\"contextMenuOnlyCopy($event.value)\" contextMenuItem>{{ 'CONTEXT_MENU.COPY' | translate }}</ng-template>\n        </context-menu>\n\n        <context-menu #pasteSelectContextMenu>\n            <ng-template (execute)=\"contextMenuPaste($event.value)\" contextMenuItem>{{ 'CONTEXT_MENU.PASTE' | translate }}</ng-template>\n            <ng-template (execute)=\"contextMenuSelect($event.value)\" contextMenuItem>{{ 'CONTEXT_MENU.SELECT' | translate }}</ng-template>\n        </context-menu>`,\n    standalone: true,\n    imports: [CommonModule, ContextMenuModule, TranslateModule],\n    providers: [ContextMenuService],\n})\nexport class RegisterContextTemplatesComponent implements OnInit {\n    @ViewChild('allContextMenu', { static: true })\n    public allContextMenu: ContextMenuComponent<any>;\n\n    @ViewChild('onlyCopyContextMenu', { static: true })\n    public onlyCopyContextMenu: ContextMenuComponent<any>;\n\n    @ViewChild('pasteSelectContextMenu', { static: true })\n    public pasteSelectContextMenu: ContextMenuComponent<any>;\n\n    constructor(public variablesService: VariablesService, private backendService: BackendService) {}\n\n    ngOnInit(): void {\n        this.variablesService.allContextMenu = this.allContextMenu;\n        this.variablesService.onlyCopyContextMenu = this.onlyCopyContextMenu;\n        this.variablesService.pasteSelectContextMenu = this.pasteSelectContextMenu;\n    }\n\n    contextMenuCopy(target): void {\n        if (target && (target['nodeName'].toUpperCase() === 'TEXTAREA' || target['nodeName'].toUpperCase() === 'INPUT')) {\n            const start = target['contextSelectionStart'] ? 'contextSelectionStart' : 'selectionStart';\n            const end = target['contextSelectionEnd'] ? 'contextSelectionEnd' : 'selectionEnd';\n            const canUseSelection = target[start] || target[start] === '0';\n            const SelectedText = canUseSelection ? target['value'].substring(target[start], target[end]) : target['value'];\n            this.backendService.setClipboard(String(SelectedText));\n        }\n    }\n\n    contextMenuOnlyCopy(text): void {\n        if (text) {\n            this.backendService.setClipboard(String(text));\n        }\n    }\n\n    contextMenuPaste(target): void {\n        if (target && (target['nodeName'].toUpperCase() === 'TEXTAREA' || target['nodeName'].toUpperCase() === 'INPUT')) {\n            this.backendService.getClipboard((status, clipboard) => {\n                clipboard = String(clipboard);\n                if (typeof clipboard !== 'string' || clipboard.length) {\n                    const start = target['contextSelectionStart'] ? 'contextSelectionStart' : 'selectionStart';\n                    const end = target['contextSelectionEnd'] ? 'contextSelectionEnd' : 'selectionEnd';\n                    const _pre = target['value'].substring(0, target[start]);\n                    const _aft = target['value'].substring(target[end], target['value'].length);\n                    let text = _pre + clipboard + _aft;\n                    const cursorPosition = (_pre + clipboard).length;\n                    if (target['maxLength'] && parseInt(target['maxLength'], 10) > 0) {\n                        text = text.substr(0, parseInt(target['maxLength'], 10));\n                    }\n                    target['value'] = text;\n                    target.setSelectionRange(cursorPosition, cursorPosition);\n                    target.dispatchEvent(new Event('input'));\n                    target['focus']();\n                }\n            });\n        }\n    }\n\n    contextMenuSelect(target): void {\n        if (target && (target['nodeName'].toUpperCase() === 'TEXTAREA' || target['nodeName'].toUpperCase() === 'INPUT')) {\n            target['focus']();\n            setTimeout(() => {\n                target['select']();\n            });\n        }\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { BackendService } from '@api/services/backend.service';\nimport { VariablesService } from '../services/variables.service';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n    selector: 'app-staking-switch',\n    template: `\n        <div (click)=\"toggleStaking(); $event.stopPropagation()\" [class.off]=\"!staking\" [class.on]=\"staking\" class=\"switch\">\n            <span class=\"circle\"></span>\n        </div>\n    `,\n    styles: [],\n    standalone: true,\n    imports: [CommonModule],\n})\nexport class StakingSwitchComponent {\n    @Input() wallet_id: number;\n\n    @Input() staking: boolean;\n\n    @Output() stakingChange = new EventEmitter<boolean>();\n\n    constructor(private backendService: BackendService, private variablesService: VariablesService) {}\n\n    toggleStaking(): void {\n        const wallet = this.variablesService.getWallet(this.wallet_id);\n        if (wallet && wallet.loaded) {\n            this.stakingChange.emit(!this.staking);\n            if (!this.staking) {\n                this.backendService.startPosMining(this.wallet_id);\n            } else {\n                this.backendService.stopPosMining(this.wallet_id);\n            }\n        }\n    }\n}\n","import { Component, EventEmitter, forwardRef, Input, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n    selector: 'app-switch',\n    template: `\n        <div\n            (click)=\"toggle(); $event.stopPropagation()\"\n            [class.disabled]=\"disabled\"\n            [class.off]=\"!value\"\n            [class.on]=\"value\"\n            class=\"switch\"\n        >\n            <span class=\"circle\"></span>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: inline-flex;\n            }\n        `,\n    ],\n    standalone: true,\n    imports: [CommonModule],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => SwitchComponent),\n            multi: true,\n        },\n    ],\n})\nexport class SwitchComponent implements ControlValueAccessor {\n    @Input() value = false;\n\n    @Input() disabled = false;\n\n    @Output() emitChange = new EventEmitter<boolean>();\n\n    onTouched!: () => void;\n\n    onChange!: (value: boolean) => void;\n\n    toggle(): void {\n        if (!this.disabled) {\n            this.value = !this.value;\n            this.emitChange.emit(this.value);\n            if (this.onChange) {\n                this.onChange(this.value);\n            }\n        }\n    }\n\n    registerOnChange(fn: any): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this.onTouched = fn;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    writeValue(value: boolean): void {\n        this.value = value;\n    }\n}\n","import { Component } from '@angular/core';\nimport { VariablesService } from '../services/variables.service';\nimport { DOWNLOADS_PAGE_URL } from '@parts/data/constants';\nimport { BackendService } from '@api/services/backend.service';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { TooltipModule } from '@parts/directives';\nimport { MatIconModule } from '@angular/material/icon';\n\n@Component({\n    selector: 'app-synchronization-status',\n    template: `\n        <div\n            [ngStyle]=\"{\n                'align-items': variablesService.daemon_state === 1 || variablesService.daemon_state === 6 ? 'flex-start' : 'center'\n            }\"\n            class=\"synchronization-status overflow-hidden\"\n        >\n            <div class=\"status-container\">\n                <div *ngIf=\"variablesService.daemon_state === 0\" class=\"offline\">\n                    <span>{{ 'SIDEBAR.SYNCHRONIZATION.OFFLINE' | translate }}</span>\n                </div>\n                <div *ngIf=\"variablesService.daemon_state === 1\" class=\"syncing text-ellipsis\">\n                    {{ 'SIDEBAR.SYNCHRONIZATION.SYNCING' | translate }}\n                    {{ variablesService.sync.progress_value_text }}%\n                </div>\n                <div *ngIf=\"variablesService.daemon_state === 2\" class=\"online\">\n                    <span>{{ 'SIDEBAR.SYNCHRONIZATION.ONLINE' | translate }}</span>\n                </div>\n                <div *ngIf=\"variablesService.daemon_state === 3\" class=\"loading\">\n                    {{ 'SIDEBAR.SYNCHRONIZATION.LOADING' | translate }}\n                </div>\n                <div *ngIf=\"variablesService.daemon_state === 4\" class=\"offline\">\n                    {{ 'SIDEBAR.SYNCHRONIZATION.ERROR' | translate }}\n                </div>\n                <div *ngIf=\"variablesService.daemon_state === 5\" class=\"online\">\n                    {{ 'SIDEBAR.SYNCHRONIZATION.COMPLETE' | translate }}\n                </div>\n                <div *ngIf=\"variablesService.daemon_state === 6\" class=\"syncing text-ellipsis\">\n                    {{ 'SIDEBAR.SYNCHRONIZATION.DOWNLOADING' | translate }}\n                    {{ variablesService.download.progress_value_text }}%\n                </div>\n\n                <ng-container *ngIf=\"variablesService.daemon_state === 1 || variablesService.daemon_state === 3\">\n                    <div class=\"progress-bar-container\">\n                        <div *ngIf=\"variablesService.daemon_state === 1\" class=\"syncing\">\n                            <div class=\"progress-bar\">\n                                <div [style.width]=\"variablesService.sync.progress_value + '%'\" class=\"fill\"></div>\n                            </div>\n                        </div>\n\n                        <div *ngIf=\"variablesService.daemon_state === 3\" class=\"loading\"></div>\n                    </div>\n\n                    <p class=\"blocks\">\n                        <mat-icon\n                            class=\"mr-0_5\"\n                            style=\"width: 14px; height: 14px; color: var(--block-sync)\"\n                            svgIcon=\"zano-block-sync\"\n                        ></mat-icon>\n                        <span>{{ variablesService.sync.blocks.current }}</span>\n                        <wbr />\n                        /{{ variablesService.sync.blocks.max }} Blocks\n                    </p>\n                </ng-container>\n\n                <ng-container *ngIf=\"variablesService.daemon_state === 6\">\n                    <div class=\"progress-bar-container\">\n                        <div class=\"syncing downloading\">\n                            <div class=\"progress-bar\">\n                                <div [style.width]=\"variablesService.download.progress_value + '%'\" class=\"fill\"></div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n            </div>\n\n            <div\n                *ngIf=\"\n                    (variablesService.daemon_state === 0 || variablesService.daemon_state === 2) &&\n                    [2, 3, 4].indexOf(variablesService.last_build_displaymode) !== -1\n                \"\n                class=\"update-container\"\n            >\n                <ng-container *ngIf=\"variablesService.last_build_displaymode === 2\">\n                    <div class=\"update-text standard\">\n                        <span (click)=\"getUpdate()\" [style.cursor]=\"'pointer'\">{{ 'SIDEBAR.UPDATE.STANDARD' | translate }}</span>\n                    </div>\n                    <i\n                        [delay]=\"500\"\n                        class=\"icon update standard\"\n                        placement=\"right-bottom\"\n                        tooltip=\"{{ 'SIDEBAR.UPDATE.STANDARD_TOOLTIP' | translate }}\"\n                        tooltipClass=\"update-tooltip\"\n                    ></i>\n                </ng-container>\n\n                <ng-container *ngIf=\"variablesService.last_build_displaymode === 3\">\n                    <div class=\"update-text important\">\n                        <span (click)=\"getUpdate()\" [style.cursor]=\"'pointer'\">{{ 'SIDEBAR.UPDATE.IMPORTANT' | translate }}</span>\n                        <span style=\"font-size: 1rem\">{{ 'SIDEBAR.UPDATE.IMPORTANT_HINT' | translate }}</span>\n                    </div>\n                    <i\n                        [delay]=\"500\"\n                        class=\"icon update important\"\n                        placement=\"right-bottom\"\n                        tooltip=\"{{ 'SIDEBAR.UPDATE.IMPORTANT_TOOLTIP' | translate }}\"\n                        tooltipClass=\"update-tooltip important\"\n                    ></i>\n                </ng-container>\n\n                <ng-container *ngIf=\"variablesService.last_build_displaymode === 4\">\n                    <div class=\"update-text critical\">\n                        <span (click)=\"getUpdate()\" [style.cursor]=\"'pointer'\">{{ 'SIDEBAR.UPDATE.CRITICAL' | translate }}</span>\n                        <span style=\"font-size: 1rem\">{{ 'SIDEBAR.UPDATE.IMPORTANT_HINT' | translate }}</span>\n                    </div>\n                    <i\n                        [delay]=\"500\"\n                        class=\"icon update critical\"\n                        placement=\"right-bottom\"\n                        tooltip=\"{{ 'SIDEBAR.UPDATE.CRITICAL_TOOLTIP' | translate }}\"\n                        tooltipClass=\"update-tooltip critical\"\n                    ></i>\n                </ng-container>\n            </div>\n\n            <div *ngIf=\"variablesService.daemon_state === 2 && variablesService.net_time_delta_median !== 0\" class=\"update-container\">\n                <div class=\"update-text time-orange\">\n                    <span>{{ 'SIDEBAR.UPDATE.TIME' | translate }}</span>\n                </div>\n                <i\n                    [delay]=\"500\"\n                    class=\"icon time-orange\"\n                    placement=\"right-bottom\"\n                    tooltip=\"{{ 'SIDEBAR.UPDATE.TIME_TOOLTIP' | translate }}\"\n                    tooltipClass=\"update-tooltip important\"\n                ></i>\n            </div>\n        </div>\n    `,\n    styles: [],\n    standalone: true,\n    imports: [CommonModule, TranslateModule, TooltipModule, MatIconModule],\n})\nexport class SynchronizationStatusComponent {\n    constructor(public variablesService: VariablesService, private backend: BackendService) {}\n\n    getUpdate(): void {\n        this.backend.openUrlInBrowser(DOWNLOADS_PAGE_URL);\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { Transaction } from '@api/models/transaction.model';\nimport { VariablesService } from '../services/variables.service';\nimport { BackendService } from '@api/services/backend.service';\nimport { BLOCK_EXPLORER_TN_TX_URL_PREFIX, BLOCK_EXPLORER_TX_URL_PREFIX } from '../data/constants';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { TooltipModule } from '@parts/directives';\n\n@Component({\n    selector: 'app-transaction-details',\n    template: `\n        <table class=\"zano-table\">\n            <tbody>\n                <tr>\n                    <td>{{ 'HISTORY.DETAILS.ID' | translate }}</td>\n                    <td\n                        colspan=\"2\"\n                        (click)=\"openInBrowser(transaction.tx_hash)\"\n                        (contextmenu)=\"variablesService.onContextMenuOnlyCopy($event, transaction.tx_hash)\"\n                        class=\"color-primary cursor-pointer\"\n                    >\n                        {{ transaction.tx_hash }}\n                    </td>\n                    <td>{{ 'HISTORY.DETAILS.SIZE' | translate }}</td>\n                    <td>\n                        {{ 'HISTORY.DETAILS.SIZE_VALUE' | translate : { value: transaction.tx_blob_size } }}\n                    </td>\n                </tr>\n                <tr>\n                    <td>{{ 'Asset ID' | translate }}</td>\n                    <td colspan=\"2\" class=\"color-primary cursor-pointer\">\n                        <ng-container *ngFor=\"let asset_id of getAllUniqAssetId(transaction)\">\n                            <p class=\"text-ellipsis\" (contextmenu)=\"variablesService.onContextMenuOnlyCopy($event, asset_id)\">\n                                {{ asset_id }}\n                            </p>\n                        </ng-container>\n                    </td>\n                    <td>{{ 'HISTORY.DETAILS.CONFIRMATION' | translate }}</td>\n                    <td>\n                        {{ transaction.height === 0 ? 0 : variablesService.height_app - transaction.height }}\n                    </td>\n                </tr>\n                <tr>\n                    <td>{{ 'HISTORY.DETAILS.HEIGHT' | translate }}</td>\n                    <td colspan=\"2\">{{ transaction.height }}</td>\n                    <td colspan=\"2\"></td>\n                </tr>\n                <tr>\n                    <td>{{ 'HISTORY.DETAILS.PAYMENT_ID' | translate }}</td>\n                    <td\n                        colspan=\"4\"\n                        [delay]=\"500\"\n                        [showWhenNoOverflow]=\"false\"\n                        placement=\"top\"\n                        tooltip=\"{{ transaction.payment_id }}\"\n                        tooltipClass=\"table-tooltip comment-tooltip\"\n                    >\n                        {{ transaction.payment_id }}\n                    </td>\n                </tr>\n                <tr>\n                    <td>{{ 'HISTORY.DETAILS.COMMENT' | translate }}</td>\n                    <td\n                        colspan=\"4\"\n                        (contextmenu)=\"variablesService.onContextMenuOnlyCopy($event, transaction.comment)\"\n                        [delay]=\"500\"\n                        [showWhenNoOverflow]=\"false\"\n                        placement=\"top\"\n                        tooltip=\"{{ transaction.comment }}\"\n                        tooltipClass=\"table-tooltip comment-tooltip\"\n                    >\n                        {{ transaction.comment }}\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                padding: 2rem 0;\n            }\n            table tbody tr {\n                background: none;\n            }\n\n            table tbody tr td {\n                padding: 1rem 2rem;\n            }\n        `,\n    ],\n    standalone: true,\n    imports: [CommonModule, TranslateModule, TooltipModule],\n})\nexport class TransactionDetailsComponent {\n    @Input() transaction: Transaction;\n\n    constructor(public variablesService: VariablesService, private backendService: BackendService) {}\n\n    getAllUniqAssetId(transaction: Transaction): Set<string> {\n        const { employed_entries } = transaction;\n        const { receive = [], spent = [] } = employed_entries;\n        return new Set([...receive, ...spent].map(({ asset_id }) => asset_id));\n    }\n\n    openInBrowser(hash: string): void {\n        this.backendService.openUrlInBrowser(\n            (this.variablesService.testnet ? BLOCK_EXPLORER_TN_TX_URL_PREFIX : BLOCK_EXPLORER_TX_URL_PREFIX) + hash\n        );\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Subtransfer, Subtransfers, Transaction } from '@api/models/transaction.model';\nimport { zanoAssetInfo } from '@parts/data/assets';\nimport { isFinalizator, isInitiator, isSwapTransaction } from '@parts/functions/identify-transaction';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { TooltipModule } from '@parts/directives';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FlexModule } from '@angular/flex-layout';\n\n@Component({\n    selector: 'app-transaction-status',\n    standalone: true,\n    imports: [CommonModule, TooltipModule, TranslateModule, FlexModule],\n    templateUrl: './transaction-status.component.html',\n    styleUrls: ['./transaction-status.component.scss'],\n})\nexport class TransactionStatusComponent {\n    @Input() transaction: Transaction;\n\n    constructor(public variablesService: VariablesService) {}\n\n    isVisibleSubtransferStatus(subtransfer: Subtransfer, transaction: Transaction): boolean {\n        const { amount, asset_id, is_income } = subtransfer;\n        const { fee, subtransfers } = transaction;\n\n        if (subtransfers.length === 1 && asset_id === zanoAssetInfo.asset_id && is_income === false && amount.eq(fee)) {\n            return true;\n        }\n\n        if (asset_id === zanoAssetInfo.asset_id && isSwapTransaction(transaction) && isFinalizator(transaction)) {\n            return true;\n        }\n\n        return !(asset_id === zanoAssetInfo.asset_id && is_income === false && amount.eq(fee));\n    }\n\n    getHeight(item): number {\n        const { height_app } = this.variablesService;\n        if ((height_app - item.height >= 10 && item.height !== 0) || (item.is_mining === true && item.height === 0)) {\n            return 10;\n        } else {\n            if (item.height === 0 || height_app - item.height < 0) {\n                return 0;\n            } else {\n                return height_app - item.height;\n            }\n        }\n    }\n\n    strokeSize(item): number {\n        const rem = this.variablesService.settings.scale;\n        if ((this.variablesService.height_app - item.height >= 10 && item.height !== 0) || (item.is_mining === true && item.height === 0)) {\n            return 0;\n        } else {\n            if (item.height === 0 || this.variablesService.height_app - item.height < 0) {\n                return 4.5 * parseInt(rem, 10);\n            } else {\n                return (\n                    4.5 * parseInt(rem, 10) - ((4.5 * parseInt(rem, 10)) / 100) * ((this.variablesService.height_app - item.height) * 10)\n                );\n            }\n        }\n    }\n\n    isLocked(item: Transaction): boolean {\n        if (item.unlock_time > 500000000 && item.unlock_time > new Date().getTime() / 1000) {\n            return true;\n        }\n        return item.unlock_time < 500000000 && item.unlock_time > this.variablesService.height_max;\n    }\n\n    time(item: Transaction): number {\n        const now = new Date().getTime();\n        return now + (item.unlock_time - this.variablesService.height_max) * 60 * 1000;\n    }\n\n    hasZano(subtransfers: Subtransfers): boolean {\n        return Boolean(subtransfers.find(({ asset_id }) => asset_id === zanoAssetInfo.asset_id));\n    }\n\n    isInitiator(transaction: Transaction): boolean {\n        return isInitiator(transaction);\n    }\n}\n","<ng-container *ngIf=\"transaction.subtransfers; else noSubtransfersStatusTemplate\">\n    <ng-container *ngFor=\"let subtransfer of transaction.subtransfers\">\n        <ng-container *ngIf=\"isVisibleSubtransferStatus(subtransfer, transaction)\">\n            <div\n                [ngClass]=\"subtransfer.is_income ? 'received' : 'send'\"\n                class=\"status text-ellipsis\"\n                fxLayout=\"row\"\n                fxLayoutAlign=\" center\"\n            >\n                <ng-container *ngIf=\"getHeight(transaction) < 10\">\n                    <svg\n                        [delay]=\"500\"\n                        class=\"confirmation mr-1\"\n                        placement=\"bottom-left\"\n                        style=\"transform: rotateZ(-90deg)\"\n                        tooltip=\"{{ 'HISTORY.STATUS_TOOLTIP' | translate : { current: getHeight(transaction), total: 10 } }}\"\n                        tooltipClass=\"table-tooltip\"\n                    >\n                        <circle\n                            cx=\"50%\"\n                            cy=\"50%\"\n                            fill=\"transparent\"\n                            r=\"0.7rem\"\n                            stroke=\"rgba(31, 143, 235, 0.33)\"\n                            stroke-dasharray=\"100\"\n                            stroke-dashoffset=\"0\"\n                            stroke-width=\"0.3rem\"\n                        ></circle>\n                        <circle\n                            [style.stroke-dashoffset]=\"strokeSize(transaction)\"\n                            [style.stroke]=\"subtransfer.is_income ? '#16d1d6' : '#1f8feb'\"\n                            class=\"progress-circle\"\n                            cx=\"50%\"\n                            cy=\"50%\"\n                            fill=\"transparent\"\n                            r=\"0.7rem\"\n                            stroke-dasharray=\"4.5rem\"\n                            stroke-dashoffset=\"4.5rem\"\n                            stroke-linecap=\"round\"\n                            stroke-width=\"0.3rem\"\n                        ></circle>\n                    </svg>\n                </ng-container>\n\n                <ng-container *ngIf=\"getHeight(transaction) === 10\">\n                    <img *ngIf=\"!subtransfer.is_income\" alt=\"\" class=\"status-transaction mr-1\" src=\"assets/icons/blue/send.svg\" />\n                    <img *ngIf=\"subtransfer.is_income\" alt=\"\" class=\"status-transaction mr-1\" src=\"assets/icons/aqua/receive.svg\" />\n                </ng-container>\n\n                <span class=\"status-transaction-text\">{{ (subtransfer.is_income ? 'HISTORY.RECEIVED' : 'HISTORY.SEND') | translate }}</span>\n\n                <ng-container *ngIf=\"transaction.unlock_time !== 0 && transaction.tx_type !== 6\">\n                    <ng-container *ngIf=\"isLocked(transaction); else unlock\">\n                        <ng-container *ngIf=\"transaction.unlock_time < 500000000\">\n                            <i\n                                [class.position]=\"\n                                    variablesService.height_app - transaction.height < 10 ||\n                                    (transaction.height === 0 && transaction.timestamp > 0)\n                                \"\n                                [delay]=\"500\"\n                                class=\"icon lock-transaction mr-1\"\n                                placement=\"bottom-left\"\n                                tooltip=\"{{ 'HISTORY.LOCK_TOOLTIP' | translate : { date: time(transaction) | date : 'MM.dd.yy' } }}\"\n                                tooltipClass=\"table-tooltip\"\n                            ></i>\n                        </ng-container>\n                        <ng-container *ngIf=\"transaction.unlock_time > 500000000\">\n                            <i\n                                [class.position]=\"\n                                    variablesService.height_app - transaction.height < 10 ||\n                                    (transaction.height === 0 && transaction.timestamp > 0)\n                                \"\n                                [delay]=\"500\"\n                                class=\"icon lock-transaction mr-1\"\n                                placement=\"bottom-left\"\n                                tooltip=\"{{\n                                    'HISTORY.LOCK_TOOLTIP'\n                                        | translate\n                                            : {\n                                                  date: transaction.unlock_time * 1000 | date : 'MM.dd.yy'\n                                              }\n                                }}\"\n                                tooltipClass=\"table-tooltip\"\n                            ></i>\n                        </ng-container>\n                    </ng-container>\n                    <ng-template #unlock>\n                        <i\n                            [class.position]=\"\n                                variablesService.height_app - transaction.height < 10 ||\n                                (transaction.height === 0 && transaction.timestamp > 0)\n                            \"\n                            class=\"icon unlock-transaction mr-1\"\n                        ></i>\n                    </ng-template>\n                </ng-container>\n            </div>\n        </ng-container>\n    </ng-container>\n</ng-container>\n\n<ng-container *ngIf=\"isInitiator(transaction) && !hasZano(transaction.subtransfers)\">\n    <div [ngClass]=\"'received'\" class=\"status text-ellipsis\" fxLayout=\"row\" fxLayoutAlign=\" center\">\n        <img alt=\"\" class=\"status-transaction mr-1\" src=\"assets/icons/aqua/receive.svg\" />\n\n        <span class=\"status-transaction-text\">{{ 'HISTORY.RECEIVED' | translate }}</span>\n    </div>\n</ng-container>\n\n<ng-template #noSubtransfersStatusTemplate>\n    <div [ngClass]=\"'received'\" class=\"status text-ellipsis\" fxLayout=\"row\" fxLayoutAlign=\" center\">\n        <img alt=\"\" class=\"status-transaction mr-1\" src=\"assets/icons/aqua/receive.svg\" />\n\n        <span class=\"status-transaction-text\">{{ 'HISTORY.RECEIVED' | translate }}</span>\n    </div>\n</ng-template>\n","import { Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { Wallet } from '@api/models/wallet.model';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { BigNumber } from 'bignumber.js';\nimport { LOCKED_BALANCE_HELP_PAGE } from '@parts/data/constants';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { IntToMoneyPipe, IntToMoneyPipeModule } from '@parts/pipes';\nimport { BackendService } from '@api/services/backend.service';\nimport { CommonModule } from '@angular/common';\nimport { DisablePriceFetchModule, TooltipModule } from '@parts/directives';\nimport { StakingSwitchComponent } from '@parts/components/staking-switch.component';\nimport { VisibilityBalanceDirective } from '@parts/directives/visibility-balance.directive';\nimport { MatIconModule } from '@angular/material/icon';\n\n@Component({\n    selector: 'app-wallet-card',\n    template: `\n        <div class=\"content\">\n            <div class=\"header\">\n                <div class=\"left\">\n                    <div class=\"name text-ellipsis\">\n                        <span *ngIf=\"wallet.new_contracts\" class=\"indicator\">\n                            {{ wallet.new_contracts }}\n                        </span>\n\n                        <span\n                            [delay]=\"500\"\n                            [showWhenNoOverflow]=\"false\"\n                            class=\"name\"\n                            placement=\"top-left\"\n                            tooltip=\"{{ wallet.name }}\"\n                            tooltipClass=\"table-tooltip account-tooltip\"\n                        >\n                            {{ !wallet.alias['name'] ? wallet.name : wallet.alias['name'] }}\n                        </span>\n                    </div>\n                </div>\n                <div class=\"right\">\n                    <button\n                        (click)=\"eventClose.emit(wallet.wallet_id)\"\n                        [delay]=\"500\"\n                        [timeDelay]=\"500\"\n                        placement=\"top\"\n                        tooltip=\"{{ 'WALLET.TOOLTIPS.REMOVE' | translate }}\"\n                        tooltipClass=\"table-tooltip account-tooltip\"\n                        type=\"button\"\n                        class=\"close\"\n                    >\n                        <mat-icon svgIcon=\"zano-close\"></mat-icon>\n                    </button>\n                </div>\n            </div>\n\n            <h4>\n                <ng-container *appVisibilityBalance>\n                    <span\n                        *appDisablePriceFetch\n                        [delay]=\"500\"\n                        [placement]=\"'bottom'\"\n                        [timeDelay]=\"1000\"\n                        [tooltipClass]=\"'balance-tooltip'\"\n                        [tooltip]=\"getBalancesTooltip()\"\n                        class=\"price\"\n                    >\n                        {{\n                            wallet.getMoneyEquivalentForZano(variablesService.zanoMoneyEquivalent) | intToMoney | currency : 'USD' || '---'\n                        }}\n                        <span [class.red]=\"variablesService.zanoMoneyEquivalentPercent < 0\" class=\"percent\">\n                            {{ variablesService.zanoMoneyEquivalentPercent | number : '1.2-2' }}%\n                        </span>\n                    </span>\n                </ng-container>\n            </h4>\n\n            <ng-container *ngIf=\"(!wallet.is_auditable && !wallet.is_watch_only) || (wallet.is_auditable && !wallet.is_watch_only)\">\n                <div *ngIf=\"!(!wallet.loaded && variablesService.daemon_state === 2)\" class=\"staking\">\n                    <span class=\"text\">{{ 'SIDEBAR.ACCOUNT.STAKING' | translate }}</span>\n                    <app-staking-switch [(staking)]=\"wallet.staking\" [wallet_id]=\"wallet.wallet_id\"></app-staking-switch>\n                </div>\n            </ng-container>\n\n            <div *ngIf=\"!wallet.loaded && variablesService.daemon_state === 2\" class=\"account-synchronization\">\n                <div class=\"progress-bar\">\n                    <div [style.width]=\"wallet.progress + '%'\" class=\"fill\"></div>\n                </div>\n                <div class=\"progress-percent\">{{ wallet.progress }}%</div>\n            </div>\n        </div>\n    `,\n    standalone: true,\n    imports: [\n        CommonModule,\n        TooltipModule,\n        TranslateModule,\n        IntToMoneyPipeModule,\n        StakingSwitchComponent,\n        DisablePriceFetchModule,\n        VisibilityBalanceDirective,\n        MatIconModule,\n    ],\n})\nexport class WalletCardComponent {\n    @HostBinding('class') classAttr = 'wallet';\n\n    @Input() wallet: Wallet;\n\n    @Output() eventClose = new EventEmitter<number>();\n\n    constructor(\n        public variablesService: VariablesService,\n        private intToMoneyPipe: IntToMoneyPipe,\n        private translate: TranslateService,\n        private backend: BackendService\n    ) {}\n\n    getBalancesTooltip(): HTMLDivElement {\n        const tooltip = document.createElement('div');\n        const scrollWrapper = document.createElement('div');\n        if (!this.wallet || !this.wallet.balances) {\n            return null;\n        }\n        const { balances } = this.wallet;\n\n        scrollWrapper.classList.add('balance-scroll-list');\n        balances.forEach(({ unlocked, total, asset_info: { ticker } }) => {\n            const available = document.createElement('span');\n            available.setAttribute('class', 'available');\n            available.innerText = `${this.translate.instant('WALLET.AVAILABLE_BALANCE')} `;\n            const availableB = document.createElement('b');\n            availableB.innerText = `${this.intToMoneyPipe.transform(unlocked)} ${ticker || '---'}`;\n            available.appendChild(availableB);\n            scrollWrapper.appendChild(available);\n\n            const locked = document.createElement('span');\n            locked.setAttribute('class', 'locked');\n            locked.innerText = `${this.translate.instant('WALLET.LOCKED_BALANCE')} `;\n            const lockedB = document.createElement('b');\n            lockedB.innerText = `${this.intToMoneyPipe.transform(new BigNumber(total).minus(unlocked))} ${ticker || '---'}`;\n            locked.appendChild(lockedB);\n            scrollWrapper.appendChild(locked);\n        });\n        tooltip.appendChild(scrollWrapper);\n        const link = document.createElement('span');\n        link.setAttribute('class', 'link');\n        link.innerHTML = this.translate.instant('WALLET.LOCKED_BALANCE_LINK');\n        link.addEventListener('click', () => {\n            this.backend.openUrlInBrowser(LOCKED_BALANCE_HELP_PAGE);\n        });\n        tooltip.appendChild(link);\n        return tooltip;\n    }\n}\n","import { AssetInfo } from '@api/models/assets.model';\n\nexport type ZanoAssetInfo = AssetInfo & { logo: string; price_url: string };\n\nexport const zanoAssetInfo: ZanoAssetInfo = {\n    asset_id: 'd6329b5b1f7c0805b5c345f4957554002a2f557845f64d7645dae0e051a6498a',\n    current_supply: 0,\n    decimal_point: 12,\n    full_name: 'Zano',\n    logo: 'assets/currency-icons/zano.svg',\n    meta_info: '',\n    owner: '0000000000000000000000000000000000000000000000000000000000000000',\n    price_url: 'https://explorer.zano.org/api/price?asset=zano',\n    ticker: 'ZANO',\n    total_max_supply: 0,\n};\n\nexport const defaultImgSrc = 'assets/currency-icons/custom_token.svg';\n","export const MIXIN = 10; // default mixin value\nexport const RCV_ADDR_QR_SCALE = 1.5; // scale factor for QR code\n\nexport const AUDITABLE_WALLET_HELP_PAGE = 'docs.zano.org/docs/use/auditable-wallets-faq';\nexport const CREATE_NEW_WALLET_HELP_PAGE = 'docs.zano.org/docs/use/wallets/gui-wallet';\nexport const LOCKED_BALANCE_HELP_PAGE = 'docs.zano.org/docs/use/locked-balance';\nexport const DOWNLOADS_PAGE_URL = 'zano.org/downloads';\nexport const ZARCANUM_MIGRATION = 'docs.zano.org/docs/use/zarcanum-migration/';\n\nexport const BLOCK_EXPLORER_TX_URL_PREFIX = 'explorer.zano.org/transaction/';\nexport const BLOCK_EXPLORER_TN_TX_URL_PREFIX = 'testnet-explorer.zano.org/transaction/';\n","import { ScaleItems } from '@api/models/scale.model';\n\nexport const scaleItems: ScaleItems = [\n    {\n        value: '8px',\n        name: 'SETTINGS.SCALE.75',\n    },\n    {\n        value: '10px',\n        name: 'SETTINGS.SCALE.100',\n    },\n    {\n        value: '12px',\n        name: 'SETTINGS.SCALE.125',\n    },\n    {\n        value: '14px',\n        name: 'SETTINGS.SCALE.150',\n    },\n];\n","import { AfterViewInit, Directive, ElementRef } from '@angular/core';\n\n@Directive({\n    selector: '[appAutofocus]',\n    standalone: true,\n})\nexport class AutoFocusDirective implements AfterViewInit {\n    constructor(private elementRef: ElementRef) {}\n\n    ngAfterViewInit() {\n        setTimeout(() => this.elementRef.nativeElement.focus());\n    }\n}\n","import { Directive, HostListener } from '@angular/core';\nimport { NavigationService } from '@parts/services/back.service';\n\n@Directive({\n    selector: '[appBackButton]',\n})\nexport class BackButtonDirective {\n    constructor(private navigationService: NavigationService) {}\n\n    @HostListener('click')\n    onClick(): void {\n        this.navigationService.back();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BackButtonDirective } from './back-button.directive';\n\n@NgModule({\n    declarations: [BackButtonDirective],\n    exports: [BackButtonDirective],\n    imports: [CommonModule],\n})\nexport class BackButtonModule {}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\n@Directive({\n    selector: '[appDefaultImg]',\n})\nexport class DefaultImgDirective {\n    @Input() defaultImgSrc!: string | null | undefined;\n    @Input() defaultImgAlt: string | null | undefined;\n\n    constructor(private elementRef: ElementRef) {}\n\n    @HostListener('error')\n    handlerOnError(): void {\n        const elementImg: HTMLImageElement = <HTMLImageElement>this.elementRef.nativeElement;\n        elementImg.onerror = null;\n        elementImg.src = this.defaultImgSrc || '---';\n        elementImg.alt = this.defaultImgAlt || '---';\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DefaultImgDirective } from './default-img.directive';\n\n@NgModule({\n    declarations: [DefaultImgDirective],\n    exports: [DefaultImgDirective],\n    imports: [CommonModule],\n})\nexport class DefaultImgModule {}\n","export * from './default-img.module';\n","import { Directive, OnDestroy, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { VariablesService } from '../../services/variables.service';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\n@Directive({\n    selector: '[appDisablePriceFetch]',\n})\nexport class DisablePriceFetchDirective implements OnDestroy {\n    private destroy$: Subject<void> = new Subject<void>();\n\n    constructor(\n        private _variablesService: VariablesService,\n        private _templateRef: TemplateRef<any>,\n        private _viewContainer: ViewContainerRef\n    ) {\n        this._variablesService.disable_price_fetch$.pipe(distinctUntilChanged(), takeUntil(this.destroy$)).subscribe({\n            next: (disable_price_fetch: boolean) => {\n                this._viewContainer.clear();\n                if (!disable_price_fetch) {\n                    this._viewContainer.createEmbeddedView(this._templateRef);\n                }\n            },\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DisablePriceFetchDirective } from './disable-price-fetch.directive';\n\n@NgModule({\n    declarations: [DisablePriceFetchDirective],\n    imports: [CommonModule],\n    exports: [DisablePriceFetchDirective],\n})\nexport class DisablePriceFetchModule {}\n","export * from './disable-price-fetch.directive';\nexport * from './disable-price-fetch.module';\n","export * from './default-img';\nexport * from './disable-price-fetch';\nexport * from './input-disable-selection';\nexport * from './input-validate';\nexport * from './tooltip';\nexport * from './lower-case.directive';\n","export * from './input-disable-selection.module';\nexport * from './input-disable-selection.directive';\n","import { Directive, HostListener } from '@angular/core';\n\n@Directive({\n    // eslint-disable-next-line\n    selector: 'input',\n})\nexport class InputDisableSelectionDirective {\n    @HostListener('mousedown', ['$event'])\n    handleInput(event: Event): void {\n        if ((<HTMLInputElement>event.target).readOnly) {\n            event.preventDefault();\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InputDisableSelectionDirective } from '@parts/directives/input-disable-selection/input-disable-selection.directive';\n\n@NgModule({\n    declarations: [InputDisableSelectionDirective],\n    exports: [InputDisableSelectionDirective],\n    imports: [CommonModule],\n})\nexport class InputDisableSelectionModule {}\n","export * from './input-validate.module';\nexport * from './input-validate.directive';\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\nimport { VariablesService } from '../../services/variables.service';\nimport { BigNumber } from 'bignumber.js';\n\n@Directive({\n    selector: '[appInputValidate]',\n})\nexport class InputValidateDirective {\n    constructor(private el: ElementRef, private variablesService: VariablesService) {}\n\n    @Input('appInputValidate')\n    public type: 'money' | 'integer';\n\n    private _decimalPoint: number = this.variablesService.decimal_point;\n\n    @Input('decimalPoint')\n    public set decimalPoint(value: number) {\n        this._decimalPoint = value;\n        this._formatValue();\n    }\n\n    @HostListener('input', ['$event'])\n    handleInput(): void {\n        this._formatValue();\n    }\n\n    private _formatValue(): void {\n        switch (this.type) {\n            case 'money': {\n                return this._money();\n            }\n            case 'integer': {\n                return this._integer();\n            }\n        }\n    }\n\n    private _prepareToMoney(value: string): string {\n        let currentValue = value;\n        // eslint-disable-next-line\n        const OnlyD = /[^\\d\\.]/g;\n        const _has_error = currentValue.match(OnlyD);\n        if (_has_error && _has_error.length) {\n            currentValue = currentValue.replace(',', '.').replace(OnlyD, '');\n        }\n        const _double_separator = currentValue.match(/\\./g);\n        if (_double_separator && _double_separator.length > 1) {\n            currentValue = currentValue.substr(0, currentValue.lastIndexOf('.'));\n        }\n\n        if (currentValue.length > 1 && currentValue.indexOf('.') !== 1 && currentValue.indexOf('0') === 0) {\n            currentValue = new BigNumber(currentValue).toString();\n        }\n\n        if (currentValue.indexOf('.') === 0) {\n            currentValue = '0' + currentValue;\n        }\n        const _zero_fill = currentValue.split('.');\n        if (_zero_fill[0].length > 20) {\n            _zero_fill[0] = _zero_fill[0].substr(0, 20);\n        }\n\n        if (1 in _zero_fill && _zero_fill[1].length) {\n            _zero_fill[1] = _zero_fill[1].substr(0, this._decimalPoint);\n        }\n        return this._decimalPoint ? _zero_fill.join('.') : _zero_fill[0];\n    }\n\n    private _money(): void {\n        const value: string = this.el.nativeElement.value;\n        const originalValue: string = value;\n        const preparedValue: string = this._prepareToMoney(value);\n\n        if (preparedValue !== originalValue) {\n            this._setValue(preparedValue);\n        }\n    }\n\n    private _integer(): void {\n        let preparedValue = this.el.nativeElement.value;\n        const originalValue = preparedValue;\n        const OnlyD = /\\D/g;\n        const _has_error = preparedValue.match(OnlyD);\n        if (_has_error && _has_error.length) {\n            preparedValue = preparedValue.replace(OnlyD, '');\n        }\n        if (preparedValue !== originalValue) {\n            this._setValue(preparedValue);\n        }\n    }\n\n    private _setValue(value: string): void {\n        this.el.nativeElement.value = value;\n        const cursorPosition = this.el.nativeElement.selectionEnd;\n        this.el.nativeElement.setSelectionRange(cursorPosition, cursorPosition);\n        this.el.nativeElement.dispatchEvent(new Event('input'));\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InputValidateDirective } from '@parts/directives/input-validate/input-validate.directive';\n\n@NgModule({\n    declarations: [InputValidateDirective],\n    exports: [InputValidateDirective],\n    imports: [CommonModule],\n})\nexport class InputValidateModule {}\n","import { Directive, HostListener, Input } from '@angular/core';\n\n@Directive({\n    selector: 'input[lowerCase]:not([upperCase]),textarea[lowerCase]:not([upperCase])',\n    standalone: true,\n})\nexport class LowerCaseDirective {\n    @Input() lowerCaseValue: string;\n\n    @Input() lowerCaseDisabled = false;\n\n    private getCaret(el) {\n        return {\n            start: el.selectionStart,\n            end: el.selectionEnd,\n        };\n    }\n\n    private setCaret(el, start, end) {\n        el.selectionStart = start;\n        el.selectionEnd = end;\n\n        el.focus();\n    }\n\n    private dispatchEvent(el, eventType) {\n        const event = document.createEvent('Event');\n        event.initEvent(eventType, false, false);\n        el.dispatchEvent(event);\n    }\n\n    private convertValue(el, value) {\n        el.value = value.toLowerCase();\n\n        this.dispatchEvent(el, 'input');\n    }\n\n    @HostListener('blur', ['$event.target', '$event.target.value'])\n    onBlur(el: any, value: string): void {\n        if (this.lowerCaseDisabled) {\n            return;\n        }\n        if (\n            (!this.lowerCaseValue || 'blur' === this.lowerCaseValue) &&\n            'function' === typeof value.toLowerCase &&\n            value.toLowerCase() !== value\n        ) {\n            this.convertValue(el, value);\n            this.dispatchEvent(el, 'blur'); // in case updateOn is set to blur\n        }\n    }\n\n    @HostListener('input', ['$event.target', '$event.target.value'])\n    onInput(el: any, value: string): void {\n        if (this.lowerCaseDisabled) {\n            return;\n        }\n        if (!this.lowerCaseValue && 'function' === typeof value.toLowerCase && value.toLowerCase() !== value) {\n            let { start, end } = this.getCaret(el);\n\n            if (value[0] === ' ' && start === 1 && end === 1) {\n                start = 0;\n                end = 0;\n            }\n\n            this.convertValue(el, value);\n\n            this.setCaret(el, start, end);\n        }\n    }\n}\n","export * from './tooltip.directive';\nexport * from './tooltip.module';\n","import {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    HostListener,\n    Input,\n    OnDestroy,\n    Output,\n    Renderer2,\n    SecurityContext,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Directive({\n    // eslint-disable-next-line\n    selector: '[tooltip]',\n})\nexport class TooltipDirective implements OnDestroy {\n    @HostBinding('style.cursor') cursor;\n\n    @Input('tooltip') tooltipInner: any;\n\n    @Input() placement: string;\n\n    @Input() tooltipClass: string;\n\n    @Input() timeout = 0;\n\n    @Input() timeDelay = 0;\n\n    @Input() delay = 0;\n\n    @Input() showWhenNoOverflow = true;\n\n    @Output() eventHide = new EventEmitter<boolean>();\n\n    tooltip: HTMLElement;\n\n    removeTooltipTimeout;\n\n    removeTooltipTimeoutInner;\n\n    removeTooltipTimeDelay;\n\n    private enter: (event: MouseEvent) => void;\n\n    private leave: (event: MouseEvent) => void;\n\n    constructor(private el: ElementRef, private renderer: Renderer2, private sanitizer: DomSanitizer) {}\n\n    @HostListener('mouseenter') onMouseEnter(): void {\n        if (!this.tooltipInner) {\n            return;\n        }\n        if (\n            this.showWhenNoOverflow ||\n            (!this.showWhenNoOverflow && this.el.nativeElement.offsetWidth < this.el.nativeElement.scrollWidth)\n        ) {\n            this.cursor = 'pointer';\n            if (!this.tooltip) {\n                if (this.timeDelay !== 0) {\n                    this.removeTooltipTimeDelay = setTimeout(() => {\n                        this.show();\n                    }, this.timeDelay);\n                } else {\n                    this.show();\n                }\n            } else {\n                this.cancelHide();\n            }\n        }\n    }\n\n    @HostListener('mouseleave') onMouseLeave(): void {\n        clearTimeout(this.removeTooltipTimeDelay);\n        if (this.tooltip) {\n            this.hide();\n        }\n    }\n\n    show(): void {\n        this.create();\n        this.placement = this.placement === null ? 'top' : this.placement;\n        this.setPosition(this.placement);\n    }\n\n    hide(): void {\n        this.removeTooltipTimeout = setTimeout(() => {\n            this.renderer.setStyle(this.tooltip, 'opacity', '0');\n            this.removeTooltipTimeoutInner = setTimeout(() => {\n                this.renderer.removeChild(document.body, this.tooltip);\n                this.tooltip.removeEventListener('mouseenter', this.enter);\n                this.tooltip.removeEventListener('mouseleave', this.leave);\n                this.tooltip = null;\n                this.eventHide.emit(true);\n            }, this.delay);\n        }, this.timeout);\n    }\n\n    cancelHide(): void {\n        clearTimeout(this.removeTooltipTimeout);\n        clearTimeout(this.removeTooltipTimeoutInner);\n        this.renderer.setStyle(this.tooltip, 'opacity', '1');\n    }\n\n    create(): void {\n        this.tooltip = this.renderer.createElement('div');\n        let innerBlock = this.renderer.createElement('div');\n        if (typeof this.tooltipInner === 'string') {\n            innerBlock.innerText = this.sanitizer.sanitize(SecurityContext.HTML, this.tooltipInner);\n        } else {\n            if (this.tooltipInner) {\n                innerBlock = this.tooltipInner;\n            }\n        }\n        this.renderer.addClass(innerBlock, 'tooltip-inner');\n        this.renderer.addClass(innerBlock, 'scrolled-content');\n        this.renderer.appendChild(this.tooltip, innerBlock);\n        this.renderer.appendChild(document.body, this.tooltip);\n\n        this.enter = (): void => {\n            this.cancelHide();\n        };\n        this.tooltip.addEventListener('mouseenter', this.enter);\n        this.leave = (): void => {\n            if (this.tooltip) {\n                this.hide();\n            }\n        };\n        this.tooltip.addEventListener('mouseleave', this.leave);\n\n        this.renderer.setStyle(document.body, 'position', 'relative');\n        this.renderer.setStyle(this.tooltip, 'position', 'absolute');\n        if (this.tooltipClass !== null) {\n            const classes = this.tooltipClass?.split(' ') ?? [];\n            for (let i = 0; i < classes.length; i++) {\n                this.renderer.addClass(this.tooltip, classes[i]);\n            }\n        }\n        this.renderer.setStyle(this.tooltip, 'opacity', '0');\n        this.renderer.setStyle(this.tooltip, '-webkit-transition', `opacity ${this.delay}ms`);\n        this.renderer.setStyle(this.tooltip, '-moz-transition', `opacity ${this.delay}ms`);\n        this.renderer.setStyle(this.tooltip, '-o-transition', `opacity ${this.delay}ms`);\n        this.renderer.setStyle(this.tooltip, 'transition', `opacity ${this.delay}ms`);\n        window.setTimeout(() => {\n            return this.tooltip && this.renderer.setStyle(this.tooltip, 'opacity', '1');\n        }, 0);\n    }\n\n    setPosition(placement): void {\n        const hostPos = this.el.nativeElement.getBoundingClientRect();\n        this.renderer.addClass(this.tooltip, 'ng-tooltip-' + placement);\n        const topExit =\n            hostPos.top - this.tooltip.getBoundingClientRect().height - parseInt(getComputedStyle(this.tooltip).marginTop, 10) < 0;\n        const bottomExit =\n            window.innerHeight <\n            hostPos.bottom + this.tooltip.getBoundingClientRect().height + parseInt(getComputedStyle(this.tooltip).marginTop, 10);\n\n        switch (placement) {\n            case 'top':\n                if (topExit) {\n                    this.renderer.removeClass(this.tooltip, 'ng-tooltip-' + placement);\n                    this.setPosition('bottom');\n                    return;\n                } else {\n                    this.renderer.setStyle(\n                        this.tooltip,\n                        'left',\n                        hostPos.left + (hostPos.right - hostPos.left) / 2 - this.tooltip.getBoundingClientRect().width / 2 + 'px'\n                    );\n                    this.renderer.setStyle(this.tooltip, 'top', hostPos.top - this.tooltip.getBoundingClientRect().height + 'px');\n                    this.checkSides();\n                }\n                break;\n            case 'top-left':\n                if (topExit) {\n                    this.renderer.removeClass(this.tooltip, 'ng-tooltip-' + placement);\n                    this.setPosition('bottom-left');\n                    return;\n                } else {\n                    this.renderer.setStyle(this.tooltip, 'left', hostPos.left + 'px');\n                    this.renderer.setStyle(this.tooltip, 'top', hostPos.top - this.tooltip.getBoundingClientRect().height + 'px');\n                    this.checkSides();\n                }\n                break;\n            case 'top-right':\n                if (topExit) {\n                    this.renderer.removeClass(this.tooltip, 'ng-tooltip-' + placement);\n                    this.setPosition('bottom-right');\n                    return;\n                } else {\n                    this.renderer.setStyle(this.tooltip, 'left', hostPos.right - this.tooltip.offsetWidth + 'px');\n                    this.renderer.setStyle(this.tooltip, 'top', hostPos.top - this.tooltip.getBoundingClientRect().height + 'px');\n                    this.checkSides();\n                }\n                break;\n            case 'bottom':\n                if (bottomExit) {\n                    this.renderer.removeClass(this.tooltip, 'ng-tooltip-' + placement);\n                    this.setPosition('top');\n                    return;\n                } else {\n                    this.renderer.setStyle(this.tooltip, 'top', hostPos.bottom + 'px');\n                    this.renderer.setStyle(\n                        this.tooltip,\n                        'left',\n                        hostPos.left + (hostPos.right - hostPos.left) / 2 - this.tooltip.getBoundingClientRect().width / 2 + 'px'\n                    );\n                    this.checkSides();\n                }\n                break;\n            case 'bottom-left':\n                if (bottomExit) {\n                    this.renderer.removeClass(this.tooltip, 'ng-tooltip-' + placement);\n                    this.setPosition('top-left');\n                    return;\n                } else {\n                    this.renderer.setStyle(this.tooltip, 'top', hostPos.bottom + 'px');\n                    this.renderer.setStyle(this.tooltip, 'left', hostPos.left + 'px');\n                    this.checkSides();\n                }\n                break;\n            case 'bottom-right':\n                if (bottomExit) {\n                    this.renderer.removeClass(this.tooltip, 'ng-tooltip-' + placement);\n                    this.setPosition('top-right');\n                    return;\n                } else {\n                    this.renderer.setStyle(this.tooltip, 'top', hostPos.bottom + 'px');\n                    this.renderer.setStyle(this.tooltip, 'left', hostPos.right - this.tooltip.offsetWidth + 'px');\n                    this.checkSides();\n                }\n                break;\n            case 'left':\n                this.renderer.setStyle(this.tooltip, 'left', hostPos.left - this.tooltip.getBoundingClientRect().width + 'px');\n                this.renderer.setStyle(\n                    this.tooltip,\n                    'top',\n                    hostPos.top + (hostPos.bottom - hostPos.top) / 2 - this.tooltip.getBoundingClientRect().height / 2 + 'px'\n                );\n                break;\n            case 'left-top':\n                this.renderer.setStyle(this.tooltip, 'top', hostPos.top + 'px');\n                this.renderer.setStyle(this.tooltip, 'left', hostPos.left - this.tooltip.getBoundingClientRect().width + 'px');\n                break;\n            case 'left-bottom':\n                this.renderer.setStyle(this.tooltip, 'left', hostPos.left - this.tooltip.getBoundingClientRect().width + 'px');\n                this.renderer.setStyle(this.tooltip, 'top', hostPos.bottom - this.tooltip.getBoundingClientRect().height + 'px');\n                break;\n            case 'right':\n                this.renderer.setStyle(this.tooltip, 'left', hostPos.right + 'px');\n                this.renderer.setStyle(\n                    this.tooltip,\n                    'top',\n                    hostPos.top + (hostPos.bottom - hostPos.top) / 2 - this.tooltip.getBoundingClientRect().height / 2 + 'px'\n                );\n                break;\n            case 'right-top':\n                this.renderer.setStyle(this.tooltip, 'top', hostPos.top + 'px');\n                this.renderer.setStyle(this.tooltip, 'left', hostPos.right + 'px');\n                break;\n            case 'right-bottom':\n                this.renderer.setStyle(this.tooltip, 'left', hostPos.right + 'px');\n                this.renderer.setStyle(this.tooltip, 'top', hostPos.bottom - this.tooltip.getBoundingClientRect().height + 'px');\n                break;\n        }\n    }\n\n    checkSides(): void {\n        if (this.tooltip.getBoundingClientRect().left < 0) {\n            this.renderer.setStyle(this.tooltip, 'left', 0);\n        }\n        if (this.tooltip.getBoundingClientRect().right > window.innerWidth) {\n            this.renderer.setStyle(this.tooltip, 'left', window.innerWidth - this.tooltip.getBoundingClientRect().width + 'px');\n        }\n    }\n\n    ngOnDestroy(): void {\n        clearTimeout(this.removeTooltipTimeout);\n        clearTimeout(this.removeTooltipTimeoutInner);\n        clearTimeout(this.removeTooltipTimeDelay);\n        if (this.tooltip) {\n            this.renderer.removeChild(document.body, this.tooltip);\n            this.tooltip = null;\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TooltipDirective } from './tooltip.directive';\n\n@NgModule({\n    declarations: [TooltipDirective],\n    imports: [CommonModule],\n    exports: [TooltipDirective],\n})\nexport class TooltipModule {}\n","import { Component, Directive, inject, OnDestroy, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { VariablesService } from '../services/variables.service';\n\n@Component({\n    selector: 'app-hidden',\n    template: `******`,\n    standalone: true,\n})\nclass HiddenComponent {}\n\n@Directive({\n    selector: '[appVisibilityBalance]',\n    standalone: true,\n})\nexport class VisibilityBalanceDirective implements OnInit, OnDestroy {\n    private _variablesService: VariablesService = inject(VariablesService);\n    private _templateRef: TemplateRef<any> = inject(TemplateRef);\n    private _viewContainer: ViewContainerRef = inject(ViewContainerRef);\n    private _destroy$: Subject<void> = new Subject<void>();\n\n    ngOnInit(): void {\n        this._variablesService.visibilityBalance$.pipe(distinctUntilChanged(), takeUntil(this._destroy$)).subscribe({\n            next: (visibility: boolean) => {\n                this._viewContainer.clear();\n                if (visibility) {\n                    this._viewContainer.createEmbeddedView(this._templateRef);\n                } else {\n                    this._viewContainer.createComponent(HiddenComponent);\n                }\n            },\n        });\n    }\n\n    ngOnDestroy(): void {\n        this._destroy$.next();\n        this._destroy$.complete();\n    }\n}\n","import { Subtransfer, Transaction } from '@api/models/transaction.model';\nimport { Wallet } from '@api/models/wallet.model';\nimport { intToMoney } from '@parts/functions/int-to-money';\nimport { AssetInfo } from '@api/models/assets.model';\nimport { zanoAssetInfo } from '@parts/data/assets';\nimport { isFinalizator, isInitiator, isSelfTransaction, isSwapTransaction } from '@parts/functions/identify-transaction';\n\nexport interface AmountItem {\n    amount: string;\n    ticker: string;\n}\n\nexport type AmountItems = AmountItem[];\n\nexport const getAmountItems = (transaction: Transaction, wallet: Wallet): AmountItems => {\n    const { subtransfers, fee } = transaction;\n\n    const items: { amount: string; ticker: string }[] = [];\n\n    if (!subtransfers?.length) {\n        items.push({ amount: '0', ticker: zanoAssetInfo.ticker });\n        return items;\n    }\n\n    if (isInitiator(transaction) && !Boolean(subtransfers.find(({ asset_id }) => asset_id === zanoAssetInfo.asset_id))) {\n        const preparedAmount: string = intToMoney(fee, zanoAssetInfo.decimal_point);\n        items.push({ amount: preparedAmount, ticker: zanoAssetInfo.ticker });\n        return items;\n    }\n\n    subtransfers.forEach((subtransfer: Subtransfer) => {\n        const { asset_id, amount, is_income } = subtransfer;\n        const assetInfo: AssetInfo | undefined = wallet.allAssetsInfo.find(v => asset_id === v.asset_id);\n\n        if (!assetInfo) {\n            if (amount.toNumber() === 0) {\n                return;\n            }\n            // TODO: Clarify what the amount will look like if you don’t\n            //  find an asset from which you need to take the decimal_point\n            const preparedAmount: string = (is_income ? amount : amount.negated()).toString();\n            items.push({ amount: preparedAmount, ticker: '***' });\n            return;\n        }\n\n        const { ticker, decimal_point } = assetInfo;\n\n        if (asset_id !== zanoAssetInfo.asset_id) {\n            if (amount.toNumber() === 0) {\n                return;\n            }\n\n            const preparedAmount: string = intToMoney(is_income ? amount : amount.negated(), decimal_point);\n            items.push({ amount: preparedAmount, ticker });\n            return;\n        }\n\n        if (asset_id === zanoAssetInfo.asset_id) {\n            const { address } = wallet;\n\n            const selfTransaction: boolean = isSelfTransaction(transaction, address);\n            const swapTransaction: boolean = isSwapTransaction(transaction);\n            const finalizator: boolean = isFinalizator(transaction);\n            const initiator: boolean = isInitiator(transaction);\n\n            const condition_1: boolean = !amount.eq(fee ?? 0) || selfTransaction || (swapTransaction && finalizator);\n            const condition_2: boolean = amount.toNumber() !== 0;\n\n            if (!is_income ? condition_1 : condition_2) {\n                let preparedAmount!: string;\n\n                if (is_income) {\n                    preparedAmount = intToMoney(initiator ? amount.plus(fee) : amount, decimal_point);\n                } else {\n                    preparedAmount = intToMoney((initiator ? amount.minus(fee ?? 0) : amount).negated(), decimal_point);\n                }\n\n                items.push({ amount: preparedAmount, ticker });\n                return;\n            }\n        }\n    });\n\n    return items;\n};\n","export const hasOwnProperty = (obj: object, key: string): boolean => {\n    if (Boolean(obj) && Boolean(key)) {\n        return Object.prototype.hasOwnProperty.call(obj, key);\n    }\n    return false;\n};\n","import { Transaction } from '@api/models/transaction.model';\nimport { zanoAssetInfo } from '@parts/data/assets';\n\nexport const isInitiator = (transaction: Transaction): boolean => {\n    const {\n        employed_entries: { spent = [] },\n    } = transaction;\n    return Boolean(\n        spent?.find(({ index }) => {\n            return index === 0;\n        })\n    );\n};\n\nexport const isFinalizator = (transaction: Transaction): boolean => {\n    return !isInitiator(transaction);\n};\n\nexport const isSelfTransaction = (transaction: Transaction, address: string): boolean => {\n    const {\n        remote_addresses,\n        employed_entries: { receive, spent },\n        subtransfers,\n        fee,\n    } = transaction;\n\n    const condition1 = remote_addresses?.includes(address);\n    const condition2 = [...(receive ?? []), ...(spent ?? [])].map(({ asset_id }) => asset_id === zanoAssetInfo.asset_id).every(Boolean);\n    const condition3 = subtransfers?.length === 1 && subtransfers[0].asset_id === zanoAssetInfo.asset_id && subtransfers[0].amount.eq(fee);\n\n    return condition1 && condition2 && condition3;\n};\n\nexport const isSwapTransaction = (transaction: Transaction): boolean => {\n    const { subtransfers } = transaction;\n    const arr = subtransfers.map(({ is_income }) => is_income);\n    const condition1 = arr.some(value => value);\n    const condition2 = arr.some(value => !value);\n    return condition1 && condition2;\n};\n","import { BigNumber } from 'bignumber.js';\n\nexport const intToMoney = (value: number | string | BigNumber, decimal_point?: any): string => {\n    if (value === 0 || value === undefined) {\n        return '0';\n    }\n    let maxFraction = 12;\n    if (decimal_point !== undefined && decimal_point !== null) {\n        maxFraction = parseInt(decimal_point, 10);\n    }\n    const power = Math.pow(10, maxFraction);\n    let str = new BigNumber(value).div(power).toFixed(maxFraction, 1);\n\n    if (maxFraction != 0) {\n        for (let i = str.length - 1; i >= 0; i--) {\n            if (str[i] !== '0') {\n                str = str.substr(0, i + 1);\n                break;\n            }\n        }\n    }\n\n    if (str.length >= 21) {\n        const hasMinus = str.indexOf('-') !== -1;\n        const hasDot = str.indexOf('.') !== -1;\n        const sliceFrom = 0;\n        let sliceTo = 20;\n\n        if (hasDot) {\n            sliceTo += 1;\n\n            if (decimal_point == 20) {\n                sliceTo += 1;\n            }\n        }\n\n        if (hasMinus) {\n            sliceTo += 1;\n        }\n\n        str = str.slice(sliceFrom, sliceTo);\n    }\n    if (str[str.length - 1] === '.') {\n        str = str.substr(0, str.length - 1);\n    }\n    return str;\n};\n","import { BigNumber } from 'bignumber.js';\n\nexport const moneyToInt = (value: string, decimal_point?: any): BigNumber => {\n    const CURRENCY_DISPLAY_DECIMAL_POINT = decimal_point ?? 12;\n    let result: BigNumber = new BigNumber('');\n    if (value) {\n        let am_str = value.trim();\n        const point_index = am_str.indexOf('.');\n        let fraction_size = 0;\n        if (-1 !== point_index) {\n            fraction_size = am_str.length - point_index - 1;\n            while (CURRENCY_DISPLAY_DECIMAL_POINT < fraction_size && '0' === am_str[am_str.length - 1]) {\n                am_str = am_str.slice(0, am_str.length - 1);\n                --fraction_size;\n            }\n\n            if (CURRENCY_DISPLAY_DECIMAL_POINT < fraction_size) {\n                am_str = am_str.slice(0, point_index) + am_str.slice(point_index + 1, CURRENCY_DISPLAY_DECIMAL_POINT);\n            } else {\n                am_str = am_str.slice(0, point_index) + am_str.slice(point_index + 1, am_str.length);\n            }\n        } else {\n            fraction_size = 0;\n        }\n        if (!am_str.length) {\n            return undefined;\n        }\n        if (am_str.length >= 21) {\n            am_str = am_str.slice(0, am_str.indexOf('.') !== -1 ? (decimal_point == 20 ? 22 : 21) : decimal_point == 20 ? 21 : 20);\n        }\n        if (am_str[am_str.length - 1] === '.') {\n            am_str = am_str.substr(0, am_str.length - 1);\n        }\n        if (fraction_size < CURRENCY_DISPLAY_DECIMAL_POINT) {\n            for (let i = 0; i !== CURRENCY_DISPLAY_DECIMAL_POINT - fraction_size; i++) {\n                am_str = am_str + '0';\n            }\n        }\n        result = new BigNumber(am_str).integerValue();\n    }\n    return result;\n};\n","import { Component, inject } from '@angular/core';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { AssetInfo } from '@api/models/assets.model';\nimport { ZanoAssetInfo, zanoAssetInfo } from '@parts/data/assets';\nimport { MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IntToMoneyPipeModule } from '@parts/pipes';\n\n@Component({\n    selector: 'app-asset-details',\n    templateUrl: './asset-details.component.html',\n    styleUrls: ['./asset-details.component.scss'],\n    standalone: true,\n    imports: [CommonModule, TranslateModule, IntToMoneyPipeModule, MatDialogModule],\n})\nexport class AssetDetailsComponent {\n    public readonly zanoAssetInfo: ZanoAssetInfo = zanoAssetInfo;\n\n    public readonly data: { assetInfo: AssetInfo; title?: string } = inject(MAT_DIALOG_DATA);\n\n    public readonly variablesService: VariablesService = inject(VariablesService);\n}\n","<h2 mat-dialog-title>{{ data?.title ?? 'ASSETS.MODALS.ASSET_DETAILS.TITLE' | translate }}</h2>\n\n<mat-dialog-content>\n    <ng-container *ngIf=\"data.assetInfo as assetInfo; else templateEmpty\">\n        <table class=\"rounded-corners\">\n            <tbody>\n                <tr>\n                    <td>{{ 'ASSETS.MODALS.ASSET_DETAILS.LABELS.NAME' | translate }}</td>\n                    <td>{{ assetInfo.full_name }}</td>\n                </tr>\n                <tr>\n                    <td>{{ 'ASSETS.MODALS.ASSET_DETAILS.LABELS.TICKER' | translate }}</td>\n                    <td>{{ assetInfo.ticker }}</td>\n                </tr>\n                <tr>\n                    <td>{{ 'ASSETS.MODALS.ASSET_DETAILS.LABELS.OWNER' | translate }}</td>\n                    <td (contextmenu)=\"variablesService.onContextMenuOnlyCopy($event, assetInfo.owner)\">\n                        {{ assetInfo.owner }}\n                    </td>\n                </tr>\n                <tr>\n                    <td>{{ 'ASSETS.MODALS.ASSET_DETAILS.LABELS.ID' | translate }}</td>\n                    <td (contextmenu)=\"variablesService.onContextMenuOnlyCopy($event, assetInfo.asset_id)\">\n                        {{ assetInfo.asset_id }}\n                    </td>\n                </tr>\n                <tr>\n                    <td>{{ 'ASSETS.MODALS.ASSET_DETAILS.LABELS.CURRENT_SUPPLY' | translate }}</td>\n                    <td>\n                        {{\n                            (assetInfo.asset_id === zanoAssetInfo.asset_id\n                                ? variablesService.zano_current_supply ?? 'Unknown'\n                                : assetInfo.current_supply\n                            ) | intToMoney : assetInfo.decimal_point\n                        }}\n                    </td>\n                </tr>\n                <tr>\n                    <td>{{ 'ASSETS.MODALS.ASSET_DETAILS.LABELS.MAX_SUPPLE' | translate }}</td>\n                    <td>\n                        {{\n                            assetInfo.asset_id === zanoAssetInfo.asset_id\n                                ? 'Uncapped'\n                                : (assetInfo.total_max_supply | intToMoney : assetInfo.decimal_point)\n                        }}\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </ng-container>\n\n    <ng-template #templateEmpty>No data</ng-template>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n    <button class=\"outline big w-100\" mat-dialog-close type=\"button\">\n        {{ 'MODALS.OK' | translate }}\n    </button>\n</mat-dialog-actions>\n","import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nexport interface ConfirmModalData {\n    title: string;\n    message?: string;\n    buttons?: Partial<{\n        close: string;\n        submit: string;\n    }>;\n}\n\n@Component({\n    selector: 'app-confirm-modal',\n    templateUrl: './confirm-modal.component.html',\n    styleUrls: ['./confirm-modal.component.scss'],\n})\nexport class ConfirmModalComponent {\n    data: ConfirmModalData = inject(MAT_DIALOG_DATA);\n\n    private _dialogRef: MatDialogRef<ConfirmModalComponent> = inject(MatDialogRef);\n\n    get title(): string {\n        const { title } = this.data;\n        return title;\n    }\n\n    get message(): string {\n        const { message } = this.data;\n        return message;\n    }\n\n    submit(): void {\n        this._dialogRef.close(true);\n    }\n}\n","<mat-dialog-content>\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"1rem\">\n        <mat-icon svgIcon=\"zano-info-v2\"></mat-icon>\n\n        <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\n            <h3 class=\"title\">{{ title | translate }}</h3>\n            <p class=\"message\">{{ message | translate }}</p>\n        </div>\n    </div>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n    <div fxFlex=\"1 1 auto\" fxLayout=\"row nowrap\" fxLayoutGap=\"1rem\">\n        <button mat-dialog-close class=\"outline big w-100\" type=\"button\">\n            {{ data?.buttons?.close ?? 'MODALS.CANCEL' | translate }}\n        </button>\n        <button appAutofocus (click)=\"submit()\" class=\"primary big w-100\" type=\"button\">\n            {{ data?.buttons?.submit ?? 'MODALS.OK' | translate }}\n        </button>\n    </div>\n</mat-dialog-actions>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { AutoFocusDirective } from '@parts/directives/autofocus.directive';\nimport { ConfirmModalComponent } from '@parts/modals/confirm-modal/confirm-modal.component';\n\n@NgModule({\n    declarations: [ConfirmModalComponent],\n    imports: [CommonModule, TranslateModule, FlexLayoutModule, MatIconModule, MatDialogModule, AutoFocusDirective],\n    exports: [ConfirmModalComponent],\n})\nexport class ConfirmModalModule {}\n","import { Component, inject } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CommonModule } from '@angular/common';\nimport { MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';\nimport { FlexModule } from '@angular/flex-layout';\nimport { MatIconModule } from '@angular/material/icon';\n\n@Component({\n    selector: 'app-modal-container',\n    templateUrl: './modal-container.component.html',\n    styleUrls: ['./modal-container.component.scss'],\n    standalone: true,\n    imports: [CommonModule, MatDialogModule, TranslateModule, FlexModule, MatIconModule],\n})\nexport class ModalContainerComponent {\n    public readonly data: { type: 'error' | 'info' | 'success', message: any } = inject(MAT_DIALOG_DATA);\n}\n","<mat-dialog-content>\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"1rem\">\n        <mat-icon style=\"width: 3rem; height: 3rem\" [svgIcon]=\"'zano-system-modal-' + data.type\"></mat-icon>\n        <div class=\"message-container\">\n            <h3 class=\"title\">{{ 'MODALS.' + data.type.toUpperCase() | translate }}</h3>\n            <p [innerHTML]=\"data.message | translate\" class=\"message\"></p>\n        </div>\n    </div>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"center\">\n    <button class=\"primary max-w-19-rem w-100 big\" mat-dialog-close type=\"button\">\n        {{ 'MODALS.OK' | translate }}\n    </button>\n</mat-dialog-actions>\n","import { Component, HostBinding, Input, NgZone, OnDestroy, OnInit, Renderer2 } from '@angular/core';\nimport { VariablesService } from '../../services/variables.service';\nimport { Wallet } from '@api/models/wallet.model';\nimport { BackendService } from '@api/services/backend.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ModalService } from '../../services/modal.service';\nimport { WalletsService } from '@parts/services/wallets.service';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n    selector: 'app-open-wallet-modal',\n    template: `\n        <div class=\"modal open-wallet-modal-wrapper scrolled-content\">\n            <div class=\"wrapper w-100\">\n                <h3 class=\"mb-2\">{{ 'OPEN_WALLET.MODAL.TITLE' | translate }}</h3>\n\n                <div class=\"word-break-break-all mb-2\">{{ wallet.name }}</div>\n                <div class=\"word-break-break-all mb-2\">{{ wallet.path }}</div>\n\n                <form (ngSubmit)=\"openWallet()\" class=\"form\" fxLayout=\"column\">\n                    <div *ngIf=\"!wallet.notFound\" class=\"form__field\">\n                        <label for=\"password\">{{ 'OPEN_WALLET.MODAL.LABEL' | translate }}</label>\n                        <input\n                            [(ngModel)]=\"wallet.pass\"\n                            [class.invalid]=\"isWrongPassword$ | async\"\n                            (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\n                            (focusin)=\"isWrongPassword$.next(false)\"\n                            class=\"form__field--input\"\n                            id=\"password\"\n                            name=\"password\"\n                            type=\"password\"\n                        />\n                        <div *ngIf=\"wallet.notFound\" class=\"error\">\n                            {{ 'OPEN_WALLET.MODAL.NOT_FOUND' | translate }}\n                        </div>\n                        <div *ngIf=\"isWrongPassword$ | async\" class=\"error\">\n                            {{ 'ERRORS.WRONG_PASSWORD' | translate }}\n                        </div>\n                    </div>\n\n                    <div fxLayout=\"row nowrap\" fxLayoutGap=\"1rem\">\n                        <button [disabled]=\"wallet.notFound || isWrongPassword$ | async\" class=\"primary big w-100\" type=\"submit\">\n                            {{ 'OPEN_WALLET.MODAL.OPEN' | translate }}\n                        </button>\n                        <button (click)=\"skipWallet()\" class=\"outline big w-100\" type=\"button\">\n                            {{ 'OPEN_WALLET.MODAL.SKIP' | translate }}\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    `,\n    styleUrls: ['./open-wallet-modal.component.scss'],\n})\nexport class OpenWalletModalComponent implements OnInit, OnDestroy {\n    @HostBinding('class.modal-overlay') modalOverlay = true;\n\n    @Input() wallets;\n\n    isWrongPassword$ = new BehaviorSubject<boolean>(false);\n\n    wallet = {\n        name: '',\n        path: '',\n        pass: '',\n        notFound: false,\n        emptyPass: false,\n    };\n\n    constructor(\n        public variablesService: VariablesService,\n        public walletsService: WalletsService,\n        private backend: BackendService,\n        private translate: TranslateService,\n        private modalService: ModalService,\n        private ngZone: NgZone,\n        private renderer: Renderer2\n    ) {}\n\n    ngOnInit(): void {\n        this.renderer.addClass(document.body, 'no-scroll');\n        if (this.wallets.length) {\n            this.wallet = this.wallets[0];\n            this.wallet.pass = '';\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.renderer.removeClass(document.body, 'no-scroll');\n    }\n\n    openWallet(): void {\n        if (this.wallets.length === 0) {\n            return;\n        }\n        this.backend.openWallet(\n            this.wallet.path,\n            this.wallet.pass,\n            this.variablesService.count,\n            false,\n            (open_status, open_data, open_error) => {\n                if (open_error === 'WRONG_PASSWORD') {\n                    this.ngZone.run(() => {\n                        this.isWrongPassword$.next(true);\n                    });\n                }\n                if (open_error && open_error === 'FILE_NOT_FOUND') {\n                    this.ngZone.run(() => {\n                        this.wallet.notFound = true;\n                    });\n                    let error_translate = this.translate.instant('OPEN_WALLET.FILE_NOT_FOUND1');\n                    error_translate += ':<br>' + this.wallet.path;\n                    error_translate += this.translate.instant('OPEN_WALLET.FILE_NOT_FOUND2');\n                    this.modalService.prepareModal('error', error_translate);\n                } else {\n                    if (open_status || open_error === 'FILE_RESTORED') {\n                        let exists = false;\n                        this.variablesService.wallets.forEach(wallet => {\n                            if (wallet.address === open_data['wi'].address) {\n                                exists = true;\n                            }\n                        });\n\n                        if (exists) {\n                            this.modalService.prepareModal('error', 'OPEN_WALLET.WITH_ADDRESS_ALREADY_OPEN');\n                            this.backend.closeWallet(open_data.wallet_id);\n                        } else {\n                            const new_wallet = new Wallet(\n                                open_data.wallet_id,\n                                this.wallet.name,\n                                this.wallet.pass,\n                                open_data['wi'].path,\n                                open_data['wi'].address,\n                                open_data['wi'].balance,\n                                open_data['wi'].unlocked_balance,\n                                open_data['wi'].mined_total,\n                                open_data['wi'].tracking_hey\n                            );\n                            new_wallet.alias = this.backend.getWalletAlias(new_wallet.address);\n                            new_wallet.is_auditable = open_data['wi'].is_auditable;\n                            new_wallet.is_watch_only = open_data['wi'].is_watch_only;\n                            new_wallet.currentPage = 1;\n                            new_wallet.exclude_mining_txs = false;\n                            if (open_data.recent_history && open_data.recent_history.history) {\n                                new_wallet.total_history_item = open_data.recent_history.total_history_items;\n                                new_wallet.totalPages = Math.ceil(\n                                    open_data.recent_history.total_history_items / this.variablesService.count\n                                );\n                                new_wallet.totalPages > this.variablesService.maxPages\n                                    ? (new_wallet.pages = new Array(5).fill(1).map((value, index) => value + index))\n                                    : (new_wallet.pages = new Array(new_wallet.totalPages).fill(1).map((value, index) => value + index));\n                                new_wallet.prepareHistory(open_data.recent_history.history);\n                            } else {\n                                new_wallet.total_history_item = 0;\n                                new_wallet.pages = new Array(1).fill(1);\n                                new_wallet.totalPages = 1;\n                            }\n                            this.walletsService.addWallet(new_wallet);\n                            this.backend.runWallet(open_data.wallet_id);\n                            this.skipWallet();\n                            this.isWrongPassword$.next(false);\n                        }\n                    }\n                }\n            }\n        );\n    }\n\n    skipWallet(): void {\n        this.ngZone.run(() => {\n            if (this.wallets.length) {\n                this.wallets.splice(0, 1);\n                this.ngOnInit();\n            }\n        });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ContractStatusMessagesPipe } from '@parts/pipes/contract-status-messages-pipe/contract-status-messages.pipe';\n\n@NgModule({\n    declarations: [ContractStatusMessagesPipe],\n    exports: [ContractStatusMessagesPipe],\n    providers: [ContractStatusMessagesPipe],\n    imports: [CommonModule],\n})\nexport class ContractStatusMessagesPipeModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Pipe({\n    name: 'contractStatusMessages',\n})\nexport class ContractStatusMessagesPipe implements PipeTransform {\n    constructor(private translate: TranslateService) {}\n\n    getStateSeller(stateNum: number): string {\n        const state = { part1: '', part2: '' };\n        switch (stateNum) {\n            case 1:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.SELLER.NEW_CONTRACT');\n                break;\n            case 110:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.SELLER.IGNORED');\n                break;\n            case 201:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.SELLER.ACCEPTED');\n                state.part2 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.SELLER.WAIT');\n                break;\n            case 2:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.SELLER.WAITING_BUYER');\n                break;\n            case 3:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.SELLER.COMPLETED');\n                break;\n            case 4:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.SELLER.NOT_RECEIVED');\n                state.part2 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.SELLER.NULLIFIED');\n                break;\n            case 5:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.SELLER.PROPOSAL_CANCEL');\n                break;\n            case 601:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.SELLER.BEING_CANCELLED');\n                break;\n            case 6:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.SELLER.CANCELLED');\n                break;\n            case 130:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.SELLER.IGNORED_CANCEL');\n                break;\n            case 140:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.SELLER.EXPIRED');\n                break;\n        }\n        return state.part1 + (state.part2.length ? '. ' + state.part2 : '');\n    }\n\n    getStateBuyer(stateNum: number): string {\n        const state = { part1: '', part2: '' };\n        switch (stateNum) {\n            case 1:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.WAITING');\n                break;\n            case 110:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.IGNORED');\n                break;\n            case 201:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.ACCEPTED');\n                state.part2 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.WAIT');\n                break;\n            case 2:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.ACCEPTED');\n                break;\n            case 120:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.WAITING_SELLER');\n                break;\n            case 3:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.COMPLETED');\n                break;\n            case 4:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.NOT_RECEIVED');\n                state.part2 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.NULLIFIED');\n                break;\n            case 5:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.WAITING_CANCEL');\n                break;\n            case 601:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.BEING_CANCELLED');\n                break;\n            case 6:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.CANCELLED');\n                break;\n            case 130:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.IGNORED_CANCEL');\n                break;\n            case 140:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.EXPIRED');\n                break;\n        }\n        return state.part1 + (state.part2.length ? '. ' + state.part2 : '');\n    }\n\n    transform(state: number, is_a?: boolean): any {\n        if (is_a) {\n            return this.getStateBuyer(state);\n        } else {\n            return this.getStateSeller(state);\n        }\n    }\n}\n","export * from './contract-status-messages-pipe.module';\nexport * from './contract-status-messages.pipe';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ContractTimeLeftPipe } from '@parts/pipes/contract-time-left-pipe/contract-time-left.pipe';\n\n@NgModule({\n    declarations: [ContractTimeLeftPipe],\n    exports: [ContractTimeLeftPipe],\n    providers: [ContractTimeLeftPipe],\n    imports: [CommonModule],\n})\nexport class ContractTimeLeftPipeModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { VariablesService } from '../../services/variables.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Pipe({\n    name: 'contractTimeLeft',\n})\nexport class ContractTimeLeftPipe implements PipeTransform {\n    constructor(private service: VariablesService, private translate: TranslateService) {}\n\n    transform(value: any, arg?: any): any {\n        const time = parseInt(((parseInt(value, 10) - this.service.exp_med_ts) / 3600).toFixed(0), 10);\n        const type = arg || 0;\n        if (time === 0) {\n            return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_LESS_ONE');\n        }\n        if (this.service.settings.language === 'en') {\n            if (type === 0) {\n                if (time === 1) {\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_ONE', {\n                        time: time,\n                    });\n                } else {\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_MANY', {\n                        time: time,\n                    });\n                }\n            } else if (type === 1) {\n                if (time === 1) {\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_ONE_RESPONSE', { time: time });\n                } else {\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_MANY_RESPONSE', { time: time });\n                }\n            } else if (type === 2) {\n                if (time === 1) {\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_ONE_WAITING', { time: time });\n                } else {\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_MANY_WAITING', { time: time });\n                }\n            }\n        } else {\n            const rest = time % 10;\n            if (type === 0) {\n                if ((time > 20 && rest === 1) || time === 1) {\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_ONE', {\n                        time: time,\n                    });\n                } else if ((time > 1 && time < 5) || (time > 20 && (rest === 2 || rest === 3 || rest === 4))) {\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_MANY', {\n                        time: time,\n                    });\n                } else {\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_MANY_ALT', { time: time });\n                }\n            } else if (type === 1) {\n                if ((time > 20 && rest === 1) || time === 1) {\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_ONE_RESPONSE', { time: time });\n                } else if ((time > 1 && time < 5) || (time > 20 && (rest === 2 || rest === 3 || rest === 4))) {\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_MANY_RESPONSE', { time: time });\n                } else {\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_MANY_ALT_RESPONSE', { time: time });\n                }\n            } else if (type === 2) {\n                if ((time > 20 && rest === 1) || time === 1) {\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_ONE_WAITING', { time: time });\n                } else if ((time > 1 && time < 5) || (time > 20 && (rest === 2 || rest === 3 || rest === 4))) {\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_MANY_WAITING', { time: time });\n                } else {\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_MANY_ALT_WAITING', { time: time });\n                }\n            }\n        }\n        return null;\n    }\n}\n","export * from './contract-time-left-pipe.module';\nexport * from './contract-time-left.pipe';\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Transaction } from '@api/models/transaction.model';\nimport { Wallet } from '@api/models/wallet.model';\nimport { AmountItems, getAmountItems } from '@parts/functions/get-amount-items';\n\n@Pipe({\n    name: 'getAmountItems',\n    standalone: true,\n})\nexport class GetAmountItemsPipe implements PipeTransform {\n    transform(transaction: Transaction, wallet: Wallet): AmountItems {\n        return getAmountItems(transaction, wallet);\n    }\n}\n","import { inject, Pipe, PipeTransform } from '@angular/core';\nimport { AssetInfo } from '@api/models/assets.model';\nimport { WalletsService } from '@parts/services/wallets.service';\n@Pipe({\n    name: 'getAssetInfo',\n    standalone: true,\n})\nexport class GetAssetInfoPipe implements PipeTransform {\n    private walletsService: WalletsService = inject(WalletsService);\n\n    transform(value: AssetInfo['asset_id']): AssetInfo | undefined {\n        return this.walletsService.currentWallet?.allAssetsInfo.find(({ asset_id }) => asset_id === value);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HistoryTypeMessagesPipe } from '@parts/pipes/history-type-messages-pipe/history-type-messages.pipe';\n\n@NgModule({\n    declarations: [HistoryTypeMessagesPipe],\n    exports: [HistoryTypeMessagesPipe],\n    providers: [HistoryTypeMessagesPipe],\n    imports: [CommonModule],\n})\nexport class HistoryTypeMessagesPipeModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { hasOwnProperty } from '../../functions/has-own-property';\n\n@Pipe({\n    name: 'historyTypeMessages',\n})\nexport class HistoryTypeMessagesPipe implements PipeTransform {\n    constructor(private translate: TranslateService) {}\n\n    transform(item: any): any {\n        if (item.tx_type === 0) {\n            if (item.remote_addresses && item.remote_addresses[0]) {\n                return item.remote_addresses[0];\n            } else {\n                if (item.is_income) {\n                    return this.translate.instant('HISTORY.TYPE_MESSAGES.HIDDEN');\n                } else {\n                    return this.translate.instant('HISTORY.TYPE_MESSAGES.UNDEFINED');\n                }\n            }\n        } else if (item.tx_type === 6 && item.height === 0) {\n            return 'unknown';\n        } else if (item.tx_type === 9) {\n            if (hasOwnProperty(item, 'contract') && item.contract[0].is_a) {\n                return this.translate.instant('HISTORY.TYPE_MESSAGES.COMPLETE_BUYER');\n            } else {\n                return this.translate.instant('HISTORY.TYPE_MESSAGES.COMPLETE_SELLER');\n            }\n        } else {\n            switch (item.tx_type) {\n                // case 0:\n                //   return '';\n                // case 1:\n                //   return '';\n                // case 2:\n                //   return '';\n                // case 3:\n                //   return '';\n                case 4:\n                    return this.translate.instant('HISTORY.TYPE_MESSAGES.CREATE_ALIAS');\n                case 5:\n                    return this.translate.instant('HISTORY.TYPE_MESSAGES.UPDATE_ALIAS');\n                case 6:\n                    return item.employed_entries?.spent?.length\n                        ? this.translate.instant('HISTORY.TYPE_MESSAGES.POS_REWARD')\n                        : this.translate.instant('HISTORY.TYPE_MESSAGES.POW_REWARD');\n                case 7:\n                    if (!item.subtransfers || !item.subtransfers.length) {\n                        return this.translate.instant('HISTORY.TYPE_MESSAGES.SERVICE_TRANSACTIONS');\n                    } else {\n                        return this.translate.instant('HISTORY.TYPE_MESSAGES.CREATE_CONTRACT');\n                    }\n                case 8:\n                    return this.translate.instant('HISTORY.TYPE_MESSAGES.PLEDGE_CONTRACT');\n                // case 9:\n                //   return '';\n                case 10:\n                    return this.translate.instant('HISTORY.TYPE_MESSAGES.NULLIFY_CONTRACT');\n                case 11:\n                    return this.translate.instant('HISTORY.TYPE_MESSAGES.PROPOSAL_CANCEL_CONTRACT');\n                case 12:\n                    return this.translate.instant('HISTORY.TYPE_MESSAGES.CANCEL_CONTRACT');\n            }\n        }\n\n        return this.translate.instant('HISTORY.TYPE_MESSAGES.UNDEFINED');\n    }\n}\n","export * from './history-type-messages-pipe.module';\nexport * from './history-type-messages.pipe';\n","export * from './contract-status-messages-pipe';\nexport * from './contract-time-left-pipe';\nexport * from './history-type-messages-pipe';\nexport * from './int-to-money-pipe';\nexport * from './is-available-alias-name-pipe';\nexport * from './money-to-int-pipe';\nexport * from './safe-html-pipe';\nexport * from './get-asset-info.pipe';\nexport * from './short-string.pipe';\n","export * from './int-to-money-pipe.module';\nexport * from './int-to-money.pipe';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IntToMoneyPipe } from '@parts/pipes/int-to-money-pipe/int-to-money.pipe';\n\n@NgModule({\n    declarations: [IntToMoneyPipe],\n    exports: [IntToMoneyPipe],\n    providers: [IntToMoneyPipe],\n    imports: [CommonModule],\n})\nexport class IntToMoneyPipeModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { VariablesService } from '../../services/variables.service';\nimport { intToMoney } from '@parts/functions/int-to-money';\nimport { BigNumber } from 'bignumber.js';\n\n@Pipe({\n    name: 'intToMoney',\n})\nexport class IntToMoneyPipe implements PipeTransform {\n    constructor(private variablesService: VariablesService) {}\n\n    transform(value: number | string | BigNumber, decimal_point = this.variablesService.decimal_point): any {\n        return intToMoney(value, decimal_point);\n    }\n}\n","export * from './is-available-alias-name-pipe.module';\nexport * from './is-available-alias-name.pipe';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IsAvailableAliasNamePipe } from './is-available-alias-name.pipe';\n\n@NgModule({\n    declarations: [IsAvailableAliasNamePipe],\n    exports: [IsAvailableAliasNamePipe],\n    providers: [IsAvailableAliasNamePipe],\n    imports: [CommonModule],\n})\nexport class IsAvailableAliasNamePipeModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Alias } from '@api/models/alias.model';\n\n@Pipe({\n    name: 'isAvailableAliasName',\n})\nexport class IsAvailableAliasNamePipe implements PipeTransform {\n    transform(alias: Partial<Alias> | null | undefined): boolean {\n        return (Boolean(alias) && Boolean(alias.name) && alias.name.length >= 2 && alias.name.length <= 6) || false;\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\n@Pipe({\n  name: 'isVisibleControlError',\n  standalone: true\n})\nexport class IsVisibleControlErrorPipe implements PipeTransform {\n\n  transform(control: AbstractControl | null): boolean {\n      if (!control) {\n          return false;\n      }\n      return control.invalid && (control.dirty || control.touched);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isInitiator } from '@parts/functions/identify-transaction';\nimport { Transaction } from '@api/models/transaction.model';\n\n@Pipe({\n    name: 'isVisibleFee',\n    standalone: true,\n})\nexport class IsVisibleFeePipe implements PipeTransform {\n    transform(transaction: Transaction): boolean {\n        const { subtransfers } = transaction;\n        const condition1 = subtransfers ? !subtransfers?.every(({ is_income }) => is_income) : false;\n        const condition2 = isInitiator(transaction);\n        return condition1 && condition2;\n    }\n}\n","export * from './money-to-int-pipe.module';\nexport * from './money-to-int.pipe';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MoneyToIntPipe } from '@parts/pipes/money-to-int-pipe/money-to-int.pipe';\n\n@NgModule({\n    declarations: [MoneyToIntPipe],\n    exports: [MoneyToIntPipe],\n    providers: [MoneyToIntPipe],\n    imports: [CommonModule],\n})\nexport class MoneyToIntPipeModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { VariablesService } from '../../services/variables.service';\nimport { moneyToInt } from '@parts/functions/money-to-int';\n\n@Pipe({\n    name: 'moneyToInt',\n})\nexport class MoneyToIntPipe implements PipeTransform {\n    constructor(private variablesService: VariablesService) {}\n\n    transform(value: any): any {\n        return moneyToInt(value, this.variablesService.decimal_point);\n    }\n}\n","export * from './safe-html-pipe.module';\nexport * from './safe-html.pipe';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SafeHTMLPipe } from '@parts/pipes/safe-html-pipe/safe-html.pipe';\n\n@NgModule({\n    declarations: [SafeHTMLPipe],\n    exports: [SafeHTMLPipe],\n    providers: [SafeHTMLPipe],\n    imports: [CommonModule],\n})\nexport class SafeHtmlPipeModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n@Pipe({\n    name: 'safeHTML',\n})\nexport class SafeHTMLPipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    transform(html: string): SafeHtml {\n        return this.sanitizer.bypassSecurityTrustHtml(html);\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'zanoShortString',\n    standalone: true,\n})\nexport class ShortStringPipe implements PipeTransform {\n    transform(value: string | null | undefined, left = 6, right = 6): string | null | undefined {\n        return value && `${value.slice(0, left)}...${value.slice(-right)}`;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Router, NavigationEnd } from '@angular/router';\n\n@Injectable({ providedIn: 'root' })\nexport class NavigationService {\n    private history: string[] = [];\n\n    constructor(private router: Router, private location: Location) {\n        this.router.events.subscribe(event => {\n            if (event instanceof NavigationEnd) {\n                this.history.push(event.urlAfterRedirects);\n            }\n        });\n    }\n\n    back(): void {\n        this.history.pop();\n        if (this.history.length > 0) {\n            this.location.back();\n        } else {\n            this.router.navigateByUrl('/').then();\n        }\n    }\n}\n","import { inject, Injectable, NgZone } from '@angular/core';\nimport { ModalContainerComponent } from '../modals/modal-container/modal-container.component';\nimport { MatDialog, MatDialogConfig, MatDialogRef } from '@angular/material/dialog';\nimport { take } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ModalService {\n    private _count: number = 0;\n\n    private readonly _matDialog: MatDialog = inject(MatDialog);\n\n    private readonly _ngZone: NgZone = inject(NgZone);\n\n    prepareModal(type: 'error' | 'info' | 'success' | string, message: any): void {\n        const config: MatDialogConfig = {\n            data: {\n                type,\n                message,\n            },\n            width: '34rem'\n        };\n\n        this._ngZone.run(() => {\n            const matDialogRef: MatDialogRef<ModalContainerComponent> = this._matDialog.open(ModalContainerComponent, config);\n\n            matDialogRef\n                .afterOpened()\n                .pipe(take(1))\n                .subscribe(() => this._count + 1);\n            matDialogRef\n                .afterClosed()\n                .pipe(take(1))\n                .subscribe(() => this._count - 1);\n        });\n    }\n}\n","import { inject, Injectable, NgZone, OnDestroy } from '@angular/core';\nimport { DeeplinkParams, Wallet } from '@api/models/wallet.model';\nimport { Contact } from '@api/models/contact.model';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { Idle } from 'idlejs/dist';\nimport { Router } from '@angular/router';\nimport { ContextMenuComponent, ContextMenuService } from '@perfectmemory/ngx-contextmenu';\nimport { BigNumber } from 'bignumber.js';\nimport { Aliases } from '@api/models/alias.model';\nimport { distinctUntilChanged, map, takeUntil } from 'rxjs/operators';\nimport { Dialog } from '@angular/cdk/dialog';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VariablesService implements OnDestroy {\n    disable_price_fetch$ = new BehaviorSubject<boolean>(false);\n\n    visibilityBalance$ = new BehaviorSubject<boolean>(false);\n\n    zano_current_supply = undefined;\n\n    rpc_port!: number;\n\n    use_debug_mode$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n    info$: BehaviorSubject<any> = new BehaviorSubject<any>({});\n\n    is_hardfok_active$: Observable<boolean> = this.info$.pipe(\n        map(info => {\n            return Boolean(info?.['is_hardfok_active']?.[4]);\n        }),\n        distinctUntilChanged()\n    );\n\n    stop_paginate = {};\n\n    sync_started: boolean = false;\n\n    decimal_point: number = 12;\n\n    appPass: string = '';\n\n    // \\(2^{64}-1\\) => (18,446,744,073,709,551,615)\n    maximum_value: BigNumber = new BigNumber('18446744073709551615');\n\n    appLogin: boolean = false;\n\n    zanoMoneyEquivalent: number = 0;\n\n    zanoMoneyEquivalentPercent: number = 0;\n\n    defaultTicker: 'ZANO' = 'ZANO';\n\n    opening_wallet: Wallet;\n\n    exp_med_ts: number = 0;\n\n    net_time_delta_median: number = 0;\n\n    height_app: number = 0;\n\n    height_max: number = 0;\n\n    downloaded: number = 0;\n\n    total: number = 0;\n\n    last_build_available: string = '';\n\n    last_build_displaymode: number = 0;\n\n    daemon_state: number = 3;\n\n    deeplink$: BehaviorSubject<string | null> = new BehaviorSubject<string | null>(null);\n\n    sendActionData$: BehaviorSubject<DeeplinkParams> = new BehaviorSubject<DeeplinkParams>({});\n\n    sync = {\n        progress_value: 0,\n        progress_value_text: '0',\n        blocks: {\n            current: 0,\n            max: 0,\n        },\n    };\n\n    public sync_wallets: { [wallet_id: number]: boolean } = {};\n\n    download = {\n        progress_value: 0,\n        progress_value_text: '0',\n    };\n\n    // Avoid of execute function before callback complete\n    get_recent_transfers: boolean = false;\n\n    default_fee: string = '0.010000000000';\n\n    default_fee_big: BigNumber = new BigNumber('10000000000');\n\n    settings = {\n        appLockTime: 15,\n        appLog: 0,\n        scale: '10px',\n        appUseTor: false,\n        visibilityBalance: false,\n        language: 'en',\n        default_path: '/',\n        viewedContracts: [],\n        notViewedContracts: [],\n        zanoCompanionForm: {\n            zanoCompation: false,\n            secret: '',\n        },\n        wallets: [],\n        isDarkTheme: true,\n    };\n\n    isDarkTheme$ = new BehaviorSubject(true);\n\n    count: number = 40;\n\n    maxPages: number = 5;\n\n    testnet: boolean = false;\n\n    // Testnet or Mainnet\n    networkType = '';\n\n    wallets: Array<Wallet> = [];\n\n    currentWallet: Wallet;\n\n    aliases: Aliases = [];\n\n    aliasesChecked: any = {};\n\n    enableAliasSearch: boolean = false;\n\n    maxWalletNameLength: number = 25;\n\n    maxCommentLength: number = 255;\n\n    dataIsLoaded: boolean = false;\n\n    contacts: Array<Contact> = [];\n\n    pattern: string = '^[a-zA-Z0-9_.\\\\]*|~!?@#$%^&+{}()<>:;\"\\'-=/,[\\\\\\\\]*$';\n\n    after_sync_request: any = {};\n\n    getExpMedTsEvent = new BehaviorSubject(null);\n\n    getHeightAppEvent = new BehaviorSubject(null);\n\n    getHeightMaxEvent = new BehaviorSubject(null);\n\n    getDownloadedAppEvent = new BehaviorSubject(null);\n\n    getTotalEvent = new BehaviorSubject(null);\n\n    getRefreshStackingEvent = new BehaviorSubject(null);\n\n    getAliasChangedEvent = new BehaviorSubject(null);\n\n    currentWalletChangedEvent = new BehaviorSubject<Wallet>(null);\n\n    private _dialog: Dialog = inject(Dialog);\n\n    private _matDialog: MatDialog = inject(MatDialog);\n\n    idle = new Idle().whenNotInteractive().do(async () => {\n        if (this.appPass === '') {\n            this.stopCountdown();\n        } else {\n            await this.ngZone.run(async () => {\n                this.stopCountdown();\n                this.appPass = '';\n                this.appLogin = false;\n                this._dialog.closeAll();\n                this._matDialog.closeAll();\n                await this.router.navigate(['/login'], {\n                    queryParams: { type: 'auth' },\n                });\n            });\n        }\n    });\n\n    allContextMenu: ContextMenuComponent<any>;\n\n    onlyCopyContextMenu: ContextMenuComponent<any>;\n\n    pasteSelectContextMenu: ContextMenuComponent<any>;\n\n    private _destroy$: Subject<void> = new Subject<void>();\n\n    constructor(private router: Router, private ngZone: NgZone, private contextMenuService: ContextMenuService<any>) {\n        this.visibilityBalance$.pipe(takeUntil(this._destroy$)).subscribe({\n            next: visibilityBalance => {\n                this.settings.visibilityBalance = visibilityBalance;\n            },\n        });\n    }\n\n    ngOnDestroy(): void {\n        this._destroy$.next();\n        this._destroy$.complete();\n    }\n\n    get hasAppPass(): boolean {\n        return Boolean(this.appPass);\n    }\n\n    get isCurrentWalletSync(): boolean {\n        if (this.currentWallet) {\n            const { wallet_id } = this.currentWallet;\n            return this.sync_wallets[wallet_id] || false;\n        }\n        return false;\n    }\n\n    get isCurrentWalletLoaded(): boolean {\n        if (this.currentWallet) {\n            const { loaded } = this.currentWallet;\n            return loaded;\n        }\n        return false;\n    }\n\n    get walletNamesForComparisons(): string[] {\n        return this.wallets.map(({ name }) => name) ?? [];\n    }\n\n    setExpMedTs(timestamp: number): void {\n        if (timestamp !== this.exp_med_ts) {\n            this.exp_med_ts = timestamp;\n            this.getExpMedTsEvent.next(timestamp);\n        }\n    }\n\n    setHeightApp(height: number): void {\n        if (height !== this.height_app) {\n            this.height_app = height;\n            this.getHeightAppEvent.next(height);\n        }\n    }\n\n    setHeightMax(height: number): void {\n        if (height !== this.height_max) {\n            this.height_max = height;\n            this.getHeightMaxEvent.next(height);\n        }\n    }\n\n    setDownloadedBytes(bytes: number): void {\n        if (bytes !== this.downloaded) {\n            this.downloaded = this.bytesToMb(bytes);\n            this.getDownloadedAppEvent.next(bytes);\n        }\n    }\n\n    setTotalBytes(bytes: number): void {\n        if (bytes !== this.total) {\n            this.total = this.bytesToMb(bytes);\n            this.getTotalEvent.next(bytes);\n        }\n    }\n\n    setRefreshStacking(wallet_id: number): void {\n        this.getHeightAppEvent.next(wallet_id);\n    }\n\n    changeAliases(): void {\n        this.getAliasChangedEvent.next(true);\n    }\n\n    setCurrentWallet(id): void {\n        this.wallets.forEach(wallet => {\n            if (wallet.wallet_id === id) {\n                this.currentWallet = wallet;\n                this.currentWalletChangedEvent.next(wallet);\n            }\n        });\n    }\n\n    getWallet(id): Wallet | null {\n        for (let i = 0; i < this.wallets.length; i++) {\n            if (this.wallets[i].wallet_id === id) {\n                return this.wallets[i];\n            }\n        }\n        return null;\n    }\n\n    getNotLoadedWallet(): Wallet | null {\n        for (let i = 0; i < this.wallets.length; i++) {\n            if (!this.wallets[i].loaded) {\n                return this.wallets[i];\n            }\n        }\n        return null;\n    }\n\n    startCountdown(): void {\n        this.idle.within(this.settings.appLockTime).start();\n    }\n\n    stopCountdown(): void {\n        this.idle.stop();\n    }\n\n    restartCountdown(): void {\n        if (Boolean(this.settings.appLockTime)) {\n            this.idle.within(this.settings.appLockTime).restart();\n        } else {\n            this.stopCountdown();\n        }\n    }\n\n    bytesToMb(bytes): number {\n        return Number((bytes / Math.pow(1024, 2)).toFixed(1));\n    }\n\n    onContextMenu($event: any): void {\n        $event.target['contextSelectionStart'] = $event.target['selectionStart'];\n        $event.target['contextSelectionEnd'] = $event.target['selectionEnd'];\n        if (\n            $event.target &&\n            ($event.target['nodeName'].toUpperCase() === 'TEXTAREA' || $event.target['nodeName'].toUpperCase() === 'INPUT') &&\n            !$event.target['readOnly']\n        ) {\n            this.contextMenuService.show(this.allContextMenu, {\n                x: $event.x,\n                y: $event.y,\n                value: $event.target,\n            });\n            $event.preventDefault();\n            $event.stopPropagation();\n        }\n    }\n\n    onContextMenuOnlyCopy($event: any, copyText?: string): void {\n        $event.preventDefault();\n        $event.stopPropagation();\n        this.contextMenuService.show(this.onlyCopyContextMenu, {\n            value: copyText,\n            x: $event.x,\n            y: $event.y,\n        });\n    }\n\n    onContextMenuPasteSelect($event: any): void {\n        $event.target['contextSelectionStart'] = $event.target['selectionStart'];\n        $event.target['contextSelectionEnd'] = $event.target['selectionEnd'];\n\n        console.warn($event.target);\n        console.warn($event.target['disabled']);\n\n        if (\n            $event.target &&\n            ($event.target['nodeName'].toUpperCase() === 'TEXTAREA' || $event.target['nodeName'].toUpperCase() === 'INPUT') &&\n            !$event.target['readOnly']\n        ) {\n            this.contextMenuService.show(this.pasteSelectContextMenu, {\n                x: $event.x,\n                y: $event.y,\n                value: $event.target,\n            });\n            $event.preventDefault();\n            $event.stopPropagation();\n        }\n    }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { BackendService } from '@api/services/backend.service';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { ResponseGetWalletInfo, Wallet } from '@api/models/wallet.model';\nimport { Router } from '@angular/router';\nimport { ParamsCallRpc } from '@api/models/call_rpc.model';\nimport { AssetsWhitelistGetResponseData } from '@api/models/assets.model';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class WalletsService {\n    get wallets(): Wallet[] {\n        return this.variablesService.wallets;\n    }\n\n    set wallets(value) {\n        this.variablesService.wallets = value ?? [];\n    }\n\n    get currentWallet(): Wallet | null | undefined {\n        return this.variablesService.currentWallet;\n    }\n\n    set currentWallet(value) {\n        this.variablesService.currentWallet = value;\n    }\n\n    constructor(\n        private backendService: BackendService,\n        private variablesService: VariablesService,\n        private router: Router,\n        private ngZone: NgZone\n    ) {}\n\n    addWallet(wallet: Wallet): void {\n        const { wallet_id } = wallet;\n\n        // TODO: Need added notification call after implementing on core\n        // if (staking) {\n        //     const text = this._translateService.instant('STAKING.WALLET_STAKING_ON', { value: wallet.alias?.name ?? wallet.name });\n        //     this._modalService.prepareModal('info', text);\n        // }\n\n        this.variablesService.wallets.push(wallet);\n        this.updateWalletInfo(wallet_id);\n    }\n\n    loadAssetsWhitelist(wallet_id: number): void {\n        const wallet = this.getWalletById(wallet_id);\n\n        if (!wallet) {\n            console.warn(`You want update assetsWhiteList by wallet_id: (${wallet_id}). But this wallet not uploaded.`);\n            return;\n        }\n\n        const params: ParamsCallRpc = {\n            jsonrpc: '2.0',\n            id: 0,\n            method: 'assets_whitelist_get',\n            params: {},\n        };\n        this.backendService.call_wallet_rpc([wallet_id, params], (status, response_data: AssetsWhitelistGetResponseData) => {\n            const { result } = response_data;\n            wallet.assetsInfoWhitelist = result;\n        });\n    }\n\n    getWalletById(wallet_id: number): Wallet | undefined {\n        const { wallets } = this.variablesService;\n        return wallets.find(w => w.wallet_id === wallet_id);\n    }\n\n    updateWalletInfo(wallet_id: number): void {\n        const wallet = this.getWalletById(wallet_id);\n\n        if (!wallet) {\n            console.warn(`You want update walletInfo by wallet_id: (${wallet_id}). But this wallet not uploaded.`);\n            return;\n        }\n        const callback: (status: boolean, response_data: ResponseGetWalletInfo) => void = (status, response_data) => {\n            this.ngZone.run(() => {\n                if (status) {\n                    const { balances } = response_data;\n                    wallet.balances = balances;\n                }\n            });\n        };\n\n        this.backendService.getWalletInfo(wallet_id, callback);\n\n        this.loadAssetsWhitelist(wallet_id);\n    }\n\n    closeWallet(wallet_id: number): void {\n        const callback = async (): Promise<void> => {\n            this.wallets = this.wallets.filter(w => w.wallet_id !== wallet_id);\n\n            await this.ngZone.run(async () => {\n                let url = '/';\n                if (this.wallets.length > 0) {\n                    this.currentWallet = this.wallets[0];\n                    url = '/wallet/';\n                }\n                if (this.variablesService.appPass) {\n                    this.backendService.storeSecureAppData();\n                }\n                await this.router.navigate([url]);\n            });\n        };\n\n        this.backendService.closeWallet(wallet_id, callback);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\ntype TLoaderId = 'fullScreen';\n\ninterface TDataLoader {\n    state: boolean;\n    message: string;\n}\n\ntype TDataLoaders = {\n    [key in TLoaderId]: TDataLoader;\n};\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ZanoLoadersService {\n    private _loaders$ = new BehaviorSubject<TDataLoaders>({\n        fullScreen: { state: false, message: 'Loading' },\n    });\n\n    getState(id: TLoaderId): Observable<boolean> {\n        return this._loaders$.pipe(map(loader => loader[id].state));\n    }\n\n    getMessage(id: TLoaderId): Observable<string> {\n        return this._loaders$.pipe(map(loader => loader[id].message));\n    }\n\n    open(id: TLoaderId, message: string = 'Loading'): void {\n        this._loaders$.next({\n            ...this._loaders$.value,\n            [id]: {\n                state: true,\n                message,\n            },\n        });\n    }\n\n    close(id: TLoaderId): void {\n        this._loaders$.next({\n            ...this._loaders$.value,\n            [id]: {\n                ...this._loaders$.value[id],\n                state: false,\n            },\n        });\n    }\n}\n","export const MIMETypes: string[] = [\n    '.rar',\n    '.txt',\n    '.xls',\n    '.xlsx',\n    '.zip',\n    '.png',\n    '.pdf',\n    '.csv',\n    '.doc',\n    '.docx',\n    '.jar',\n    '.jpeg',\n    '.jpg',\n    '.js',\n    '.json',\n    '.mp3',\n    '.mp4',\n    '.mpeg',\n    '.aac',\n    '.abw',\n    '.arc',\n    '.avif',\n    '.avi',\n    '.azw',\n    '.bin',\n    '.bmp',\n    '.bz',\n    '.bz2',\n    '.cda',\n    '.csh',\n    '.css',\n    '.dll',\n    '.exe',\n    '.eot',\n    '.epub',\n    '.gz',\n    '.gif',\n    '.htm',\n    '.html',\n    '.ico',\n    '.ics',\n    '.jsonld',\n    '.mid',\n    '.midi',\n    '.mjs',\n    '.mpkg',\n    '.odp',\n    '.ods',\n    '.odt',\n    '.oga',\n    '.ogv',\n    '.ogx',\n    '.opus',\n    '.otf',\n    '.php',\n    '.ppt',\n    '.pptx',\n    '.pdb',\n    '.dat',\n    '.rtf',\n    '.sh',\n    '.svg',\n    '.tar',\n    '.tif',\n    '.tiff',\n    '.ts',\n    '.ttf',\n    '.vsd',\n    '.wav',\n    '.weba',\n    '.webm',\n    '.webp',\n    '.woff',\n    '.woff2',\n    '.xhtml',\n    '.xml',\n    '.xul',\n    '.3gp',\n    '.3g2',\n    '.7z',\n];\n","export const generateRandomString = (length: number = 40): string => {\n    const array: Uint8Array = new Uint8Array(length);\n    window.crypto.getRandomValues(array);\n\n    const regularArray: number[] = Array.from(array);\n\n    return btoa(String.fromCharCode.apply(null, regularArray));\n};\n","import { ValidationErrors } from '@angular/forms';\n\nexport interface ZanoValidationErrors extends ValidationErrors {\n    errorText: string;\n}\n\nexport const wrongAssetId: ZanoValidationErrors = {\n    errorText: 'ASSETS.FORM.ERRORS.WRONG_ASSET_ID',\n};\n\nexport const wrongPassword: ZanoValidationErrors = {\n    errorText: 'Incorrect password',\n};\n\nexport const insuficcientFunds: ZanoValidationErrors = {\n    errorText: 'ERRORS.INSUFFICIENT_FUNDS',\n};\n\nexport const assetHasNotBeenAddedToWallet: ZanoValidationErrors = {\n    errorText: 'ERRORS.ASSET_HAS_NOT_BEEN_ADDED_TO_WALLET',\n};\n\nexport const notFileZanoWallet: ZanoValidationErrors = {\n    errorText: 'ERRORS.NOT_FILE_ZANO_WALLET',\n};\n","import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { notFileZanoWallet, ZanoValidationErrors } from '@parts/utils/zano-errors';\nimport { MIMETypes } from '@parts/utils/MIME-types';\n\nexport const regExpHex = /^[a-f0-9]{64}$/i;\nexport const regExpAliasName = /^@?[a-z\\d.-]{2,25}$/;\nexport const regExpPassword = /^[a-zA-Z0-9_.\\]*|~!?@#$%^&+{}()<>:;\"'-=,/[\\\\]*$/;\n\nexport class ZanoValidators {\n    static hash({ value }: AbstractControl): ValidationErrors | null {\n        return regExpHex.test(value) ? null : { invalidHash: true };\n    }\n\n    static formMatch(firstControlName: string, secondControlName: string, nameErrorKey = 'mismatch'): ValidatorFn {\n        return (abstractControl: AbstractControl): ValidationErrors | null =>\n            abstractControl.get(firstControlName).value === abstractControl.get(secondControlName).value ? null : { [nameErrorKey]: true };\n    }\n\n    static duplicate(valuesForComparisons: string | string[]): ValidatorFn {\n        return ({ value }: AbstractControl): ValidationErrors | null => {\n            const errorObject = { duplicate: true };\n            let error = null;\n\n            if (typeof value === 'string' && value === valuesForComparisons) {\n                error = errorObject;\n            }\n\n            if (Array.isArray(valuesForComparisons) && valuesForComparisons.includes(value)) {\n                error = errorObject;\n            }\n\n            return error;\n        };\n    }\n}\n\nexport const filePathWalletValidator = (path: string): ZanoValidationErrors | null => {\n    if (!(path && path.trim().length)) {\n        return null;\n    }\n\n    const positionLastSlash = path.lastIndexOf('/');\n    const fileName = path.slice(positionLastSlash + 1);\n\n    if (!(fileName && fileName.trim().length)) {\n        return null;\n    }\n\n    if (fileName) {\n        let index = 0;\n        while (index < MIMETypes.length) {\n            if (fileName.includes(MIMETypes[index])) {\n                return notFileZanoWallet;\n            }\n            index++;\n        }\n    }\n\n    return null;\n};\n","import { Injectable, NgZone } from '@angular/core';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { PaginationStore } from './pagination.store';\nimport * as _ from 'lodash';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PaginationService {\n    constructor(private variables: VariablesService, private ngZone: NgZone, private paginationStore: PaginationStore) {}\n\n    paginate(currentPage = 1): void {\n        if (currentPage < 1) {\n            currentPage = 1;\n        } else if (currentPage > this.variables.currentWallet.totalPages) {\n            currentPage = this.variables.currentWallet.totalPages;\n        }\n        let startPage: number, endPage: number;\n        if (this.variables.currentWallet.totalPages <= this.variables.maxPages) {\n            startPage = 1;\n            endPage = this.variables.currentWallet.totalPages;\n        } else {\n            const maxPagesBeforeCurrentPage = Math.floor(this.variables.maxPages / 2);\n            const maxPagesAfterCurrentPage = Math.ceil(this.variables.maxPages / 2) - 1;\n            if (currentPage <= maxPagesBeforeCurrentPage) {\n                startPage = 1;\n                this.variables.currentWallet.totalPages > this.variables.maxPages\n                    ? (endPage = this.variables.maxPages)\n                    : (endPage = this.variables.currentWallet.totalPages);\n            } else if (currentPage + maxPagesAfterCurrentPage >= this.variables.currentWallet.totalPages) {\n                startPage = this.variables.currentWallet.totalPages - this.variables.maxPages + 1;\n                endPage = this.variables.currentWallet.totalPages;\n            } else {\n                startPage = currentPage - maxPagesBeforeCurrentPage;\n                endPage = currentPage + maxPagesAfterCurrentPage;\n            }\n        }\n        this.ngZone.run(() => {\n            this.variables.currentWallet.pages = Array.from(Array(endPage + 1 - startPage).keys()).map(i => startPage + i);\n        });\n    }\n\n    getOffset(walletID): number {\n        const mining = this.variables.currentWallet.exclude_mining_txs;\n        const currentPage = this.variables.currentWallet.currentPage;\n        let offset = (currentPage - 1) * this.variables.count;\n        if (!mining) {\n            return offset || 0;\n        }\n        const value = this.paginationStore.value;\n        const pages = value.filter(item => item.walletID === walletID);\n        if (pages && pages.length > 0) {\n            const max = _.maxBy(pages, 'page');\n            const isForward = this.paginationStore.isForward(pages, currentPage);\n            if (isForward) {\n                offset = max.offset || 0;\n            } else {\n                const index = pages.findIndex(item => item.page === currentPage);\n                offset = pages[index].offset || 0;\n            }\n        }\n        return offset;\n    }\n\n    calcPages(data): void {\n        if (data.total_history_items && data && data.history) {\n            this.variables.currentWallet.totalPages = Math.ceil(data.total_history_items / this.variables.count);\n            this.variables.currentWallet.totalPages > this.variables.maxPages\n                ? (this.variables.currentWallet.pages = new Array(5).fill(1).map((value, index) => value + index))\n                : (this.variables.currentWallet.pages = new Array(this.variables.currentWallet.totalPages)\n                      .fill(1)\n                      .map((value, index) => value + index));\n        } else if (this.variables.currentWallet.restore) {\n            this.variables.currentWallet.totalPages = Math.ceil((data.history.length ?? 0) / this.variables.count);\n            this.variables.currentWallet.totalPages > this.variables.maxPages\n                ? (this.variables.currentWallet.pages = new Array(5).fill(1).map((value, index) => value + index))\n                : (this.variables.currentWallet.pages = new Array(this.variables.currentWallet.totalPages)\n                      .fill(1)\n                      .map((value, index) => value + index));\n        }\n    }\n\n    prepareHistory(data, status): void {\n        if (status && data && data.total_history_items) {\n            this.variables.currentWallet.history.splice(0, this.variables.currentWallet.history.length);\n            this.ngZone.run(() => {\n                this.paginate(this.variables.currentWallet.currentPage);\n                if (data.history.length !== 0) {\n                    this.variables.currentWallet.restore = false;\n                    this.variables.currentWallet.total_history_item = data.total_history_items;\n                    this.variables.currentWallet.prepareHistory(data.history);\n                    if (this.variables.currentWallet.currentPage === 1 && data.unconfirmed) {\n                        this.variables.currentWallet.prepareHistory(data.unconfirmed.sort((a, b) => a.timestamp - b.timestamp));\n                    }\n                }\n            });\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport * as _ from 'lodash';\n\nexport interface Pages {\n    page: number;\n    offset: number;\n    walletID: number;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PaginationStore {\n    private subject = new BehaviorSubject<Pages[] | null>(null);\n\n    get value(): Pages[] | null {\n        return this.subject.value;\n    }\n\n    isForward(pages, currentPage): boolean {\n        const max = _.maxBy(pages, 'page');\n        return !max || max.page < currentPage || max.page === currentPage;\n    }\n\n    setPage(pageNumber: number, offset: number, walletID: number): void {\n        let newPages: Pages[] = [];\n        const pages = this.subject.getValue();\n        if (pages && pages.length > 0) {\n            newPages = pages.slice(0);\n        }\n        newPages.push({ page: pageNumber, offset, walletID });\n        this.subject.next(newPages);\n    }\n}\n","import { distinctUntilChanged, map } from 'rxjs/operators';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Wallet } from '@api/models/wallet.model';\nimport { Injectable } from '@angular/core';\n\nexport interface Sync {\n    sync: boolean;\n    wallet_id: number;\n}\n\nexport enum StateKeys {\n    wallets = 'wallets',\n    sync = 'sync',\n}\n\nexport interface State {\n    [StateKeys.wallets]: Wallet[] | null | undefined;\n    [StateKeys.sync]: Sync[] | null | undefined;\n}\n\nconst initialState: State = {\n    wallets: undefined,\n    sync: undefined,\n};\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class Store {\n    private subject = new BehaviorSubject<State>(initialState);\n    private store = this.subject.asObservable().pipe(distinctUntilChanged());\n\n    get state(): State {\n        return this.subject.value;\n    }\n\n    select<T>(name: StateKeys): Observable<T> {\n        return this.store.pipe(map(state => state[name])) as unknown as Observable<T>;\n    }\n\n    set(name: StateKeys, value: any): void {\n        this.subject.next({ ...this.state, [name]: value });\n    }\n}\n","export const materialZanoIcons = [\n    'zano-arrow-left',\n    'zano-arrow-right',\n    'zano-balance',\n    'zano-block-sync',\n    'zano-burn',\n    'zano-check',\n    'zano-check-circle',\n    'zano-check-shield',\n    'zano-close',\n    'zano-close-v2',\n    'zano-contacts',\n    'zano-contracts',\n    'zano-copy',\n    'zano-custom-asset',\n    'zano-delete',\n    'zano-dropdown-arrow-down',\n    'zano-edit',\n    'zano-emit',\n    'zano-export',\n    'zano-fire',\n    'zano-hide-balance',\n    'zano-history',\n    'zano-info',\n    'zano-info-v2',\n    'zano-logo',\n    'zano-logout',\n    'zano-plus',\n    'zano-question',\n    'zano-receive',\n    'zano-regenerate',\n    'zano-row-options',\n    'zano-send',\n    'zano-settings',\n    'zano-show-balance',\n    'zano-system-modal-error',\n    'zano-system-modal-info',\n    'zano-system-modal-success',\n    'zano-staking',\n    'zano-secured',\n    'zano-swap',\n    'zano-update',\n    'zano-wallet-settings',\n];\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'lodash';\n\nexport const buildTime = '2024-08-26T07:35:40.106Z';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch(err => console.error(err));\n"],"names":["NgZone","Observable","Subject","JSONBigNumber","BigNumber","ParamsType","getParamsType","value","array","Array","isArray","object","Object","keys","includes","convertersObjectForTypes","string","stringify","map","v","convertorParams","type","StatusCurrentActionState","Commands","BackendService","constructor","translate","variablesService","modalService","moneyToIntPipe","ngZone","bigNumberParser","key","val","name","indexOf","toNumber","i","length","Debug","message","console","error","warn","log","eventSubscribe","command","callback","on_core_event","backendObject","connect","str","parse","initService","observer","backendLoaded","window","QWebChannel","qt","webChannelTransport","channel","objects","mediator_object","next","webkitLaunchedScript","runCommand","webkit_launched_script","quitRequest","on_request_quit","getAppData","get_app_data","storeAppData","wallets","settings","forEach","wallet","push","path","store_app_data","getSecureAppData","pass","get_secure_app_data","setMasterPassword","set_master_password","checkMasterPassword","check_master_password","getIsDisabledNotifications","params","get_is_disabled_notifications","setIsDisabledNotifications","state","set_is_disabled_notifications","storeSecureAppData","contacts","staking","contact","address","notes","data","store_secure_app_data","JSON","appPass","dataStore","backendCallback","dropSecureAppData","drop_secure_app_data","haveSecureAppData","have_secure_app_data","saveFileDialog","caption","fileMask","default_path","dir","filemask","default_dir","show_savefile_dialog","openFileDialog","show_openfile_dialog","storeFile","buff","store_to_file","loadFile","load_from_file","push_offer","generateWallet","generate_wallet","exportWalletHistory","json_string","export_wallet_history","openWallet","txs_to_return","testEmpty","open_wallet","closeWallet","wallet_id","close_wallet","getSmartWalletInfo","seed_password","get_smart_wallet_info","getSeedPhraseInfo","param","get_seed_phrase_info","runWallet","run_wallet","isValidRestoreWalletText","is_valid_restore_wallet_text","restoreWallet","seed_phrase","seed_pass","restore_wallet","sendMoney","amount","fee","mixin","comment","hide","asset_id","destinations","mixin_count","lock_time","transform","push_payer","asyncCall","transfer","setupJwtWalletRpc","secret","setup_jwt_wallet_rpc","zanoCompanionForm","validateAddress","validate_address","setClipboard","set_clipboard","getClipboard","get_clipboard","createProposal","title","a_addr","b_addr","to_pay","a_pledge","b_pledge","time","payment_id","parseInt","details","t","c","expiration_period","default_fee_big","b_fee","create_proposal","getContracts","get_contracts","acceptProposal","contract_id","accept_proposal","releaseProposal","release_type","release_contract","requestCancelContract","request_cancel_contract","acceptCancelContract","accept_cancel_contract","getMiningHistory","get_mining_history","startPosMining","start_pos_mining","stopPosMining","stop_pos_mining","openUrlInBrowser","url","open_url_in_browser","start_backend","node","host","port","configure_for_remote_node","remote_node_host","remote_node_port","getDefaultFee","get_default_fee","setBackendLocalization","stringsArray","strings","language_title","set_localization_strings","registerAlias","alias","reward","tracking_key","request_alias_registration","updateAlias","replace","request_alias_update","getAllAliases","get_all_aliases","getAliasInfoByName","get_alias_info_by_name","getAliasByAddress","get_alias_info_by_address","getAliasCoast","get_alias_coast","resyncWallet","id","resync_wallet","getWalletAlias","daemon_state","aliasesChecked","aliases","status","getContactAlias","getRecentTransfers","offset","count","exclude_mining_txs","get_recent_transfers","getPoolInfo","get_tx_pool_info","getVersion","get_version","version","errorVersion","get_network_type","status_network","errorType","setLogLevel","level","set_log_level","async_call","job_id","asyncCall2a","async_call_2a","dispatchAsyncCallResult","dispatch_async_call_result","json_resp","asyncCommandResults","response","group","groupEnd","run","setTimeout","dispatchAsyncCallResult$","handleCurrentActionState","handle_current_action_state","currentActionState","handleCurrentActionState$","setEnableTor","set_enable_tor","getOptions","get_options","disable_price_fetch","use_debug_mode","rpc_port","disable_price_fetch$","use_debug_mode$","addCustomAssetId","add_custom_asset_id","removeCustomAssetId","remove_custom_asset_id","getWalletInfo","get_wallet_info","call_rpc","call_wallet_rpc","informerRun","error_translate","instant","default_fee","currency","defaultTicker","prepareModal","commandDebug","result","debug","_send_params","_result","e","response_data","error_code","resultStr","Result","core_busy","Status","undefined","res_error_code","current_wallet_id","currentWallet","Action","i0","factory","providedIn","Renderer2","StateKeys","take","takeUntil","paths","pathsChildrenAuth","hasOwnProperty","Breakpoints","AppComponent","http","renderer","backendService","router","intToMoneyPipe","store","dialog","matDialog","zanoLoadersService","_breakpointObserver","Map","XSmall","Small","Medium","Large","XLarge","addLangs","setDefaultLang","use","pipe","destroy$","subscribe","translateUsed","_setResponseClasses","observe","query","breakpoints","currentScreenSize","displayNameMap","get","_a","document","body","classList","remove","values","add","language","ngOnInit","initMessage","st2","dd2","quit_requested","onQuitRequest","closeAll","needOpenWallets","saveFunction","recursionCloseWallets","lastIndex","splice","update_wallet_status","wallet_state","is_mining","getWallet","loaded","balances","mined_total","minied_total","alias_available","is_alias_operations_available","has_bare_unspent_outputs","wallet_sync_progress","progress","sync_started","sync_wallets","addToStore","update_daemon_state","daemon_network_state","setExpMedTs","net_time_delta_median","last_build_available","last_build_displaymode","setHeightApp","height","setHeightMax","max_net_seen_height","setDownloadedBytes","downloaded_bytes","setTotalBytes","download_total_data_size","max","current","return_val","Math","floor","sync","progress_value","progress_value_text","blocks","toFixed","download","firstOnlineState","getAliases","status_fee","data_fee","money_transfer","ti","tr_info","history","tx_type","setRefreshStacking","tr_exists","excluded_history","some","elem","tx_hash","currentPage","prepareHistory","restore","total_history_item","totalPages","ceil","maxPages","pages","fill","index","exp_med_ts","height_app","contract","contracts","is_a","cancel_expiration_time","expiration_time","timestamp","searchResult2","notViewedContracts","find","j","viewedContracts","searchResult3","searchResult4","searchResult","is_new","findContract","prop","handle_deeplink_click","deeplink$","money_transfer_cancel","removeFromHistory","error_tr","events","method","enableAliasSearch","newAlias","concat","changeAliases","CurrentAlias","element","intervalUpdateContractsState","setInterval","expMedTsEvent","getExpMedTsEvent","newTimestamp","isDarkTheme$","visibilityBalance$","isDarkTheme","visibilityBalance","appUseTor","scale","setStyle","documentElement","setAttribute","appLog","navigate","auth","noWallet","then","statusPass","queryParams","appLogin","getInfo","_getZanoCurrentSupply","updateTime","updateMoneyEquivalent","intervalUpdatePriceState","clearInterval","ngOnDestroy","unsubscribe","success","zanoMoneyEquivalent","zanoMoneyEquivalentPercent","sort","a","b","boolean","filter","item","set","testnet","networkType","jsonrpc","info$","flags","zano_current_supply","_b","selectors","decls","vars","consts","template","inject","TranslateService","CREATE_NEW_WALLET_HELP_PAGE","filePathWalletValidator","AddWalletComponent","translateService","file_status","file_data","positionLastSlash","lastIndexOf","new_default_path","slice","text","errorText","openInBrowser","ctx","FormBuilder","Validators","regExpAliasName","AssignAliasComponent","backend","intToMoney","routerLink","fb","nonNullable","control","required","pattern","maxLength","maxCommentLength","price","rewardOriginal","exists","assignForm","valueChanges","canRegister","newName","toLowerCase","controls","errors","statusPrice","dataPrice","sum","unlocked_balance","getBalanceByTicker","unlocked","notEnoughMoney","isGreaterThan","complete","assignAlias","wakeAlias","Wallet","BehaviorSubject","regExpPassword","ZanoValidators","LoginComponent","walletsService","route","password","confirmation","validators","formMatch","zanoLogo","onSubmitCreatePass","regForm","valid","dataIsLoaded","appLockTime","startCountdown","onSkipCreatePass","resetJwtWalletRpc","zanoCompation","resetLoading$","closeAllWallets","onSubmitAuthPass","submitLoading$","authForm","prevUrl","setAuthPassError","wrong_password","getData","isEmptyObject","getWalletData","walletData","openWallets","runWallets","wallet_index","open_status","open_data","open_error","new_wallet","balance","tracking_hey","is_auditable","is_watch_only","recent_history","total_history_items","addWallet","run_status","setErrors","NonNullableFormBuilder","VariablesService","ModalService","Router","WalletsService","CreateWalletComponent","duplicate","walletNamesForComparisons","confirm","savedWalletName","createForm","substr","createWallet","loading$","selectedPath","getRawValue","generate_status","generate_data","errorCode","run_data","setCurrentWallet","errorTranslationKey","selectWalletLocation","patchValue","delay","DeeplinkComponent","notFileZanoWallet","wrongPassword","OpenWalletComponent","maxWalletNameLength","filePath","openWalletForm","filename","markAsTouched","openStatus","openData","open_from_exist","scaleItems","generateRandomString","debounceTime","ctx_r26","ctx_r7","SettingsComponent","compose","new_password","new_confirmation","disabled","hasAppPass","translationKey","setValue","emitEvent","currentBuild","currentNotificationsState","generateSecret","copySecret","isSecretWasCopied","secretWasCopiedTimeout","clearTimeout","regenerateSecret","setScale","onSubmitChangePass","changeForm","enable","onSave","reset","toggleNotifications","toggleUseTor","ifSaved","onLockChange","restartCountdown","onLogChange","onLanguageChange","showPrice","toggleDarkTheme","AssetDetailsComponent","Dialog","ConfirmModalComponent","LOCKED_BALANCE_HELP_PAGE","defaultImgSrc","zanoAssetInfo","MatDialog","$event","ctx_r4","asset_r5","_r8","ctx_r0","ctx_r1","AssetsComponent","paginatePipeArgs","paginationId","itemsPerPage","isShowPagination","listenChangeWallet","toggleDropDownMenu","trigger","asset","isOpenDropDownMenu","triggerOrigin","currentAsset","trackByAssets","asset_info","trackByPages","assetDetails","config","assetInfo","_matDialog","open","beforeRemoveAsset","full_name","afterClosed","confirmed","removeAsset","sendMoneyParams","updateWalletInfo","getBalanceTooltip","tooltip","createElement","scrollWrapper","total","ticker","decimal_point","available","innerText","availableB","appendChild","locked","lockedB","minus","link","innerHTML","addEventListener","currentWalletChangedEvent","insuficcientFunds","moneyToInt","MAT_DIALOG_DATA","MatDialogRef","BurnCustomAssetComponent","_fb","maximum_value","prepared_amount","assetBalance","getBalanceByAssetId","asset_not_found","maximum_amount_by_decimal_point","greater_than_maximum_amount","preparedUnlocked","submit","form","burn_amount","toString","_backendService","_ngZone","matDialogRef","close","EmitCustomAssetComponent","total_max_supply","current_supply","prepared_total_max_supply","prepared_current_supply","plus","greater_than_total_max_supply","regExpHex","UpdateCustomAssetComponent","owner","test","hex_not_valid","assign","address_not_valid","hasError","asset_descriptor","ConfirmCreateCustomAssetComponent","TransactionDetailsForCustomAssetsComponent","CreateNewAssetComponent","minLength","min","meta_info","hidden_supply","isLessThan","greater_than_max","disableClose","Boolean","_router","countDestination","destinationAmount","halfDestinationAmount","div","eq","ElementRef","EventEmitter","BLOCK_EXPLORER_TN_TX_URL_PREFIX","BLOCK_EXPLORER_TX_URL_PREFIX","successfulStatuses","STATE_SENDING","STATE_SENT_SUCCESS","STATE_INITIALIZING","STATE_DOWNLOADING_CONSENSUS","STATE_MAKING_TUNNEL_A","STATE_MAKING_TUNNEL_B","STATE_CREATING_STREAM","STATE_SUCCESS","failedStatuses","STATE_SEND_FAILED","STATE_FAILED","SendDetailsModalComponent","currentActionState$","currentActionStates","currentActionStates$","isSentSuccess","isSentFailed","isDetailsNotEmpty","responseData$","addClass","actionState","removeClass","toggleDetails","stateDetails$","scrollToBottomDetailsList","trackBy","isSuccess","action","isFailed","elDetailsList","nativeElement","scrollTop","scrollHeight","hash","viewQuery","MIXIN","catchError","distinctUntilChanged","retry","startWith","switchMap","tap","combineLatest","merge","of","defaultSendMoneyParams","WrapInfoService","HttpClient","_r19","ctx_r13","_r10","SendComponent","balances$","isVisibleWrapInfoState$","items","decimalPoint","inputTicker","hintTicker","hintAmount","reverseDisabled","_walletsService","_getWrapInfo","_createForm","_destroy$","updateAddressErrorMessage","errorMessages","updateFeeErrorMessage","_translateService","getSrcByAsset","logo","isVisibleError","invalid","dirty","touched","beforeSubmit","isSendModalState","handleConfirmed","isAmountUSD","convertedAmountUSD","usd","priceInfo","convertedAmount","dividedBy","decimalPlaces","aliasName","alias_not_found","isSendDetailsModalState","getReceivedValue","preparedAmount","tx_cost","zano_needed_for_erc20","wrapInfo","needed","handeCloseSendDetailsModal","pasteListenAddressField","event","preventDefault","clipboardData","lowerCaseDisabled$","trackByFn","toggleAmountUSD","history_asset","aliasAddress","valid_status","alias_not_valid","alias_status","alias_data","isZero","zero","greater_than_max_amount","less_min","wrap_info_null","unwraped_coins_left","great_than_unwraped_coins","less_than_zano_needed","_listenSendActionData","_saveSendMoneyParams","_formListeners","markAllAsTouched","updateValueAndValidity","_updateErrorMessages","_priceInfo$","_c","multipliedBy","_d","amountInputParams","default$","price$","_httpClient","err","statusChanges","addressItems$","condition","loadingAddressItems$","_openedWalletItems","_aliasItems","wrapInfoService","getWrapInfo","loadingWrapInfo$","sendActionData$","comments","mixins","hide_sender","isVisibleAdditionalOptionsState","CommonModule","RouterLinkWithHref","TranslateModule","BreadcrumbsComponent","DefaultImgModule","InputValidateModule","LowerCaseDirective","FormsModule","ReactiveFormsModule","IntToMoneyPipeModule","MoneyToIntPipeModule","ShortStringPipe","NgSelectModule","assetHasNotBeenAddedToWallet","LoaderComponent","MatAutocompleteModule","MatOptionModule","MatIconModule","ctx_r3","_r31","ctx_r25","_r22","CreateSwapComponent","allAssetsInfo","receiverAddress","getSrcByAssetInfo","isVisibleErrorByControl","isVisibleErrorByForm","reverse","sending","receiving","updateReceiverAddressErrorMessage","pasteListenReceiverAddressField","sendingAsset","getAssetInfoByAssetId","receivingAsset","params2","proposal","to_finalizer","to_initiator","fee_paid_by_a","navigateByUrl","hex_raw_proposal","errorRpc","sendingAssetsInfo$","receivingAssetsInfo$","sendingDecimalPoint$","receivingDecimalPoint$","isEmptyAssetsInfoWhitelist","sameAssetsId","_setSendingAssetIdFromHistoryState","standalone","features","i1","i2","i3","i4","i5","i6","i8","styles","ExportHistoryModalComponent","AddCustomTokenComponent","NavigationCancel","NavigationEnd","NavigationError","NavigationStart","ZARCANUM_MIGRATION","MigrateWalletToZarcanumComponent","BreakpointObserver","objTabs","assets","icon","hidden","send","receive","swap","indicator","WalletComponent","breakpointObserver","matches","walletLoaded","createTabs","setDisabledTabs","is_hardfok_active$","setHiddenTabs","navigationInterceptor","loader","conditionForHiding","tabs","onKeyPressed","openDropdown","walletSyncVisible","onKeyUpPressed","settingsButtonInterval","settingsButtonDisabled","select","in_progress","getAliasChangedEvent","updateWalletStatus","toggleMenuDropdown","resyncCurrentWallet","addCustomToken","exportHistory","openZarcanumMigration","openMigrateWalletToZarcanum","ids","tab","hostBindings","_r3","OpenWalletModalComponent","notFound","emptyPass","isWrongPassword$","skipWallet","hostVars","Idle","contextMenuService","info","whenNotInteractive","do","stopCountdown","_dialog","isCurrentWalletSync","isCurrentWalletLoaded","getHeightAppEvent","height_max","getHeightMaxEvent","bytes","downloaded","bytesToMb","getDownloadedAppEvent","getTotalEvent","getNotLoadedWallet","idle","within","start","stop","restart","Number","pow","onContextMenu","target","toUpperCase","show","allContextMenu","x","y","stopPropagation","onContextMenuOnlyCopy","copyText","onlyCopyContextMenu","onContextMenuPasteSelect","pasteSelectContextMenu","loadAssetsWhitelist","getWalletById","assetsInfoWhitelist","w"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}