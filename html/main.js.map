{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/api/models/wallet.model.ts","./src/app/api/services/api-pdc.service.ts","./src/app/api/services/backend.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/layouts/full-layout/full-layout.component.ts","./src/app/layouts/full-layout/full-layout.module.ts","./src/app/layouts/sidebar/sidebar.component.ts","./src/app/layouts/sidebar/sidebar.module.ts","./src/app/layouts/with-sidebar-layout/with-sidebar-layout.component.ts","./src/app/layouts/with-sidebar-layout/with-sidebar-layout.component.html","./src/app/layouts/with-sidebar-layout/with-sidebar-layout.module.ts","./src/app/pages/add-wallet/add-wallet.component.ts","./src/app/pages/add-wallet/add-wallet.component.html","./src/app/pages/assign-alias/assign-alias.component.ts","./src/app/pages/auth/auth-routing.module.ts","./src/app/pages/auth/auth.module.ts","./src/app/pages/auth/login/login.component.ts","./src/app/pages/auth/login/login.component.html","./src/app/pages/auth/no-wallet/no-wallet.component.ts","./src/app/pages/auth/no-wallet/no-wallet.component.html","./src/app/pages/create-wallet/create-wallet.component.ts","./src/app/pages/deeplink/deeplink.component.ts","./src/app/pages/deeplink/deeplink.module.ts","./src/app/pages/deeplink/modals/deeplink-modal/deeplink-modal.component.ts","./src/app/pages/deeplink/modals/deeplink-modal/deeplink-modal.module.ts","./src/app/pages/deeplink/modals/sync-modal/sync-modal.component.ts","./src/app/pages/deeplink/modals/sync-modal/sync-modal.module.ts","./src/app/pages/edit-alias/edit-alias.component.ts","./src/app/pages/export-import/export-import.component.ts","./src/app/pages/open-wallet/open-wallet.component.ts","./src/app/pages/pages-routing.module.ts","./src/app/pages/pages.module.ts","./src/app/pages/paths.ts","./src/app/pages/restore-wallet/restore-wallet.component.ts","./src/app/pages/restore-wallet/restore-wallet.component.html","./src/app/pages/seed-phrase/seed-phrase.component.ts","./src/app/pages/settings/settings.component.ts","./src/app/pages/settings/settings.component.html","./src/app/pages/transfer-alias/transfer-alias.component.ts","./src/app/pages/wallet-details/wallet-details.component.ts","./src/app/pages/wallet/tabs/assets/assets.component.ts","./src/app/pages/wallet/tabs/assets/assets.component.html","./src/app/pages/wallet/tabs/custom-assets/modals/burn-custom-asset/burn-custom-asset.component.ts","./src/app/pages/wallet/tabs/custom-assets/modals/burn-custom-asset/burn-custom-asset.component.html","./src/app/pages/wallet/tabs/custom-assets/modals/confirm-create-custom-asset/confirm-create-custom-asset.component.ts","./src/app/pages/wallet/tabs/custom-assets/modals/confirm-create-custom-asset/confirm-create-custom-asset.component.html","./src/app/pages/wallet/tabs/custom-assets/modals/emit-custom-asset/emit-custom-asset.component.ts","./src/app/pages/wallet/tabs/custom-assets/modals/emit-custom-asset/emit-custom-asset.component.html","./src/app/pages/wallet/tabs/custom-assets/modals/transaction-details-for-custom-assets/transaction-details-for-custom-assets.component.ts","./src/app/pages/wallet/tabs/custom-assets/modals/transaction-details-for-custom-assets/transaction-details-for-custom-assets.component.html","./src/app/pages/wallet/tabs/custom-assets/modals/update-custom-asset/update-custom-asset.component.ts","./src/app/pages/wallet/tabs/custom-assets/modals/update-custom-asset/update-custom-asset.component.html","./src/app/pages/wallet/tabs/custom-assets/pages/create-new-asset/create-new-asset.component.ts","./src/app/pages/wallet/tabs/custom-assets/pages/create-new-asset/create-new-asset.component.html","./src/app/pages/wallet/tabs/custom-assets/pages/custom-assets/custom-assets.component.ts","./src/app/pages/wallet/tabs/custom-assets/pages/custom-assets/custom-assets.component.html","./src/app/pages/wallet/tabs/history/history.component.ts","./src/app/pages/wallet/tabs/history/history.component.html","./src/app/pages/wallet/tabs/receive/receive.component.ts","./src/app/pages/wallet/tabs/send/modals/send-details-modal/send-details-modal.component.ts","./src/app/pages/wallet/tabs/send/modals/send-details-modal/send-details-modal.component.html","./src/app/pages/wallet/tabs/send/modals/send-modal/send-modal.component.ts","./src/app/pages/wallet/tabs/send/modals/send-modal/send-modal.component.html","./src/app/pages/wallet/tabs/send/modals/wallet-modals.module.ts","./src/app/pages/wallet/tabs/send/send.component.ts","./src/app/pages/wallet/tabs/send/send.component.html","./src/app/pages/wallet/tabs/staking/staking.component.ts","./src/app/pages/wallet/tabs/staking/staking.component.html","./src/app/pages/wallet/tabs/swap/modals/swap-confirm-master-password/swap-confirm-master-password.component.ts","./src/app/pages/wallet/tabs/swap/modals/swap-confirm-master-password/swap-confirm-master-password.component.html","./src/app/pages/wallet/tabs/swap/modals/swap-details/swap-details.component.ts","./src/app/pages/wallet/tabs/swap/modals/swap-details/swap-details.component.html","./src/app/pages/wallet/tabs/swap/pages/confirm-swap/confirm-swap.component.ts","./src/app/pages/wallet/tabs/swap/pages/confirm-swap/confirm-swap.component.html","./src/app/pages/wallet/tabs/swap/pages/create-swap/create-swap.component.ts","./src/app/pages/wallet/tabs/swap/pages/create-swap/create-swap.component.html","./src/app/pages/wallet/tabs/swap/pages/swap-proposal-hex/swap-proposal-hex.component.ts","./src/app/pages/wallet/tabs/swap/pages/swap-proposal-hex/swap-proposal-hex.component.html","./src/app/pages/wallet/tabs/swap/pages/swap/swap.component.ts","./src/app/pages/wallet/tabs/swap/pages/swap/swap.component.html","./src/app/pages/wallet/tabs/swap/parts/guards/swap-proposal-hex.guard.ts","./src/app/pages/wallet/wallet-routing.module.ts","./src/app/pages/wallet/wallet.module.ts","./src/app/pages/wallet/wallet/modals/add-custom-token/add-custom-token.component.ts","./src/app/pages/wallet/wallet/modals/add-custom-token/add-custom-token.component.html","./src/app/pages/wallet/wallet/modals/export-history-modal/export-history-modal.component.ts","./src/app/pages/wallet/wallet/modals/export-history-modal/export-history-modal.component.html","./src/app/pages/wallet/wallet/modals/export-history-modal/export-history-modal.module.ts","./src/app/pages/wallet/wallet/modals/migrate-wallet-to-zarcanum/migrate-wallet-to-zarcanum.component.ts","./src/app/pages/wallet/wallet/modals/migrate-wallet-to-zarcanum/migrate-wallet-to-zarcanum.component.html","./src/app/pages/wallet/wallet/modals/success-sweep-bare-outs/success-sweep-bare-outs.component.ts","./src/app/pages/wallet/wallet/modals/success-sweep-bare-outs/success-sweep-bare-outs.component.html","./src/app/pages/wallet/wallet/wallet.component.ts","./src/app/pages/wallet/wallet/wallet.component.html","./src/app/parts/components/alias-controls/alias-controls.component.ts","./src/app/parts/components/alias-controls/alias-controls.component.html","./src/app/parts/components/back-button/back-button.component.ts","./src/app/parts/components/back-button/back-button.component.html","./src/app/parts/components/breadcrumbs/breadcrumbs.component.ts","./src/app/parts/components/breadcrumbs/breadcrumbs.component.html","./src/app/parts/components/checkbox.component.ts","./src/app/parts/components/copy-button.component.ts","./src/app/parts/components/loader.component.ts","./src/app/parts/components/migrate-alert/migrate-alert.component.ts","./src/app/parts/components/migrate-alert/migrate-alert.component.html","./src/app/parts/components/register-context-templates.component.ts","./src/app/parts/components/shield-testnet/shield-testnet.component.ts","./src/app/parts/components/shield-testnet/shield-testnet.component.html","./src/app/parts/components/staking-switch.component.ts","./src/app/parts/components/switch.component.ts","./src/app/parts/components/synchronization-status.component.ts","./src/app/parts/components/transaction-details.component.ts","./src/app/parts/components/transaction-status/transaction-status.component.ts","./src/app/parts/components/transaction-status/transaction-status.component.html","./src/app/parts/components/visibility-balance-button/visibility-balance-button.component.ts","./src/app/parts/components/visibility-balance-button/visibility-balance-button.component.html","./src/app/parts/components/wallet-card/wallet-card.component.ts","./src/app/parts/components/wallet-card/wallet-card.component.html","./src/app/parts/data/assets.ts","./src/app/parts/data/constants.ts","./src/app/parts/data/scale-items.ts","./src/app/parts/directives/autofocus.directive.ts","./src/app/parts/directives/back-button/back-button.directive.ts","./src/app/parts/directives/back-button/back-button.module.ts","./src/app/parts/directives/default-img/default-img.directive.ts","./src/app/parts/directives/default-img/default-img.module.ts","./src/app/parts/directives/default-img/index.ts","./src/app/parts/directives/disable-price-fetch/disable-price-fetch.directive.ts","./src/app/parts/directives/disable-price-fetch/disable-price-fetch.module.ts","./src/app/parts/directives/disable-price-fetch/index.ts","./src/app/parts/directives/index.ts","./src/app/parts/directives/input-disable-selection/index.ts","./src/app/parts/directives/input-disable-selection/input-disable-selection.directive.ts","./src/app/parts/directives/input-disable-selection/input-disable-selection.module.ts","./src/app/parts/directives/input-validate/index.ts","./src/app/parts/directives/input-validate/input-validate.directive.ts","./src/app/parts/directives/input-validate/input-validate.module.ts","./src/app/parts/directives/lower-case.directive.ts","./src/app/parts/directives/tooltip/index.ts","./src/app/parts/directives/tooltip/tooltip.directive.ts","./src/app/parts/directives/tooltip/tooltip.module.ts","./src/app/parts/directives/visibility-balance.directive.ts","./src/app/parts/functions/get-amount-items.ts","./src/app/parts/functions/get-logo-template-by-asset-info.ts","./src/app/parts/functions/has-own-property.ts","./src/app/parts/functions/identify-transaction.ts","./src/app/parts/functions/int-to-money.ts","./src/app/parts/functions/money-to-int.ts","./src/app/parts/modals/asset-details/asset-details.component.ts","./src/app/parts/modals/asset-details/asset-details.component.html","./src/app/parts/modals/confirm-modal/confirm-modal.component.ts","./src/app/parts/modals/confirm-modal/confirm-modal.component.html","./src/app/parts/modals/confirm-modal/confirm-modal.module.ts","./src/app/parts/modals/modal-container/modal-container.component.ts","./src/app/parts/modals/modal-container/modal-container.component.html","./src/app/parts/modals/open-wallet-modal/open-wallet-modal.component.ts","./src/app/parts/modals/open-wallet-modal/open-wallet-modal.component.html","./src/app/parts/pipes/contract-status-messages-pipe/contract-status-messages-pipe.module.ts","./src/app/parts/pipes/contract-status-messages-pipe/contract-status-messages.pipe.ts","./src/app/parts/pipes/contract-status-messages-pipe/index.ts","./src/app/parts/pipes/contract-time-left-pipe/contract-time-left-pipe.module.ts","./src/app/parts/pipes/contract-time-left-pipe/contract-time-left.pipe.ts","./src/app/parts/pipes/contract-time-left-pipe/index.ts","./src/app/parts/pipes/get-amount-items.pipe.ts","./src/app/parts/pipes/get-asset-info.pipe.ts","./src/app/parts/pipes/get-logo-by-asset-info.pipe.ts","./src/app/parts/pipes/history-type-messages-pipe/history-type-messages-pipe.module.ts","./src/app/parts/pipes/history-type-messages-pipe/history-type-messages.pipe.ts","./src/app/parts/pipes/history-type-messages-pipe/index.ts","./src/app/parts/pipes/index.ts","./src/app/parts/pipes/int-to-money-pipe/index.ts","./src/app/parts/pipes/int-to-money-pipe/int-to-money-pipe.module.ts","./src/app/parts/pipes/int-to-money-pipe/int-to-money.pipe.ts","./src/app/parts/pipes/is-available-alias-name-pipe/index.ts","./src/app/parts/pipes/is-available-alias-name-pipe/is-available-alias-name-pipe.module.ts","./src/app/parts/pipes/is-available-alias-name-pipe/is-available-alias-name.pipe.ts","./src/app/parts/pipes/is-visible-control-error.pipe.ts","./src/app/parts/pipes/is-visible-fee.pipe.ts","./src/app/parts/pipes/money-to-int-pipe/index.ts","./src/app/parts/pipes/money-to-int-pipe/money-to-int-pipe.module.ts","./src/app/parts/pipes/money-to-int-pipe/money-to-int.pipe.ts","./src/app/parts/pipes/safe-html-pipe/index.ts","./src/app/parts/pipes/safe-html-pipe/safe-html-pipe.module.ts","./src/app/parts/pipes/safe-html-pipe/safe-html.pipe.ts","./src/app/parts/pipes/short-string.pipe.ts","./src/app/parts/services/back.service.ts","./src/app/parts/services/modal.service.ts","./src/app/parts/services/pdc-loaders.service.ts","./src/app/parts/services/variables.service.ts","./src/app/parts/services/wallets.service.ts","./src/app/parts/utils/MIME-types.ts","./src/app/parts/utils/generate-random-string.ts","./src/app/parts/utils/pdc-errors.ts","./src/app/parts/utils/pdc-validators.ts","./src/app/store/pagination/pagination.service.ts","./src/app/store/pagination/pagination.store.ts","./src/app/store/store.ts","./src/assets/material-pdc-icons/index.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Contracts } from './contract.model';\r\nimport { Transaction, Transactions } from './transaction.model';\r\nimport { BigNumber } from 'bignumber.js';\r\nimport { AssetBalance, AssetBalances, AssetInfo, AssetsInfoWhitelist, VerifiedAssetInfoWhitelist } from './assets.model';\r\nimport { BehaviorSubject, combineLatest } from 'rxjs';\r\nimport { Alias } from '@api/models/alias.model';\r\nimport { SendMoneyFormParams } from '@api/models/send-money.model';\r\nimport { defaultAssetLogoSrc, pdcAssetInfo } from '@parts/data/assets';\r\nimport { map } from 'rxjs/operators';\r\n\r\nexport const defaultAssetsInfoWhitelist = { global_whitelist: [], local_whitelist: [], own_assets: [] };\r\n\r\nexport const defaultVerificationAssetsInfoWhitelist = [];\r\n\r\nconst sortBalances = (value: AssetBalances | null | undefined): AssetBalances => {\r\n    const sortedBalances: AssetBalances = [];\r\n    if (value) {\r\n        const assets = [...value];\r\n        const indexPdc = assets.findIndex(({ asset_info: { ticker } }) => ticker === 'PDC');\r\n        if (indexPdc >= 0) {\r\n            const assetPdc = assets.splice(indexPdc, 1)[0];\r\n            sortedBalances.push(assetPdc);\r\n        }\r\n        const sortedAssetsByBalance = assets.sort((a, b) => new BigNumber(b.total).minus(new BigNumber(a.total)).toNumber());\r\n        sortedBalances.push(...sortedAssetsByBalance);\r\n    }\r\n    return sortedBalances;\r\n};\r\n\r\nconst prepareBalances = (\r\n    value: [AssetBalances, AssetsInfoWhitelist, VerifiedAssetInfoWhitelist]\r\n): AssetBalances => {\r\n    const [assetBalances, assetInfoWhitelist, verifiedAssetInfoWhitelist] = value;\r\n\r\n    const items: AssetBalances = [...assetBalances];\r\n\r\n    const ensureLogoAndPriceUrl = (asset_info: AssetInfo): AssetInfo => ({\r\n        ...asset_info,\r\n        logo: asset_info.logo || (asset_info.asset_id === pdcAssetInfo.asset_id ? pdcAssetInfo.logo : defaultAssetLogoSrc),\r\n        price_url: asset_info.price_url || (asset_info.asset_id === pdcAssetInfo.asset_id ? pdcAssetInfo.price_url : ''),\r\n    });\r\n\r\n    for (const asset_info of verifiedAssetInfoWhitelist) {\r\n        const assetBalance = items.find(i => i.asset_info.asset_id === asset_info.asset_id);\r\n\r\n        if (assetBalance) {\r\n            assetBalance.asset_info = { ...assetBalance.asset_info, ...ensureLogoAndPriceUrl(asset_info) };\r\n        } else {\r\n            items.push({\r\n                asset_info: ensureLogoAndPriceUrl(asset_info),\r\n                awaiting_in: 0,\r\n                awaiting_out: 0,\r\n                total: 0,\r\n                unlocked: 0,\r\n            });\r\n        }\r\n    }\r\n\r\n    const { global_whitelist, local_whitelist, own_assets } = assetInfoWhitelist;\r\n    const allWhitelistedAssets = [...global_whitelist, ...local_whitelist, ...own_assets];\r\n\r\n    for (const asset_info of allWhitelistedAssets) {\r\n        const assetBalance = items.find(i => i.asset_info.asset_id === asset_info.asset_id);\r\n\r\n        if (assetBalance) {\r\n            assetBalance.asset_info = { ...ensureLogoAndPriceUrl(asset_info), ...assetBalance.asset_info };\r\n        }\r\n    }\r\n\r\n    for (const assetBalance of items) {\r\n        assetBalance.asset_info = ensureLogoAndPriceUrl(assetBalance.asset_info);\r\n    }\r\n\r\n    return items;\r\n};\r\n\r\nexport class Wallet {\r\n    open_from_exist: boolean;\r\n\r\n    updated = false;\r\n\r\n    wallet_id: number;\r\n\r\n    name: string;\r\n\r\n    pass: string;\r\n\r\n    path: string;\r\n\r\n    address: string;\r\n\r\n    assetsInfoWhitelist: AssetsInfoWhitelist = defaultAssetsInfoWhitelist;\r\n\r\n    get allAssetsInfoWhitelist(): AssetInfo[] {\r\n        const { global_whitelist = [], local_whitelist = [], own_assets = [] } = this.assetsInfoWhitelist;\r\n        return [...global_whitelist, ...local_whitelist, ...own_assets];\r\n    }\r\n\r\n    get allAssetsInfo(): AssetInfo[] {\r\n        return [pdcAssetInfo, ...this.allAssetsInfoWhitelist];\r\n    }\r\n\r\n    originalBalances$: BehaviorSubject<AssetBalances> = new BehaviorSubject<AssetBalances>([]);\r\n\r\n    assetsInfoWhitelist$: BehaviorSubject<AssetsInfoWhitelist> = new BehaviorSubject(defaultAssetsInfoWhitelist);\r\n\r\n    verificationAssetsInfoWhitelist$: BehaviorSubject<VerifiedAssetInfoWhitelist> = new BehaviorSubject<VerifiedAssetInfoWhitelist>(\r\n        defaultVerificationAssetsInfoWhitelist\r\n    );\r\n\r\n    balances$: BehaviorSubject<AssetBalances> = new BehaviorSubject([]);\r\n\r\n    get balances(): AssetBalances {\r\n        return this.balances$.value;\r\n    }\r\n\r\n    set balances(value: AssetBalances | null | undefined) {\r\n        this.originalBalances$.next(value ?? []);\r\n    }\r\n\r\n    mined_total: number;\r\n\r\n    tracking_hey: string;\r\n\r\n    is_auditable: boolean;\r\n\r\n    is_watch_only: boolean;\r\n\r\n    exclude_mining_txs: boolean;\r\n\r\n    alias_available: boolean;\r\n\r\n    has_bare_unspent_outputs = false;\r\n\r\n    alias?: Partial<Alias>;\r\n\r\n    wakeAlias?: boolean;\r\n\r\n    staking?: boolean;\r\n\r\n    new_messages?: number;\r\n\r\n    new_contracts?: number;\r\n\r\n    history: Transactions = [];\r\n\r\n    total_history_item?: number;\r\n\r\n    pages = [];\r\n\r\n    totalPages: number;\r\n\r\n    currentPage: number;\r\n\r\n    excluded_history: Transactions = [];\r\n\r\n    contracts: Contracts = [];\r\n\r\n    progress?: number;\r\n\r\n    loaded?: boolean;\r\n\r\n    restore?: boolean;\r\n\r\n    sendMoneyParams: SendMoneyFormParams | null = null;\r\n\r\n    constructor(id, name, pass, path, address, balances, unlocked_balance, mined = 0, tracking = '') {\r\n        this.wallet_id = id;\r\n        this.name = name;\r\n        this.pass = pass;\r\n        this.path = path;\r\n        this.address = address;\r\n        this.balances = balances;\r\n        this.mined_total = mined;\r\n        this.tracking_hey = tracking;\r\n\r\n        this.alias = {};\r\n        this.staking = false;\r\n        this.new_messages = 0;\r\n        this.new_contracts = 0;\r\n\r\n        this.history = [];\r\n        this.excluded_history = [];\r\n\r\n        this.progress = 0;\r\n        this.loaded = false;\r\n\r\n        combineLatest([\r\n            this.originalBalances$.pipe(map(sortBalances)),\r\n            this.assetsInfoWhitelist$,\r\n            this.verificationAssetsInfoWhitelist$,\r\n        ]).pipe(map(prepareBalances)).subscribe({\r\n            next: (value) => {\r\n                this.balances$.next(value);\r\n            }\r\n        });\r\n    }\r\n\r\n    getBalanceByAssetId(value: string): AssetBalance | undefined {\r\n        return this.balances.find(({ asset_info: { asset_id } }) => asset_id === value);\r\n    }\r\n\r\n    getAssetInfoByAssetId(value: string): AssetInfo | undefined {\r\n        return this.allAssetsInfo.find(({ asset_id }) => asset_id === value);\r\n    }\r\n\r\n    getBalanceByTicker(searchTicker: string): AssetBalance | undefined {\r\n        return this.balances.find(({ asset_info: { ticker } }) => ticker === searchTicker);\r\n    }\r\n\r\n    getMoneyEquivalentForPdc(equivalent): string {\r\n        const balancePdc = this.getBalanceByTicker('PDC')?.total || 0;\r\n        return new BigNumber(balancePdc).multipliedBy(equivalent).toFixed(0);\r\n    }\r\n\r\n    prepareHistory(items: Transaction[]): void {\r\n        for (let i = 0; i < items.length; i++) {\r\n            if (\r\n                (items[i].tx_type === 7 && items[i].subtransfers?.find(({ is_income }) => is_income)) ||\r\n                (items[i].tx_type === 11 && items[i].subtransfers?.find(({ is_income }) => is_income))\r\n            ) {\r\n                let exists = false;\r\n                for (let j = 0; j < this.excluded_history.length; j++) {\r\n                    if (this.excluded_history[j].tx_hash === items[i].tx_hash) {\r\n                        exists = true;\r\n                        if (this.excluded_history[j].height !== items[i].height) {\r\n                            this.excluded_history[j] = items[i];\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n                if (!exists) {\r\n                    this.excluded_history.push(items[i]);\r\n                }\r\n            } else {\r\n                let exists = false;\r\n                for (let j = 0; j < this.history.length; j++) {\r\n                    if (this.history[j].tx_hash === items[i].tx_hash) {\r\n                        exists = true;\r\n                        if (this.history[j].height !== items[i].height) {\r\n                            this.history[j] = items[i];\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n                if (!exists) {\r\n                    if (this.history.length > 0 && items[i].timestamp >= this.history[0].timestamp) {\r\n                        this.history.unshift(items[i]);\r\n                    } else {\r\n                        this.history.push(items[i]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    removeFromHistory(hash: string): void {\r\n        for (let i = 0; i < this.history.length; i++) {\r\n            if (this.history[i].tx_hash === hash) {\r\n                this.history.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport interface DeeplinkParams {\r\n    action?: 'send' | string;\r\n    address?: string;\r\n    amount?: string;\r\n    my_deposit?: string;\r\n    seller_deposit?: string;\r\n    seller_address?: string;\r\n    hide_sender?: string;\r\n    hide_receiver?: string;\r\n    title?: string;\r\n    description?: string;\r\n    category?: string;\r\n    price?: string;\r\n    img_url?: string;\r\n    url?: string;\r\n    contact?: string;\r\n    comment?: string;\r\n    comments?: string;\r\n    mixins?: string;\r\n    fee?: string;\r\n}\r\n\r\nexport interface PushOffer {\r\n    wallet_id: number;\r\n    od: {\r\n        ap: string;\r\n        at: string;\r\n        cat: string;\r\n        cnt: string;\r\n        com: string;\r\n        do: string;\r\n        et: number;\r\n        fee: BigNumber;\r\n        lci: string;\r\n        lco: string;\r\n        ot: number;\r\n        pt: string;\r\n        t: string;\r\n        url: string;\r\n    };\r\n}\r\n\r\nexport interface ResponseGetWalletInfo {\r\n    address: string;\r\n    balances: AssetBalances;\r\n    is_auditable: boolean;\r\n    is_watch_only: boolean;\r\n    mined_total: number;\r\n    path: string;\r\n    view_sec_key: string;\r\n}\r\n","import { inject, Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { WrapInfo } from '@api/models/wrap-info';\r\nimport { VerifiedAssetInfoWhitelist } from '@api/models/assets.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class ApiPdcService {\r\n    private httpClient = inject(HttpClient);\r\n\r\n    getWrapInfo(): Observable<WrapInfo> {\r\n        return this.httpClient.get<WrapInfo>('https://wrapped.pdc.org/api2/get_wrap_info');\r\n    }\r\n\r\n    getVerifiedAssetInfoWhitelist(type: 'mainnet' | 'testnet'): Observable<{\r\n        assets: VerifiedAssetInfoWhitelist;\r\n        signature: string;\r\n    }> {\r\n        let url: string;\r\n        if (type === 'mainnet') {\r\n            url = 'https://api.pdc.org/assets_whitelist.json';\r\n        } else {\r\n            url = 'https://api.pdc.org/assets_whitelist_testnet.json';\r\n        }\r\n\r\n        return this.httpClient.get<{ assets: VerifiedAssetInfoWhitelist; signature: string }>(url, {\r\n            headers: { 'Cache-Control': 'no-cache' },\r\n        });\r\n    }\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { ModalService } from '@parts/services/modal.service';\r\nimport { MoneyToIntPipe } from '@parts/pipes/money-to-int-pipe/money-to-int.pipe';\r\nimport JSONBigNumber from 'json-bignumber';\r\nimport { BigNumber } from 'bignumber.js';\r\nimport { ResponseGetWalletInfo } from '../models/wallet.model';\r\nimport {\r\n    AssetInfo,\r\n    ParamsAddCustomAssetId,\r\n    ParamsRemoveCustomAssetId,\r\n    ResponseAddCustomAssetId,\r\n    ResponseRemoveCustomAssetId,\r\n} from '@api/models/assets.model';\r\nimport { Alias } from '@api/models/alias.model';\r\nimport { SendMoneyParams } from '@api/models/send-money.model';\r\nimport { ParamsCallRpc } from '@api/models/call_rpc.model';\r\n\r\nexport interface PramsObj {\r\n    [key: string]: any;\r\n}\r\n\r\nexport type PramsArray = (string | PramsObj)[];\r\n\r\nexport type Params = string | PramsObj | PramsArray;\r\n\r\nexport enum ParamsType {\r\n    array = 'array',\r\n    object = 'object',\r\n    string = 'string',\r\n}\r\n\r\nexport const getParamsType = (value: Params): ParamsType | null => {\r\n    if (!value) {\r\n        return null;\r\n    }\r\n    const array: false | ParamsType.array = Array.isArray(value) && ParamsType.array;\r\n    const object: false | ParamsType = Object.keys(ParamsType).includes(typeof value) && ParamsType[typeof value];\r\n    return array || object || null;\r\n};\r\n\r\nexport type ConvertersObjectForTypes = {\r\n    [key in ParamsType]: (value: Params) => string | string[];\r\n};\r\n\r\nexport const convertersObjectForTypes: ConvertersObjectForTypes = {\r\n    [ParamsType.string]: (value: string): string => value,\r\n    [ParamsType.object]: (value: PramsObj): string => JSONBigNumber.stringify(value),\r\n    [ParamsType.array]: (value: PramsArray): string[] =>\r\n        value.map(v => {\r\n            return typeof v === ParamsType.string ? (v as string) : JSONBigNumber.stringify(v);\r\n        }),\r\n};\r\n\r\nexport const convertorParams = (value: Params): string | string[] => {\r\n    const type: ParamsType = getParamsType(value);\r\n    return convertersObjectForTypes[type](value);\r\n};\r\n\r\nexport interface ResponseAsyncTransfer {\r\n    error_code: string | 'NOT_ENOUGH_MONEY' | 'OK';\r\n    response_data: {\r\n        success: boolean;\r\n        tx_blob_size: number;\r\n        tx_hash: string;\r\n    };\r\n}\r\n\r\nexport interface AsyncCommandResults<T = any> {\r\n    job_id: number;\r\n    response: T;\r\n}\r\n\r\nexport enum StatusCurrentActionState {\r\n    STATE_SENDING = 'STATE_SENDING',\r\n    STATE_SENT_SUCCESS = 'STATE_SENT_SUCCESS',\r\n    STATE_SEND_FAILED = 'STATE_SEND_FAILED',\r\n    STATE_INITIALIZING = 'STATE_INITIALIZING',\r\n    STATE_DOWNLOADING_CONSENSUS = 'STATE_DOWNLOADING_CONSENSUS',\r\n    STATE_MAKING_TUNNEL_A = 'STATE_MAKING_TUNNEL_A',\r\n    STATE_MAKING_TUNNEL_B = 'STATE_MAKING_TUNNEL_B',\r\n    STATE_CREATING_STREAM = 'STATE_CREATING_STREAM',\r\n    STATE_FAILED = 'STATE_FAILED',\r\n    STATE_SUCCESS = 'STATE_SUCCESS',\r\n}\r\n\r\nexport interface CurrentActionState {\r\n    status: StatusCurrentActionState;\r\n    wallet_id: number;\r\n}\r\n\r\nexport enum Commands {\r\n    money_transfer_cancel = 'money_transfer_cancel',\r\n    handle_deeplink_click = 'handle_deeplink_click',\r\n    money_transfer = 'money_transfer',\r\n    update_daemon_state = 'update_daemon_state',\r\n    wallet_sync_progress = 'wallet_sync_progress',\r\n    update_wallet_status = 'update_wallet_status',\r\n    quit_requested = 'quit_requested',\r\n    on_core_event = 'on_core_event',\r\n    get_wallet_info = 'get_wallet_info',\r\n    remove_custom_asset_id = 'remove_custom_asset_id',\r\n    add_custom_asset_id = 'add_custom_asset_id',\r\n    get_options = 'get_options',\r\n    handle_current_action_state = 'handle_current_action_state',\r\n    set_enable_tor = 'set_enable_tor',\r\n    dispatch_async_call_result = 'dispatch_async_call_result',\r\n    async_call = 'async_call',\r\n    async_call_2a = 'async_call_2a',\r\n    set_log_level = 'set_log_level',\r\n    get_network_type = 'get_network_type',\r\n    get_version = 'get_version',\r\n    get_tx_pool_info = 'get_tx_pool_info',\r\n    get_recent_transfers = 'get_recent_transfers',\r\n    resync_wallet = 'resync_wallet',\r\n    get_alias_coast = 'get_alias_coast',\r\n    get_alias_info_by_address = 'get_alias_info_by_address',\r\n    get_alias_info_by_name = 'get_alias_info_by_name',\r\n    get_all_aliases = 'get_all_aliases',\r\n    request_alias_update = 'request_alias_update',\r\n    webkit_launched_script = 'webkit_launched_script',\r\n    on_request_quit = 'on_request_quit',\r\n    get_app_data = 'get_app_data',\r\n    store_app_data = 'store_app_data',\r\n    get_secure_app_data = 'get_secure_app_data',\r\n    set_master_password = 'set_master_password',\r\n    check_master_password = 'check_master_password',\r\n    get_is_disabled_notifications = 'get_is_disabled_notifications',\r\n    set_is_disabled_notifications = 'set_is_disabled_notifications',\r\n    store_secure_app_data = 'store_secure_app_data',\r\n    drop_secure_app_data = 'drop_secure_app_data',\r\n    have_secure_app_data = 'have_secure_app_data',\r\n    show_savefile_dialog = 'show_savefile_dialog',\r\n    show_openfile_dialog = 'show_openfile_dialog',\r\n    store_to_file = 'store_to_file',\r\n    load_from_file = 'load_from_file',\r\n    push_offer = 'push_offer',\r\n    generate_wallet = 'generate_wallet',\r\n    export_wallet_history = 'export_wallet_history',\r\n    open_wallet = 'open_wallet',\r\n    close_wallet = 'close_wallet',\r\n    get_smart_wallet_info = 'get_smart_wallet_info',\r\n    get_seed_phrase_info = 'get_seed_phrase_info',\r\n    run_wallet = 'run_wallet',\r\n    is_valid_restore_wallet_text = 'is_valid_restore_wallet_text',\r\n    restore_wallet = 'restore_wallet',\r\n    transfer = 'transfer',\r\n    validate_address = 'validate_address',\r\n    set_clipboard = 'set_clipboard',\r\n    get_clipboard = 'get_clipboard',\r\n    create_proposal = 'create_proposal',\r\n    get_contracts = 'get_contracts',\r\n    accept_proposal = 'accept_proposal',\r\n    release_contract = 'release_contract',\r\n    request_cancel_contract = 'request_cancel_contract',\r\n    accept_cancel_contract = 'accept_cancel_contract',\r\n    get_mining_history = 'get_mining_history',\r\n    start_pos_mining = 'start_pos_mining',\r\n    stop_pos_mining = 'stop_pos_mining',\r\n    open_url_in_browser = 'open_url_in_browser',\r\n    start_backend = 'start_backend',\r\n    get_default_fee = 'get_default_fee',\r\n    set_localization_strings = 'set_localization_strings',\r\n    request_alias_registration = 'request_alias_registration',\r\n    call_rpc = 'call_rpc',\r\n    call_wallet_rpc = 'call_wallet_rpc',\r\n    setup_jwt_wallet_rpc = 'setup_jwt_wallet_rpc',\r\n    show_notification = 'show_notification',\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class BackendService {\r\n    dispatchAsyncCallResult$ = new Subject<AsyncCommandResults>();\r\n\r\n    handleCurrentActionState$ = new Subject<CurrentActionState>();\r\n\r\n    backendObject: any;\r\n\r\n    backendLoaded = false;\r\n\r\n    constructor(\r\n        private translate: TranslateService,\r\n        private variablesService: VariablesService,\r\n        private modalService: ModalService,\r\n        private moneyToIntPipe: MoneyToIntPipe,\r\n        private ngZone: NgZone\r\n    ) {}\r\n\r\n    static bigNumberParser(key, val): any {\r\n        if (\r\n            val?.constructor?.name === 'BigNumber' &&\r\n            [\r\n                'balance',\r\n                'unlocked_balance',\r\n                'amount',\r\n                'fee',\r\n                'b_fee',\r\n                'to_pay',\r\n                'a_pledge',\r\n                'b_pledge',\r\n                'coast',\r\n                'a',\r\n                'total',\r\n                'unlocked',\r\n                'current_supply',\r\n                'total_max_supply',\r\n            ].indexOf(key) === -1\r\n        ) {\r\n            return val.toNumber();\r\n        }\r\n        if (key === 'rcv' || key === 'spn') {\r\n            for (let i = 0; i < val.length; i++) {\r\n                val[i] = new BigNumber(val[i]);\r\n            }\r\n        }\r\n        return val;\r\n    }\r\n\r\n    static Debug(type, message): void {\r\n        switch (type) {\r\n            case 0:\r\n                console.error(message);\r\n                break;\r\n            case 1:\r\n                console.warn(message);\r\n                break;\r\n            case 2:\r\n                console.log(message);\r\n                break;\r\n            default:\r\n                console.log(message);\r\n                break;\r\n        }\r\n    }\r\n\r\n    eventSubscribe(command: Commands, callback): void {\r\n        if (command === Commands.on_core_event) {\r\n            this.backendObject[command].connect(callback);\r\n        } else {\r\n            this.backendObject[command].connect(str => {\r\n                callback(JSONBigNumber.parse(str, BackendService.bigNumberParser));\r\n            });\r\n        }\r\n    }\r\n\r\n    initService(): Observable<string> {\r\n        return new Observable(observer => {\r\n            if (!this.backendLoaded) {\r\n                this.backendLoaded = true;\r\n                (<any>window).QWebChannel((<any>window).qt.webChannelTransport, channel => {\r\n                    this.backendObject = channel.objects.mediator_object;\r\n                    observer.next('backendObject loaded');\r\n                });\r\n            } else {\r\n                observer.error('backend not loaded');\r\n                if (!this.backendObject) {\r\n                    observer.error('backendObject not loaded');\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    webkitLaunchedScript(): void {\r\n        this.runCommand(Commands.webkit_launched_script);\r\n    }\r\n\r\n    quitRequest(): void {\r\n        this.runCommand(Commands.on_request_quit);\r\n    }\r\n\r\n    getAppData(callback): void {\r\n        this.runCommand(Commands.get_app_data, {}, callback);\r\n    }\r\n\r\n    storeAppData(callback?): void {\r\n        if (this.variablesService.wallets.length > 0) {\r\n            this.variablesService.settings.wallets = [];\r\n            this.variablesService.wallets.forEach(wallet => {\r\n                this.variablesService.settings.wallets.push({\r\n                    name: wallet.name,\r\n                    path: wallet.path,\r\n                });\r\n            });\r\n        }\r\n        this.runCommand(Commands.store_app_data, this.variablesService.settings, callback);\r\n    }\r\n\r\n    getSecureAppData(pass, callback): void {\r\n        this.runCommand(Commands.get_secure_app_data, pass, callback);\r\n    }\r\n\r\n    setMasterPassword(pass, callback): void {\r\n        this.runCommand(Commands.set_master_password, pass, callback);\r\n    }\r\n\r\n    checkMasterPassword(pass, callback): void {\r\n        this.runCommand(Commands.check_master_password, pass, callback);\r\n    }\r\n\r\n    getIsDisabledNotifications(callback): void {\r\n        const params = {};\r\n        this.runCommand(Commands.get_is_disabled_notifications, params, callback);\r\n    }\r\n\r\n    setIsDisabledNotifications(state): void {\r\n        this.runCommand(Commands.set_is_disabled_notifications, state);\r\n    }\r\n\r\n    storeSecureAppData(callback?): void {\r\n        const wallets = [];\r\n        const contacts = [];\r\n        this.variablesService.wallets.forEach(wallet => {\r\n            wallets.push({\r\n                name: wallet.name,\r\n                pass: wallet.pass,\r\n                path: wallet.path,\r\n                staking: wallet.staking,\r\n            });\r\n        });\r\n        this.variablesService.contacts.forEach(contact => {\r\n            contacts.push({\r\n                name: contact.name,\r\n                address: contact.address,\r\n                notes: contact.notes,\r\n            });\r\n        });\r\n        const data = { wallets: wallets, contacts: contacts };\r\n        this.backendObject[Commands.store_secure_app_data](JSON.stringify(data), this.variablesService.appPass, dataStore => {\r\n            this.backendCallback(dataStore, {}, callback, Commands.store_secure_app_data);\r\n        });\r\n    }\r\n\r\n    dropSecureAppData(callback?): void {\r\n        this.backendObject[Commands.drop_secure_app_data]('', dataStore => {\r\n            this.backendCallback(dataStore, {}, callback, Commands.drop_secure_app_data);\r\n        });\r\n    }\r\n\r\n    haveSecureAppData(callback): void {\r\n        this.runCommand(Commands.have_secure_app_data, {}, callback);\r\n    }\r\n\r\n    saveFileDialog(caption, fileMask, default_path, callback): void {\r\n        const dir = default_path ? default_path : '/';\r\n        const params = {\r\n            caption: caption,\r\n            filemask: fileMask,\r\n            default_dir: dir,\r\n        };\r\n        this.runCommand(Commands.show_savefile_dialog, params, callback);\r\n    }\r\n\r\n    openFileDialog(caption, filemask, default_path, callback): void {\r\n        const default_dir = default_path ? default_path : '/';\r\n        const params = {\r\n            caption,\r\n            filemask,\r\n            default_dir,\r\n        };\r\n        this.runCommand(Commands.show_openfile_dialog, params, callback);\r\n    }\r\n\r\n    storeFile(path, buff): void {\r\n        this.backendObject[Commands.store_to_file](path, buff);\r\n    }\r\n\r\n    loadFile(path, callback): void {\r\n        this.runCommand(Commands.load_from_file, path, callback);\r\n    }\r\n\r\n    push_offer(params, callback): void {\r\n        this.runCommand(Commands.push_offer, params, callback);\r\n    }\r\n\r\n    generateWallet(path, pass, callback): void {\r\n        const params = {\r\n            path: path,\r\n            pass: pass,\r\n        };\r\n        this.runCommand(Commands.generate_wallet, params, callback);\r\n    }\r\n\r\n    exportWalletHistory(json_string): void {\r\n        this.runCommand(Commands.export_wallet_history, json_string);\r\n    }\r\n\r\n    openWallet(path, pass, txs_to_return, testEmpty, callback): void {\r\n        const params = {\r\n            path: path,\r\n            pass: pass,\r\n            txs_to_return: txs_to_return,\r\n        };\r\n        params['testEmpty'] = !!testEmpty;\r\n        this.runCommand(Commands.open_wallet, params, callback);\r\n    }\r\n\r\n    closeWallet(wallet_id, callback?): void {\r\n        this.runCommand(Commands.close_wallet, { wallet_id: +wallet_id }, callback);\r\n    }\r\n\r\n    getSmartWalletInfo({ wallet_id, seed_password }, callback): void {\r\n        this.runCommand(Commands.get_smart_wallet_info, { wallet_id: +wallet_id, seed_password }, callback);\r\n    }\r\n\r\n    getSeedPhraseInfo(param, callback): void {\r\n        this.runCommand(Commands.get_seed_phrase_info, param, callback);\r\n    }\r\n\r\n    runWallet(wallet_id, callback?): void {\r\n        this.runCommand(Commands.run_wallet, { wallet_id: +wallet_id }, callback);\r\n    }\r\n\r\n    isValidRestoreWalletText(param, callback): void {\r\n        this.runCommand(Commands.is_valid_restore_wallet_text, param, callback);\r\n    }\r\n\r\n    restoreWallet(path, pass, seed_phrase, seed_pass, callback): void {\r\n        const params = {\r\n            seed_phrase: seed_phrase,\r\n            path: path,\r\n            pass: pass,\r\n            seed_pass,\r\n        };\r\n        this.runCommand(Commands.restore_wallet, params, callback);\r\n    }\r\n\r\n    sendMoney({ wallet_id, address, amount, fee, mixin, comment, hide_receiver, push_payer, asset_id }: SendMoneyParams, callback): void {\r\n        const params = {\r\n            wallet_id,\r\n            destinations: [\r\n                {\r\n                    address,\r\n                    amount,\r\n                    ...(asset_id && { asset_id }),\r\n                },\r\n            ],\r\n            mixin_count: mixin ?? 0,\r\n            lock_time: 0,\r\n            fee: this.moneyToIntPipe.transform(fee),\r\n            comment: comment,\r\n            push_payer,\r\n            hide_receiver\r\n        };\r\n\r\n        this.asyncCall(Commands.transfer, params, callback);\r\n    }\r\n\r\n    setupJwtWalletRpc(value: { pdcCompation: boolean; secret: string }): void {\r\n        const { secret } = value;\r\n\r\n        this.runCommand(Commands.setup_jwt_wallet_rpc, secret, () => {\r\n            this.variablesService.settings.pdcCompanionForm = value;\r\n            this.storeAppData();\r\n        });\r\n    }\r\n\r\n    validateAddress(address, callback): void {\r\n        this.runCommand(Commands.validate_address, address, callback);\r\n    }\r\n\r\n    setClipboard(str, callback?): void {\r\n        this.runCommand(Commands.set_clipboard, str, callback);\r\n    }\r\n\r\n    getClipboard(callback): void {\r\n        this.runCommand(Commands.get_clipboard, {}, callback);\r\n    }\r\n\r\n    createProposal(wallet_id, title, comment, a_addr, b_addr, to_pay, a_pledge, b_pledge, time, payment_id, callback): void {\r\n        const params = {\r\n            wallet_id: parseInt(wallet_id, 10),\r\n            details: {\r\n                t: title,\r\n                c: comment,\r\n                a_addr: a_addr,\r\n                b_addr: b_addr,\r\n                to_pay: this.moneyToIntPipe.transform(to_pay),\r\n                a_pledge: this.moneyToIntPipe.transform(a_pledge),\r\n                b_pledge: this.moneyToIntPipe.transform(b_pledge),\r\n            },\r\n            payment_id: payment_id,\r\n            expiration_period: parseInt(time, 10) * 60 * 60,\r\n            fee: this.variablesService.default_fee_big,\r\n            b_fee: this.variablesService.default_fee_big,\r\n        };\r\n        BackendService.Debug(1, params);\r\n        this.runCommand(Commands.create_proposal, params, callback);\r\n    }\r\n\r\n    getContracts(wallet_id, callback): void {\r\n        const params = {\r\n            wallet_id: parseInt(wallet_id, 10),\r\n        };\r\n        BackendService.Debug(1, params);\r\n        this.runCommand(Commands.get_contracts, params, callback);\r\n    }\r\n\r\n    acceptProposal(wallet_id, contract_id, callback): void {\r\n        const params = {\r\n            wallet_id: parseInt(wallet_id, 10),\r\n            contract_id: contract_id,\r\n        };\r\n        BackendService.Debug(1, params);\r\n        this.runCommand(Commands.accept_proposal, params, callback);\r\n    }\r\n\r\n    releaseProposal(wallet_id, contract_id, release_type, callback): void {\r\n        const params = {\r\n            wallet_id: parseInt(wallet_id, 10),\r\n            contract_id: contract_id,\r\n            release_type: release_type, // \"normal\" or \"burn\"\r\n        };\r\n        BackendService.Debug(1, params);\r\n        this.runCommand(Commands.release_contract, params, callback);\r\n    }\r\n\r\n    requestCancelContract(wallet_id, contract_id, time, callback): void {\r\n        const params = {\r\n            wallet_id: parseInt(wallet_id, 10),\r\n            contract_id: contract_id,\r\n            fee: this.variablesService.default_fee_big,\r\n            expiration_period: parseInt(time, 10) * 60 * 60,\r\n        };\r\n        BackendService.Debug(1, params);\r\n        this.runCommand(Commands.request_cancel_contract, params, callback);\r\n    }\r\n\r\n    acceptCancelContract(wallet_id, contract_id, callback): void {\r\n        const params = {\r\n            wallet_id: parseInt(wallet_id, 10),\r\n            contract_id: contract_id,\r\n        };\r\n        BackendService.Debug(1, params);\r\n        this.runCommand(Commands.accept_cancel_contract, params, callback);\r\n    }\r\n\r\n    getMiningHistory(wallet_id, callback): void {\r\n        this.runCommand(Commands.get_mining_history, { wallet_id: parseInt(wallet_id, 10) }, callback);\r\n    }\r\n\r\n    startPosMining(wallet_id, callback?): void {\r\n        this.runCommand(Commands.start_pos_mining, { wallet_id: parseInt(wallet_id, 10) }, callback);\r\n    }\r\n\r\n    stopPosMining(wallet_id, callback?): void {\r\n        this.runCommand(Commands.stop_pos_mining, { wallet_id: parseInt(wallet_id, 10) }, callback);\r\n    }\r\n\r\n    openUrlInBrowser(url, callback?): void {\r\n        this.runCommand(Commands.open_url_in_browser, url, callback);\r\n    }\r\n\r\n    start_backend(node, host, port, callback): void {\r\n        const params = {\r\n            configure_for_remote_node: node,\r\n            remote_node_host: host,\r\n            remote_node_port: parseInt(port, 10),\r\n        };\r\n        this.runCommand(Commands.start_backend, params, callback);\r\n    }\r\n\r\n    getDefaultFee(callback): void {\r\n        this.runCommand(Commands.get_default_fee, {}, callback);\r\n    }\r\n\r\n    setBackendLocalization(stringsArray, title, callback?): void {\r\n        const params = {\r\n            strings: stringsArray,\r\n            language_title: title,\r\n        };\r\n        this.runCommand(Commands.set_localization_strings, params, callback);\r\n    }\r\n\r\n    registerAlias(wallet_id, alias, address, fee, comment, reward, callback): void {\r\n        const params = {\r\n            wallet_id: wallet_id,\r\n            alias: {\r\n                alias: alias,\r\n                address: address,\r\n                tracking_key: '',\r\n                comment: comment,\r\n            },\r\n            fee: this.moneyToIntPipe.transform(fee),\r\n            reward: this.moneyToIntPipe.transform(reward),\r\n        };\r\n        this.runCommand(Commands.request_alias_registration, params, callback);\r\n    }\r\n\r\n    updateAlias(wallet_id, alias, fee, callback): void {\r\n        const params = {\r\n            wallet_id: wallet_id,\r\n            alias: {\r\n                alias: alias.name.replace('@', ''),\r\n                address: alias.address,\r\n                tracking_key: '',\r\n                comment: alias.comment,\r\n            },\r\n            fee: this.moneyToIntPipe.transform(fee),\r\n        };\r\n        this.runCommand(Commands.request_alias_update, params, callback);\r\n    }\r\n\r\n    getAllAliases(callback): void {\r\n        this.runCommand(Commands.get_all_aliases, {}, callback);\r\n    }\r\n\r\n    getAliasInfoByName(value, callback): void {\r\n        this.runCommand(Commands.get_alias_info_by_name, value, callback);\r\n    }\r\n\r\n    getAliasByAddress(value, callback): void {\r\n        this.runCommand(Commands.get_alias_info_by_address, value, callback);\r\n    }\r\n\r\n    getAliasCoast(alias, callback): void {\r\n        this.runCommand(Commands.get_alias_coast, { v: alias }, callback);\r\n    }\r\n\r\n    resyncWallet(id): void {\r\n        this.runCommand(Commands.resync_wallet, { wallet_id: id });\r\n    }\r\n\r\n    getWalletAlias(address): Partial<Alias> {\r\n        if (address !== null && this.variablesService.daemon_state === 2) {\r\n            if (this.variablesService.aliasesChecked[address] == null) {\r\n                this.variablesService.aliasesChecked[address] = {};\r\n                if (this.variablesService.aliases.length) {\r\n                    for (let i = 0, length = this.variablesService.aliases.length; i < length; i++) {\r\n                        if (i in this.variablesService.aliases && this.variablesService.aliases[i]['address'] === address) {\r\n                            this.variablesService.aliasesChecked[address]['name'] = this.variablesService.aliases[i].name;\r\n                            this.variablesService.aliasesChecked[address]['address'] = this.variablesService.aliases[i].address;\r\n                            this.variablesService.aliasesChecked[address]['comment'] = this.variablesService.aliases[i].comment;\r\n                            return this.variablesService.aliasesChecked[address];\r\n                        }\r\n                    }\r\n                }\r\n                this.getAliasByAddress(address, (status, data) => {\r\n                    if (status) {\r\n                        this.variablesService.aliasesChecked[data.address]['name'] = '@' + data.alias;\r\n                        this.variablesService.aliasesChecked[data.address]['address'] = data.address;\r\n                        this.variablesService.aliasesChecked[data.address]['comment'] = data.comment;\r\n                    }\r\n                });\r\n            }\r\n            return this.variablesService.aliasesChecked[address];\r\n        }\r\n        return {};\r\n    }\r\n\r\n    getContactAlias(): void {\r\n        if (this.variablesService.contacts.length > 0 && this.variablesService.daemon_state === 2) {\r\n            this.variablesService.contacts.map(contact => {\r\n                this.getAliasByAddress(contact.address, (status, data) => {\r\n                    if (status) {\r\n                        if (data.alias) {\r\n                            contact.alias = '@' + data.alias;\r\n                        }\r\n                    } else {\r\n                        contact.alias = null;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    getRecentTransfers(id, offset, count, exclude_mining_txs, callback): void {\r\n        const params = {\r\n            wallet_id: id,\r\n            offset: offset,\r\n            count: count,\r\n            exclude_mining_txs: exclude_mining_txs,\r\n        };\r\n        this.runCommand(Commands.get_recent_transfers, params, callback);\r\n    }\r\n\r\n    getPoolInfo(callback): void {\r\n        this.runCommand(Commands.get_tx_pool_info, {}, callback);\r\n    }\r\n\r\n    getVersion(callback): void {\r\n        this.runCommand(Commands.get_version, {}, (status, version, errorVersion) => {\r\n            this.runCommand(Commands.get_network_type, {}, (status_network, type, errorType) => {\r\n                callback(version, type, errorVersion ?? errorType);\r\n            });\r\n        });\r\n    }\r\n\r\n    setLogLevel(level): void {\r\n        this.runCommand(Commands.set_log_level, { v: level });\r\n    }\r\n\r\n    asyncCall(command: string, params: PramsObj, callback?: (job_id?: number) => void | any): void {\r\n        this.runCommand(Commands.async_call, [command, params], (status, { job_id }: { job_id: number }) => {\r\n            callback(job_id);\r\n        });\r\n    }\r\n\r\n    asyncCall2a(command: string, wallet_id: number, params: PramsObj, callback?: (job_id?: number) => void | any): void {\r\n        this.runCommand(\r\n            Commands.async_call_2a,\r\n            [command, wallet_id, params],\r\n            (\r\n                status,\r\n                {\r\n                    job_id,\r\n                }: {\r\n                    job_id: number;\r\n                }\r\n            ) => {\r\n                callback(job_id);\r\n            }\r\n        );\r\n    }\r\n\r\n    dispatchAsyncCallResult(): void {\r\n        this.backendObject[Commands.dispatch_async_call_result].connect((job_id: string, json_resp: string) => {\r\n            const asyncCommandResults: AsyncCommandResults = {\r\n                job_id: +job_id,\r\n                response: JSON.parse(json_resp),\r\n            };\r\n            console.group(`----------- ${Commands.dispatch_async_call_result} -----------`);\r\n            console.log(asyncCommandResults);\r\n            console.groupEnd();\r\n            this.ngZone.run(() => setTimeout(() => this.dispatchAsyncCallResult$.next(asyncCommandResults), 250));\r\n        });\r\n    }\r\n\r\n    handleCurrentActionState(): void {\r\n        this.backendObject[Commands.handle_current_action_state].connect((response: string) => {\r\n            const currentActionState: CurrentActionState = JSON.parse(response);\r\n            this.ngZone.run(() => this.handleCurrentActionState$.next(currentActionState));\r\n        });\r\n    }\r\n\r\n    setEnableTor(value: boolean): void {\r\n        this.runCommand(Commands.set_enable_tor, <{ v: boolean }>{\r\n            v: value,\r\n        });\r\n    }\r\n\r\n    show_notification(title: string, message: string, callback?: () => void): void {\r\n        this.runCommand(Commands.show_notification, [title, message], callback);\r\n    }\r\n\r\n    getOptions(): any {\r\n        this.runCommand(\r\n            Commands.get_options,\r\n            {},\r\n            (\r\n                status,\r\n                {\r\n                    disable_price_fetch,\r\n                    use_debug_mode,\r\n                    rpc_port,\r\n                }: { disable_price_fetch: boolean; use_debug_mode: boolean; rpc_port: number }\r\n            ) => {\r\n                this.variablesService.disable_price_fetch$.next(disable_price_fetch);\r\n                this.variablesService.use_debug_mode$.next(use_debug_mode);\r\n                this.variablesService.rpc_port = rpc_port;\r\n            }\r\n        );\r\n    }\r\n\r\n    addCustomAssetId(\r\n        params: ParamsAddCustomAssetId,\r\n        callback: (\r\n            status: boolean,\r\n            response_data: ResponseAddCustomAssetId,\r\n            res_error_code?: {\r\n                error_code: 'FAILED' | string;\r\n                response_data: {\r\n                    asset_descriptor: Partial<AssetInfo>;\r\n                    status: 'FAILED' | string;\r\n                };\r\n            }\r\n        ) => void\r\n    ): void {\r\n        this.runCommand(Commands.add_custom_asset_id, params, callback);\r\n    }\r\n\r\n    removeCustomAssetId(\r\n        params: ParamsRemoveCustomAssetId,\r\n        callback?: (status: boolean, response_data: ResponseRemoveCustomAssetId) => void\r\n    ): void {\r\n        this.runCommand(Commands.remove_custom_asset_id, params, callback);\r\n    }\r\n\r\n    getWalletInfo(wallet_id, callback?: (status: boolean, response_data: ResponseGetWalletInfo) => void): void {\r\n        this.runCommand(Commands.get_wallet_info, { wallet_id }, callback);\r\n    }\r\n\r\n    // Use for call rpc-api https://docs.pdc.org/docs/build/rpc-api\r\n    call_rpc(params: Partial<ParamsCallRpc>, callback?: (status: boolean, response_data: any) => void): void {\r\n        this.runCommand(Commands.call_rpc, params, callback);\r\n    }\r\n\r\n    call_wallet_rpc(\r\n        params: [wallet_id: number, params: Partial<ParamsCallRpc>],\r\n        callback?: (status: boolean, response_data: any) => void\r\n    ): void {\r\n        this.runCommand(Commands.call_wallet_rpc, params, callback);\r\n    }\r\n\r\n    private informerRun(error: string, params, command: string): void {\r\n        let error_translate = '';\r\n        switch (error) {\r\n            case 'NOT_ENOUGH_MONEY':\r\n                error_translate = 'ERRORS.NOT_ENOUGH_MONEY';\r\n                // error_translate = 'ERRORS.NO_MONEY'; maybe that one?\r\n                if (command === 'cancel_offer') {\r\n                    error_translate = this.translate.instant('ERRORS.NO_MONEY_REMOVE_OFFER', {\r\n                        fee: this.variablesService.default_fee,\r\n                        currency: this.variablesService.defaultTicker,\r\n                    });\r\n                }\r\n                break;\r\n            case 'CORE_BUSY':\r\n                error_translate = 'ERRORS.CORE_BUSY';\r\n                break;\r\n            case 'BUSY':\r\n                error_translate = 'ERRORS.DAEMON_BUSY';\r\n                break;\r\n            case 'OVERFLOW':\r\n                if (command !== 'get_all_aliases') {\r\n                    error_translate = '';\r\n                }\r\n                break;\r\n            case 'NOT_ENOUGH_OUTPUTS_FOR_MIXING':\r\n                error_translate = 'ERRORS.NOT_ENOUGH_OUTPUTS_TO_MIX';\r\n                break;\r\n            case 'TX_IS_TOO_BIG':\r\n                error_translate = 'ERRORS.TRANSACTION_IS_TO_BIG';\r\n                break;\r\n            case 'DISCONNECTED':\r\n                error_translate = 'ERRORS.TRANSFER_ATTEMPT';\r\n                break;\r\n            case 'ACCESS_DENIED':\r\n                error_translate = 'ERRORS.ACCESS_DENIED';\r\n                break;\r\n            case 'TX_REJECTED':\r\n                // if (command === 'request_alias_registration') {\r\n                // error_translate = 'INFORMER.ALIAS_IN_REGISTER';\r\n                // } else {\r\n                error_translate = 'ERRORS.TRANSACTION_ERROR';\r\n                // }\r\n                break;\r\n            case 'INTERNAL_ERROR':\r\n                error_translate = 'ERRORS.TRANSACTION_ERROR';\r\n                break;\r\n            case 'BAD_ARG':\r\n                error_translate = 'ERRORS.BAD_ARG';\r\n                break;\r\n            case 'WALLET_WRONG_ID':\r\n                error_translate = 'ERRORS.WALLET_WRONG_ID';\r\n                break;\r\n            case 'WALLET_WATCH_ONLY_NOT_SUPPORTED':\r\n                error_translate = 'ERRORS.WALLET_WATCH_ONLY_NOT_SUPPORTED';\r\n                break;\r\n            // case 'WRONG_PASSWORD':\r\n            // params = JSON.parse(params);\r\n            // if (!params.testEmpty) {\r\n            //   error_translate = 'ERRORS.WRONG_PASSWORD';\r\n            // }\r\n            // break;\r\n            case 'FILE_RESTORED':\r\n                if (command === 'open_wallet') {\r\n                    error_translate = 'ERRORS.FILE_RESTORED';\r\n                }\r\n                break;\r\n            case 'FILE_NOT_FOUND':\r\n                if (command !== 'open_wallet' && command !== 'get_alias_info_by_name' && command !== 'get_alias_info_by_address') {\r\n                    error_translate = this.translate.instant('ERRORS.FILE_NOT_FOUND');\r\n                    params = JSON.parse(params);\r\n                    if (params.path) {\r\n                        error_translate += ': ' + params.path;\r\n                    }\r\n                }\r\n                break;\r\n            case 'NOT_FOUND':\r\n                if (command !== 'open_wallet' && command !== 'get_alias_info_by_name' && command !== 'get_alias_info_by_address') {\r\n                    error_translate = this.translate.instant('ERRORS.FILE_NOT_FOUND');\r\n                    params = JSON.parse(params);\r\n                    if (params.path) {\r\n                        error_translate += ': ' + params.path;\r\n                    }\r\n                }\r\n                break;\r\n            case 'CANCELED':\r\n            case '':\r\n                break;\r\n            case 'FAIL':\r\n                if (\r\n                    command === 'create_proposal' ||\r\n                    command === 'accept_proposal' ||\r\n                    command === 'release_contract' ||\r\n                    command === 'request_cancel_contract' ||\r\n                    command === 'accept_cancel_contract'\r\n                ) {\r\n                    error_translate = ' ';\r\n                }\r\n                break;\r\n            case 'ALREADY_EXISTS':\r\n                error_translate = 'ERRORS.FILE_EXIST';\r\n                break;\r\n            case 'FAILED':\r\n                BackendService.Debug(0, `Error: (${error}) was triggered by command: ${command}`);\r\n                break;\r\n            default:\r\n                error_translate = '';\r\n        }\r\n        if (error.indexOf('FAIL:failed to save file') > -1) {\r\n            error_translate = 'ERRORS.FILE_NOT_SAVED';\r\n        }\r\n        if (error.indexOf('FAILED:failed to open binary wallet file for saving') > -1 && command === 'generate_wallet') {\r\n            error_translate = '';\r\n        }\r\n\r\n        if (error_translate !== '') {\r\n            this.modalService.prepareModal('error', error_translate);\r\n        }\r\n    }\r\n\r\n    private commandDebug(command: Commands, params: Params, result: any): void {\r\n        BackendService.Debug(2, '----------------- ' + command + ' -----------------');\r\n        const debug = {\r\n            _send_params: params,\r\n            _result: result,\r\n        };\r\n        BackendService.Debug(2, debug);\r\n        try {\r\n            BackendService.Debug(2, JSONBigNumber.parse(result, BackendService.bigNumberParser));\r\n        } catch (e) {\r\n            BackendService.Debug(2, { response_data: result, error_code: 'OK' });\r\n        }\r\n    }\r\n\r\n    private backendCallback(resultStr, params, callback, command: Commands): any {\r\n        let Result = resultStr;\r\n        if (command !== Commands.get_clipboard) {\r\n            if (!resultStr || resultStr === '') {\r\n                Result = {};\r\n            } else {\r\n                try {\r\n                    Result = JSONBigNumber.parse(resultStr, BackendService.bigNumberParser);\r\n                } catch (e) {\r\n                    Result = { response_data: resultStr, error_code: 'OK' };\r\n                }\r\n            }\r\n        } else {\r\n            Result = {\r\n                error_code: 'OK',\r\n                response_data: Result,\r\n            };\r\n        }\r\n\r\n        const core_busy = Result.error_code === 'CORE_BUSY';\r\n        const Status = Result.error_code === 'OK' || Result.error_code === 'TRUE';\r\n\r\n        if (!Status && Status !== undefined && Result.error_code !== undefined) {\r\n            BackendService.Debug(1, 'API error for command: \"' + command + '\". Error code: ' + Result.error_code);\r\n        }\r\n        const data = typeof Result === 'object' && 'response_data' in Result ? Result.response_data : Result;\r\n\r\n        let res_error_code = false;\r\n        if (\r\n            typeof Result === 'object' &&\r\n            'error_code' in Result &&\r\n            Result.error_code !== 'OK' &&\r\n            Result.error_code !== 'TRUE' &&\r\n            Result.error_code !== 'FALSE' &&\r\n            Result.error_code !== 'WRAP'\r\n        ) {\r\n            if (core_busy) {\r\n                setTimeout(() => {\r\n                    // this is will avoid update data when user\r\n                    // on other wallet after CORE_BUSY (blink of data)\r\n                    if (command !== Commands.get_recent_transfers) {\r\n                        this.runCommand(command, params, callback);\r\n                    } else {\r\n                        const current_wallet_id = this.variablesService.currentWallet.wallet_id;\r\n                        if (current_wallet_id === params.wallet_id) {\r\n                            this.runCommand(command, params, callback);\r\n                        }\r\n                    }\r\n                }, 50);\r\n            } else {\r\n                this.informerRun(Result.error_code, params, command);\r\n                res_error_code = Result.error_code;\r\n            }\r\n        }\r\n\r\n        if (!core_busy) {\r\n            if (typeof callback === 'function') {\r\n                callback(Status, data, res_error_code);\r\n            } else {\r\n                return data;\r\n            }\r\n        }\r\n    }\r\n\r\n    private runCommand(command: Commands, params?: Params, callback?): any {\r\n        if (!this.backendObject) {\r\n            return;\r\n        }\r\n\r\n        if (command === Commands.get_recent_transfers) {\r\n            this.variablesService.get_recent_transfers = true;\r\n        }\r\n\r\n        const Action = this.backendObject[command];\r\n\r\n        if (!Action) {\r\n            BackendService.Debug(0, 'Run Command Error! Command \"' + command + '\" don\\'t found in backendObject');\r\n            return;\r\n        }\r\n\r\n        const type: ParamsType = getParamsType(params);\r\n        params = params && convertorParams(params);\r\n\r\n        if (type === ParamsType.array) {\r\n            Action(...(params as string[]), resultStr => {\r\n                this.commandDebug(command, params, resultStr);\r\n                return this.backendCallback(resultStr, params, callback, command);\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (command === Commands.get_recent_transfers) {\r\n            this.variablesService.get_recent_transfers = false;\r\n        }\r\n        Action(params, resultStr => {\r\n            this.commandDebug(command, params, resultStr);\r\n            return this.backendCallback(resultStr, params, callback, command);\r\n        });\r\n    }\r\n}\r\n","import { RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot([])],\r\n    exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, NgZone, OnDestroy, OnInit, Renderer2 } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BackendService, Commands } from '@api/services/backend.service';\r\nimport { Router } from '@angular/router';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { IntToMoneyPipe } from '@parts/pipes';\r\nimport { BigNumber } from 'bignumber.js';\r\nimport { ModalService } from '@parts/services/modal.service';\r\nimport { StateKeys, Store } from '@store/store';\r\nimport { interval, Subject, take } from 'rxjs';\r\nimport { retry, startWith, switchMap, takeUntil } from 'rxjs/operators';\r\nimport { paths, pathsChildrenAuth } from './pages/paths';\r\nimport { hasOwnProperty } from '@parts/functions/has-own-property';\r\nimport { Dialog } from '@angular/cdk/dialog';\r\nimport { PdcLoadersService } from '@parts/services/pdc-loaders.service';\r\nimport { ParamsCallRpc } from '@api/models/call_rpc.model';\r\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ApiPdcService } from '@api/services/api-pdc.service';\r\nimport { WalletsService } from '@parts/services/wallets.service';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    template: `\r\n        <router-outlet\r\n            *ngIf=\"[0, 1, 2, 6].indexOf(variablesService.daemon_state) !== -1 && !(pdcLoadersService.getState('fullScreen') | async)\"\r\n        ></router-outlet>\r\n\r\n        <div *ngIf=\"[3, 4, 5].indexOf(variablesService.daemon_state) !== -1\" class=\"preloader\">\r\n            <p *ngIf=\"variablesService.daemon_state === 3\" class=\"mb-2\">\r\n                {{ 'SIDEBAR.SYNCHRONIZATION.LOADING' | translate }}\r\n            </p>\r\n            <p *ngIf=\"variablesService.daemon_state === 4\" class=\"mb-2\">\r\n                {{ 'SIDEBAR.SYNCHRONIZATION.ERROR' | translate }}\r\n            </p>\r\n            <p *ngIf=\"variablesService.daemon_state === 5\" class=\"mb-2\">\r\n                {{ 'SIDEBAR.SYNCHRONIZATION.COMPLETE' | translate }}\r\n            </p>\r\n            <div class=\"loading-bar\"></div>\r\n        </div>\r\n\r\n        <div class=\"preloader\" *ngIf=\"pdcLoadersService.getState('fullScreen') | async\">\r\n            <p class=\"mb-2\">\r\n                {{ pdcLoadersService.getMessage('fullScreen') | async | translate }}\r\n            </p>\r\n            <div class=\"loading-bar\"></div>\r\n        </div>\r\n\r\n        <app-register-context-templates></app-register-context-templates>\r\n\r\n        <app-open-wallet-modal *ngIf=\"needOpenWallets.length\" [wallets]=\"needOpenWallets\"></app-open-wallet-modal>\r\n    `,\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n    intervalUpdatePriceState;\r\n\r\n    intervalUpdateContractsState;\r\n\r\n    expMedTsEvent;\r\n\r\n    onQuitRequest = false;\r\n\r\n    firstOnlineState = false;\r\n\r\n    translateUsed = false;\r\n\r\n    needOpenWallets = [];\r\n\r\n    currentScreenSize: string;\r\n\r\n    displayNameMap = new Map([\r\n        [Breakpoints.XSmall, 'XSmall'],\r\n        [Breakpoints.Small, 'Small'],\r\n        [Breakpoints.Medium, 'Medium'],\r\n        [Breakpoints.Large, 'Large'],\r\n        [Breakpoints.XLarge, 'XLarge'],\r\n    ]);\r\n    private destroy$ = new Subject<void>();\r\n\r\n    constructor(\r\n        public variablesService: VariablesService,\r\n        public translate: TranslateService,\r\n        private http: HttpClient,\r\n        private renderer: Renderer2,\r\n        private backendService: BackendService,\r\n        private router: Router,\r\n        private ngZone: NgZone,\r\n        private intToMoneyPipe: IntToMoneyPipe,\r\n        private modalService: ModalService,\r\n        private store: Store,\r\n        private dialog: Dialog,\r\n        private matDialog: MatDialog,\r\n        public pdcLoadersService: PdcLoadersService,\r\n        private _apiPdcService: ApiPdcService,\r\n        private _walletsService: WalletsService,\r\n        private _breakpointObserver: BreakpointObserver\r\n    ) {\r\n        translate.addLangs(['en', 'fr', 'de', 'it', 'pt']);\r\n        translate.setDefaultLang('en');\r\n        translate\r\n            .use('en')\r\n            .pipe(takeUntil(this.destroy$))\r\n            .subscribe({\r\n                next: () => {\r\n                    this.translateUsed = true;\r\n                },\r\n            });\r\n\r\n        this._setResponseClasses();\r\n    }\r\n\r\n    private _setResponseClasses(): void {\r\n        this._breakpointObserver\r\n            .observe([\r\n                Breakpoints.XSmall, // XSmall\t(max-width: 599.98px)\r\n                Breakpoints.Small, // Small\t(min-width: 600px) and (max-width: 959.98px)\r\n                Breakpoints.Medium, // Medium\t(min-width: 960px) and (max-width: 1279.98px)\r\n                Breakpoints.Large, // Large\t(min-width: 1280px) and (max-width: 1919.98px)\r\n                Breakpoints.XLarge, // XLarge\t(min-width: 1920px)\r\n            ])\r\n            .pipe(takeUntil(this.destroy$))\r\n            .subscribe(result => {\r\n                for (const query of Object.keys(result.breakpoints)) {\r\n                    if (result.breakpoints[query]) {\r\n                        this.currentScreenSize = this.displayNameMap.get(query) ?? 'Unknown';\r\n\r\n                        document.body.classList.remove(...this.displayNameMap.values());\r\n                        document.body.classList.add(this.currentScreenSize);\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    setBackendLocalization(): void {\r\n        if (this.translateUsed) {\r\n            const stringsArray = [\r\n                this.translate.instant('BACKEND_LOCALIZATION.QUIT'),\r\n                this.translate.instant('BACKEND_LOCALIZATION.IS_RECEIVED'),\r\n                this.translate.instant('BACKEND_LOCALIZATION.IS_CONFIRMED'),\r\n                this.translate.instant('BACKEND_LOCALIZATION.INCOME_TRANSFER_UNCONFIRMED'),\r\n                this.translate.instant('BACKEND_LOCALIZATION.INCOME_TRANSFER_CONFIRMED'),\r\n                this.translate.instant('BACKEND_LOCALIZATION.MINED'),\r\n                this.translate.instant('BACKEND_LOCALIZATION.LOCKED'),\r\n                this.translate.instant('BACKEND_LOCALIZATION.IS_MINIMIZE'),\r\n                this.translate.instant('BACKEND_LOCALIZATION.RESTORE'),\r\n                this.translate.instant('BACKEND_LOCALIZATION.TRAY_MENU_SHOW'),\r\n                this.translate.instant('BACKEND_LOCALIZATION.TRAY_MENU_MINIMIZE'),\r\n            ];\r\n            this.backendService.setBackendLocalization(stringsArray, this.variablesService.settings.language);\r\n        } else {\r\n            console.warn('wait translate use');\r\n            setTimeout(() => {\r\n                this.setBackendLocalization();\r\n            }, 10000);\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.backendService.initService().subscribe({\r\n            next: initMessage => {\r\n                console.log('Init message: ', initMessage);\r\n                this.backendService.webkitLaunchedScript();\r\n\r\n                this.backendService.start_backend(false, '127.0.0.1', 11512, (st2, dd2) => {\r\n                    console.log(st2, dd2);\r\n                });\r\n\r\n                this.backendService.eventSubscribe(Commands.quit_requested, async () => {\r\n                    if (this.onQuitRequest) {\r\n                        return;\r\n                    }\r\n\r\n                    // await this.ngZone.run(async () => {\r\n                    //     await this.router.navigate(['/']);\r\n                    // });\r\n\r\n                    this.dialog.closeAll();\r\n                    this.matDialog.closeAll();\r\n\r\n                    this.needOpenWallets = [];\r\n                    this.variablesService.daemon_state = 5;\r\n\r\n                    const saveFunction = (): void => {\r\n                        this.backendService.storeAppData((): void => {\r\n                            const recursionCloseWallets = (): void => {\r\n                                if (this.variablesService.wallets.length > 0) {\r\n                                    const lastIndex = this.variablesService.wallets.length - 1;\r\n                                    this.backendService.closeWallet(this.variablesService.wallets[lastIndex].wallet_id, () => {\r\n                                        this.variablesService.wallets.splice(lastIndex, 1);\r\n                                        recursionCloseWallets();\r\n                                    });\r\n                                } else {\r\n                                    this.ngZone.run(() => {\r\n                                        this.backendService.quitRequest();\r\n                                    });\r\n                                }\r\n                            };\r\n                            recursionCloseWallets();\r\n                        });\r\n                    };\r\n                    if (this.variablesService.appPass) {\r\n                        this.backendService.storeSecureAppData(saveFunction);\r\n                    } else {\r\n                        saveFunction();\r\n                    }\r\n\r\n                    this.onQuitRequest = true;\r\n                });\r\n\r\n                this.backendService.eventSubscribe(Commands.update_wallet_status, data => {\r\n                    console.log('----------------- update_wallet_status -----------------');\r\n                    console.log(data);\r\n\r\n                    const wallet_state = data.wallet_state;\r\n                    const is_mining = data.is_mining;\r\n                    const wallet = this.variablesService.getWallet(data.wallet_id);\r\n                    // 1-synch, 2-ready, 3 - error\r\n                    if (wallet) {\r\n                        this.ngZone.run(() => {\r\n                            wallet.loaded = false;\r\n                            wallet.staking = is_mining;\r\n                            if (wallet_state === 2) {\r\n                                // ready\r\n                                wallet.loaded = true;\r\n                            }\r\n                            if (wallet_state === 3) {\r\n                                // error\r\n                                // wallet.error = true;\r\n                            }\r\n                            wallet.balances = data.balances;\r\n                            wallet.mined_total = data.minied_total;\r\n                            wallet.alias_available = data.is_alias_operations_available;\r\n                            wallet.has_bare_unspent_outputs = data.has_bare_unspent_outputs;\r\n                        });\r\n                    }\r\n                });\r\n\r\n                this.backendService.eventSubscribe(Commands.wallet_sync_progress, data => {\r\n                    console.log('----------------- wallet_sync_progress -----------------');\r\n                    console.log(data);\r\n                    const wallet = this.variablesService.getWallet(data.wallet_id);\r\n                    if (wallet) {\r\n                        this.ngZone.run(() => {\r\n                            wallet.progress = data.progress < 0 ? 0 : data.progress > 100 ? 100 : data.progress;\r\n                            if (!this.variablesService.sync_started) {\r\n                                this.variablesService.sync_started = true;\r\n                                this.variablesService.sync_wallets[wallet.wallet_id] = true;\r\n                            }\r\n                            this.addToStore(wallet, true); // subscribe on data\r\n                            if (wallet.progress === 0) {\r\n                                wallet.loaded = false;\r\n                            } else if (wallet.progress === 100) {\r\n                                wallet.loaded = true;\r\n                                this.addToStore(wallet, false);\r\n                                this.variablesService.sync_started = false;\r\n                                this.variablesService.sync_wallets[wallet.wallet_id] = false;\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n                this.backendService.eventSubscribe(Commands.update_daemon_state, data => {\r\n                    console.log('----------------- update_daemon_state -----------------');\r\n                    console.log('DAEMON:' + data.daemon_network_state);\r\n                    console.log(data);\r\n                    // this.variablesService.exp_med_ts = data['expiration_median_timestamp'] + 600 + 1;\r\n                    this.variablesService.setExpMedTs(data['expiration_median_timestamp'] + 600 + 1);\r\n                    this.variablesService.net_time_delta_median = data.net_time_delta_median;\r\n                    this.variablesService.last_build_available = data.last_build_available;\r\n                    this.variablesService.last_build_displaymode = data.last_build_displaymode;\r\n                    this.variablesService.setHeightApp(data.height);\r\n                    this.variablesService.setHeightMax(data.max_net_seen_height);\r\n\r\n                    this.variablesService.setDownloadedBytes(data.downloaded_bytes);\r\n                    this.variablesService.setTotalBytes(data.download_total_data_size);\r\n\r\n                    this.backendService.getContactAlias();\r\n                    this.ngZone.run(() => {\r\n                        const daemon_state: number = data['daemon_network_state'];\r\n                        this.variablesService.daemon_state = daemon_state;\r\n                        this.variablesService.daemon_state$.next(daemon_state);\r\n\r\n                        if (data['daemon_network_state'] === 1) {\r\n                            const max = data['max_net_seen_height'] - data['synchronization_start_height'];\r\n                            const current = data.height - data['synchronization_start_height'];\r\n                            const return_val = Math.floor(((current * 100) / max) * 100) / 100;\r\n                            if (max === 0 || return_val < 0) {\r\n                                this.variablesService.sync.progress_value = 0;\r\n                                this.variablesService.sync.progress_value_text = '0.00';\r\n                                this.variablesService.sync.blocks.current = 0;\r\n                                this.variablesService.sync.blocks.max = 0;\r\n                            } else if (return_val >= 100) {\r\n                                this.variablesService.sync.progress_value = 100;\r\n                                this.variablesService.sync.progress_value_text = '99.99';\r\n                                this.variablesService.sync.blocks.current = current;\r\n                                this.variablesService.sync.blocks.max = max;\r\n                            } else {\r\n                                this.variablesService.sync.progress_value = return_val;\r\n                                this.variablesService.sync.progress_value_text = return_val.toFixed(2);\r\n                                this.variablesService.sync.blocks.current = current;\r\n                                this.variablesService.sync.blocks.max = max;\r\n                            }\r\n                        }\r\n\r\n                        if (data['daemon_network_state'] === 6) {\r\n                            const max = data['download_total_data_size'];\r\n                            const current = data['downloaded_bytes'];\r\n                            const return_val = Math.floor((current / max) * 100);\r\n                            if (max === 0 || return_val < 0) {\r\n                                this.variablesService.download.progress_value = 0;\r\n                                this.variablesService.download.progress_value_text = '0.00';\r\n                            } else if (return_val >= 100) {\r\n                                this.variablesService.download.progress_value = 100;\r\n                                this.variablesService.download.progress_value_text = '99.99';\r\n                            } else {\r\n                                this.variablesService.download.progress_value = return_val;\r\n                                this.variablesService.download.progress_value_text = return_val.toFixed(2);\r\n                            }\r\n                        }\r\n                    });\r\n                    if (!this.firstOnlineState && data['daemon_network_state'] === 2) {\r\n                        this.getAliases();\r\n                        this.backendService.getContactAlias();\r\n                        this.backendService.getDefaultFee((status_fee, data_fee) => {\r\n                            this.variablesService.default_fee_big = new BigNumber(data_fee);\r\n                            this.variablesService.default_fee = this.intToMoneyPipe.transform(data_fee);\r\n                        });\r\n                        this.firstOnlineState = true;\r\n                    }\r\n                });\r\n\r\n                this.backendService.eventSubscribe(Commands.money_transfer, data => {\r\n                    console.log('----------------- money_transfer -----------------');\r\n                    console.log(data);\r\n\r\n                    if (!data.ti) {\r\n                        return;\r\n                    }\r\n\r\n                    const wallet_id = data.wallet_id;\r\n                    const tr_info = data.ti;\r\n\r\n                    const wallet = this.variablesService.getWallet(wallet_id);\r\n                    if (wallet) {\r\n                        if (wallet.history.length > 40) {\r\n                            wallet.history.splice(40, 1);\r\n                        }\r\n                        this.ngZone.run(() => {\r\n                            wallet.balances = data.balances;\r\n\r\n                            if (tr_info.tx_type === 6) {\r\n                                this.variablesService.refreshStakingEvent$.next();\r\n                            }\r\n\r\n                            let tr_exists = wallet.excluded_history.some(elem => elem.tx_hash === tr_info.tx_hash);\r\n                            tr_exists = !tr_exists ? wallet.history.some(elem => elem.tx_hash === tr_info.tx_hash) : tr_exists;\r\n\r\n                            if (wallet.currentPage === 1) {\r\n                                wallet.prepareHistory([tr_info]);\r\n                                if (wallet.restore) {\r\n                                    wallet.total_history_item = wallet.history.length;\r\n                                    wallet.totalPages = Math.ceil(wallet.total_history_item / this.variablesService.count);\r\n                                    wallet.totalPages > this.variablesService.maxPages\r\n                                        ? (wallet.pages = new Array(5).fill(1).map((value, index) => value + index))\r\n                                        : (wallet.pages = new Array(wallet.totalPages).fill(1).map((value, index) => value + index));\r\n                                }\r\n                            }\r\n\r\n                            if (hasOwnProperty(tr_info, 'contract')) {\r\n                                const exp_med_ts = this.variablesService.exp_med_ts;\r\n                                const height_app = this.variablesService.height_app;\r\n                                const contract = tr_info.contract[0];\r\n                                if (tr_exists) {\r\n                                    for (let i = 0; i < wallet.contracts.length; i++) {\r\n                                        if (\r\n                                            wallet.contracts[i].contract_id === contract.contract_id &&\r\n                                            wallet.contracts[i].is_a === contract.is_a\r\n                                        ) {\r\n                                            wallet.contracts[i].cancel_expiration_time = contract.cancel_expiration_time;\r\n                                            wallet.contracts[i].expiration_time = contract.expiration_time;\r\n                                            wallet.contracts[i].height = contract.height;\r\n                                            wallet.contracts[i].timestamp = contract.timestamp;\r\n                                            break;\r\n                                        }\r\n                                    }\r\n                                    // $rootScope.getContractsRecount();\r\n                                    return;\r\n                                }\r\n\r\n                                if (contract.state === 1 && contract.expiration_time < exp_med_ts) {\r\n                                    contract.state = 110;\r\n                                } else if (contract.state === 5 && contract.cancel_expiration_time < exp_med_ts) {\r\n                                    contract.state = 130;\r\n                                } else if (contract.state === 1) {\r\n                                    const searchResult2 = this.variablesService.settings.notViewedContracts.find(\r\n                                        elem =>\r\n                                            elem.state === 110 && elem.is_a === contract.is_a && elem.contract_id === contract.contract_id\r\n                                    );\r\n                                    if (searchResult2) {\r\n                                        if (searchResult2.time === contract.expiration_time) {\r\n                                            contract.state = 110;\r\n                                        } else {\r\n                                            for (let j = 0; j < this.variablesService.settings.notViewedContracts.length; j++) {\r\n                                                if (\r\n                                                    this.variablesService.settings.notViewedContracts[j].contract_id ===\r\n                                                        contract.contract_id &&\r\n                                                    this.variablesService.settings.notViewedContracts[j].is_a === contract.is_a\r\n                                                ) {\r\n                                                    this.variablesService.settings.notViewedContracts.splice(j, 1);\r\n                                                    break;\r\n                                                }\r\n                                            }\r\n                                            for (let j = 0; j < this.variablesService.settings.viewedContracts.length; j++) {\r\n                                                if (\r\n                                                    this.variablesService.settings.viewedContracts[j].contract_id ===\r\n                                                        contract.contract_id &&\r\n                                                    this.variablesService.settings.viewedContracts[j].is_a === contract.is_a\r\n                                                ) {\r\n                                                    this.variablesService.settings.viewedContracts.splice(j, 1);\r\n                                                    break;\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                } else if (contract.state === 2 && (contract.height === 0 || height_app - contract.height < 10)) {\r\n                                    contract.state = 201;\r\n                                } else if (contract.state === 2) {\r\n                                    const searchResult3 = this.variablesService.settings.viewedContracts.some(\r\n                                        elem =>\r\n                                            elem.state === 120 && elem.is_a === contract.is_a && elem.contract_id === contract.contract_id\r\n                                    );\r\n                                    if (searchResult3) {\r\n                                        contract.state = 120;\r\n                                    }\r\n                                } else if (contract.state === 5) {\r\n                                    const searchResult4 = this.variablesService.settings.notViewedContracts.find(\r\n                                        elem =>\r\n                                            elem.state === 130 && elem.is_a === contract.is_a && elem.contract_id === contract.contract_id\r\n                                    );\r\n                                    if (searchResult4) {\r\n                                        if (searchResult4.time === contract.cancel_expiration_time) {\r\n                                            contract.state = 130;\r\n                                        } else {\r\n                                            for (let j = 0; j < this.variablesService.settings.notViewedContracts.length; j++) {\r\n                                                if (\r\n                                                    this.variablesService.settings.notViewedContracts[j].contract_id ===\r\n                                                        contract.contract_id &&\r\n                                                    this.variablesService.settings.notViewedContracts[j].is_a === contract.is_a\r\n                                                ) {\r\n                                                    this.variablesService.settings.notViewedContracts.splice(j, 1);\r\n                                                    break;\r\n                                                }\r\n                                            }\r\n                                            for (let j = 0; j < this.variablesService.settings.viewedContracts.length; j++) {\r\n                                                if (\r\n                                                    this.variablesService.settings.viewedContracts[j].contract_id ===\r\n                                                        contract.contract_id &&\r\n                                                    this.variablesService.settings.viewedContracts[j].is_a === contract.is_a\r\n                                                ) {\r\n                                                    this.variablesService.settings.viewedContracts.splice(j, 1);\r\n                                                    break;\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                } else if (contract.state === 6 && (contract.height === 0 || height_app - contract.height < 10)) {\r\n                                    contract.state = 601;\r\n                                }\r\n\r\n                                const searchResult = this.variablesService.settings.viewedContracts.some(\r\n                                    elem =>\r\n                                        elem.state === contract.state &&\r\n                                        elem.is_a === contract.is_a &&\r\n                                        elem.contract_id === contract.contract_id\r\n                                );\r\n                                contract.is_new = !searchResult;\r\n\r\n                                let findContract = false;\r\n                                for (let i = 0; i < wallet.contracts.length; i++) {\r\n                                    if (\r\n                                        wallet.contracts[i].contract_id === contract.contract_id &&\r\n                                        wallet.contracts[i].is_a === contract.is_a\r\n                                    ) {\r\n                                        for (const prop in contract) {\r\n                                            if (hasOwnProperty(contract, prop)) {\r\n                                                wallet.contracts[i][prop] = contract[prop];\r\n                                            }\r\n                                        }\r\n                                        findContract = true;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                                if (findContract === false) {\r\n                                    wallet.contracts.push(contract);\r\n                                }\r\n                                // wallet.recountNewContracts();\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n                this.backendService.backendObject[Commands.handle_deeplink_click].connect(data => {\r\n                    console.log('----------------- handle_deeplink_click -----------------');\r\n                    console.log(data);\r\n                    this.ngZone.run(() => {\r\n                        if (data) {\r\n                            this.variablesService.deeplink$.next(data);\r\n                        }\r\n                    });\r\n                });\r\n\r\n                this.backendService.eventSubscribe(Commands.money_transfer_cancel, data => {\r\n                    console.log('----------------- money_transfer_cancel -----------------');\r\n                    console.log(data);\r\n\r\n                    if (!data.ti) {\r\n                        return;\r\n                    }\r\n\r\n                    const wallet_id = data.wallet_id;\r\n                    const tr_info = data.ti;\r\n                    const wallet = this.variablesService.getWallet(wallet_id);\r\n\r\n                    if (wallet) {\r\n                        if (hasOwnProperty(tr_info, 'contract')) {\r\n                            for (let i = 0; i < wallet.contracts.length; i++) {\r\n                                if (\r\n                                    wallet.contracts[i].contract_id === tr_info.contract[0].contract_id &&\r\n                                    wallet.contracts[i].is_a === tr_info.contract[0].is_a\r\n                                ) {\r\n                                    if (wallet.contracts[i].state === 1 || wallet.contracts[i].state === 110) {\r\n                                        wallet.contracts[i].is_new = true;\r\n                                        wallet.contracts[i].state = 140;\r\n                                        // wallet.recountNewContracts();\r\n                                    }\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        wallet.removeFromHistory(tr_info.tx_hash);\r\n\r\n                        let error_tr = '';\r\n                        switch (tr_info.tx_type) {\r\n                            case 0:\r\n                                error_tr =\r\n                                    this.translate.instant('ERRORS.TX_TYPE_NORMAL') +\r\n                                    '<br>' +\r\n                                    tr_info.tx_hash +\r\n                                    '<br>' +\r\n                                    wallet.name +\r\n                                    '<br>' +\r\n                                    wallet.address +\r\n                                    '<br>' +\r\n                                    this.translate.instant('ERRORS.TX_TYPE_NORMAL_TO') +\r\n                                    ' ' +\r\n                                    this.intToMoneyPipe.transform(tr_info.amount) +\r\n                                    ' ' +\r\n                                    this.translate.instant('ERRORS.TX_TYPE_NORMAL_END');\r\n                                break;\r\n                            case 1:\r\n                                // this.translate.instant('ERRORS.TX_TYPE_PUSH_OFFER');\r\n                                break;\r\n                            case 2:\r\n                                // this.translate.instant('ERRORS.TX_TYPE_UPDATE_OFFER');\r\n                                break;\r\n                            case 3:\r\n                                // this.translate.instant('ERRORS.TX_TYPE_CANCEL_OFFER');\r\n                                break;\r\n                            case 4:\r\n                                error_tr =\r\n                                    this.translate.instant('ERRORS.TX_TYPE_NEW_ALIAS') +\r\n                                    '<br>' +\r\n                                    tr_info.tx_hash +\r\n                                    '<br>' +\r\n                                    wallet.name +\r\n                                    '<br>' +\r\n                                    wallet.address +\r\n                                    '<br>' +\r\n                                    this.translate.instant('ERRORS.TX_TYPE_NEW_ALIAS_END');\r\n                                break;\r\n                            case 5:\r\n                                error_tr =\r\n                                    this.translate.instant('ERRORS.TX_TYPE_UPDATE_ALIAS') +\r\n                                    '<br>' +\r\n                                    tr_info.tx_hash +\r\n                                    '<br>' +\r\n                                    wallet.name +\r\n                                    '<br>' +\r\n                                    wallet.address +\r\n                                    '<br>' +\r\n                                    this.translate.instant('ERRORS.TX_TYPE_NEW_ALIAS_END');\r\n                                break;\r\n                            case 6:\r\n                                error_tr = this.translate.instant('ERRORS.TX_TYPE_COIN_BASE');\r\n                                break;\r\n                        }\r\n                        if (error_tr) {\r\n                            this.modalService.prepareModal('error', error_tr);\r\n                        }\r\n                    }\r\n                });\r\n\r\n                this.backendService.eventSubscribe(Commands.on_core_event, data => {\r\n                    console.log('----------------- on_core_event -----------------');\r\n                    console.log(data);\r\n\r\n                    data = JSON.parse(data);\r\n\r\n                    if (data.events != null) {\r\n                        for (let i = 0, length = data.events.length; i < length; i++) {\r\n                            switch (data.events[i].method) {\r\n                                case 'CORE_EVENT_BLOCK_ADDED':\r\n                                    break;\r\n                                case 'CORE_EVENT_ADD_ALIAS':\r\n                                    if (this.variablesService.aliasesChecked[data.events[i].details.address] != null) {\r\n                                        this.variablesService.aliasesChecked[data.events[i].details.address]['name'] =\r\n                                            '@' + data.events[i].details.alias;\r\n                                        this.variablesService.aliasesChecked[data.events[i].details.address]['address'] =\r\n                                            data.events[i].details.address;\r\n                                        this.variablesService.aliasesChecked[data.events[i].details.address]['comment'] =\r\n                                            data.events[i].details.comment;\r\n                                    }\r\n                                    if (this.variablesService.enableAliasSearch) {\r\n                                        const newAlias = {\r\n                                            name: '@' + data.events[i].details.alias,\r\n                                            address: data.events[i].details.address,\r\n                                            comment: data.events[i].details.comment,\r\n                                        };\r\n                                        this.variablesService.aliases = this.variablesService.aliases.concat(newAlias);\r\n                                        this.variablesService.changeAliases();\r\n                                    }\r\n                                    break;\r\n                                case 'CORE_EVENT_UPDATE_ALIAS':\r\n                                    for (const address in this.variablesService.aliasesChecked) {\r\n                                        if (hasOwnProperty(this.variablesService.aliasesChecked, address)) {\r\n                                            if (this.variablesService.aliasesChecked[address].name === '@' + data.events[i].details.alias) {\r\n                                                if (\r\n                                                    this.variablesService.aliasesChecked[address].address !==\r\n                                                    data.events[i].details.details.address\r\n                                                ) {\r\n                                                    delete this.variablesService.aliasesChecked[address]['name'];\r\n                                                    delete this.variablesService.aliasesChecked[address]['address'];\r\n                                                    delete this.variablesService.aliasesChecked[address]['comment'];\r\n                                                } else {\r\n                                                    this.variablesService.aliasesChecked[address].comment =\r\n                                                        data.events[i].details.details.comment;\r\n                                                }\r\n                                                break;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    if (this.variablesService.aliasesChecked[data.events[i].details.details.address] != null) {\r\n                                        this.variablesService.aliasesChecked[data.events[i].details.details.address]['name'] =\r\n                                            '@' + data.events[i].details.alias;\r\n                                        this.variablesService.aliasesChecked[data.events[i].details.details.address]['address'] =\r\n                                            data.events[i].details.details.address;\r\n                                        this.variablesService.aliasesChecked[data.events[i].details.details.address]['comment'] =\r\n                                            data.events[i].details.details.comment;\r\n                                    }\r\n                                    if (this.variablesService.enableAliasSearch) {\r\n                                        const CurrentAlias = this.variablesService.aliases.find(\r\n                                            element => element.name === '@' + data.events[i].details.alias\r\n                                        );\r\n                                        if (CurrentAlias) {\r\n                                            CurrentAlias.address = data.events[i].details.details.address;\r\n                                            CurrentAlias.comment = data.events[i].details.details.comment;\r\n                                        }\r\n                                    }\r\n                                    this.variablesService.changeAliases();\r\n                                    break;\r\n                                default:\r\n                                    break;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n\r\n                this.intervalUpdateContractsState = setInterval(() => {\r\n                    this.variablesService.wallets.forEach(wallet => {\r\n                        wallet.contracts.forEach(contract => {\r\n                            if (\r\n                                contract.state === 201 &&\r\n                                contract.height !== 0 &&\r\n                                this.variablesService.height_app - contract.height >= 10\r\n                            ) {\r\n                                contract.state = 2;\r\n                                contract.is_new = true;\r\n                                console.warn('need check state in contracts');\r\n                            } else if (\r\n                                contract.state === 601 &&\r\n                                contract.height !== 0 &&\r\n                                this.variablesService.height_app - contract.height >= 10\r\n                            ) {\r\n                                contract.state = 6;\r\n                                contract.is_new = true;\r\n                            }\r\n                        });\r\n                    });\r\n                }, 30000);\r\n\r\n                this.expMedTsEvent = this.variablesService.getExpMedTsEvent.subscribe({\r\n                    next: (newTimestamp: number) => {\r\n                        this.variablesService.wallets.forEach(wallet => {\r\n                            wallet.contracts.forEach(contract => {\r\n                                if (contract.state === 1 && contract.expiration_time <= newTimestamp) {\r\n                                    contract.state = 110;\r\n                                    contract.is_new = true;\r\n                                } else if (contract.state === 5 && contract.cancel_expiration_time <= newTimestamp) {\r\n                                    contract.state = 130;\r\n                                    contract.is_new = true;\r\n                                }\r\n                            });\r\n                        });\r\n                    },\r\n                });\r\n\r\n                this.backendService.getAppData((status, data) => {\r\n                    if (data && Object.keys(data).length > 0) {\r\n                        for (const key in data) {\r\n                            if (hasOwnProperty(data, key) && hasOwnProperty(this.variablesService.settings, key)) {\r\n                                this.variablesService.settings[key] = data[key];\r\n                            }\r\n                        }\r\n\r\n                        const { isDarkTheme$, visibilityBalance$, settings } = this.variablesService;\r\n\r\n                        isDarkTheme$.next(settings.isDarkTheme);\r\n                        visibilityBalance$.next(settings.visibilityBalance);\r\n                        // TODO: Delete this line after return appUseTor\r\n                        settings.appUseTor = false;\r\n                        if (hasOwnProperty(settings, 'scale') && ['8px', '10px', '12px', '14px'].indexOf(settings.scale) !== -1) {\r\n                            this.renderer.setStyle(document.documentElement, 'font-size', settings.scale);\r\n                        } else {\r\n                            settings.scale = '10px';\r\n                            this.renderer.setStyle(document.documentElement, 'font-size', settings.scale);\r\n                        }\r\n\r\n                        this.renderer.setAttribute(document.documentElement, 'class', settings.isDarkTheme ? 'dark' : 'light');\r\n                    }\r\n                    this.translate.use(this.variablesService.settings.language);\r\n                    this.setBackendLocalization();\r\n\r\n                    this.backendService.setLogLevel(this.variablesService.settings.appLog);\r\n                    this.backendService.setEnableTor(this.variablesService.settings.appUseTor);\r\n\r\n                    if (!this.variablesService.settings.wallets || this.variablesService.settings.wallets.length === 0) {\r\n                        this.ngZone.run(() => {\r\n                            this.router.navigate([`${paths.auth}/${pathsChildrenAuth.noWallet}`]).then();\r\n                        });\r\n                        return;\r\n                    }\r\n\r\n                    if (this.router.url !== '/login') {\r\n                        this.backendService.haveSecureAppData(statusPass => {\r\n                            console.log('--------- haveSecureAppData ----------', statusPass);\r\n                            if (statusPass) {\r\n                                this.ngZone.run(() => {\r\n                                    this.router.navigate(['/login'], {\r\n                                        queryParams: { type: 'auth' },\r\n                                    });\r\n                                });\r\n                            } else {\r\n                                if (Object.keys(data).length !== 0) {\r\n                                    this.needOpenWallets = JSON.parse(JSON.stringify(this.variablesService.settings.wallets));\r\n                                    this.ngZone.run(() => {\r\n                                        this.variablesService.appLogin = true;\r\n                                        this.router.navigate(['/']);\r\n                                    });\r\n                                } else {\r\n                                    this.ngZone.run(() => {\r\n                                        this.router.navigate(['/login'], {\r\n                                            queryParams: { type: 'reg' },\r\n                                        });\r\n                                    });\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n                this.backendService.dispatchAsyncCallResult();\r\n\r\n                this.backendService.handleCurrentActionState();\r\n\r\n                this.getVersion();\r\n\r\n                this.getInfo();\r\n\r\n                setTimeout(() => {\r\n                    this.backendService.getOptions();\r\n                    this._getPdcCurrentSupply();\r\n                }, 10 * 1000);\r\n            },\r\n            error: error => {\r\n                console.log(error);\r\n            },\r\n        });\r\n\r\n        this.variablesService.disable_price_fetch$.pipe(takeUntil(this.destroy$)).subscribe({\r\n            next: disable_price_fetch => {\r\n                const updateTime = 10 * 60 * 1000;\r\n                if (!disable_price_fetch) {\r\n                    this.updateMoneyEquivalent();\r\n                    this.intervalUpdatePriceState = setInterval(() => {\r\n                        this.updateMoneyEquivalent();\r\n                    }, updateTime);\r\n                } else {\r\n                    if (this.intervalUpdatePriceState) {\r\n                        clearInterval(this.intervalUpdatePriceState);\r\n                    }\r\n                }\r\n            },\r\n        });\r\n\r\n        this.variablesService.isDarkTheme$.pipe(takeUntil(this.destroy$)).subscribe({\r\n            next: isDarkTheme => {\r\n                this.renderer.setAttribute(document.documentElement, 'class', isDarkTheme ? 'dark' : 'light');\r\n            },\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy$.next();\r\n        if (this.intervalUpdateContractsState) {\r\n            clearInterval(this.intervalUpdateContractsState);\r\n        }\r\n        if (this.intervalUpdatePriceState) {\r\n            clearInterval(this.intervalUpdatePriceState);\r\n        }\r\n        this.expMedTsEvent.unsubscribe();\r\n    }\r\n\r\n    updateMoneyEquivalent(): void {\r\n        this.http\r\n            .get('https://explorer.pdc.org/api/price?asset=pdc')\r\n            .pipe(take(1))\r\n            .subscribe({\r\n                next: ({ data, success }: { data: { pdc: { usd: number; usd_24h_change: number } }; success: boolean }): void => {\r\n                    if (success) {\r\n                        this.variablesService.pdcMoneyEquivalent = data['pdc']['usd'];\r\n                        this.variablesService.pdcMoneyEquivalentPercent = data['pdc']['usd_24h_change'];\r\n                    }\r\n                },\r\n                error: error => {\r\n                    console.warn('api.coingecko.com price error: ', error);\r\n                },\r\n            });\r\n\r\n        this.variablesService.isDarkTheme$.pipe(takeUntil(this.destroy$)).subscribe({\r\n            next: isDarkTheme => {\r\n                this.renderer.setAttribute(document.documentElement, 'class', isDarkTheme ? 'dark' : 'light');\r\n            },\r\n        });\r\n    }\r\n\r\n    getAliases(): void {\r\n        this.backendService.getAllAliases((status, data, error) => {\r\n            console.warn(error);\r\n\r\n            if (error === 'CORE_BUSY') {\r\n                window.setTimeout(() => {\r\n                    this.getAliases();\r\n                }, 10000);\r\n            } else if (error === 'OVERFLOW') {\r\n                this.variablesService.aliases = [];\r\n                this.variablesService.enableAliasSearch = false;\r\n                this.variablesService.wallets.forEach(wallet => {\r\n                    wallet.alias = this.backendService.getWalletAlias(wallet.address);\r\n                });\r\n            } else {\r\n                this.variablesService.enableAliasSearch = true;\r\n                if (data.aliases && data.aliases.length) {\r\n                    this.variablesService.aliases = [];\r\n                    data.aliases.forEach(alias => {\r\n                        const newAlias = {\r\n                            name: '@' + alias.alias,\r\n                            address: alias.address,\r\n                            comment: alias.comment,\r\n                        };\r\n                        this.variablesService.aliases.push(newAlias);\r\n                    });\r\n                    this.variablesService.wallets.forEach(wallet => {\r\n                        wallet.alias = this.backendService.getWalletAlias(wallet.address);\r\n                    });\r\n                    this.variablesService.aliases = this.variablesService.aliases.sort((a, b) => {\r\n                        if (a.name.length > b.name.length) {\r\n                            return 1;\r\n                        }\r\n                        if (a.name.length < b.name.length) {\r\n                            return -1;\r\n                        }\r\n                        if (a.name > b.name) {\r\n                            return 1;\r\n                        }\r\n                        if (a.name < b.name) {\r\n                            return -1;\r\n                        }\r\n                        return 0;\r\n                    });\r\n                    this.variablesService.changeAliases();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    addToStore(wallet, boolean): void {\r\n        const value = this.store.state.sync;\r\n        if (value && value.length > 0) {\r\n            const sync = value.filter(item => item.wallet_id === wallet.wallet_id);\r\n            if (sync && sync.length > 0) {\r\n                const result = value.map(item => {\r\n                    if (item.wallet_id === wallet.wallet_id) {\r\n                        return { sync: boolean, wallet_id: wallet.wallet_id };\r\n                    } else {\r\n                        return item;\r\n                    }\r\n                });\r\n                this.store.set(StateKeys.sync, result);\r\n            } else {\r\n                value.push({ sync: boolean, wallet_id: wallet.wallet_id });\r\n                this.store.set(StateKeys.sync, value);\r\n            }\r\n        } else {\r\n            this.store.set(StateKeys.sync, [{ sync: boolean, wallet_id: wallet.wallet_id }]);\r\n        }\r\n    }\r\n\r\n    getVersion(): void {\r\n        this.backendService.getVersion((version, type, error) => {\r\n            this.ngZone.run(() => {\r\n                if (!error) {\r\n                    console.log('----------------- version -----------------', version);\r\n                    console.log('----------------- type -----------------', type);\r\n                    this.variablesService.testnet = type === 'testnet';\r\n                    this.variablesService.networkType = type;\r\n\r\n                    this._loadVerifiedAssetInfoWhitelist(type);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    private _loadVerifiedAssetInfoWhitelist(type: 'mainnet' | 'testnet'): void {\r\n        const updateTime: number = 10 * 60 * 1000; // 10 minutes\r\n\r\n        interval(updateTime)\r\n            .pipe(\r\n                startWith(0),\r\n                switchMap(() => this._apiPdcService.getVerifiedAssetInfoWhitelist(type).pipe(retry(5))),\r\n                takeUntil(this.destroy$)\r\n            )\r\n            .subscribe({\r\n                next: ({ assets }) => {\r\n                    this.variablesService.verifiedAssetInfoWhitelist$.next(assets);\r\n                    this._walletsService.setVerifiedAssetInfoWhitelist(assets);\r\n                },\r\n            });\r\n    }\r\n\r\n    getInfo(): void {\r\n        const updateTime: number = 60 * 1000; // 1 minutes\r\n\r\n        interval(updateTime)\r\n            .pipe(\r\n                startWith(0),\r\n                takeUntil(this.destroy$)\r\n            ).subscribe({\r\n            next: () => {\r\n                const params = {\r\n                    jsonrpc: '2.0',\r\n                    method: 'getinfo',\r\n                };\r\n\r\n                this.backendService.call_rpc(params, (status, response_data) => {\r\n                    this.ngZone.run(() => {\r\n                        this.variablesService.info$.next(response_data.result);\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    private _getPdcCurrentSupply(): void {\r\n        const params: ParamsCallRpc = {\r\n            jsonrpc: '2.0',\r\n            id: 0,\r\n            method: 'getinfo',\r\n            params: {\r\n                flags: 1024,\r\n            },\r\n        };\r\n\r\n        this.backendService.call_rpc(params, (status, response_data) => {\r\n            this.ngZone.run(() => {\r\n                this.variablesService.pdc_current_supply = response_data?.['result']?.['total_coins'] ?? 'Unknown';\r\n            });\r\n        });\r\n    }\r\n}\r\n","import { inject, NgModule, Provider } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { PagesModule } from './pages/pages.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TranslateLoader, TranslateModule, TranslateModuleConfig } from '@ngx-translate/core';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { BrowserModule, DomSanitizer } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ChartModule, HIGHCHARTS_MODULES } from 'angular-highcharts';\r\nimport * as highcharts from 'highcharts';\r\nimport exporting from 'highcharts/modules/exporting.src';\r\nimport { MoneyToIntPipeModule } from '@parts/pipes';\r\nimport { OpenWalletModalComponent } from '@parts/modals/open-wallet-modal/open-wallet-modal.component';\r\nimport { FlexModule } from '@angular/flex-layout';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RegisterContextTemplatesComponent } from '@parts/components/register-context-templates.component';\r\nimport { DEFAULT_DIALOG_CONFIG, DialogConfig } from '@angular/cdk/dialog';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\nimport { materialPdcIcons } from '../assets/material-pdc-icons';\r\nimport { MAT_DIALOG_DEFAULT_OPTIONS, MatDialogConfig, MatDialogModule } from '@angular/material/dialog';\r\n\r\nexport function highchartsFactory(): any[] {\r\n    highcharts.setOptions({\r\n        time: {\r\n            useUTC: false,\r\n        },\r\n    });\r\n\r\n    return [exporting];\r\n}\r\n\r\nexport const provideHighchartsFactory = {\r\n    provide: HIGHCHARTS_MODULES,\r\n    useFactory: highchartsFactory,\r\n};\r\n\r\nexport function HttpLoaderFactory(httpClient: HttpClient): TranslateHttpLoader {\r\n    return new TranslateHttpLoader(httpClient, './assets/i18n/', '.json');\r\n}\r\n\r\nconst translateModuleConfig: TranslateModuleConfig = {\r\n    loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient],\r\n    },\r\n};\r\n\r\nconst provideDialog: Provider = {\r\n    provide: DEFAULT_DIALOG_CONFIG,\r\n    useValue: <DialogConfig>{\r\n        width: '95vw',\r\n        maxWidth: '54rem',\r\n        maxHeight: '90vh',\r\n        hasBackdrop: true,\r\n        disableClose: true,\r\n    },\r\n};\r\n\r\nconst providerMatDialog: Provider = {\r\n    provide: MAT_DIALOG_DEFAULT_OPTIONS,\r\n    useValue: <MatDialogConfig>{\r\n        width: '95vw',\r\n        maxWidth: '54rem',\r\n        maxHeight: '90vh',\r\n        panelClass: 'pdc-mat-dialog',\r\n        hasBackdrop: true,\r\n        disableClose: true,\r\n    },\r\n};\r\n\r\n@NgModule({\r\n    declarations: [AppComponent, OpenWalletModalComponent],\r\n    imports: [\r\n        CommonModule,\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        HttpClientModule,\r\n        TranslateModule.forRoot(translateModuleConfig),\r\n        AppRoutingModule,\r\n        PagesModule,\r\n        ChartModule,\r\n        MoneyToIntPipeModule,\r\n        FlexModule,\r\n        FormsModule,\r\n        MatDialogModule,\r\n        RegisterContextTemplatesComponent,\r\n    ],\r\n    providers: [\r\n        provideHighchartsFactory,\r\n        provideDialog,\r\n        providerMatDialog,\r\n    ],\r\n    bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {\r\n    private _matIconRegistry: MatIconRegistry = inject(MatIconRegistry);\r\n\r\n    private _sanitizer: DomSanitizer = inject(DomSanitizer);\r\n\r\n    constructor() {\r\n        this._registerIcons(materialPdcIcons);\r\n    }\r\n\r\n    private _registerIcons(icons: Array<string>): void {\r\n        icons.forEach((icon: string) => {\r\n            this._matIconRegistry.addSvgIcon(\r\n                icon,\r\n                this._sanitizer.bypassSecurityTrustResourceUrl(`assets/material-pdc-icons/${icon}.svg`)\r\n            );\r\n        });\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-full-layout',\r\n    template: `\r\n        <div class=\"overflow-auto p-2\" fxFlex=\"100\" fxFlexFill>\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n    `,\r\n    styles: [\r\n        `\r\n            :host {\r\n                width: 100%;\r\n                height: 100%;\r\n                overflow: hidden;\r\n            }\r\n        `,\r\n    ],\r\n})\r\nexport class FullLayoutComponent {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FullLayoutComponent } from './full-layout.component';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { RouterOutlet } from '@angular/router';\r\n\r\n@NgModule({\r\n    declarations: [FullLayoutComponent],\r\n    imports: [CommonModule, RouterOutlet, FlexLayoutModule],\r\n    exports: [FullLayoutComponent],\r\n})\r\nexport class FullLayoutModule {}\r\n","import { Component, NgZone, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { Wallet } from '@api/models/wallet.model';\r\nimport { ConfirmModalComponent, ConfirmModalData } from '@parts/modals/confirm-modal/confirm-modal.component';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { WalletsService } from '@parts/services/wallets.service';\r\nimport { PdcLoadersService } from '@parts/services/pdc-loaders.service';\r\nimport { BackendService } from '@api/services/backend.service';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\n\r\n@Component({\r\n    selector: 'app-sidebar',\r\n    template: `\r\n        <div class=\"sidebar-header mb-2\">\r\n            <div class=\"logo\">\r\n                <img [src]=\"pdcLogo\" alt=\"pdc-logo\" />\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"sidebar-content\">\r\n            <div (cdkDropListDropped)=\"drop($event)\" cdkDropList cdkDropListLockAxis=\"y\"\r\n                 class=\"sidebar-content-list scrolled-content mb-1\">\r\n                <app-wallet-card\r\n                    (click)=\"selectWallet(wallet.wallet_id)\"\r\n                    (eventClose)=\"beforeClose($event)\"\r\n                    *ngFor=\"let wallet of variablesService.wallets\"\r\n                    [cdkDragData]=\"wallet\"\r\n                    [ngClass]=\"{\r\n                        active: wallet?.wallet_id === variablesService?.currentWallet?.wallet_id,\r\n                        auditable: wallet.is_auditable && !wallet.is_watch_only,\r\n                        'watch-only': wallet.is_watch_only,\r\n                        'offset-testnet': variablesService.testnet,\r\n                        'mb-1': !variablesService.testnet\r\n                    }\"\r\n                    [wallet]=\"wallet\"\r\n                    cdkDrag\r\n                ></app-wallet-card>\r\n            </div>\r\n\r\n            <div class=\"sidebar-nav scrolled-content\">\r\n                <button\r\n                    (click)=\"goMainPage()\"\r\n                    class=\"outline small w-100 mb-1 px-2\"\r\n                    fxLayout=\"row inline wrap\"\r\n                    fxLayoutAlign=\"start center\"\r\n                >\r\n                    <mat-icon class=\"mr-1\" svgIcon=\"pdc-plus\"></mat-icon>\r\n                    <span>{{ 'SIDEBAR.ADD_NEW' | translate }}</span>\r\n                </button>\r\n\r\n                <button\r\n                    [routerLink]=\"['/settings']\"\r\n                    class=\"outline small w-100 mb-1 px-2\"\r\n                    fxLayout=\"row inline wrap\"\r\n                    fxLayoutAlign=\"start center\"\r\n                    routerLinkActive=\"active\"\r\n                >\r\n                    <mat-icon class=\"mr-1\" svgIcon=\"pdc-settings\"></mat-icon>\r\n                    <span>{{ 'SIDEBAR.SETTINGS' | translate }}</span>\r\n                </button>\r\n\r\n                <ng-container *ngIf=\"variablesService.appPass === ''; else masterPass\">\r\n                    <button\r\n                        (click)=\"logOut()\"\r\n                        [delay]=\"500\"\r\n                        [disabled]=\"variablesService.appPass === ''\"\r\n                        [timeDelay]=\"500\"\r\n                        class=\"outline small w-100 px-2\"\r\n                        fxLayout=\"row inline wrap\"\r\n                        fxLayoutAlign=\"start center\"\r\n                        placement=\"bottom\"\r\n                        tooltip=\"{{ 'SIDEBAR.LOG_OUT_TOOLTIP' | translate }}\"\r\n                        tooltipClass=\"table-tooltip account-tooltip\"\r\n                    >\r\n                        <mat-icon class=\"mr-1\" svgIcon=\"pdc-logout\"></mat-icon>\r\n                        <span>{{ 'SIDEBAR.LOG_OUT' | translate }}</span>\r\n                    </button>\r\n                </ng-container>\r\n\r\n                <ng-template #masterPass>\r\n                    <button (click)=\"logOut()\" class=\"outline small w-100 px-2\" fxLayout=\"row inline wrap\"\r\n                            fxLayoutAlign=\"start center\">\r\n                        <mat-icon class=\"mr-1\" svgIcon=\"pdc-logout\"></mat-icon>\r\n                        <span> {{ 'SIDEBAR.LOG_OUT' | translate }}</span>\r\n                    </button>\r\n                </ng-template>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"sidebar-footer\">\r\n            <app-synchronization-status></app-synchronization-status>\r\n        </div>\r\n\r\n        <app-deeplink></app-deeplink>\r\n    `,\r\n    styleUrls: ['./sidebar.component.scss'],\r\n})\r\nexport class SidebarComponent implements OnDestroy {\r\n    private destroy$ = new Subject<void>();\r\n\r\n    constructor(\r\n        public variablesService: VariablesService,\r\n        private walletsService: WalletsService,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private ngZone: NgZone,\r\n        private _matDialog: MatDialog,\r\n        private backend: BackendService,\r\n        public pdcLoadersService: PdcLoadersService\r\n    ) {}\r\n\r\n    get pdcLogo(): string {\r\n        const {\r\n            settings: { isDarkTheme },\r\n        } = this.variablesService;\r\n        return isDarkTheme ? 'assets/icons/blue/pdc-logo.svg' : 'assets/icons/blue/light-pdc-logo.svg';\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    toggleDarkTheme(): void {\r\n        const { settings, isDarkTheme$ } = this.variablesService;\r\n        const isDarkTheme: boolean = !settings.isDarkTheme;\r\n        this.variablesService.settings.isDarkTheme = isDarkTheme;\r\n        isDarkTheme$.next(isDarkTheme);\r\n\r\n        this.backend.storeAppData();\r\n    }\r\n\r\n    goMainPage(): void {\r\n        if (this.route.snapshot.queryParams && this.route.snapshot.queryParams.prevUrl === 'login') {\r\n            this.ngZone.run(() => {\r\n                this.router.navigate(['/'], { queryParams: { prevUrl: 'login' } });\r\n            });\r\n        } else {\r\n            this.ngZone.run(() => {\r\n                this.router.navigate(['/']);\r\n            });\r\n        }\r\n    }\r\n\r\n    selectWallet(id: number): void {\r\n        this.ngZone.run(() => {\r\n            this.variablesService.setCurrentWallet(id);\r\n            this.router.navigate(['/wallet/assets']);\r\n        });\r\n    }\r\n\r\n    drop(event: CdkDragDrop<Wallet[]>): void {\r\n        moveItemInArray(this.variablesService.wallets, event.previousIndex, event.currentIndex);\r\n    }\r\n\r\n    beforeClose(wallet_id): void {\r\n        const config: MatDialogConfig<ConfirmModalData> = {\r\n            data: {\r\n                title: 'WALLET.CONFIRM.MESSAGE',\r\n                message: 'WALLET.CONFIRM.TITLE',\r\n            },\r\n        };\r\n\r\n        this._matDialog\r\n            .open<ConfirmModalComponent, ConfirmModalData, boolean>(ConfirmModalComponent, config)\r\n            .afterClosed()\r\n            .pipe(takeUntil(this.destroy$))\r\n            .subscribe({\r\n                next: confirmed => confirmed && this.closeWallet(wallet_id),\r\n            });\r\n    }\r\n\r\n    closeWallet(wallet_id): void {\r\n        this.walletsService.closeWallet(wallet_id);\r\n    }\r\n\r\n    logOut(): void {\r\n        this.pdcLoadersService.open('fullScreen', 'SIDEBAR.SYNCHRONIZATION.LOGGING_OUT');\r\n\r\n        setTimeout(() => {\r\n            this.variablesService.stopCountdown();\r\n            this.variablesService.appLogin = false;\r\n            this.variablesService.appPass = '';\r\n            this.ngZone.run(() => {\r\n                this.router.navigate(['/login'], { queryParams: { type: 'auth' } }).then(() => {\r\n                    this.pdcLoadersService.close('fullScreen');\r\n                });\r\n            });\r\n        }, 500);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SidebarComponent } from './sidebar.component';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { DisablePriceFetchModule, TooltipModule } from '@parts/directives';\r\nimport { ConfirmModalModule } from '@parts/modals/confirm-modal/confirm-modal.module';\r\nimport { DeeplinkModule } from '../../pages/deeplink/deeplink.module';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { IntToMoneyPipeModule } from '@parts/pipes';\r\nimport { StakingSwitchComponent } from '@parts/components/staking-switch.component';\r\nimport { SynchronizationStatusComponent } from '@parts/components/synchronization-status.component';\r\nimport { WalletCardComponent } from '@parts/components/wallet-card/wallet-card.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@NgModule({\r\n    declarations: [SidebarComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule,\r\n        DragDropModule,\r\n        TooltipModule,\r\n        TranslateModule,\r\n        DisablePriceFetchModule,\r\n        ConfirmModalModule,\r\n        SynchronizationStatusComponent,\r\n        DeeplinkModule,\r\n        StakingSwitchComponent,\r\n        FlexLayoutModule,\r\n        IntToMoneyPipeModule,\r\n        WalletCardComponent,\r\n        MatIconModule,\r\n    ],\r\n    exports: [SidebarComponent],\r\n})\r\nexport class SidebarModule {}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-with-sidebar-layout',\r\n    templateUrl: './with-sidebar-layout.component.html',\r\n    styleUrls: ['./with-sidebar-layout.component.scss'],\r\n})\r\nexport class WithSidebarLayoutComponent {}\r\n","<app-sidebar></app-sidebar>\r\n\r\n<div class=\"with-sidebar-layout-container\" fxFlex=\"100\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { WithSidebarLayoutComponent } from './with-sidebar-layout.component';\r\nimport { SidebarModule } from '../sidebar/sidebar.module';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { RouterOutlet } from '@angular/router';\r\n\r\n@NgModule({\r\n    declarations: [WithSidebarLayoutComponent],\r\n    imports: [CommonModule, RouterOutlet, FlexLayoutModule, SidebarModule],\r\n    exports: [WithSidebarLayoutComponent],\r\n})\r\nexport class WithSidebarLayoutModule {}\r\n","import { Component, inject, NgZone } from '@angular/core';\r\nimport { BackendService } from '@api/services/backend.service';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { CREATE_NEW_WALLET_HELP_PAGE } from '@parts/data/constants';\r\nimport { filePathWalletValidator } from '@parts/utils/pdc-validators';\r\nimport { ModalService } from '@parts/services/modal.service';\r\n\r\n@Component({\r\n    selector: 'app-add-wallet',\r\n    templateUrl: './add-wallet.component.html',\r\n    styleUrls: ['./add-wallet.component.scss'],\r\n})\r\nexport class AddWalletComponent {\r\n    private translateService = inject(TranslateService);\r\n\r\n    constructor(\r\n        public variablesService: VariablesService,\r\n        private router: Router,\r\n        private modalService: ModalService,\r\n        private backendService: BackendService,\r\n        private ngZone: NgZone\r\n    ) {}\r\n\r\n    openWallet(): void {\r\n        const caption = this.translateService.instant('MAIN.CHOOSE_PATH');\r\n        const default_path = this.variablesService.settings.default_path;\r\n        this.backendService.openFileDialog(caption, '*', default_path, async (file_status, file_data) => {\r\n            if (!file_status) {\r\n                if (file_data['error_code'] !== 'CANCELED') {\r\n                    this.modalService.prepareModal('error', file_data['error_code']);\r\n                }\r\n                return;\r\n            }\r\n            const positionLastSlash = file_data.path.lastIndexOf('/');\r\n            const new_default_path = file_data.path.slice(0, positionLastSlash);\r\n            const error = filePathWalletValidator(file_data.path);\r\n\r\n            if (error) {\r\n                const text = this.translateService.instant(error.errorText);\r\n                this.modalService.prepareModal('error', text);\r\n                return;\r\n            }\r\n\r\n            this.variablesService.settings.default_path = new_default_path;\r\n            await this.ngZone.run(async () => {\r\n                await this.router.navigate(['/open'], {\r\n                    queryParams: { path: file_data.path },\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    openInBrowser(): void {\r\n        this.backendService.openUrlInBrowser(CREATE_NEW_WALLET_HELP_PAGE);\r\n    }\r\n}\r\n","<div class=\"page-container\">\r\n    <div class=\"toolbar mb-2\">\r\n        <div class=\"left\">\r\n            <app-back-button></app-back-button>\r\n            <h1 class=\"ml-2\">{{ 'BREADCRUMBS.ADD_WALLET' | translate }}</h1>\r\n        </div>\r\n        <div class=\"right\"></div>\r\n    </div>\r\n\r\n    <div class=\"page-content\">\r\n        <div class=\"scrolled-content\" fxFlex=\"1 1 auto\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n            <div class=\"add-wallet w-100\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                <div class=\"wrap-controls text-align-center max-w-38-rem\">\r\n                    <h4 class=\"mb-2\">{{ 'MAIN.TITLE' | translate }}</h4>\r\n\r\n                    <button [routerLink]=\"['/create']\" class=\"primary big w-100 mb-1\" type=\"button\">\r\n                        {{ 'MAIN.BUTTON_NEW_WALLET' | translate }}\r\n                    </button>\r\n\r\n                    <button (click)=\"openWallet()\" class=\"primary big w-100 mb-1\" type=\"button\">\r\n                        {{ 'MAIN.BUTTON_OPEN_WALLET' | translate }}\r\n                    </button>\r\n\r\n                    <button [routerLink]=\"['/restore']\" class=\"outline big w-100 mb-2\" type=\"button\">\r\n                        {{ 'MAIN.BUTTON_RESTORE_BACKUP' | translate }}\r\n                    </button>\r\n\r\n                    <p\r\n                        (click)=\"openInBrowser()\"\r\n                        class=\"text-align-center cursor-pointer how-to-create\"\r\n                        fxLayout=\"row\"\r\n                        fxLayoutAlign=\"center center\"\r\n                    >\r\n                        <mat-icon svgIcon=\"pdc-question\" class=\"mr-1\"></mat-icon>\r\n                        <span class=\"color-primary\">{{ 'MAIN.HELP' | translate }}</span>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, inject, NgZone, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { BackendService } from '@api/services/backend.service';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { ModalService } from '@parts/services/modal.service';\r\nimport { Wallet } from '@api/models/wallet.model';\r\nimport { IntToMoneyPipe } from '@parts/pipes/int-to-money-pipe/int-to-money.pipe';\r\nimport BigNumber from 'bignumber.js';\r\nimport { Subject } from 'rxjs';\r\nimport { hasOwnProperty } from '@parts/functions/has-own-property';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { regExpAliasName } from '@parts/utils/pdc-validators';\r\nimport { BreadcrumbItems } from '@parts/components/breadcrumbs/breadcrumbs.models';\r\n\r\n@Component({\r\n    selector: 'app-assign-alias',\r\n    template: `\r\n        <div class=\"page-container\">\r\n            <div class=\"toolbar mb-2\">\r\n                <div class=\"left\">\r\n                    <app-back-button></app-back-button>\r\n                    <h1 class=\"ml-2\">{{ 'BREADCRUMBS.ASSIGN_ALIAS' | translate }}</h1>\r\n                </div>\r\n                <div class=\"right\"></div>\r\n            </div>\r\n\r\n            <div class=\"page-content\">\r\n                <app-breadcrumbs class=\"mb-2\" [items]=\"breadcrumbItems\"></app-breadcrumbs>\r\n\r\n                <div class=\"scrolled-content\">\r\n                    <form [formGroup]=\"assignForm\" class=\"form\">\r\n                        <div class=\"form__field\">\r\n                            <label\r\n                                [delay]=\"50\"\r\n                                for=\"alias-name\"\r\n                                placement=\"bottom-left\"\r\n                                tooltip=\"{{ 'ASSIGN_ALIAS.NAME.TOOLTIP' | translate }}\"\r\n                                tooltipClass=\"table-tooltip assign-alias-tooltip\"\r\n                            >\r\n                                {{ 'ASSIGN_ALIAS.NAME.LABEL' | translate }}\r\n                            </label>\r\n                            <div class=\"has-no-edit-symbol\">\r\n                                <input\r\n                                    (contextmenu)=\"variablesService.onContextMenu($event)\"\r\n                                    [placeholder]=\"'ASSIGN_ALIAS.NAME.PLACEHOLDER' | translate\"\r\n                                    class=\"form__field--input\"\r\n                                    formControlName=\"name\"\r\n                                    id=\"alias-name\"\r\n                                    type=\"text\"\r\n                                />\r\n                            </div>\r\n                            <div\r\n                                *ngIf=\"\r\n                                    assignForm.controls['name'].invalid &&\r\n                                    (assignForm.controls['name'].dirty || assignForm.controls['name'].touched)\r\n                                \"\r\n                                class=\"error\"\r\n                            >\r\n                                <div\r\n                                    *ngIf=\"\r\n                                        assignForm.controls['name'].errors['pattern'] &&\r\n                                        assignForm.get('name').value.length > 6 &&\r\n                                        assignForm.get('name').value.length <= 25\r\n                                    \"\r\n                                >\r\n                                    {{ 'ASSIGN_ALIAS.FORM_ERRORS.NAME_WRONG' | translate }}\r\n                                </div>\r\n                                <div *ngIf=\"assignForm.get('name').value.length <= 6 || assignForm.get('name').value.length > 25\">\r\n                                    {{ 'ASSIGN_ALIAS.FORM_ERRORS.NAME_LENGTH' | translate }}\r\n                                </div>\r\n                            </div>\r\n                            <div *ngIf=\"alias.exists\" class=\"error\">\r\n                                <div>\r\n                                    {{ 'ASSIGN_ALIAS.FORM_ERRORS.NAME_EXISTS' | translate }}\r\n                                </div>\r\n                            </div>\r\n                            <div *ngIf=\"notEnoughMoney\" class=\"error\">\r\n                                <div>\r\n                                    {{ 'ASSIGN_ALIAS.FORM_ERRORS.NO_MONEY' | translate }}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"form__field textarea\">\r\n                            <label\r\n                                [delay]=\"50\"\r\n                                for=\"alias-comment\"\r\n                                placement=\"bottom-left\"\r\n                                tooltip=\"{{ 'ASSIGN_ALIAS.COMMENT.TOOLTIP' | translate }}\"\r\n                                tooltipClass=\"table-tooltip assign-alias-tooltip\"\r\n                            >\r\n                                {{ 'ASSIGN_ALIAS.COMMENT.LABEL' | translate }}\r\n                            </label>\r\n                            <textarea\r\n                                (contextmenu)=\"variablesService.onContextMenu($event)\"\r\n                                [maxLength]=\"variablesService.maxCommentLength\"\r\n                                class=\"scrolled-content\"\r\n                                formControlName=\"comment\"\r\n                                id=\"alias-comment\"\r\n                                placeholder=\"{{ 'ASSIGN_ALIAS.COMMENT.PLACEHOLDER' | translate }}\"\r\n                            >\r\n                            </textarea>\r\n                            <div *ngIf=\"assignForm.get('comment').value.length >= variablesService.maxCommentLength\" class=\"error\">\r\n                                {{ 'ASSIGN_ALIAS.FORM_ERRORS.MAX_LENGTH' | translate }}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <p class=\"mb-2\">\r\n                            {{\r\n                                'ASSIGN_ALIAS.COST'\r\n                                    | translate\r\n                                        : {\r\n                                              value: alias.price | intToMoney,\r\n                                              currency: variablesService.defaultTicker\r\n                                          }\r\n                            }}\r\n                        </p>\r\n\r\n                        <button\r\n                            (click)=\"assignAlias()\"\r\n                            [disabled]=\"!assignForm.valid || !canRegister || notEnoughMoney\"\r\n                            class=\"primary big w-100\"\r\n                            type=\"button\"\r\n                        >\r\n                            {{ 'ASSIGN_ALIAS.BUTTON_ASSIGN' | translate }}\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `,\r\n    styles: [\r\n        `\r\n            :host {\r\n                width: 100%;\r\n                height: 100%;\r\n                overflow: hidden;\r\n            }\r\n        `,\r\n    ],\r\n})\r\nexport class AssignAliasComponent implements OnInit, OnDestroy {\r\n    wallet: Wallet;\r\n\r\n    breadcrumbItems: BreadcrumbItems = [\r\n        {\r\n            routerLink: '/wallet/history',\r\n            title: this.variablesService.currentWallet.name,\r\n        },\r\n        {\r\n            title: 'BREADCRUMBS.ASSIGN_ALIAS',\r\n        },\r\n    ];\r\n\r\n    fb = inject(FormBuilder);\r\n\r\n    assignForm = this.fb.group({\r\n        name: this.fb.nonNullable.control('', [Validators.required, Validators.pattern(regExpAliasName)]),\r\n        comment: this.fb.nonNullable.control('', [Validators.maxLength(this.variablesService.maxCommentLength)]),\r\n    });\r\n\r\n    alias = {\r\n        name: '',\r\n        fee: this.variablesService.default_fee,\r\n        price: new BigNumber(0),\r\n        reward: '0',\r\n        rewardOriginal: '0',\r\n        comment: '',\r\n        exists: false,\r\n    };\r\n\r\n    canRegister = false;\r\n\r\n    notEnoughMoney = false;\r\n\r\n    private destroy$ = new Subject<void>();\r\n\r\n    constructor(\r\n        public variablesService: VariablesService,\r\n        private ngZone: NgZone,\r\n        private router: Router,\r\n        private backend: BackendService,\r\n        private modalService: ModalService,\r\n        private intToMoney: IntToMoneyPipe\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        this.wallet = this.variablesService.currentWallet;\r\n        this.assignForm\r\n            .get('name')\r\n            .valueChanges.pipe(takeUntil(this.destroy$))\r\n            .subscribe({\r\n                next: value => {\r\n                    this.canRegister = false;\r\n                    this.alias.exists = false;\r\n                    const newName = value.toLowerCase().replace('@', '');\r\n                    if (\r\n                        !(this.assignForm.controls['name'].errors && hasOwnProperty(this.assignForm.controls['name'].errors, 'pattern')) &&\r\n                        newName.length >= 6 &&\r\n                        newName.length <= 25\r\n                    ) {\r\n                        this.backend.getAliasInfoByName(newName, status => {\r\n                            this.ngZone.run(() => {\r\n                                this.alias.exists = status;\r\n                            });\r\n                            if (!status) {\r\n                                this.alias.price = new BigNumber(0);\r\n                                this.backend.getAliasCoast(newName, (statusPrice, dataPrice) => {\r\n                                    this.ngZone.run(() => {\r\n                                        if (statusPrice) {\r\n                                            this.alias.price = BigNumber.sum(dataPrice['coast'], this.variablesService.default_fee_big);\r\n                                        }\r\n                                        const unlocked_balance = new BigNumber(this.wallet.getBalanceByTicker('PDC')?.unlocked || 0);\r\n                                        this.notEnoughMoney = this.alias.price.isGreaterThan(unlocked_balance);\r\n                                        this.alias.reward = this.intToMoney.transform(this.alias.price);\r\n                                        this.alias.rewardOriginal = this.intToMoney.transform(dataPrice['coast']);\r\n                                        this.canRegister = !this.notEnoughMoney;\r\n                                    });\r\n                                });\r\n                            } else {\r\n                                this.notEnoughMoney = false;\r\n                                this.alias.reward = '0';\r\n                                this.alias.rewardOriginal = '0';\r\n                            }\r\n                        });\r\n                    } else {\r\n                        this.notEnoughMoney = false;\r\n                        this.alias.reward = '0';\r\n                        this.alias.rewardOriginal = '0';\r\n                    }\r\n                    this.alias.name = newName;\r\n                },\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    assignAlias(): void {\r\n        const alias = this.backend.getWalletAlias(this.wallet.address);\r\n        if (hasOwnProperty(alias, 'name')) {\r\n            this.modalService.prepareModal('info', 'ASSIGN_ALIAS.ONE_ALIAS');\r\n        } else {\r\n            this.alias.comment = this.assignForm.get('comment').value;\r\n            this.backend.registerAlias(\r\n                this.wallet.wallet_id,\r\n                this.alias.name,\r\n                this.wallet.address,\r\n                this.alias.fee,\r\n                this.alias.comment,\r\n                this.alias.rewardOriginal,\r\n                async status => {\r\n                    if (status) {\r\n                        this.wallet.wakeAlias = true;\r\n                        this.modalService.prepareModal('info', 'ASSIGN_ALIAS.REQUEST_ADD_REG');\r\n                        await this.ngZone.run(async () => {\r\n                            await this.router.navigate(['/wallet/']);\r\n                        });\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { paths, pathsChildrenAuth } from '../paths';\r\nimport { NoWalletComponent } from './no-wallet/no-wallet.component';\r\nimport { FullLayoutComponent } from '../../layouts/full-layout/full-layout.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: paths.auth,\r\n        component: FullLayoutComponent,\r\n        children: [\r\n            {\r\n                path: pathsChildrenAuth.noWallet,\r\n                component: NoWalletComponent,\r\n            },\r\n        ],\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class AuthRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { NoWalletComponent } from './no-wallet/no-wallet.component';\r\nimport { SynchronizationStatusComponent } from '@parts/components/synchronization-status.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@NgModule({\r\n    declarations: [NoWalletComponent],\r\n    imports: [CommonModule, AuthRoutingModule, TranslateModule, FlexLayoutModule, SynchronizationStatusComponent, MatIconModule],\r\n})\r\nexport class AuthModule {}\r\n","import { Component, inject, NgZone, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, ValidationErrors, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BackendService } from '@api/services/backend.service';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { Wallet } from '@api/models/wallet.model';\r\nimport { hasOwnProperty } from '@parts/functions/has-own-property';\r\nimport { BehaviorSubject, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { regExpPassword, PdcValidators } from '@parts/utils/pdc-validators';\r\nimport { WalletsService } from '@parts/services/wallets.service';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n    submitLoading$ = new BehaviorSubject(false);\r\n\r\n    resetLoading$ = new BehaviorSubject(false);\r\n\r\n    fb = inject(FormBuilder);\r\n\r\n    get pdcLogo(): string {\r\n        const {\r\n            settings: { isDarkTheme },\r\n        } = this.variablesService;\r\n        return isDarkTheme ? 'assets/icons/blue/pdc-logo.svg' : 'assets/icons/blue/light-pdc-logo.svg';\r\n    }\r\n\r\n    regForm = this.fb.group(\r\n        {\r\n            password: this.fb.nonNullable.control('', Validators.pattern(regExpPassword)),\r\n            confirmation: this.fb.nonNullable.control(''),\r\n        },\r\n        {\r\n            validators: [PdcValidators.formMatch('password', 'confirmation')],\r\n        }\r\n    );\r\n\r\n    authForm = this.fb.group({\r\n        password: this.fb.nonNullable.control(''),\r\n    });\r\n\r\n    type = 'reg';\r\n\r\n    private destroy$ = new Subject<void>();\r\n\r\n    constructor(\r\n        public variablesService: VariablesService,\r\n        public walletsService: WalletsService,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private backend: BackendService,\r\n        private ngZone: NgZone\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        this.route.queryParams.pipe(takeUntil(this.destroy$)).subscribe({\r\n            next: params => {\r\n                if (params.type) {\r\n                    this.type = params.type;\r\n                }\r\n            },\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    onSubmitCreatePass(): void {\r\n        if (this.regForm.valid) {\r\n            this.variablesService.appPass = this.regForm.get('password').value; // the pass what was written in input of login form by user\r\n\r\n            this.backend.setMasterPassword({ pass: this.variablesService.appPass }, (status, data) => {\r\n                if (status) {\r\n                    this.backend.storeSecureAppData({\r\n                        pass: this.variablesService.appPass,\r\n                    });\r\n                    this.variablesService.appLogin = true;\r\n                    this.variablesService.dataIsLoaded = true;\r\n                    if (this.variablesService.settings.appLockTime) {\r\n                        this.variablesService.startCountdown();\r\n                    }\r\n                    this.ngZone.run(() => {\r\n                        this.router.navigate(['/']);\r\n                    });\r\n                } else {\r\n                    console.log(data['error_code']);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onSkipCreatePass(): void {\r\n        this.ngZone.run(() => {\r\n            this.variablesService.appPass = '';\r\n            this.variablesService.appLogin = true;\r\n            this.router.navigate(['/']);\r\n        });\r\n    }\r\n\r\n    resetJwtWalletRpc(): void {\r\n        this.backend.setupJwtWalletRpc({ secret: '', pdcCompation: false });\r\n    }\r\n\r\n    dropSecureAppData(): void {\r\n        this.resetLoading$.next(true);\r\n\r\n        this.resetJwtWalletRpc();\r\n        this.closeAllWallets();\r\n        this.backend.dropSecureAppData(() => {\r\n            this.ngZone.run(() => {\r\n                this.resetLoading$.next(false);\r\n                this.onSkipCreatePass();\r\n            });\r\n\r\n        });\r\n        this.variablesService.contacts = [];\r\n    }\r\n\r\n    onSubmitAuthPass(): void {\r\n        this.submitLoading$.next(true);\r\n\r\n        if (this.authForm.valid) {\r\n            this.variablesService.appPass = this.authForm.get('password').value;\r\n            if (this.variablesService.dataIsLoaded) {\r\n                this.backend.checkMasterPassword({ pass: this.variablesService.appPass }, status => {\r\n                    if (status) {\r\n                        this.variablesService.appLogin = true;\r\n                        if (this.variablesService.settings.appLockTime) {\r\n                            this.variablesService.startCountdown();\r\n                        }\r\n                        this.ngZone.run(() => {\r\n                            this.submitLoading$.next(false);\r\n                            this.router.navigate(['/'], {\r\n                                queryParams: { prevUrl: 'login' },\r\n                            });\r\n                        });\r\n                    } else {\r\n                        this.ngZone.run(() => {\r\n                            this.submitLoading$.next(false);\r\n                            this.setAuthPassError({ wrong_password: true });\r\n                        });\r\n                    }\r\n                });\r\n            } else {\r\n                this.getData(this.variablesService.appPass);\r\n            }\r\n        } else {\r\n            this.submitLoading$.next(false);\r\n        }\r\n    }\r\n\r\n    getData(appPass): void {\r\n        this.backend.getSecureAppData({ pass: appPass }, (status, data) => {\r\n            if (!data.error_code) {\r\n                this.setAuthPassError(null);\r\n                this.variablesService.appLogin = true;\r\n                this.variablesService.dataIsLoaded = true;\r\n                if (this.variablesService.settings.appLockTime) {\r\n                    this.variablesService.startCountdown();\r\n                }\r\n                this.variablesService.appPass = appPass;\r\n                const isEmptyObject = Object.keys(data).length === 0 && data.constructor === Object;\r\n\r\n                if (this.variablesService.wallets.length > 0) {\r\n                    this.ngZone.run(() => {\r\n                        this.submitLoading$.next(false);\r\n                        this.router.navigate(['/wallet/']);\r\n                    });\r\n                    return;\r\n                }\r\n                if (hasOwnProperty(data, 'contracts')) {\r\n                    if (Object.keys(data['contacts']).length !== 0) {\r\n                        data['contacts'].map(contact => {\r\n                            this.variablesService.contacts.push(contact);\r\n                        });\r\n                    }\r\n                }\r\n                if (hasOwnProperty(data, 'wallets')) {\r\n                    if (Object.keys(data['wallets']).length !== 0) {\r\n                        this.getWalletData(data['wallets']);\r\n                    } else {\r\n                        this.ngZone.run(() => {\r\n                            this.submitLoading$.next(false);\r\n                            this.router.navigate(['/']);\r\n                        });\r\n                    }\r\n                }\r\n                if (!hasOwnProperty(data, 'wallets') && !hasOwnProperty(data, 'contracts')) {\r\n                    if (data.length !== 0 && !isEmptyObject) {\r\n                        this.getWalletData(data);\r\n                    } else {\r\n                        this.ngZone.run(() => {\r\n                            this.submitLoading$.next(false);\r\n                            this.router.navigate(['/']);\r\n                        });\r\n                    }\r\n                }\r\n\r\n                if (this.variablesService.settings.pdcCompanionForm.pdcCompation) {\r\n                    this.backend.setupJwtWalletRpc(this.variablesService.settings.pdcCompanionForm);\r\n                }\r\n            }\r\n\r\n            if (data.error_code === 'WRONG_PASSWORD') {\r\n                this.ngZone.run(() => {\r\n                    this.submitLoading$.next(false);\r\n                    this.setAuthPassError({ wrong_password: true });\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    getWalletData(walletData): void {\r\n        let openWallets = 0;\r\n        let runWallets = 0;\r\n        walletData.forEach((wallet, wallet_index) => {\r\n            this.backend.openWallet(wallet.path, wallet.pass, this.variablesService.count, true, (open_status, open_data, open_error) => {\r\n                if (open_status || open_error === 'FILE_RESTORED') {\r\n                    openWallets++;\r\n                    this.ngZone.run(() => {\r\n                        const new_wallet = new Wallet(\r\n                            open_data.wallet_id,\r\n                            wallet.name,\r\n                            wallet.pass,\r\n                            open_data['wi'].path,\r\n                            open_data['wi'].address,\r\n                            open_data['wi'].balance,\r\n                            open_data['wi'].unlocked_balance,\r\n                            open_data['wi'].mined_total,\r\n                            open_data['wi'].tracking_hey\r\n                        );\r\n                        new_wallet.alias = this.backend.getWalletAlias(new_wallet.address);\r\n                        if (wallet.staking) {\r\n                            new_wallet.staking = true;\r\n                            this.backend.startPosMining(new_wallet.wallet_id);\r\n                        } else {\r\n                            new_wallet.staking = false;\r\n                        }\r\n                        new_wallet.is_auditable = open_data['wi'].is_auditable;\r\n                        new_wallet.is_watch_only = open_data['wi'].is_watch_only;\r\n                        new_wallet.currentPage = 1;\r\n                        new_wallet.exclude_mining_txs = false;\r\n                        if (open_data.recent_history && open_data.recent_history.history) {\r\n                            new_wallet.total_history_item = open_data.recent_history.total_history_items;\r\n                            new_wallet.totalPages = Math.ceil(open_data.recent_history.total_history_items / this.variablesService.count);\r\n                            new_wallet.totalPages > this.variablesService.maxPages\r\n                                ? (new_wallet.pages = new Array(5).fill(1).map((value, index) => value + index))\r\n                                : (new_wallet.pages = new Array(new_wallet.totalPages).fill(1).map((value, index) => value + index));\r\n                            new_wallet.prepareHistory(open_data.recent_history.history);\r\n                        } else {\r\n                            new_wallet.total_history_item = 0;\r\n                            new_wallet.pages = new Array(1).fill(1);\r\n                            new_wallet.totalPages = 1;\r\n                        }\r\n                        this.walletsService.addWallet(new_wallet);\r\n                        if (this.variablesService.wallets.length === 1) {\r\n                            this.router.navigate(['/wallet/']);\r\n                        }\r\n                    });\r\n                    this.backend.runWallet(open_data.wallet_id, run_status => {\r\n                        if (run_status) {\r\n                            runWallets++;\r\n                        } else {\r\n                            if (wallet_index === walletData.length - 1 && runWallets === 0) {\r\n                                this.ngZone.run(() => {\r\n                                    this.router.navigate(['/']);\r\n                                });\r\n                            }\r\n                        }\r\n                    });\r\n                } else {\r\n                    if (wallet_index === walletData.length - 1 && openWallets === 0) {\r\n                        this.ngZone.run(() => {\r\n                            this.router.navigate(['/']);\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        this.submitLoading$.next(false);\r\n    }\r\n\r\n    closeAllWallets(): void {\r\n        this.variablesService.wallets.forEach(({ wallet_id }) => this.closeWallet(wallet_id));\r\n    }\r\n\r\n    closeWallet(wallet_id) {\r\n        this.backend.closeWallet(wallet_id, () => {\r\n            for (let i = this.variablesService.wallets.length - 1; i >= 0; i--) {\r\n                this.variablesService.wallets.splice(i, 1);\r\n                this.backend.storeSecureAppData();\r\n            }\r\n        });\r\n    }\r\n\r\n    private setAuthPassError(errors: ValidationErrors | null): void {\r\n        this.authForm.controls['password'].setErrors(errors);\r\n    }\r\n}\r\n","<div class=\"auth\" fxFlexFill fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n    <div class=\"auth-card\">\r\n        <div class=\"logo mb-3\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n            <img [src]=\"pdcLogo\" alt=\"pdc-logo\" />\r\n        </div>\r\n\r\n        <form (ngSubmit)=\"onSubmitCreatePass()\" *ngIf=\"type === 'reg'\" [formGroup]=\"regForm\" class=\"form\">\r\n            <div class=\"auth-card-form\">\r\n                <div class=\"form__field mb-2\">\r\n                    <label for=\"master-pass\">{{ 'LOGIN.SETUP_MASTER_PASS' | translate }}</label>\r\n                    <input\r\n                        (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\r\n                        appAutofocus\r\n                        class=\"form__field--input\"\r\n                        formControlName=\"password\"\r\n                        id=\"master-pass\"\r\n                        placeholder=\"{{ 'PLACEHOLDERS.MASTER_PASS_PLACEHOLDER' | translate }}\"\r\n                        type=\"password\"\r\n                    />\r\n                    <div *ngIf=\"regForm.controls['password'].dirty && regForm.controls['password'].errors\" class=\"error\">\r\n                        <div *ngIf=\"regForm.controls['password'].errors.pattern\">\r\n                            {{ 'ERRORS.REGEXP_INVALID_PASSWORD' | translate }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form__field fixed\">\r\n                    <label for=\"confirm-pass\">{{ 'LOGIN.SETUP_CONFIRM_PASS' | translate }}</label>\r\n                    <input\r\n                        (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\r\n                        class=\"form__field--input\"\r\n                        formControlName=\"confirmation\"\r\n                        id=\"confirm-pass\"\r\n                        placeholder=\"{{ 'PLACEHOLDERS.PLACEHOLDER_CONFIRM' | translate }}\"\r\n                        type=\"password\"\r\n                    />\r\n                    <div\r\n                        *ngIf=\"regForm.controls['password'].dirty && regForm.controls['confirmation'].dirty && regForm.errors\"\r\n                        class=\"error\"\r\n                    >\r\n                        <div *ngIf=\"regForm.errors['mismatch']\">\r\n                            {{ 'LOGIN.FORM_ERRORS.MISMATCH' | translate }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <button\r\n                [disabled]=\"\r\n                    !regForm.controls['password'].value.length ||\r\n                    !regForm.controls['confirmation'].value.length ||\r\n                    (regForm.errors && regForm.errors['mismatch']) ||\r\n                    regForm.controls['password'].errors\r\n                \"\r\n                class=\"primary big w-100 mb-1\"\r\n                type=\"submit\"\r\n            >\r\n                {{ 'LOGIN.BUTTON_NEXT' | translate }}\r\n            </button>\r\n\r\n            <button\r\n                (click)=\"onSkipCreatePass()\"\r\n                [disabled]=\"regForm.controls['password'].value.length || regForm.controls['confirmation'].value.length\"\r\n                class=\"primary big w-100\"\r\n                type=\"button\"\r\n            >\r\n                {{ 'LOGIN.BUTTON_SKIP' | translate }}\r\n            </button>\r\n        </form>\r\n\r\n        <form (ngSubmit)=\"onSubmitAuthPass()\" *ngIf=\"type !== 'reg'\" [formGroup]=\"authForm\" class=\"form\">\r\n            <div class=\"auth-card-form\">\r\n                <div class=\"form__field fixed\">\r\n                    <label for=\"master-pass-login\">{{ 'LOGIN.MASTER_PASS' | translate }}</label>\r\n                    <input\r\n                        (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\r\n                        [placeholder]=\"'PLACEHOLDERS.MASTER_PASS_PLACEHOLDER' | translate\"\r\n                        appAutofocus\r\n                        autofocus\r\n                        class=\"form__field--input\"\r\n                        formControlName=\"password\"\r\n                        id=\"master-pass-login\"\r\n                        type=\"password\"\r\n                    />\r\n                    <div\r\n                        *ngIf=\"\r\n                            authForm.controls['password'].invalid &&\r\n                            (authForm.controls['password'].dirty || authForm.controls['password'].touched)\r\n                        \"\r\n                        class=\"error\"\r\n                    >\r\n                        <div *ngIf=\"authForm.controls['password'].hasError('wrong_password')\">\r\n                            {{ 'LOGIN.FORM_ERRORS.INVALID_PASS' | translate }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <button class=\"primary big w-100 mb-1\" type=\"submit\">\r\n                {{ 'LOGIN.BUTTON_NEXT' | translate }}\r\n                <span *ngIf=\"submitLoading$ | async\" [ngTemplateOutlet]=\"loaderTemp\" class=\"ml-1\"></span>\r\n            </button>\r\n\r\n            <button (click)=\"dropSecureAppData()\" class=\"outline big w-100\" type=\"button\">\r\n                {{ 'LOGIN.BUTTON_RESET' | translate }}\r\n                <span *ngIf=\"resetLoading$ | async\" [ngTemplateOutlet]=\"loaderTemp\" class=\"ml-1\"></span>\r\n            </button>\r\n        </form>\r\n    </div>\r\n\r\n    <app-synchronization-status></app-synchronization-status>\r\n</div>\r\n\r\n<ng-template #loaderTemp>\r\n    <pdc-loader></pdc-loader>\r\n</ng-template>\r\n","import { Component, NgZone } from '@angular/core';\r\nimport { CREATE_NEW_WALLET_HELP_PAGE } from '@parts/data/constants';\r\nimport { Router } from '@angular/router';\r\nimport { BackendService } from '@api/services/backend.service';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n    selector: 'app-no-wallet',\r\n    templateUrl: './no-wallet.component.html',\r\n    styleUrls: ['./no-wallet.component.scss'],\r\n})\r\nexport class NoWalletComponent {\r\n    get pdcLogo(): string {\r\n        const {\r\n            settings: { isDarkTheme },\r\n        } = this.variablesService;\r\n        return isDarkTheme ? 'assets/icons/blue/pdc-logo.svg' : 'assets/icons/blue/light-pdc-logo.svg';\r\n    }\r\n\r\n    constructor(\r\n        public variablesService: VariablesService,\r\n        private router: Router,\r\n        private backend: BackendService,\r\n        private ngZone: NgZone,\r\n        private translate: TranslateService\r\n    ) {}\r\n\r\n    openWallet(): void {\r\n        this.backend.openFileDialog(\r\n            this.translate.instant('MAIN.CHOOSE_PATH'),\r\n            '*',\r\n            this.variablesService.settings.default_path,\r\n            (file_status, file_data) => {\r\n                if (file_status) {\r\n                    this.variablesService.settings.default_path = file_data.path.substr(0, file_data.path.lastIndexOf('/'));\r\n                    this.ngZone.run(() => {\r\n                        this.router\r\n                            .navigate(['/open'], {\r\n                                queryParams: { path: file_data.path },\r\n                            })\r\n                            .then();\r\n                    });\r\n                } else {\r\n                    console.log(file_data['error_code']);\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    openInBrowser(): void {\r\n        this.backend.openUrlInBrowser(CREATE_NEW_WALLET_HELP_PAGE);\r\n    }\r\n}\r\n","<div class=\"auth\" fxFlexFill fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n    <div class=\"auth-card\">\r\n        <div class=\"logo mb-3\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n            <img [src]=\"pdcLogo\" alt=\"pdc-logo\" />\r\n        </div>\r\n\r\n        <h4 class=\"mb-2 text-align-center\">{{ 'MAIN.TITLE' | translate }}</h4>\r\n\r\n        <button [routerLink]=\"['/create']\" class=\"primary big w-100 mb-1\" type=\"button\">\r\n            {{ 'MAIN.BUTTON_NEW_WALLET' | translate }}\r\n        </button>\r\n\r\n        <button (click)=\"openWallet()\" class=\"primary big w-100 mb-1\" type=\"button\">\r\n            {{ 'MAIN.BUTTON_OPEN_WALLET' | translate }}\r\n        </button>\r\n\r\n        <button [routerLink]=\"['/restore']\" class=\"outline big w-100 mb-2\" type=\"button\">\r\n            {{ 'MAIN.BUTTON_RESTORE_BACKUP' | translate }}\r\n        </button>\r\n\r\n        <p (click)=\"openInBrowser()\" class=\"text-align-center cursor-pointer\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n            <mat-icon svgIcon=\"pdc-question\" class=\"mr-1\"></mat-icon>\r\n            <span class=\"color-primary\">{{ 'MAIN.HELP' | translate }}</span>\r\n        </p>\r\n    </div>\r\n\r\n    <app-synchronization-status></app-synchronization-status>\r\n</div>\r\n","import { Component, inject, NgZone } from '@angular/core';\r\nimport { NonNullableFormBuilder, Validators } from '@angular/forms';\r\nimport { BackendService } from '@api/services/backend.service';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { ModalService } from '@parts/services/modal.service';\r\nimport { Router } from '@angular/router';\r\nimport { Wallet } from '@api/models/wallet.model';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { regExpPassword, PdcValidators } from '@parts/utils/pdc-validators';\r\nimport { WalletsService } from '@parts/services/wallets.service';\r\nimport { BreadcrumbItems } from '@parts/components/breadcrumbs/breadcrumbs.models';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'app-create-wallet',\r\n    template: `\r\n        <div class=\"page-container\">\r\n            <div class=\"toolbar mb-2\">\r\n                <div class=\"left\">\r\n                    <app-back-button></app-back-button>\r\n                    <h1 class=\"ml-2\">{{ 'BREADCRUMBS.ADD_WALLET' | translate }}</h1>\r\n                </div>\r\n                <div class=\"right\"></div>\r\n            </div>\r\n\r\n            <div class=\"page-content\">\r\n                <app-breadcrumbs class=\"mb-2\" [items]=\"breadcrumbItems\"></app-breadcrumbs>\r\n\r\n                <div class=\"scrolled-content\">\r\n                    <form [formGroup]=\"createForm\" class=\"form\">\r\n                        <div class=\"form__field\">\r\n                            <label for=\"wallet-name\">{{ 'CREATE_WALLET.NAME' | translate }}</label>\r\n                            <input\r\n                                (contextmenu)=\"variablesService.onContextMenu($event)\"\r\n                                [placeholder]=\"'PLACEHOLDERS.WALLET_NAME_PLACEHOLDER' | translate\"\r\n                                [readonly]=\"createForm.controls.path.valid\"\r\n                                class=\"form__field--input\"\r\n                                formControlName=\"name\"\r\n                                id=\"wallet-name\"\r\n                                maxlength=\"{{ variablesService.maxWalletNameLength }}\"\r\n                                type=\"text\"\r\n                            />\r\n                            <div\r\n                                *ngIf=\"\r\n                                    createForm.controls.name.invalid && (createForm.controls.name.dirty || createForm.controls.name.touched)\r\n                                \"\r\n                                class=\"error\"\r\n                            >\r\n                                <div *ngIf=\"createForm.controls.name.hasError('duplicate')\">\r\n                                    {{ 'CREATE_WALLET.FORM_ERRORS.NAME_DUPLICATE' | translate }}\r\n                                </div>\r\n                                <div *ngIf=\"createForm.controls.name.hasError('required')\">\r\n                                    {{ 'CREATE_WALLET.FORM_ERRORS.NAME_REQUIRED' | translate }}\r\n                                </div>\r\n                            </div>\r\n                            <div *ngIf=\"createForm.controls.name.value.length > variablesService.maxWalletNameLength\" class=\"error\">\r\n                                {{ 'CREATE_WALLET.FORM_ERRORS.MAX_LENGTH' | translate }}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"form__field\">\r\n                            <label for=\"wallet-password\">{{ 'CREATE_WALLET.PASS' | translate }}</label>\r\n                            <input\r\n                                (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\r\n                                [readonly]=\"createForm.controls.path.valid\"\r\n                                class=\"form__field--input\"\r\n                                formControlName=\"password\"\r\n                                id=\"wallet-password\"\r\n                                placeholder=\"{{ 'PLACEHOLDERS.PLACEHOLDER_NEW' | translate }}\"\r\n                                type=\"password\"\r\n                            />\r\n                            <div *ngIf=\"createForm.controls.password.dirty && createForm.controls.password.invalid\" class=\"error\">\r\n                                <div *ngIf=\"createForm.controls.password.hasError('pattern')\">\r\n                                    {{ 'ERRORS.REGEXP_INVALID_PASSWORD' | translate }}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"form__field\">\r\n                            <label for=\"confirm-wallet-password\">{{ 'CREATE_WALLET.CONFIRM' | translate }}</label>\r\n                            <input\r\n                                (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\r\n                                [class.invalid]=\"createForm.hasError('mismatch') && createForm.controls.confirm.value.length > 0\"\r\n                                [readonly]=\"createForm.controls.path.valid\"\r\n                                class=\"form__field--input\"\r\n                                formControlName=\"confirm\"\r\n                                id=\"confirm-wallet-password\"\r\n                                placeholder=\"{{ 'PLACEHOLDERS.PLACEHOLDER_CONFIRM' | translate }}\"\r\n                                type=\"password\"\r\n                            />\r\n                            <div\r\n                                *ngIf=\"\r\n                                    createForm.controls.confirm.dirty &&\r\n                                    createForm.hasError('mismatch') &&\r\n                                    createForm.controls.confirm.value.length > 0\r\n                                \"\r\n                                class=\"error\"\r\n                            >\r\n                                {{ 'CREATE_WALLET.FORM_ERRORS.CONFIRM_NOT_MATCH' | translate }}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button *ngIf=\"createForm.controls.path.valid\" class=\"outline big w-100 mb-2\" disabled type=\"button\">\r\n                            <mat-icon svgIcon=\"pdc-check-circle\" class=\"mr-1\"></mat-icon>\r\n                            {{ savedWalletName }}\r\n                        </button>\r\n\r\n                        <button\r\n                            *ngIf=\"createForm.controls.path.invalid\"\r\n                            (click)=\"selectWalletLocation()\"\r\n                            [disabled]=\"\r\n                                createForm.controls.name.invalid || createForm.controls.password.invalid || createForm.hasError('mismatch')\r\n                            \"\r\n                            class=\"outline big w-100 mb-2\"\r\n                            type=\"button\"\r\n                        >\r\n                            {{ 'CREATE_WALLET.BUTTON_SELECT' | translate }}\r\n                        </button>\r\n\r\n                        <button (click)=\"createWallet()\" [disabled]=\"createForm.invalid\" class=\"primary big w-100\" type=\"button\">\r\n                            {{ 'CREATE_WALLET.BUTTON_CREATE' | translate }}\r\n                            <span class=\"ml-1\" *ngIf=\"loading$ | async\" [ngTemplateOutlet]=\"loaderTemp\"></span>\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <ng-template #loaderTemp><pdc-loader></pdc-loader></ng-template>\r\n    `,\r\n    styles: [\r\n        `\r\n            :host {\r\n                width: 100%;\r\n                height: 100%;\r\n                overflow: hidden;\r\n            }\r\n        `,\r\n    ],\r\n})\r\nexport class CreateWalletComponent {\r\n    variablesService = inject(VariablesService);\r\n\r\n    loading$ = new BehaviorSubject(false);\r\n\r\n    breadcrumbItems: BreadcrumbItems = [\r\n        {\r\n            routerLink: '/add-wallet',\r\n            title: 'BREADCRUMBS.ADD_WALLET',\r\n        },\r\n        {\r\n            title: 'BREADCRUMBS.CREATE_WALLET',\r\n        },\r\n    ];\r\n\r\n    walletsService = inject(WalletsService);\r\n\r\n    fb = inject(NonNullableFormBuilder);\r\n\r\n    createForm = this.fb.group(\r\n        {\r\n            name: this.fb.control('', [Validators.required, PdcValidators.duplicate(this.variablesService.walletNamesForComparisons)]),\r\n            password: this.fb.control('', Validators.pattern(regExpPassword)),\r\n            confirm: this.fb.control(''),\r\n            path: this.fb.control('', Validators.required),\r\n        },\r\n        {\r\n            validators: [PdcValidators.formMatch('password', 'confirm')],\r\n        }\r\n    );\r\n\r\n    private router = inject(Router);\r\n\r\n    private backend = inject(BackendService);\r\n\r\n    private modalService = inject(ModalService);\r\n\r\n    private ngZone = inject(NgZone);\r\n\r\n    private translate = inject(TranslateService);\r\n\r\n    get savedWalletName(): string {\r\n        const path = this.createForm.get('path').value;\r\n        return path.substr(path.lastIndexOf('/') + 1, path.length - 1);\r\n    }\r\n\r\n    createWallet(): void {\r\n        this.loading$.next(true);\r\n\r\n        const { path: selectedPath, password, name } = this.createForm.getRawValue();\r\n        this.backend.generateWallet(selectedPath, password, async (generate_status, generate_data, errorCode) => {\r\n            if (generate_status) {\r\n                const { wallet_id } = generate_data;\r\n                const { path, address, balance, unlocked_balance, mined_total, tracking_hey } = generate_data['wi'];\r\n                const wallet = new Wallet(\r\n                    wallet_id,\r\n                    name,\r\n                    password,\r\n                    path,\r\n                    address,\r\n                    balance,\r\n                    unlocked_balance,\r\n                    mined_total,\r\n                    tracking_hey\r\n                );\r\n                wallet.alias = this.backend.getWalletAlias(address);\r\n                wallet.total_history_item = 0;\r\n                wallet.pages = new Array(1).fill(1);\r\n                wallet.totalPages = 1;\r\n                wallet.currentPage = 1;\r\n                this.walletsService.addWallet(wallet);\r\n                await this.backend.runWallet(wallet_id, async (run_status, run_data) => {\r\n                    if (run_status) {\r\n                        await this.ngZone.run(async () => {\r\n                            if (this.variablesService.appPass) {\r\n                                this.backend.storeSecureAppData();\r\n                            }\r\n                            this.variablesService.setCurrentWallet(wallet_id);\r\n                            this.loading$.next(false);\r\n                            await this.router.navigate(['/seed-phrase'], { queryParams: { wallet_id } });\r\n                        });\r\n                    } else {\r\n                        console.log(run_data['error_code']);\r\n                        this.ngZone.run(() => {\r\n                            this.loading$.next(false);\r\n                        });\r\n                    }\r\n                });\r\n            } else {\r\n                const errorTranslationKey =\r\n                    errorCode === 'ALREADY_EXISTS' ? 'CREATE_WALLET.ERROR_CANNOT_SAVE_TOP' : 'CREATE_WALLET.ERROR_CANNOT_SAVE_SYSTEM';\r\n                this.modalService.prepareModal('error', errorTranslationKey);\r\n\r\n                this.ngZone.run(() => {\r\n                    this.loading$.next(false);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    selectWalletLocation(): void {\r\n        const caption = this.translate.instant('CREATE_WALLET.TITLE_SAVE');\r\n        const fileMask = '*';\r\n        const { default_path } = this.variablesService.settings;\r\n        this.backend.saveFileDialog(caption, fileMask, default_path, (file_status, file_data) => {\r\n            if (file_status) {\r\n                this.ngZone.run(() => {\r\n                    const { path } = file_data;\r\n                    this.createForm.get('path').patchValue(path);\r\n                    this.variablesService.settings.default_path = path.substr(0, path.lastIndexOf('/'));\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { delay, takeUntil } from 'rxjs/operators';\r\nimport { BehaviorSubject, Subject } from 'rxjs';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\n\r\n@Component({\r\n    selector: 'app-deeplink',\r\n    template: `\r\n        <ng-container *ngIf=\"deeplink$ | async\">\r\n            <app-deeplink-modal *ngIf=\"variablesService?.daemon_state === 2 || !variablesService?.sync_started\"></app-deeplink-modal>\r\n\r\n            <app-sync-modal *ngIf=\"variablesService?.daemon_state !== 2 || variablesService?.sync_started\"> </app-sync-modal>\r\n        </ng-container>\r\n    `,\r\n    styles: [],\r\n})\r\nexport class DeeplinkComponent implements OnInit, OnDestroy {\r\n    deeplink$ = new BehaviorSubject<string | null>(null);\r\n\r\n    private destroy$ = new Subject<void>();\r\n\r\n    constructor(public variablesService: VariablesService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.variablesService.deeplink$.pipe(delay(200), takeUntil(this.destroy$)).subscribe({\r\n            next: data => {\r\n                this.deeplink$.next(data);\r\n            },\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DeeplinkModalModule } from './modals/deeplink-modal/deeplink-modal.module';\r\nimport { DeeplinkComponent } from './deeplink.component';\r\nimport { SyncModalModule } from './modals/sync-modal/sync-modal.module';\r\n\r\n@NgModule({\r\n    declarations: [DeeplinkComponent],\r\n    imports: [CommonModule, DeeplinkModalModule, SyncModalModule],\r\n    exports: [DeeplinkComponent, DeeplinkModalModule, SyncModalModule],\r\n})\r\nexport class DeeplinkModule {}\r\n","import { Component, HostBinding, NgZone, OnDestroy, OnInit, Renderer2 } from '@angular/core';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { DeeplinkParams, PushOffer, Wallet } from '@api/models/wallet.model';\r\nimport { BigNumber } from 'bignumber.js';\r\nimport { MIXIN } from '@parts/data/constants';\r\nimport { Subject } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { BackendService } from '@api/services/backend.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'app-deeplink-modal',\r\n    template: `\r\n        <div class=\"modal deeplink-modal-wrapper\" fxFlex=\"0 1 54rem\" fxLayout=\"column\">\r\n            <ng-container *ngIf=\"walletsToPay.length > 1 && !secondStep\">\r\n                <div class=\"content mb-2\" fxFlex=\"0 0 auto\" fxLayout=\"column\">\r\n                    <div class=\"form__field\" fxFlex=\"0 0 auto\">\r\n                        <label>Select wallet for action:</label>\r\n                        <ng-select\r\n                            [(ngModel)]=\"walletToPayId\"\r\n                            [clearable]=\"false\"\r\n                            [items]=\"walletsToPay\"\r\n                            [searchable]=\"false\"\r\n                            bindLabel=\"name\"\r\n                            bindValue=\"wallet_id\"\r\n                        >\r\n                            <ng-template let-item=\"item\" ng-label-tmp>\r\n                                {{ item.name }}\r\n                            </ng-template>\r\n                            <ng-template let-index=\"index\" let-item=\"item\" ng-option-tmp>\r\n                                {{ item.name }}\r\n                            </ng-template>\r\n                        </ng-select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"controls\" fxFlex=\"0 0 auto\" fxLayout=\"row nowrap\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"1rem\">\r\n                    <button (click)=\"canselAction()\" class=\"outline big w-100\" type=\"button\">\r\n                        {{ 'EXPORT_HISTORY.CANCEL' | translate }}\r\n                    </button>\r\n                    <button (click)=\"nextStep()\" class=\"primary big w-100\" type=\"submit\">Next...</button>\r\n                </div>\r\n            </ng-container>\r\n\r\n            <ng-container *ngIf=\"secondStep && marketplaceModalShow && actionData.action === 'marketplace_offer_create'\">\r\n                <h4 class=\"mb-2\" fxFlex=\"0 0 auto\">Creating a marketplace offer</h4>\r\n                <div class=\"content scrolled-content mb-2\" fxFlex=\"1 1 auto\" fxLayout=\"column\">\r\n                    <div class=\"table-info\" fxFlex=\"0 0 auto\">\r\n                        <div class=\"row\">\r\n                            <div class=\"label max-w-19-rem w-100\">\r\n                                {{ 'Offer title' | translate }}\r\n                            </div>\r\n                            <div class=\"text\">{{ actionData.title }}</div>\r\n                        </div>\r\n\r\n                        <hr class=\"separator\" />\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"label max-w-19-rem w-100\">\r\n                                {{ 'Description' | translate }}\r\n                            </div>\r\n                            <div class=\"text\">{{ actionData.description }}</div>\r\n                        </div>\r\n\r\n                        <hr class=\"separator\" />\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"label max-w-19-rem w-100\">\r\n                                {{ 'Category' | translate }}\r\n                            </div>\r\n                            <div class=\"text\">{{ actionData.category }}</div>\r\n                        </div>\r\n\r\n                        <hr class=\"separator\" />\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"label max-w-19-rem w-100\">\r\n                                {{ 'Price' | translate }}\r\n                            </div>\r\n                            <div class=\"text\">\r\n                                {{ actionData.price }}\r\n                                {{ this.variablesService.defaultTicker }}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <hr class=\"separator\" />\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"label max-w-19-rem w-100\">\r\n                                {{ 'Preview url' | translate }}\r\n                            </div>\r\n                            <div class=\"text\">{{ actionData.url || actionData.img_url }}</div>\r\n                        </div>\r\n\r\n                        <hr class=\"separator\" />\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"label max-w-19-rem w-100\">\r\n                                {{ 'Contacts' | translate }}\r\n                            </div>\r\n                            <div class=\"text\">{{ actionData.contact }}</div>\r\n                        </div>\r\n\r\n                        <hr class=\"separator\" />\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"label max-w-19-rem w-100\">\r\n                                {{ 'Comments' | translate }}\r\n                            </div>\r\n                            <div class=\"text\">\r\n                                {{ actionData.comment || actionData.comments }}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <hr class=\"separator\" />\r\n\r\n                        <!--<div class=\"row\">-->\r\n                        <!--    <div class=\"label max-w-19-rem w-100\">-->\r\n                        <!--        {{ 'Mixins' | translate }}-->\r\n                        <!--    </div>-->\r\n                        <!--    <div class=\"text\">{{ actionData.mixins || defaultMixin }}</div>-->\r\n                        <!--</div>-->\r\n\r\n                        <!--<hr class=\"separator\" />-->\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"label max-w-19-rem w-100\">\r\n                                {{ 'Transaction fee' | translate }}\r\n                            </div>\r\n                            <div class=\"text\">\r\n                                {{ actionData.price * (actionData.fee || this.variablesService.default_fee) }}\r\n                                {{ this.variablesService.defaultTicker }}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"controls\" fxFlex=\"0 0 auto\" fxLayout=\"row nowrap\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"1rem\">\r\n                    <button (click)=\"canselAction()\" class=\"outline big w-100\" type=\"button\">\r\n                        {{ 'EXPORT_HISTORY.CANCEL' | translate }}\r\n                    </button>\r\n                    <button (click)=\"marketplaceSend()\" class=\"primary big w-100\" type=\"submit\">Sign & Send...</button>\r\n                </div>\r\n            </ng-container>\r\n\r\n            <ng-container *ngIf=\"marketplaceConfirmHash\">\r\n                <h4 class=\"mb-2\" fxFlex=\"0 0 auto\">Operation successful</h4>\r\n\r\n                <div class=\"content scrolled-content mb-2\" fxFlex=\"1 1 auto\" fxLayout=\"column\">\r\n                    <div class=\"table-info\" fxFlex=\"0 0 auto\">\r\n                        <div class=\"row\">\r\n                            <div class=\"label max-w-19-rem w-100\">\r\n                                {{ 'Operation hash' | translate }}\r\n                            </div>\r\n                            <div\r\n                                (contextmenu)=\"variablesService.onContextMenuOnlyCopy($event, marketplaceConfirmHash)\"\r\n                                class=\"text\"\r\n                                fxLayout=\"row\"\r\n                                fxLayoutAlign=\"start center\"\r\n                            >\r\n                                {{ marketplaceConfirmHash }}\r\n                                <mat-icon\r\n                                    (click)=\"copyHash()\"\r\n                                    [svgIcon]=\"copyAnimation ? 'pdc-check' : 'pdc-copy'\"\r\n                                    class=\"ml-1\"\r\n                                ></mat-icon>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"controls\" fxFlex=\"0 0 auto\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                    <button (click)=\"canselAction()\" class=\"primary big w-100\" type=\"button\">Close</button>\r\n                </div>\r\n            </ng-container>\r\n\r\n            <ng-container *ngIf=\"!walletsToPay.length\">\r\n                <h4 class=\"mb-2\" fxFlex=\"0 0 auto\">Your wallets have not loaded yet. Try this action a little later.</h4>\r\n\r\n                <div class=\"controls\" fxFlex=\"0 0 auto\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                    <button (click)=\"canselAction()\" class=\"primary big w-100\" type=\"button\">Ok</button>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    `,\r\n    styleUrls: ['./deeplink-modal.component.scss'],\r\n})\r\nexport class DeeplinkModalComponent implements OnInit, OnDestroy {\r\n    @HostBinding('class.modal-overlay') modalOverlay = true;\r\n\r\n    secondStep = false;\r\n\r\n    walletToPayId = 0;\r\n\r\n    nextStepInterval;\r\n\r\n    marketplaceModalShow = true;\r\n\r\n    copyAnimation = false;\r\n\r\n    marketplaceConfirmHash: any = null;\r\n\r\n    actionData: DeeplinkParams = {};\r\n\r\n    defaultMixin = MIXIN;\r\n\r\n    walletsToPay: Array<Wallet> = [];\r\n\r\n    private destroy$ = new Subject<void>();\r\n\r\n    constructor(\r\n        public variablesService: VariablesService,\r\n        private _router: Router,\r\n        private backend: BackendService,\r\n        private ngZone: NgZone,\r\n        private renderer: Renderer2\r\n    ) {\r\n        this.walletsToPay = this.variablesService.wallets.filter(wallet => !wallet.is_watch_only || !wallet.is_auditable);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.renderer.addClass(document.body, 'no-scroll');\r\n\r\n        this.variablesService.deeplink$.pipe(takeUntil(this.destroy$)).subscribe({\r\n            next: deeplink => {\r\n                this.actionData = {};\r\n\r\n                if (deeplink) {\r\n                    if (this.walletsToPay.length === 0) {\r\n                        this.canselAction();\r\n                        return;\r\n                    }\r\n                    this.actionData = this.parseDeeplink(deeplink);\r\n                    if (this.walletsToPay.length === 1) {\r\n                        this.walletToPayId = this.walletsToPay[0].wallet_id;\r\n                        const { daemon_state, sync_started } = this.variablesService;\r\n\r\n                        if (daemon_state === 2 && sync_started === false) {\r\n                            this.nextStep();\r\n                        } else {\r\n                            this.nextStepInterval = setInterval(() => {\r\n                                if (daemon_state === 2 && sync_started === false) {\r\n                                    this.nextStep();\r\n                                    clearInterval(this.nextStepInterval);\r\n                                }\r\n                            }, 1500);\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy$.next();\r\n        this.variablesService.deeplink$.next(null);\r\n        this.renderer.removeClass(document.body, 'no-scroll');\r\n    }\r\n\r\n    parseDeeplink(deeplink): DeeplinkParams {\r\n        const quotesRex = new RegExp(/'|\"|”|%E2%80%9D|%22/g);\r\n        const spaceSymbolRex = new RegExp(/%20/g);\r\n        const newObj = {};\r\n\r\n        const newString = deeplink.substr(5); // delete pdc:;\r\n        newString.split('&').forEach(str => {\r\n            const [key, value] = str.split('=');\r\n            newObj[key] = value.replace(quotesRex, '').replace(spaceSymbolRex, ' ').trim();\r\n        });\r\n        return newObj;\r\n    }\r\n\r\n    canselAction(): void {\r\n        this.variablesService.deeplink$.next(null);\r\n        this.variablesService.sendActionData$.next({});\r\n        this.actionData = {};\r\n        this.secondStep = false;\r\n    }\r\n\r\n    marketplaceSend(): void {\r\n        const offerObject: PushOffer = {\r\n            wallet_id: this.walletToPayId,\r\n            od: {\r\n                ap: this.actionData.price || '',\r\n                at: '1',\r\n                cat: this.actionData.category || '',\r\n                cnt: this.actionData.contact || '',\r\n                com: this.actionData.comment || this.actionData.comments || '',\r\n                do: this.actionData.description || '',\r\n                et: 10,\r\n                fee: new BigNumber('' + (+this.actionData.fee || +this.variablesService.default_fee) * 1000000000000),\r\n                lci: '',\r\n                lco: 'World Wide',\r\n                ot: 1,\r\n                pt: 'Credit cards, BTC, PDC, ETH',\r\n                t: this.actionData.title || '',\r\n                url: this.actionData.url || this.actionData.img_url || '',\r\n            },\r\n        };\r\n        this.backend.push_offer(offerObject, (status, data) => {\r\n            this.ngZone.run(() => {\r\n                if (data.success) {\r\n                    this.marketplaceModalShow = false;\r\n                    this.marketplaceConfirmHash = data.tx_hash;\r\n                } else {\r\n                    this.canselAction();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    copyHash(): void {\r\n        this.backend.setClipboard(this.marketplaceConfirmHash);\r\n        this.copyAnimation = true;\r\n        setTimeout(() => (this.copyAnimation = false), 2000);\r\n    }\r\n\r\n    nextStep(): void {\r\n        if (this.actionData.action === 'send') {\r\n            this.variablesService.sendActionData$.next(this.actionData);\r\n            this.variablesService.deeplink$.next(null);\r\n            this.variablesService.setCurrentWallet(this.walletToPayId);\r\n            this._router.navigate(['/wallet/send']).then();\r\n            this.secondStep = false;\r\n        } else if (this.actionData.action === 'escrow') {\r\n            this.variablesService.sendActionData$.next(this.actionData);\r\n            this.variablesService.deeplink$.next(null);\r\n            this.variablesService.setCurrentWallet(this.walletToPayId);\r\n            this._router.navigate(['/wallet/contracts/purchase']).then();\r\n            this.secondStep = false;\r\n        } else {\r\n            this.secondStep = true;\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DeeplinkModalComponent } from './deeplink-modal.component';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@NgModule({\r\n    declarations: [DeeplinkModalComponent],\r\n    imports: [CommonModule, NgSelectModule, FormsModule, FlexLayoutModule, TranslateModule, MatIconModule],\r\n    exports: [DeeplinkModalComponent],\r\n})\r\nexport class DeeplinkModalModule {}\r\n","import { Component, HostBinding, OnDestroy, OnInit, Renderer2 } from '@angular/core';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\n\r\n@Component({\r\n    selector: 'app-sync-modal',\r\n    template: `\r\n        <div class=\"modal sync-modal-wrapper\">\r\n            <div class=\"content\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n                <h3 class=\"mb-2\">This action is not available during synchronization...</h3>\r\n                <button (click)=\"canselAction()\" class=\"primary big max-w-19-rem w-100\" type=\"button\">OK</button>\r\n            </div>\r\n        </div>\r\n    `,\r\n    styleUrls: ['./sync-modal.component.scss'],\r\n})\r\nexport class SyncModalComponent implements OnInit, OnDestroy {\r\n    @HostBinding('class.modal-overlay') modalOverlay = true;\r\n\r\n    constructor(private renderer: Renderer2, public variablesService: VariablesService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.renderer.addClass(document.body, 'no-scroll');\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.renderer.removeClass(document.body, 'no-scroll');\r\n    }\r\n\r\n    canselAction(): void {\r\n        this.variablesService.deeplink$.next(null);\r\n        this.variablesService.sendActionData$.next({});\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SyncModalComponent } from './sync-modal.component';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\n@NgModule({\r\n    declarations: [SyncModalComponent],\r\n    imports: [CommonModule, FlexLayoutModule],\r\n    exports: [SyncModalComponent],\r\n})\r\nexport class SyncModalModule {}\r\n","import { Component, NgZone, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BackendService } from '@api/services/backend.service';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { ModalService } from '@parts/services/modal.service';\r\nimport { Wallet } from '@api/models/wallet.model';\r\nimport { BigNumber } from 'bignumber.js';\r\nimport { BreadcrumbItems } from '@parts/components/breadcrumbs/breadcrumbs.models';\r\n\r\n@Component({\r\n    selector: 'app-edit-alias',\r\n    template: `\r\n        <div class=\"page-container\">\r\n            <div class=\"toolbar mb-2\">\r\n                <div class=\"left\">\r\n                    <app-back-button></app-back-button>\r\n                    <h1 class=\"ml-2\">{{ 'BREADCRUMBS.EDIT_ALIAS' | translate }}</h1>\r\n                </div>\r\n                <div class=\"right\"></div>\r\n            </div>\r\n\r\n            <div class=\"page-content\">\r\n                <app-breadcrumbs class=\"mb-2\" [items]=\"breadcrumbItems\"></app-breadcrumbs>\r\n\r\n                <div class=\"scrolled-content\">\r\n                    <form class=\"form\">\r\n                        <div class=\"form__field\">\r\n                            <label for=\"alias-name\">\r\n                                {{ 'EDIT_ALIAS.NAME.LABEL' | translate }}\r\n                            </label>\r\n                            <input\r\n                                [value]=\"alias.name\"\r\n                                class=\"form__field--input\"\r\n                                id=\"alias-name\"\r\n                                placeholder=\"{{ 'EDIT_ALIAS.NAME.PLACEHOLDER' | translate }}\"\r\n                                readonly\r\n                                type=\"text\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div class=\"form__field textarea\">\r\n                            <label for=\"alias-comment\">\r\n                                {{ 'EDIT_ALIAS.COMMENT.LABEL' | translate }}\r\n                            </label>\r\n                            <textarea\r\n                                (contextmenu)=\"variablesService.onContextMenu($event)\"\r\n                                [(ngModel)]=\"alias.comment\"\r\n                                [maxlength]=\"variablesService.maxCommentLength + ''\"\r\n                                [ngModelOptions]=\"{ standalone: true }\"\r\n                                id=\"alias-comment\"\r\n                                placeholder=\"{{ 'EDIT_ALIAS.COMMENT.PLACEHOLDER' | translate }}\"\r\n                            >\r\n                            </textarea>\r\n                            <div *ngIf=\"alias.comment.length > 0 && notEnoughMoney\" class=\"error\">\r\n                                {{ 'EDIT_ALIAS.FORM_ERRORS.NO_MONEY' | translate }}\r\n                            </div>\r\n                            <div *ngIf=\"alias.comment.length >= variablesService.maxCommentLength\" class=\"error\">\r\n                                {{ 'EDIT_ALIAS.FORM_ERRORS.MAX_LENGTH' | translate }}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"alias-cost mb-2\">\r\n                            {{\r\n                                'EDIT_ALIAS.COST'\r\n                                    | translate\r\n                                        : {\r\n                                              value: variablesService.default_fee,\r\n                                              currency: variablesService.defaultTicker\r\n                                          }\r\n                            }}\r\n                        </div>\r\n\r\n                        <button\r\n                            (click)=\"updateAlias()\"\r\n                            [disabled]=\"\r\n                                notEnoughMoney ||\r\n                                oldAliasComment === alias.comment ||\r\n                                alias.comment.length > variablesService.maxCommentLength\r\n                            \"\r\n                            class=\"primary big w-100\"\r\n                            type=\"button\"\r\n                        >\r\n                            {{ 'EDIT_ALIAS.BUTTON_EDIT' | translate }}\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `,\r\n    styles: [\r\n        `\r\n            :host {\r\n                width: 100%;\r\n                height: 100%;\r\n                overflow: hidden;\r\n            }\r\n        `,\r\n    ],\r\n})\r\nexport class EditAliasComponent implements OnInit {\r\n    wallet: Wallet;\r\n\r\n    alias: any;\r\n\r\n    breadcrumbItems: BreadcrumbItems = [\r\n        {\r\n            routerLink: '/wallet/history',\r\n            title: this.variablesService.currentWallet.name,\r\n        },\r\n        {\r\n            title: 'BREADCRUMBS.EDIT_ALIAS',\r\n        },\r\n    ];\r\n\r\n    oldAliasComment: string;\r\n\r\n    notEnoughMoney: boolean;\r\n\r\n    requestProcessing = false;\r\n\r\n    constructor(\r\n        public variablesService: VariablesService,\r\n        private router: Router,\r\n        private backend: BackendService,\r\n        private modalService: ModalService,\r\n        private ngZone: NgZone\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        this.wallet = this.variablesService.currentWallet;\r\n        const alias = this.backend.getWalletAlias(this.wallet.address);\r\n        this.alias = {\r\n            name: alias.name,\r\n            address: alias.address,\r\n            comment: alias.comment,\r\n        };\r\n        this.oldAliasComment = alias.comment;\r\n        const balance = new BigNumber(this.wallet.getBalanceByTicker('PDC')?.unlocked || 0);\r\n        this.notEnoughMoney = balance.isLessThan(this.variablesService.default_fee_big);\r\n    }\r\n\r\n    updateAlias(): void {\r\n        if (\r\n            this.requestProcessing ||\r\n            this.notEnoughMoney ||\r\n            this.oldAliasComment === this.alias.comment ||\r\n            this.alias.comment.length > this.variablesService.maxCommentLength\r\n        ) {\r\n            return;\r\n        }\r\n        this.requestProcessing = true;\r\n        this.backend.updateAlias(this.wallet.wallet_id, this.alias, this.variablesService.default_fee, status => {\r\n            if (status) {\r\n                this.modalService.prepareModal('success', '');\r\n                this.wallet.alias['comment'] = this.alias.comment;\r\n                this.ngZone.run(() => {\r\n                    this.router.navigate(['/wallet/']);\r\n                });\r\n            }\r\n            this.requestProcessing = false;\r\n        });\r\n    }\r\n}\r\n","import { Component, NgZone } from '@angular/core';\r\nimport { BackendService } from '@api/services/backend.service';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { Contact } from '@api/models/contact.model';\r\nimport { ModalService } from '@parts/services/modal.service';\r\nimport { Papa } from 'ngx-papaparse';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-export-import',\r\n    template: `\r\n        <div class=\"page-container\">\r\n            <div class=\"toolbar mb-2\">\r\n                <div class=\"left\">\r\n                    <app-back-button></app-back-button>\r\n                    <h1 class=\"ml-2\">{{ 'CONTACTS.IMPORT_EXPORT' | translate }}</h1>\r\n                </div>\r\n                <div class=\"right\"></div>\r\n            </div>\r\n\r\n            <div class=\"page-content\">\r\n                <div class=\"scrolled-content\">\r\n                    <div class=\"controls flex\">\r\n                        <button (click)=\"import()\" class=\"primary big max-w-19-rem w-100 mr-1\" type=\"button\">\r\n                            {{ 'CONTACTS.IMPORT' | translate }}\r\n                        </button>\r\n                        <button (click)=\"export()\" class=\"primary big max-w-19-rem w-100\" type=\"button\">\r\n                            {{ 'CONTACTS.EXPORT' | translate }}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `,\r\n    styles: [\r\n        `\r\n            :host {\r\n                width: 100%;\r\n            }\r\n\r\n            .head {\r\n                justify-content: flex-end;\r\n            }\r\n\r\n            .contacts-title {\r\n                font-size: 1.7rem;\r\n                margin-bottom: 1rem;\r\n            }\r\n\r\n            .btn-wrapper {\r\n                display: flex;\r\n                align-items: center;\r\n                justify-content: space-between;\r\n                margin: 0 -0.5rem;\r\n                padding: 1.5rem 0;\r\n            }\r\n\r\n            .btn-wrapper button {\r\n                flex: 1 0 auto;\r\n                margin: 0 0.5rem;\r\n            }\r\n        `,\r\n    ],\r\n})\r\nexport class ExportImportComponent {\r\n    constructor(\r\n        private variablesService: VariablesService,\r\n        private backend: BackendService,\r\n        private modalService: ModalService,\r\n        private papa: Papa,\r\n        private translate: TranslateService,\r\n        private router: Router,\r\n        private ngZone: NgZone\r\n    ) {}\r\n\r\n    import(): void {\r\n        this.backend.openFileDialog('', '*', this.variablesService.settings.default_path, (file_status, file_data) => {\r\n            if (file_status) {\r\n                this.variablesService.settings.default_path = file_data.path.substr(0, file_data.path.lastIndexOf('/'));\r\n                if (this.isValid(file_data.path)) {\r\n                    this.backend.loadFile(file_data.path, (status, data) => {\r\n                        if (!status) {\r\n                            this.modalService.prepareModal('error', 'CONTACTS.ERROR_IMPORT_EMPTY');\r\n                        } else {\r\n                            const options = {\r\n                                header: true,\r\n                            };\r\n                            const elements = this.papa.parse(data, options);\r\n                            const isArray = Array.isArray(elements.data);\r\n                            if (isArray && elements.data.length !== 0 && elements.errors.length === 0) {\r\n                                if (this.variablesService.contacts.length === 0) {\r\n                                    elements.data.forEach(element => {\r\n                                        this.variablesService.contacts.push(element);\r\n                                    });\r\n                                } else {\r\n                                    elements.data.forEach(element => {\r\n                                        const indexName = this.variablesService.contacts.findIndex(\r\n                                            contact => contact.name === element.name\r\n                                        );\r\n                                        const indexAddress = this.variablesService.contacts.findIndex(\r\n                                            contact => contact.address === element.address\r\n                                        );\r\n                                        if (indexAddress === -1 && indexName === -1) {\r\n                                            this.variablesService.contacts.push(element);\r\n                                        }\r\n                                        if (indexName !== -1 && indexAddress === -1) {\r\n                                            this.variablesService.contacts.push({\r\n                                                name: `${(element.name as string) || '---'} ${\r\n                                                    this.translate.instant('CONTACTS.COPY') as string\r\n                                                }`,\r\n                                                address: element.address,\r\n                                                notes: element.notes,\r\n                                            });\r\n                                        }\r\n                                    });\r\n                                }\r\n                                this.backend.getContactAlias();\r\n                                this.ngZone.run(() => {\r\n                                    this.router.navigate(['/contacts']);\r\n                                });\r\n                            }\r\n                            if (elements.errors.length > 0) {\r\n                                this.modalService.prepareModal('error', 'CONTACTS.ERROR_IMPORT');\r\n                                console.log(elements.errors);\r\n                            }\r\n                        }\r\n                    });\r\n                } else {\r\n                    this.modalService.prepareModal('error', 'CONTACTS.ERROR_TYPE_FILE');\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    export(): void {\r\n        const contacts: Array<Contact> = [];\r\n        this.variablesService.contacts.forEach(contact => {\r\n            delete contact.alias;\r\n            contacts.push(contact);\r\n        });\r\n\r\n        this.backend.saveFileDialog('', '*', this.variablesService.settings.default_path, (file_status, file_data) => {\r\n            if (this.variablesService.contacts.length === 0 && !(file_data.error_code === 'CANCELED')) {\r\n                this.modalService.prepareModal('error', 'CONTACTS.ERROR_EMPTY_LIST');\r\n            }\r\n            const path = this.isValid(file_data.path) ? file_data.path : `${(file_data.path as string) || 'base-name'}.csv`;\r\n            if (file_status && this.isValid(path) && this.variablesService.contacts.length > 0) {\r\n                this.backend.storeFile(path, this.papa.unparse(contacts));\r\n            }\r\n            if (!(file_data.error_code === 'CANCELED') && !this.isValid(path)) {\r\n                this.modalService.prepareModal('error', 'CONTACTS.ERROR_EXPORT');\r\n            }\r\n        });\r\n    }\r\n\r\n    isValid(file): boolean {\r\n        return file.endsWith('.csv');\r\n    }\r\n}\r\n","import { Component, inject, NgZone, OnDestroy, OnInit } from '@angular/core';\r\nimport { NonNullableFormBuilder, Validators } from '@angular/forms';\r\nimport { BackendService } from '@api/services/backend.service';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { ModalService } from '@parts/services/modal.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Wallet } from '@api/models/wallet.model';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BehaviorSubject, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { PdcValidators } from '@parts/utils/pdc-validators';\r\nimport { WalletsService } from '@parts/services/wallets.service';\r\nimport { notFilePdcWallet, wrongPassword } from '@parts/utils/pdc-errors';\r\nimport { BreadcrumbItems } from '@parts/components/breadcrumbs/breadcrumbs.models';\r\n\r\n@Component({\r\n    selector: 'app-open-wallet',\r\n    template: `\r\n        <div class=\"page-container\">\r\n            <div class=\"toolbar mb-2\">\r\n                <div class=\"left\">\r\n                    <app-back-button></app-back-button>\r\n                    <h1 class=\"ml-2\">{{ 'BREADCRUMBS.OPEN_WALLET' | translate }}</h1>\r\n                </div>\r\n                <div class=\"right\"></div>\r\n            </div>\r\n\r\n            <div class=\"page-content\">\r\n                <app-breadcrumbs class=\"mb-2\" [items]=\"breadcrumbItems\"></app-breadcrumbs>\r\n\r\n                <div class=\"scrolled-content\">\r\n                    <form [formGroup]=\"openWalletForm\" (ngSubmit)=\"openWallet()\" class=\"form\">\r\n                        <div class=\"form__field\">\r\n                            <label for=\"wallet-name\">\r\n                                {{ 'OPEN_WALLET.NAME' | translate }}\r\n                                <span class=\"color-red\">*</span>\r\n                            </label>\r\n                            <input\r\n                                (contextmenu)=\"variablesService.onContextMenu($event)\"\r\n                                [maxLength]=\"variablesService.maxWalletNameLength\"\r\n                                [placeholder]=\"'PLACEHOLDERS.WALLET_NAME_PLACEHOLDER' | translate\"\r\n                                class=\"form__field--input\"\r\n                                formControlName=\"name\"\r\n                                id=\"wallet-name\"\r\n                                type=\"text\"\r\n                            />\r\n                            <div\r\n                                *ngIf=\"\r\n                                    openWalletForm.controls.name.invalid &&\r\n                                    (openWalletForm.controls.name.dirty || openWalletForm.controls.name.touched)\r\n                                \"\r\n                                class=\"error\"\r\n                            >\r\n                                <div *ngIf=\"openWalletForm.controls.name.errors['duplicate']\">\r\n                                    {{ 'OPEN_WALLET.FORM_ERRORS.NAME_DUPLICATE' | translate }}\r\n                                </div>\r\n                                <div *ngIf=\"openWalletForm.controls.name.errors['required']\">\r\n                                    {{ 'OPEN_WALLET.FORM_ERRORS.NAME_REQUIRED' | translate }}\r\n                                </div>\r\n                                <div *ngIf=\"openWalletForm.controls.name.errors['maxLength']\">\r\n                                    {{ 'OPEN_WALLET.FORM_ERRORS.MAX_LENGTH' | translate }}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"form__field\">\r\n                            <label for=\"wallet-password\">{{ 'OPEN_WALLET.PASS' | translate }}</label>\r\n                            <input\r\n                                (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\r\n                                class=\"form__field--input\"\r\n                                formControlName=\"password\"\r\n                                id=\"wallet-password\"\r\n                                placeholder=\"{{ 'PLACEHOLDERS.PASS_PLACEHOLDER' | translate }}\"\r\n                                type=\"password\"\r\n                            />\r\n                            <div\r\n                                *ngIf=\"\r\n                                    openWalletForm.controls.password.invalid &&\r\n                                    (openWalletForm.controls.password.dirty || openWalletForm.controls.password.touched)\r\n                                \"\r\n                                class=\"error\"\r\n                            >\r\n                                <div *ngIf=\"openWalletForm.controls.password.hasError('wrongPassword')\">\r\n                                    {{ openWalletForm.controls.password.errors['wrongPassword'].errorText | translate }}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <button [disabled]=\"openWalletForm.invalid\" class=\"primary big max-w-19-rem w-100\" type=\"submit\">\r\n                            {{ 'OPEN_WALLET.BUTTON' | translate }}\r\n                            <span class=\"ml-1\" *ngIf=\"loading$ | async\" [ngTemplateOutlet]=\"loaderTemp\"></span>\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <ng-template #loaderTemp><pdc-loader></pdc-loader></ng-template>\r\n    `,\r\n})\r\nexport class OpenWalletComponent implements OnInit, OnDestroy {\r\n    loading$ = new BehaviorSubject(false);\r\n\r\n    fb = inject(NonNullableFormBuilder);\r\n\r\n    breadcrumbItems: BreadcrumbItems = [\r\n        {\r\n            routerLink: '/add-wallet',\r\n            title: 'BREADCRUMBS.ADD_WALLET',\r\n        },\r\n        {\r\n            title: 'BREADCRUMBS.OPEN_WALLET',\r\n        },\r\n    ];\r\n\r\n    openWalletForm = this.fb.group({\r\n        name: this.fb.control('', [\r\n            Validators.required,\r\n            Validators.maxLength(this.variablesService.maxWalletNameLength),\r\n            PdcValidators.duplicate(this.variablesService.walletNamesForComparisons),\r\n        ]),\r\n        password: this.fb.control(''),\r\n        filePath: this.fb.control('', Validators.required),\r\n    });\r\n\r\n    private destroy$ = new Subject<void>();\r\n\r\n    constructor(\r\n        public walletsService: WalletsService,\r\n        public variablesService: VariablesService,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private backend: BackendService,\r\n        private modalService: ModalService,\r\n        private ngZone: NgZone,\r\n        private translate: TranslateService\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        this.route.queryParams.pipe(takeUntil(this.destroy$)).subscribe({\r\n            next: params => {\r\n                if (!params.path) {\r\n                    return;\r\n                }\r\n\r\n                this.openWalletForm.controls.filePath.patchValue(params.path);\r\n\r\n                let filename = '';\r\n                if (params.path.lastIndexOf('.') === -1) {\r\n                    filename = params.path.substr(params.path.lastIndexOf('/') + 1);\r\n                } else {\r\n                    filename = params.path.substr(\r\n                        params.path.lastIndexOf('/') + 1,\r\n                        params.path.lastIndexOf('.') - 1 - params.path.lastIndexOf('/')\r\n                    );\r\n                }\r\n                if (filename.length > 25) {\r\n                    filename = filename.slice(0, 25);\r\n                }\r\n                this.openWalletForm.controls.name.patchValue(filename);\r\n                this.openWalletForm.controls.name.markAsTouched();\r\n            },\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    openWallet(): void {\r\n        this.loading$.next(true);\r\n\r\n        if (this.openWalletForm.valid) {\r\n            const { filePath, password, name } = this.openWalletForm.getRawValue();\r\n            const { count: txs_to_return } = this.variablesService;\r\n            this.backend.openWallet(\r\n                filePath,\r\n                password,\r\n                txs_to_return,\r\n                false,\r\n                (openStatus, openData, errorCode: 'WRONG_PASSWORD' | 'FILE_NOT_FOUND' | 'INVALID_FILE' | 'ALREADY_EXISTS' | string) => {\r\n                    console.log('openData', openData);\r\n                    if (errorCode === 'WRONG_PASSWORD') {\r\n                        this.ngZone.run(() => {\r\n                            this.openWalletForm.controls.password.setErrors({\r\n                                wrongPassword,\r\n                            });\r\n                            this.loading$.next(false);\r\n                        });\r\n                        return;\r\n                    }\r\n\r\n                    let errorText = errorCode;\r\n\r\n                    if (errorCode === 'FILE_NOT_FOUND') {\r\n                        errorText = this.translate.instant('OPEN_WALLET.FILE_NOT_FOUND1');\r\n                        errorText += ':<br>' + filePath;\r\n                        errorText += this.translate.instant('OPEN_WALLET.FILE_NOT_FOUND2');\r\n                    }\r\n\r\n                    if (errorCode === 'INVALID_FILE') {\r\n                        errorText = this.translate.instant(notFilePdcWallet.errorText);\r\n                    }\r\n\r\n                    if (['INVALID_FILE', 'FILE_NOT_FOUND'].includes(errorCode)) {\r\n                        this.modalService.prepareModal('error', errorText);\r\n                        this.ngZone.run(() => {\r\n                            this.loading$.next(false);\r\n                        });\r\n                        return;\r\n                    }\r\n\r\n                    if (openStatus || errorCode === 'FILE_RESTORED') {\r\n                        let exists = false;\r\n                        this.variablesService.wallets.forEach(wallet => {\r\n                            if (wallet.address === openData['wi'].address) {\r\n                                exists = true;\r\n                            }\r\n                        });\r\n\r\n                        if (exists) {\r\n                            this.modalService.prepareModal('error', 'OPEN_WALLET.WITH_ADDRESS_ALREADY_OPEN');\r\n                            this.backend.closeWallet(openData.wallet_id, () => {\r\n                                this.ngZone.run(() => {\r\n                                    this.loading$.next(false);\r\n                                    this.router.navigate(['/']);\r\n                                });\r\n                            });\r\n                        } else {\r\n                            const new_wallet = new Wallet(\r\n                                openData.wallet_id,\r\n                                name,\r\n                                password,\r\n                                openData['wi'].path,\r\n                                openData['wi'].address,\r\n                                openData['wi'].balance,\r\n                                openData['wi'].unlocked_balance,\r\n                                openData['wi'].mined_total,\r\n                                openData['wi'].tracking_hey\r\n                            );\r\n                            new_wallet.alias = this.backend.getWalletAlias(new_wallet.address);\r\n                            new_wallet.currentPage = 1;\r\n                            new_wallet.open_from_exist = true;\r\n                            new_wallet.exclude_mining_txs = false;\r\n                            new_wallet.is_auditable = openData['wi'].is_auditable;\r\n                            new_wallet.is_watch_only = openData['wi'].is_watch_only;\r\n                            if (openData.recent_history && openData.recent_history.history) {\r\n                                new_wallet.total_history_item = openData.recent_history.total_history_items;\r\n                                new_wallet.totalPages = Math.ceil(\r\n                                    openData.recent_history.total_history_items / this.variablesService.count\r\n                                );\r\n                                new_wallet.totalPages > this.variablesService.maxPages\r\n                                    ? (new_wallet.pages = new Array(5).fill(1).map((value, index) => value + index))\r\n                                    : (new_wallet.pages = new Array(new_wallet.totalPages)\r\n                                          .fill(1)\r\n                                          .map((value, index) => value + index));\r\n                                new_wallet.prepareHistory(openData.recent_history.history);\r\n                            } else {\r\n                                new_wallet.total_history_item = 0;\r\n                                new_wallet.pages = new Array(1).fill(1);\r\n                                new_wallet.totalPages = 1;\r\n                            }\r\n                            this.walletsService.addWallet(new_wallet);\r\n                            this.backend.runWallet(openData.wallet_id, (run_status, run_data) => {\r\n                                if (run_status) {\r\n                                    if (this.variablesService.appPass) {\r\n                                        this.backend.storeSecureAppData();\r\n                                    }\r\n                                    this.ngZone.run(() => {\r\n                                        this.variablesService.setCurrentWallet(openData.wallet_id);\r\n                                        this.router.navigate(['/wallet/']);\r\n                                        this.loading$.next(false);\r\n                                    });\r\n                                } else {\r\n                                    console.log(run_data['error_code']);\r\n                                    this.ngZone.run(() => {\r\n                                        this.loading$.next(false);\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            );\r\n        } else {\r\n            this.loading$.next(false);\r\n        }\r\n    }\r\n}\r\n","import { RouterModule, Routes } from '@angular/router';\r\nimport { paths } from './paths';\r\nimport { WithSidebarLayoutComponent } from '../layouts/with-sidebar-layout/with-sidebar-layout.component';\r\nimport { AddWalletComponent } from './add-wallet/add-wallet.component';\r\nimport { WalletDetailsComponent } from './wallet-details/wallet-details.component';\r\nimport { FullLayoutComponent } from '../layouts/full-layout/full-layout.component';\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { CreateWalletComponent } from './create-wallet/create-wallet.component';\r\nimport { OpenWalletComponent } from './open-wallet/open-wallet.component';\r\nimport { RestoreWalletComponent } from './restore-wallet/restore-wallet.component';\r\nimport { SeedPhraseComponent } from './seed-phrase/seed-phrase.component';\r\nimport { AssignAliasComponent } from './assign-alias/assign-alias.component';\r\nimport { EditAliasComponent } from './edit-alias/edit-alias.component';\r\nimport { SettingsComponent } from './settings/settings.component';\r\nimport { DeeplinkComponent } from './deeplink/deeplink.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { ExportImportComponent } from './export-import/export-import.component';\r\nimport { TransferAliasComponent } from './transfer-alias/transfer-alias.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: paths.addWallet,\r\n        component: WithSidebarLayoutComponent,\r\n        children: [\r\n            {\r\n                path: '',\r\n                component: AddWalletComponent,\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        path: paths.details,\r\n        component: WithSidebarLayoutComponent,\r\n        children: [\r\n            {\r\n                path: '',\r\n                component: WalletDetailsComponent,\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        path: paths.login,\r\n        component: FullLayoutComponent,\r\n        children: [\r\n            {\r\n                path: '',\r\n                component: LoginComponent,\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        path: paths.create,\r\n        component: WithSidebarLayoutComponent,\r\n        children: [\r\n            {\r\n                path: '',\r\n                component: CreateWalletComponent,\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        path: paths.open,\r\n        component: WithSidebarLayoutComponent,\r\n        children: [\r\n            {\r\n                path: '',\r\n                component: OpenWalletComponent,\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        path: paths.restore,\r\n        component: WithSidebarLayoutComponent,\r\n        children: [\r\n            {\r\n                path: '',\r\n                component: RestoreWalletComponent,\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        path: paths.seedPhrase,\r\n        component: WithSidebarLayoutComponent,\r\n        children: [\r\n            {\r\n                path: '',\r\n                component: SeedPhraseComponent,\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        path: paths.assignAlias,\r\n        component: WithSidebarLayoutComponent,\r\n        children: [\r\n            {\r\n                path: '',\r\n                component: AssignAliasComponent,\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        path: paths.editAlias,\r\n        component: WithSidebarLayoutComponent,\r\n        children: [\r\n            {\r\n                path: '',\r\n                component: EditAliasComponent,\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        path: paths.transferAlias,\r\n        component: WithSidebarLayoutComponent,\r\n        children: [\r\n            {\r\n                path: '',\r\n                component: TransferAliasComponent,\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        path: paths.settings,\r\n        component: WithSidebarLayoutComponent,\r\n        children: [\r\n            {\r\n                path: '',\r\n                component: SettingsComponent,\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        path: paths.import,\r\n        component: WithSidebarLayoutComponent,\r\n        children: [\r\n            {\r\n                path: '',\r\n                component: ExportImportComponent,\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        path: paths.deeplink,\r\n        component: WithSidebarLayoutComponent,\r\n        children: [\r\n            {\r\n                path: '',\r\n                component: DeeplinkComponent,\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        path: '',\r\n        redirectTo: paths.addWallet,\r\n        pathMatch: 'full',\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class PagesRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AuthModule } from './auth/auth.module';\r\nimport { WalletModule } from './wallet/wallet.module';\r\nimport { PagesRoutingModule } from './pages-routing.module';\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { SettingsComponent } from './settings/settings.component';\r\nimport { AddWalletComponent } from './add-wallet/add-wallet.component';\r\nimport { CreateWalletComponent } from './create-wallet/create-wallet.component';\r\nimport { OpenWalletComponent } from './open-wallet/open-wallet.component';\r\nimport { RestoreWalletComponent } from './restore-wallet/restore-wallet.component';\r\nimport { SeedPhraseComponent } from './seed-phrase/seed-phrase.component';\r\nimport { AssignAliasComponent } from './assign-alias/assign-alias.component';\r\nimport { EditAliasComponent } from './edit-alias/edit-alias.component';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { DefaultImgModule, DisablePriceFetchModule } from '@parts/directives';\r\nimport { TooltipModule } from '@parts/directives/tooltip/tooltip.module';\r\nimport { ConfirmModalModule } from '@parts/modals/confirm-modal/confirm-modal.module';\r\nimport { DeeplinkModule } from './deeplink/deeplink.module';\r\nimport { FullLayoutModule } from '../layouts/full-layout/full-layout.module';\r\nimport { WithSidebarLayoutModule } from '../layouts/with-sidebar-layout/with-sidebar-layout.module';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { TransferAliasComponent } from './transfer-alias/transfer-alias.component';\r\nimport {\r\n    ContractStatusMessagesPipeModule,\r\n    ContractTimeLeftPipeModule,\r\n    HistoryTypeMessagesPipeModule,\r\n    IntToMoneyPipeModule,\r\n    IsAvailableAliasNamePipeModule,\r\n    MoneyToIntPipeModule,\r\n    SafeHtmlPipeModule,\r\n    ShortStringPipe,\r\n} from '@parts/pipes';\r\nimport { InputValidateModule } from '@parts/directives/input-validate';\r\nimport { InputDisableSelectionModule } from '@parts/directives/input-disable-selection';\r\nimport { CheckboxComponent } from '@parts/components/checkbox.component';\r\nimport { CopyButtonComponent } from '@parts/components/copy-button.component';\r\nimport { StakingSwitchComponent } from '@parts/components/staking-switch.component';\r\nimport { SwitchComponent } from '@parts/components/switch.component';\r\nimport { SynchronizationStatusComponent } from '@parts/components/synchronization-status.component';\r\nimport { LoaderComponent } from '@parts/components/loader.component';\r\nimport { AutoFocusDirective } from '@parts/directives/autofocus.directive';\r\nimport { BreadcrumbsComponent } from '@parts/components/breadcrumbs/breadcrumbs.component';\r\nimport { BackButtonComponent } from '@parts/components/back-button/back-button.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { IsVisibleControlErrorPipe } from '@parts/pipes/is-visible-control-error.pipe';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        LoginComponent,\r\n        SettingsComponent,\r\n        AddWalletComponent,\r\n        CreateWalletComponent,\r\n        OpenWalletComponent,\r\n        RestoreWalletComponent,\r\n        SeedPhraseComponent,\r\n        AssignAliasComponent,\r\n        EditAliasComponent,\r\n        TransferAliasComponent,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        PagesRoutingModule,\r\n        AuthModule,\r\n        WalletModule,\r\n        NgSelectModule,\r\n        TranslateModule.forChild(),\r\n        FlexLayoutModule,\r\n        DisablePriceFetchModule,\r\n        TooltipModule,\r\n        ConfirmModalModule,\r\n        DeeplinkModule,\r\n        FullLayoutModule,\r\n        WithSidebarLayoutModule,\r\n        OverlayModule,\r\n        DefaultImgModule,\r\n        ContractStatusMessagesPipeModule,\r\n        ContractTimeLeftPipeModule,\r\n        HistoryTypeMessagesPipeModule,\r\n        IntToMoneyPipeModule,\r\n        IsAvailableAliasNamePipeModule,\r\n        MoneyToIntPipeModule,\r\n        SafeHtmlPipeModule,\r\n        ShortStringPipe,\r\n        InputValidateModule,\r\n        InputDisableSelectionModule,\r\n        CheckboxComponent,\r\n        CopyButtonComponent,\r\n        StakingSwitchComponent,\r\n        SwitchComponent,\r\n        SynchronizationStatusComponent,\r\n        LoaderComponent,\r\n        AutoFocusDirective,\r\n        BreadcrumbsComponent,\r\n        BackButtonComponent,\r\n        MatIconModule,\r\n        IsVisibleControlErrorPipe,\r\n    ],\r\n})\r\nexport class PagesModule {}\r\n","export enum paths {\r\n    auth = 'auth',\r\n    addWallet = 'add-wallet',\r\n    login = 'login',\r\n    wallet = 'wallet',\r\n    create = 'create',\r\n    open = 'open',\r\n    restore = 'restore',\r\n    seedPhrase = 'seed-phrase',\r\n    details = 'details',\r\n    assignAlias = 'assign-alias',\r\n    editAlias = 'edit-alias',\r\n    transferAlias = 'transfer-alias',\r\n    settings = 'settings',\r\n    import = 'import',\r\n    deeplink = 'deeplink',\r\n}\r\n\r\nexport enum pathsChildrenAuth {\r\n    noWallet = 'no-wallet',\r\n}\r\n\r\nexport enum pathsChildrenWallet {\r\n    assets = 'assets',\r\n    send = 'send',\r\n    receive = 'receive',\r\n    history = 'history',\r\n    contracts = 'contracts',\r\n    staking = 'staking',\r\n}\r\n\r\nexport enum pathsChildrenContracts {\r\n    purchase = 'purchase',\r\n}\r\n","import { Component, inject, NgZone, OnDestroy, OnInit } from '@angular/core';\r\nimport { NonNullableFormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { BackendService } from '@api/services/backend.service';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { ModalService } from '@parts/services/modal.service';\r\nimport { Wallet } from '@api/models/wallet.model';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { debounceTime, startWith, takeUntil } from 'rxjs/operators';\r\nimport { combineLatest, Subject } from 'rxjs';\r\nimport { regExpPassword, PdcValidators } from '@parts/utils/pdc-validators';\r\nimport { WalletsService } from '@parts/services/wallets.service';\r\nimport { BreadcrumbItems } from '@parts/components/breadcrumbs/breadcrumbs.models';\r\n\r\ninterface SeedPhraseInfo {\r\n    address: string;\r\n    hash_sum_matched: boolean;\r\n    require_password: boolean;\r\n    syntax_correct: boolean;\r\n    tracking: boolean;\r\n}\r\n\r\n@Component({\r\n    selector: 'app-restore-wallet',\r\n    templateUrl: './restore-wallet.component.html',\r\n    styles: [\r\n        `\r\n            :host {\r\n                width: 100%;\r\n                height: 100%;\r\n                overflow: hidden;\r\n            }\r\n        `,\r\n    ],\r\n})\r\nexport class RestoreWalletComponent implements OnInit, OnDestroy {\r\n    public readonly breadcrumbItems: BreadcrumbItems = [\r\n        {\r\n            routerLink: '/add-wallet',\r\n            title: 'BREADCRUMBS.ADD_WALLET',\r\n        },\r\n        {\r\n            title: 'BREADCRUMBS.RESTORE_WALLET',\r\n        },\r\n    ];\r\n\r\n    public selectedLocationWalletName: string;\r\n\r\n    public selectedLocationWalletPath: string;\r\n\r\n    public seedPhraseInfo: SeedPhraseInfo = null;\r\n\r\n    public readonly walletsService: WalletsService = inject(WalletsService);\r\n\r\n    public readonly variablesService: VariablesService = inject(VariablesService);\r\n\r\n    private readonly _fb: NonNullableFormBuilder = inject(NonNullableFormBuilder);\r\n\r\n    public readonly form = this._fb.group(\r\n        {\r\n            name: this._fb.control('', [\r\n                Validators.required,\r\n                Validators.maxLength(this.variablesService.maxWalletNameLength),\r\n                PdcValidators.duplicate(this.variablesService.walletNamesForComparisons),\r\n            ]),\r\n            seedPhrase: this._fb.control('', Validators.required),\r\n            password: this._fb.control('', Validators.pattern(regExpPassword)),\r\n            confirm: this._fb.control(''),\r\n            seedPassword: this._fb.control(''),\r\n        },\r\n        {\r\n            validators: [PdcValidators.formMatch('password', 'confirm')],\r\n        }\r\n    );\r\n\r\n    private _destroy$: Subject<void> = new Subject<void>();\r\n\r\n    private readonly _router: Router = inject(Router);\r\n\r\n    private readonly _backend: BackendService = inject(BackendService);\r\n\r\n    private readonly _modalService: ModalService = inject(ModalService);\r\n\r\n    private readonly _ngZone: NgZone = inject(NgZone);\r\n\r\n    private readonly _translate: TranslateService = inject(TranslateService);\r\n\r\n    private submitting: boolean = false;\r\n\r\n    get isDisabledCreatedWallet(): boolean {\r\n        return this.form.invalid || !this.selectedLocationWalletPath || this.submitting;\r\n    }\r\n\r\n    get invalidSeedPhraseInfo(): boolean {\r\n        if (!this.seedPhraseInfo) {\r\n            return true;\r\n        }\r\n\r\n        const { syntax_correct, require_password, hash_sum_matched } = this.seedPhraseInfo;\r\n        return (!syntax_correct || !require_password || !hash_sum_matched) && (!syntax_correct || require_password);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        const {\r\n            controls: { seedPassword, seedPhrase },\r\n        } = this.form;\r\n\r\n        const obs1 = seedPhrase.valueChanges;\r\n        const obs2 = seedPassword.valueChanges.pipe(startWith(seedPassword.value));\r\n\r\n        combineLatest([obs1, obs2])\r\n            .pipe(debounceTime(500), takeUntil(this._destroy$))\r\n            .subscribe({\r\n                next: ([seed_phrase, seed_password]) => {\r\n                    const params = { seed_phrase, seed_password };\r\n\r\n                    this._backend.getSeedPhraseInfo(params, (status, data) => {\r\n                        this._ngZone.run(() => {\r\n                            if (!status) {\r\n                                this.seedPhraseInfo = undefined;\r\n                                return;\r\n                            }\r\n\r\n                            this.seedPhraseInfo = data;\r\n                        });\r\n                    });\r\n\r\n                    this._backend.isValidRestoreWalletText(params, (_, data) => {\r\n                        this._ngZone.run(() => {\r\n                            const control = this.form.get('seedPhrase');\r\n                            if (data !== 'TRUE') {\r\n                                control.setErrors({ password_seed_phrase_not_valid: true });\r\n                            } else {\r\n                                control.updateValueAndValidity({ emitEvent: false });\r\n                            }\r\n                        });\r\n                    });\r\n                },\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.variablesService.opening_wallet = null;\r\n\r\n        this._destroy$.next();\r\n        this._destroy$.complete();\r\n    }\r\n\r\n    restore(): void {\r\n        this.submitting = true;\r\n        const { name, password, seedPhrase, seedPassword } = this.form.getRawValue();\r\n        this._backend.restoreWallet(this.selectedLocationWalletPath, password, seedPhrase, seedPassword, (status, data) => {\r\n            this._ngZone.run(() => {\r\n                if (status) {\r\n                    const { wallet_id } = data;\r\n                    const { path, address, balance, unlocked_balance, mined_total, tracking_hey, is_auditable, is_watch_only } = data['wi'];\r\n                    const wallet: Wallet = new Wallet(\r\n                        wallet_id,\r\n                        name,\r\n                        password,\r\n                        path,\r\n                        address,\r\n                        balance,\r\n                        unlocked_balance,\r\n                        mined_total,\r\n                        tracking_hey\r\n                    );\r\n                    wallet.is_auditable = is_auditable;\r\n                    wallet.is_watch_only = is_watch_only;\r\n\r\n                    wallet.restore = true;\r\n\r\n                    wallet.alias = this._backend.getWalletAlias(wallet.address);\r\n\r\n                    wallet.currentPage = 1;\r\n                    wallet.pages = new Array(1).fill(1);\r\n                    wallet.totalPages = 1;\r\n                    wallet.total_history_item = 0;\r\n\r\n                    if (data.recent_history && data.recent_history.history) {\r\n                        wallet.totalPages = Math.ceil(data.recent_history.total_history_items / this.variablesService.count);\r\n                        wallet.totalPages > this.variablesService.maxPages\r\n                            ? (wallet.pages = new Array(5).fill(1).map((value, index) => value + index))\r\n                            : (wallet.pages = new Array(wallet.totalPages).fill(1).map((value, index) => value + index));\r\n                        wallet.prepareHistory(data.recent_history.history);\r\n                    }\r\n\r\n                    this.variablesService.opening_wallet = wallet;\r\n\r\n                    this._runWallet();\r\n                } else {\r\n                    this._modalService.prepareModal('error', 'RESTORE_WALLET.NOT_CORRECT_FILE_OR_PASSWORD');\r\n                    this.submitting = false;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    selectLocation(): void {\r\n        const caption = this._translate.instant('RESTORE_WALLET.CHOOSE_PATH');\r\n        const fileMask = '*';\r\n        const {\r\n            settings: { default_path },\r\n        } = this.variablesService;\r\n\r\n        this._backend.saveFileDialog(caption, fileMask, default_path, (status, data) => {\r\n            this._ngZone.run(() => {\r\n                if (status) {\r\n                    const startWalletName = data.path.lastIndexOf('/') + 1;\r\n                    const endWalletName = data.path.length - 1;\r\n                    this.selectedLocationWalletName = data.path.substr(startWalletName, endWalletName);\r\n                    this.selectedLocationWalletPath = data.path;\r\n\r\n                    this.variablesService.settings.default_path = data.path.substr(0, data.path.lastIndexOf('/'));\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    private _runWallet(): void {\r\n        const { opening_wallet, wallets, appPass } = this.variablesService;\r\n        const { wallet_id, address } = opening_wallet;\r\n\r\n        // Add flag when wallet was restored form seed\r\n        this.variablesService.after_sync_request[wallet_id] = true;\r\n\r\n        const exists: boolean = wallets.some((wallet: Wallet): boolean => wallet.address === address);\r\n\r\n        if (exists) {\r\n            this.variablesService.opening_wallet = null;\r\n\r\n            this._modalService.prepareModal('error', 'OPEN_WALLET.WITH_ADDRESS_ALREADY_OPEN');\r\n\r\n            this._backend.closeWallet(wallet_id, () => {\r\n                this._ngZone.run(() => {\r\n                    this._router.navigate(['/']);\r\n                });\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        this.walletsService.addWallet(opening_wallet);\r\n\r\n        this._backend.runWallet(wallet_id, (status, data) => {\r\n            this._ngZone.run(() => {\r\n                if (status) {\r\n                    if (appPass) {\r\n                        this._backend.storeSecureAppData();\r\n                    }\r\n\r\n                    this.variablesService.setCurrentWallet(wallet_id);\r\n                    this.variablesService.opening_wallet = null;\r\n\r\n                    this._router.navigate(['/wallet/']);\r\n                } else {\r\n                    this._modalService.prepareModal('error', data['error_code']);\r\n                    this.submitting = false;\r\n                    console.error(data['error_code']);\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n","<div class=\"page-container\">\r\n    <div class=\"toolbar mb-2\">\r\n        <div class=\"left\">\r\n            <app-back-button></app-back-button>\r\n            <h1 class=\"ml-2\">{{ 'BREADCRUMBS.ADD_WALLET' | translate }}</h1>\r\n        </div>\r\n        <div class=\"right\"></div>\r\n    </div>\r\n\r\n    <div class=\"page-content\">\r\n        <app-breadcrumbs class=\"mb-2\" [items]=\"breadcrumbItems\"></app-breadcrumbs>\r\n\r\n        <div class=\"scrolled-content\">\r\n            <form [formGroup]=\"form\" class=\"form\" (ngSubmit)=\"restore()\">\r\n                <!-- Name -->\r\n                <div class=\"form__field fixed\">\r\n                    <label for=\"name\">{{ 'RESTORE_WALLET.LABEL_NAME' | translate }}</label>\r\n                    <input\r\n                        (contextmenu)=\"variablesService.onContextMenu($event)\"\r\n                        [placeholder]=\"'PLACEHOLDERS.WALLET_NAME_PLACEHOLDER' | translate\"\r\n                        class=\"form__field--input\"\r\n                        formControlName=\"name\"\r\n                        id=\"name\"\r\n                        type=\"text\"\r\n                    />\r\n                    <ng-container *ngIf=\"form.get('name') as control\">\r\n                        <div *ngIf=\"control | isVisibleControlError\" class=\"error\">\r\n                            <div *ngIf=\"control.hasError('duplicate')\">\r\n                                {{ 'RESTORE_WALLET.FORM_ERRORS.NAME_DUPLICATE' | translate }}\r\n                            </div>\r\n                            <div *ngIf=\"control.hasError('maxlength')\">\r\n                                {{ 'RESTORE_WALLET.FORM_ERRORS.MAX_LENGTH' | translate }}\r\n                            </div>\r\n                            <div *ngIf=\"control.hasError('required')\">\r\n                                {{ 'RESTORE_WALLET.FORM_ERRORS.NAME_REQUIRED' | translate }}\r\n                            </div>\r\n                        </div>\r\n                    </ng-container>\r\n                </div>\r\n\r\n                <!-- Password -->\r\n                <div class=\"form__field\">\r\n                    <label for=\"password\">{{ 'RESTORE_WALLET.PASS' | translate }}</label>\r\n                    <input\r\n                        (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\r\n                        class=\"form__field--input\"\r\n                        formControlName=\"password\"\r\n                        id=\"password\"\r\n                        [placeholder]=\"'PLACEHOLDERS.WALET_PASSWORD_PLACEHOLDER' | translate\"\r\n                        type=\"password\"\r\n                    />\r\n                    <ng-container *ngIf=\"form.controls.password as control\">\r\n                        <div *ngIf=\"control | isVisibleControlError\" class=\"error\">\r\n                            <div *ngIf=\"control.hasError('pattern')\">\r\n                                {{ 'ERRORS.REGEXP_INVALID_PASSWORD' | translate }}\r\n                            </div>\r\n                        </div>\r\n                    </ng-container>\r\n                </div>\r\n\r\n                <!-- Confirm Password -->\r\n                <div class=\"form__field fixed\">\r\n                    <label for=\"confirm\">{{ 'RESTORE_WALLET.CONFIRM' | translate }}</label>\r\n                    <input\r\n                        (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\r\n                        class=\"form__field--input\"\r\n                        formControlName=\"confirm\"\r\n                        id=\"confirm\"\r\n                        [placeholder]=\"'PLACEHOLDERS.CONFIRM_WALET_PASSWORD_PLACEHOLDER' | translate\"\r\n                        type=\"password\"\r\n                    />\r\n                    <div *ngIf=\"form.hasError('mismatch')\" class=\"error\">\r\n                        {{ 'RESTORE_WALLET.FORM_ERRORS.CONFIRM_NOT_MATCH' | translate }}\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- Seed phrase -->\r\n                <div class=\"form__field fixed\">\r\n                    <label for=\"seed-phrase\">{{ 'RESTORE_WALLET.LABEL_PHRASE_KEY' | translate }}</label>\r\n                    <input\r\n                        (contextmenu)=\"variablesService.onContextMenu($event)\"\r\n                        [placeholder]=\"'PLACEHOLDERS.SEED_PHRASE_PLACEHOLDER' | translate\"\r\n                        class=\"form__field--input\"\r\n                        formControlName=\"seedPhrase\"\r\n                        id=\"seed-phrase\"\r\n                        type=\"text\"\r\n                    />\r\n                    <ng-container *ngIf=\"form.get('seedPhrase') as control\">\r\n                        <div\r\n                            *ngIf=\"(control.invalid || !this.seedPhraseInfo?.syntax_correct) && (control.dirty || control.touched)\"\r\n                            class=\"error\"\r\n                        >\r\n                            <div *ngIf=\"control.hasError('required') &&\r\n                            (!control.hasError('password_seed_phrase_not_valid') && seedPhraseInfo.require_password)\">\r\n                                {{ 'RESTORE_WALLET.FORM_ERRORS.KEY_REQUIRED' | translate }}\r\n                            </div>\r\n                            <div *ngIf=\"control.hasError('password_seed_phrase_not_valid') && seedPhraseInfo.require_password\">\r\n                                {{ 'RESTORE_WALLET.FORM_ERRORS.PASSWORD_SEED_PHRASE_INCORRECT' | translate }}\r\n                            </div>\r\n                            <div *ngIf=\"!this.seedPhraseInfo?.syntax_correct\">\r\n                                {{ 'RESTORE_WALLET.FORM_ERRORS.SEED_PHRASE_IS_NO_VALID' | translate }}\r\n                            </div>\r\n                        </div>\r\n                    </ng-container>\r\n                </div>\r\n\r\n                <!-- Seed password -->\r\n                <ng-container *ngIf=\"seedPhraseInfo\">\r\n                    <ng-container *ngIf=\"seedPhraseInfo.syntax_correct && seedPhraseInfo.require_password\">\r\n                        <div class=\"form__field fixed\">\r\n                            <label for=\"seed-password\">{{ 'RESTORE_WALLET.SEED_PASSWORD' | translate }}</label>\r\n                            <input\r\n                                class=\"form__field--input\"\r\n                                formControlName=\"seedPassword\"\r\n                                [ngClass]=\"{\r\n                                    invalid: !seedPhraseInfo.hash_sum_matched\r\n                                }\"\r\n                                id=\"seed-password\"\r\n                                [placeholder]=\"'PLACEHOLDERS.SEED_PHRASE_PLACEHOLDER' | translate\"\r\n                                type=\"password\"\r\n                            />\r\n                            <ng-container *ngIf=\"form.get('seedPassword') as control\">\r\n                                <div *ngIf=\"(control.dirty || control.touched) && !seedPhraseInfo.hash_sum_matched\" class=\"error\">\r\n                                    <span>{{ 'RESTORE_WALLET.FORM_ERRORS.INCORRECT_PASSWORD' | translate }}</span>\r\n                                </div>\r\n                            </ng-container>\r\n                            <div *ngIf=\"seedPhraseInfo.hash_sum_matched\" class=\"success\">\r\n                                <span>{{ 'RESTORE_WALLET.OK' | translate }}</span>\r\n                            </div>\r\n                        </div>\r\n                    </ng-container>\r\n                </ng-container>\r\n\r\n                <button (click)=\"selectLocation()\" [disabled]=\"invalidSeedPhraseInfo\" class=\"outline big w-100 mb-2\" type=\"button\">\r\n                    {{ selectedLocationWalletName ?? 'RESTORE_WALLET.BUTTON_SELECT' | translate }}\r\n                </button>\r\n\r\n                <button type=\"submit\" [disabled]=\"isDisabledCreatedWallet\" class=\"primary big w-100 mb-2\">\r\n                    {{ 'RESTORE_WALLET.BUTTON_CREATE' | translate }}\r\n                </button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, inject, NgZone, OnDestroy, OnInit } from '@angular/core';\r\nimport { BackendService } from '@api/services/backend.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { hasOwnProperty } from '@parts/functions/has-own-property';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { regExpPassword, PdcValidators } from '@parts/utils/pdc-validators';\r\nimport { WalletsService } from '@parts/services/wallets.service';\r\nimport { Wallet } from '@api/models/wallet.model';\r\nimport { BreadcrumbItems } from '@parts/components/breadcrumbs/breadcrumbs.models';\r\n\r\n@Component({\r\n    selector: 'app-seed-phrase',\r\n    template: `\r\n        <div class=\"page-container\">\r\n            <div class=\"toolbar mb-2\">\r\n                <div class=\"left\">\r\n                    <app-back-button></app-back-button>\r\n                    <h1 class=\"ml-2\">{{ 'BREADCRUMBS.ADD_WALLET' | translate }}</h1>\r\n                </div>\r\n                <div class=\"right\"></div>\r\n            </div>\r\n\r\n            <div class=\"page-content\">\r\n                <app-breadcrumbs class=\"mb-2\" [items]=\"breadcrumbItems\"></app-breadcrumbs>\r\n\r\n                <div class=\"scrolled-content\">\r\n                    <div class=\"wrap-seed-phrase\" fxFlex=\"100\" fxLayout=\"column\">\r\n                        <form [formGroup]=\"detailsForm\" class=\"form\">\r\n                            <div class=\"form__field\">\r\n                                <label>{{ 'WALLET_DETAILS.LABEL_NAME' | translate }}</label>\r\n                                <input\r\n                                    (contextmenu)=\"variablesService.onContextMenu($event)\"\r\n                                    [maxLength]=\"variablesService.maxWalletNameLength\"\r\n                                    [placeholder]=\"'PLACEHOLDERS.WALLET_NAME_PLACEHOLDER' | translate\"\r\n                                    class=\"form__field--input\"\r\n                                    formControlName=\"name\"\r\n                                    id=\"wallet-name\"\r\n                                    readonly\r\n                                    type=\"text\"\r\n                                />\r\n                                <div\r\n                                    *ngIf=\"\r\n                                        detailsForm.controls['name'].invalid &&\r\n                                        (detailsForm.controls['name'].dirty || detailsForm.controls['name'].touched)\r\n                                    \"\r\n                                    class=\"error\"\r\n                                >\r\n                                    <div *ngIf=\"detailsForm.controls['name'].errors['duplicate']\">\r\n                                        {{ 'WALLET_DETAILS.FORM_ERRORS.NAME_DUPLICATE' | translate }}\r\n                                    </div>\r\n                                    <div *ngIf=\"detailsForm.get('name').value.length >= variablesService.maxWalletNameLength\">\r\n                                        {{ 'WALLET_DETAILS.FORM_ERRORS.MAX_LENGTH' | translate }}\r\n                                    </div>\r\n                                    <div *ngIf=\"detailsForm.controls['name'].errors['required']\">\r\n                                        {{ 'WALLET_DETAILS.FORM_ERRORS.NAME_REQUIRED' | translate }}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"form__field\">\r\n                                <label for=\"wallet-location\">{{ 'WALLET_DETAILS.LABEL_FILE_LOCATION' | translate }}</label>\r\n                                <input class=\"form__field--input\" formControlName=\"path\" id=\"wallet-location\" readonly type=\"text\" />\r\n                            </div>\r\n                        </form>\r\n\r\n                        <ng-container *ngIf=\"!showSeed; else seedPhraseContent\">\r\n                            <form (ngSubmit)=\"onSubmitSeed()\" [formGroup]=\"seedPhraseForm\" class=\"form form__card pb-2\">\r\n                                <div class=\"form__field\">\r\n                                    <label for=\"create-password\">{{ 'WALLET_DETAILS.CREATE_PASSWORD_SECURE' | translate }}</label>\r\n                                    <input\r\n                                        class=\"form__field--input\"\r\n                                        formControlName=\"password\"\r\n                                        id=\"create-password\"\r\n                                        placeholder=\"{{ 'PLACEHOLDERS.PASSWORD_PLACEHOLDER' | translate }}\"\r\n                                        type=\"password\"\r\n                                    />\r\n                                    <div\r\n                                        *ngIf=\"\r\n                                                seedPhraseForm.controls.password.invalid &&\r\n                                                (seedPhraseForm.controls['password'].dirty ||\r\n                                                    seedPhraseForm.controls['password'].touched)\r\n                                            \"\r\n                                        class=\"error\"\r\n                                    >\r\n                                        <ng-container *ngIf=\"seedPhraseForm.controls['password'].hasError('pattern')\">\r\n                                            {{ 'ERRORS.REGEXP_INVALID_PASSWORD' | translate }}\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"form__field\">\r\n                                    <label for=\"confirm-password\">{{ 'WALLET_DETAILS.FORM.CONFIRM_PASSWORD' | translate }}</label>\r\n                                    <input\r\n                                        [class.invalid]=\"seedPhraseForm.invalid && seedPhraseForm.get('confirmPassword').value.length > 0\"\r\n                                        class=\"form__field--input\"\r\n                                        formControlName=\"confirmPassword\"\r\n                                        id=\"confirm-password\"\r\n                                        placeholder=\"{{ 'PLACEHOLDERS.PLACEHOLDER_CONFIRM' | translate }}\"\r\n                                        type=\"password\"\r\n                                    />\r\n                                    <div\r\n                                        *ngIf=\"\r\n                                            seedPhraseForm.invalid &&\r\n                                            (seedPhraseForm.controls['confirmPassword'].dirty ||\r\n                                                seedPhraseForm.controls['confirmPassword'].touched)\r\n                                        \"\r\n                                        class=\"error\"\r\n                                    >\r\n                                        <div *ngIf=\"seedPhraseForm.invalid && seedPhraseForm.get('confirmPassword').value.length > 0\">\r\n                                            {{ 'WALLET_DETAILS.FORM_ERRORS.PASSWORDS_DONT_MATCH' | translate }}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <button [disabled]=\"!seedPhraseForm.valid\" class=\"primary w-100 big mb-2\" type=\"submit\">\r\n                                    <mat-icon svgIcon=\"pdc-check-shield\" class=\"mr-1\"></mat-icon>\r\n                                    {{ 'WALLET_DETAILS.FORM.GENERATE_SECURE_SEED' | translate }}\r\n                                </button>\r\n\r\n                                <p class=\"text-align-center color-primary\">\r\n                                    <mat-icon svgIcon=\"pdc-info\" class=\"mr-1\"></mat-icon>\r\n                                    {{ 'WALLET_DETAILS.FORM.SECURED_SEED_WILL_REQUIRE' | translate }}\r\n                                </p>\r\n                            </form>\r\n                        </ng-container>\r\n\r\n                        <ng-template #seedPhraseContent>\r\n                            <div class=\"seed-phrase form__card pb-2\">\r\n                                <div class=\"header mb-2\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                                    <div class=\"left\">\r\n                                        <span>{{ 'WALLET_DETAILS.LABEL_SEED_PHRASE' | translate }}</span>\r\n                                    </div>\r\n                                    <div class=\"right\">\r\n                                        <span\r\n                                            *ngIf=\"seedPhraseForm.controls.password.value.length === 0\"\r\n                                            class=\"status color-red\"\r\n                                            fxLayout=\"row\"\r\n                                            fxLayoutAlign=\"start center\"\r\n                                        >\r\n                                            {{ 'WALLET_DETAILS.SEED_IS_UNSECURED' | translate }}\r\n                                            <mat-icon svgIcon=\"pdc-unsecured\" class=\"ml-1\"></mat-icon>\r\n                                        </span>\r\n                                        <span\r\n                                            *ngIf=\"seedPhraseForm.controls.password.value.length > 0\"\r\n                                            class=\"status color-aqua\"\r\n                                            fxLayout=\"row\"\r\n                                            fxLayoutAlign=\"start center\"\r\n                                        >\r\n                                            {{ 'WALLET_DETAILS.SEED_IS_SECURED' | translate }}\r\n                                            <mat-icon svgIcon=\"pdc-secured\" class=\"ml-1\"></mat-icon>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    (contextmenu)=\"variablesService.onContextMenuOnlyCopy($event, seedPhrase)\"\r\n                                    class=\"content mb-1\"\r\n                                    fxLayout=\"row wrap\"\r\n                                >\r\n                                    <ng-container *ngFor=\"let word of seedPhrase.split(' '); let index = index\">\r\n                                        <div\r\n                                            class=\"item p-1 mr-1 mb-1 border-radius-0_8-rem\"\r\n                                            fxLayout=\"row nowrap\"\r\n                                            fxLayoutAlign=\"start center\"\r\n                                        >\r\n                                            <div class=\"number p-1 mr-1\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                                                {{ index + 1 }}\r\n                                            </div>\r\n                                            <span class=\"word\">{{ word }}</span>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </div>\r\n                                <div class=\"footer max-w-50-rem w-100\" fxLayout=\"column\" fxLayoutAlign=\"start center\">\r\n                                    <div *ngIf=\"showSeed\" class=\"wrap-buttons w-100 mb-2\" fxLayout=\"row nowrap\">\r\n                                        <button (click)=\"copySeedPhrase()\" class=\"outline big w-100\" type=\"button\">\r\n                                            <ng-container *ngIf=\"!seedPhraseCopied\">\r\n                                                <mat-icon svgIcon=\"pdc-copy\" class=\"mr-1\"></mat-icon>\r\n                                                {{ 'SEED_PHRASE.BUTTON_COPY' | translate }}\r\n                                            </ng-container>\r\n                                            <ng-container *ngIf=\"seedPhraseCopied\">\r\n                                                <mat-icon svgIcon=\"pdc-check\" class=\"mr-1\"></mat-icon>\r\n                                                {{ 'SEED_PHRASE.BUTTON_COPIED' | translate }}\r\n                                            </ng-container>\r\n                                        </button>\r\n                                    </div>\r\n                                    <p *ngIf=\"seedPhraseForm.controls.password.value.length > 0\" class=\"text-align-center\">\r\n                                        <mat-icon svgIcon=\"pdc-info\" class=\"mr-1\"></mat-icon>\r\n                                        <span class=\"color-primary\">{{ 'WALLET_DETAILS.REMEMBER_YOU_WILL_REQUIRE' | translate }}</span>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </ng-template>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `,\r\n    styles: [\r\n        `\r\n            :host {\r\n                width: 100%;\r\n                height: 100%;\r\n                overflow: hidden;\r\n            }\r\n        `,\r\n    ],\r\n})\r\nexport class SeedPhraseComponent implements OnInit, OnDestroy {\r\n    seedPhrase = '';\r\n\r\n    breadcrumbItems: BreadcrumbItems = [\r\n        {\r\n            routerLink: '/add-wallet',\r\n            title: 'BREADCRUMBS.ADD_WALLET',\r\n        },\r\n        {\r\n            title: 'BREADCRUMBS.SAVE_PHRASE',\r\n        },\r\n    ];\r\n\r\n    showSeed = false;\r\n\r\n    wallet_id: number;\r\n\r\n    wallet!: Wallet;\r\n\r\n    seedPhraseCopied = false;\r\n\r\n    progressWidth = '66%';\r\n\r\n    fb = inject(FormBuilder);\r\n\r\n    detailsForm = this.fb.group({\r\n        name: this.fb.nonNullable.control('', [PdcValidators.duplicate(this.variablesService.walletNamesForComparisons)]),\r\n        path: this.fb.nonNullable.control(''),\r\n    });\r\n\r\n    seedPhraseForm = this.fb.group(\r\n        {\r\n            password: this.fb.nonNullable.control('', Validators.pattern(regExpPassword)),\r\n            confirmPassword: this.fb.nonNullable.control(''),\r\n        },\r\n        {\r\n            validators: [PdcValidators.formMatch('password', 'confirmPassword')],\r\n        }\r\n    );\r\n\r\n    private destroy$ = new Subject<void>();\r\n\r\n    constructor(\r\n        public walletsService: WalletsService,\r\n        public variablesService: VariablesService,\r\n        private route: ActivatedRoute,\r\n        private backend: BackendService,\r\n        private ngZone: NgZone\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        this.showSeed = false;\r\n        this.getWallet();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    copySeedPhrase(): void {\r\n        this.backend.setClipboard(this.seedPhrase, () => {\r\n            this.ngZone.run(() => {\r\n                setTimeout(() => {\r\n                    this.seedPhraseCopied = false;\r\n                }, 4000);\r\n                this.seedPhraseCopied = true;\r\n            });\r\n        });\r\n    }\r\n\r\n    showSeedPhrase(): void {\r\n        this.showSeed = true;\r\n        this.progressWidth = '100%';\r\n    }\r\n\r\n    onSubmitSeed(): void {\r\n        if (this.seedPhraseForm.valid) {\r\n            this.showSeedPhrase();\r\n            const wallet_id = this.wallet_id;\r\n            const seed_password = this.seedPhraseForm.controls.password.value;\r\n            this.backend.getSmartWalletInfo({ wallet_id, seed_password }, (status, data) => {\r\n                if (hasOwnProperty(data, 'seed_phrase')) {\r\n                    this.ngZone.run(() => {\r\n                        this.seedPhrase = data['seed_phrase'].trim();\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private setWalletInfoNamePath(): void {\r\n        this.detailsForm.get('name').setValue(this.wallet.name);\r\n        this.detailsForm.get('path').setValue(this.wallet.path);\r\n    }\r\n\r\n    private getWallet(): void {\r\n        this.route.queryParams.pipe(takeUntil(this.destroy$)).subscribe({\r\n            next: params => {\r\n                if (params.wallet_id) {\r\n                    this.wallet_id = +params.wallet_id;\r\n                    this.wallet = this.walletsService.getWalletById(this.wallet_id);\r\n                    if (this.wallet) {\r\n                        this.setWalletInfoNamePath();\r\n                    }\r\n                }\r\n            },\r\n        });\r\n    }\r\n}\r\n","import { Component, inject, NgZone, OnInit, Renderer2 } from '@angular/core';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { BackendService } from '@api/services/backend.service';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { scaleItems } from '@parts/data/scale-items';\r\nimport { regExpPassword, PdcValidators } from '@parts/utils/pdc-validators';\r\nimport { generateRandomString } from '@parts/utils/generate-random-string';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'app-settings',\r\n    templateUrl: './settings.component.html',\r\n    styleUrls: [`./settings.component.scss`],\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n    ifSaved = false;\r\n\r\n    isSecretWasCopied: boolean = false;\r\n\r\n    secretWasCopiedTimeout;\r\n\r\n    isBuildVersionWasCopied: boolean = false;\r\n\r\n    buildVersionWasCopiedTimeout;\r\n\r\n    scale: string;\r\n\r\n    appUseTor: boolean;\r\n\r\n    fb = inject(FormBuilder);\r\n\r\n    changeForm = this.fb.group(\r\n        {\r\n            password: this.fb.nonNullable.control('', Validators.compose([Validators.pattern(regExpPassword)])),\r\n            new_password: this.fb.nonNullable.control('', Validators.compose([Validators.pattern(regExpPassword)])),\r\n            new_confirmation: this.fb.nonNullable.control(''),\r\n            appPass: this.fb.nonNullable.control(this.variablesService.appPass ?? ''),\r\n        },\r\n        {\r\n            validators: [\r\n                PdcValidators.formMatch('new_password', 'new_confirmation'),\r\n                PdcValidators.formMatch('password', 'appPass', 'pass_mismatch'),\r\n            ],\r\n        }\r\n    );\r\n\r\n    pdcCompanionForm: FormGroup<{\r\n        pdcCompation: FormControl<boolean>;\r\n        secret: FormControl<string>;\r\n    }> = this.fb.group({\r\n        pdcCompation: this.fb.nonNullable.control({ value: false, disabled: !this.variablesService.hasAppPass }),\r\n        secret: this.fb.nonNullable.control(\r\n            { value: '', disabled: false },\r\n            {\r\n                validators: Validators.compose([]),\r\n            }\r\n        ),\r\n    });\r\n\r\n    public currentNotificationsState;\r\n\r\n    languagesOptions = [\r\n        {\r\n            name: 'en',\r\n            language: 'SETTINGS.LANGUAGE.EN',\r\n        },\r\n        {\r\n            name: 'fr',\r\n            language: 'SETTINGS.LANGUAGE.FR',\r\n        },\r\n        {\r\n            name: 'de',\r\n            language: 'SETTINGS.LANGUAGE.DE',\r\n        },\r\n        {\r\n            name: 'id',\r\n            language: 'SETTINGS.LANGUAGE.ID',\r\n        },\r\n        {\r\n            name: 'it',\r\n            language: 'SETTINGS.LANGUAGE.IT',\r\n        },\r\n        {\r\n            name: 'pt',\r\n            language: 'SETTINGS.LANGUAGE.PT',\r\n        },\r\n    ];\r\n\r\n    appLockOptions = [\r\n        {\r\n            time: 5,\r\n            translationKey: 'SETTINGS.APP_LOCK.TIME1',\r\n        },\r\n        {\r\n            time: 15,\r\n            translationKey: 'SETTINGS.APP_LOCK.TIME2',\r\n        },\r\n        {\r\n            time: 60,\r\n            translationKey: 'SETTINGS.APP_LOCK.TIME3',\r\n        },\r\n        {\r\n            time: 0,\r\n            translationKey: 'SETTINGS.APP_LOCK.TIME4',\r\n        },\r\n    ];\r\n\r\n    appScaleOptions = scaleItems;\r\n\r\n    appLogOptions = [\r\n        {\r\n            id: -1,\r\n        },\r\n        {\r\n            id: 0,\r\n        },\r\n        {\r\n            id: 1,\r\n        },\r\n        {\r\n            id: 2,\r\n        },\r\n        {\r\n            id: 3,\r\n        },\r\n        {\r\n            id: 4,\r\n        },\r\n    ];\r\n\r\n    currentBuild = '';\r\n\r\n    appPass: any;\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        public variablesService: VariablesService,\r\n        private renderer: Renderer2,\r\n        public backend: BackendService,\r\n        private ngZone: NgZone\r\n    ) {\r\n        this.scale = this.variablesService.settings.scale;\r\n        this.appUseTor = this.variablesService.settings.appUseTor;\r\n        this.pdcCompanionForm.setValue(this.variablesService.settings.pdcCompanionForm, { emitEvent: false });\r\n\r\n        this.backend.getOptions();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.backend.getVersion((version, type, error) => {\r\n            this.ngZone.run(() => {\r\n                if (!error) {\r\n                    this.currentBuild = version;\r\n                    this.variablesService.testnet = false;\r\n                    if (type === 'testnet') {\r\n                        this.currentBuild += ' TESTNET';\r\n                        this.variablesService.testnet = true;\r\n                    }\r\n                    this.variablesService.networkType = type;\r\n                } else {\r\n                    this.currentBuild = 'There was an error getting the build version';\r\n                }\r\n            });\r\n        });\r\n\r\n        this.backend.getIsDisabledNotifications(state => {\r\n            this.currentNotificationsState = !state;\r\n        });\r\n\r\n        this.pdcCompanionForm.valueChanges.pipe(debounceTime(200)).subscribe({\r\n            next: () => {\r\n                const value = this.pdcCompanionForm.getRawValue();\r\n                const { pdcCompation, secret } = value;\r\n\r\n                if (pdcCompation && !secret) {\r\n                    this.generateSecret();\r\n                    return;\r\n                }\r\n\r\n                if (!pdcCompation && secret) {\r\n                    this.pdcCompanionForm.controls.secret.patchValue('');\r\n                    return;\r\n                }\r\n\r\n                if ((pdcCompation && secret) || (!pdcCompation && !secret)) {\r\n                    this.backend.setupJwtWalletRpc(value);\r\n                    return;\r\n                }\r\n            },\r\n        });\r\n    }\r\n\r\n    copySecret(): void {\r\n        const { secret } = this.pdcCompanionForm.getRawValue();\r\n\r\n        this.backend.setClipboard(secret);\r\n\r\n        this.isSecretWasCopied = true;\r\n        this.secretWasCopiedTimeout = setTimeout(() => {\r\n            this.isSecretWasCopied = false;\r\n            clearTimeout(this.secretWasCopiedTimeout);\r\n        }, 3000);\r\n    }\r\n\r\n    copyBuildVersion(): void {\r\n        this.backend.setClipboard(`Build version: ${this.currentBuild}`);\r\n\r\n        this.isBuildVersionWasCopied = true;\r\n        this.buildVersionWasCopiedTimeout = setTimeout(() => {\r\n            this.isBuildVersionWasCopied = false;\r\n            clearTimeout(this.buildVersionWasCopiedTimeout);\r\n        }, 3000);\r\n    }\r\n\r\n    private generateSecret(): void {\r\n        this.pdcCompanionForm.get('secret').setValue(generateRandomString(40));\r\n    }\r\n\r\n    regenerateSecret(): void {\r\n        this.generateSecret();\r\n    }\r\n\r\n    setScale(): void {\r\n        this.scale = this.variablesService.settings.scale;\r\n        this.renderer.setStyle(document.documentElement, 'font-size', this.scale);\r\n        this.backend.storeAppData();\r\n    }\r\n\r\n    onSubmitChangePass(): void {\r\n        if (this.changeForm.valid) {\r\n            this.variablesService.appPass = this.changeForm.get('new_password').value;\r\n\r\n            this.backend.setMasterPassword({ pass: this.variablesService.appPass }, (status, data) => {\r\n                if (status) {\r\n                    this.backend.storeSecureAppData({\r\n                        pass: this.variablesService.appPass,\r\n                    });\r\n                    this.variablesService.appLogin = true;\r\n                    this.variablesService.dataIsLoaded = true;\r\n                    if (this.variablesService.settings.appLockTime) {\r\n                        this.variablesService.startCountdown();\r\n                    }\r\n                    this.ngZone.run(() => {\r\n                        this.pdcCompanionForm.controls.pdcCompation.enable({ emitEvent: false });\r\n                        this.onSave();\r\n                    });\r\n                } else {\r\n                    console.log(data['error_code']);\r\n                }\r\n            });\r\n\r\n            this.changeForm.reset({ appPass: this.variablesService.appPass });\r\n        }\r\n    }\r\n\r\n    toggleNotifications(): void {\r\n        if (!this.currentNotificationsState) {\r\n            this.backend.setIsDisabledNotifications('false');\r\n            this.currentNotificationsState = true;\r\n        } else {\r\n            this.backend.setIsDisabledNotifications('true');\r\n            this.currentNotificationsState = false;\r\n        }\r\n    }\r\n\r\n    toggleUseTor(): void {\r\n        this.appUseTor = !this.appUseTor;\r\n        this.variablesService.settings.appUseTor = this.appUseTor;\r\n        this.backend.setEnableTor(this.appUseTor);\r\n        this.backend.storeAppData();\r\n    }\r\n\r\n    onSave(): void {\r\n        this.ifSaved = true;\r\n        setTimeout(() => {\r\n            this.ifSaved = false;\r\n        }, 3000);\r\n    }\r\n\r\n    onLockChange(): void {\r\n        this.variablesService.restartCountdown();\r\n    }\r\n\r\n    onLogChange(): void {\r\n        this.backend.setLogLevel(this.variablesService.settings.appLog);\r\n        this.backend.storeAppData();\r\n    }\r\n\r\n    onLanguageChange(): void {\r\n        this.translate.use(this.variablesService.settings.language);\r\n        this.backend.storeAppData();\r\n    }\r\n\r\n    showPrice(): void {\r\n        this.variablesService.visibilityBalance$.next(!this.variablesService.visibilityBalance$.value);\r\n        this.backend.storeAppData();\r\n    }\r\n\r\n    toggleDarkTheme(): void {\r\n        const { settings, isDarkTheme$ } = this.variablesService;\r\n        const isDarkTheme: boolean = !settings.isDarkTheme;\r\n        this.variablesService.settings.isDarkTheme = isDarkTheme;\r\n        isDarkTheme$.next(isDarkTheme);\r\n\r\n        this.backend.storeAppData();\r\n    }\r\n}\r\n","<div class=\"page-container\">\r\n    <div class=\"toolbar mb-2\">\r\n        <div class=\"left\">\r\n            <app-back-button></app-back-button>\r\n            <h1 class=\"ml-2\">{{ 'SETTINGS.TITLE' | translate }}</h1>\r\n        </div>\r\n        <div class=\"right\"></div>\r\n    </div>\r\n\r\n    <div class=\"page-content\">\r\n        <div class=\"scrolled-content\">\r\n            <div class=\"settings\" fxFlex=\"0 1 50rem\" fxFlexFill fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n                <div class=\"form__field\">\r\n                    <label>{{ 'SETTINGS.LANGUAGE.TITLE' | translate }}</label>\r\n                    <ng-select\r\n                        (change)=\"onLanguageChange()\"\r\n                        [(ngModel)]=\"variablesService.settings.language\"\r\n                        [clearable]=\"false\"\r\n                        [items]=\"languagesOptions\"\r\n                        [searchable]=\"false\"\r\n                        bindLabel=\"language\"\r\n                        bindValue=\"name\"\r\n                        class=\"with-circle\"\r\n                    >\r\n                        <ng-template let-item=\"item\" ng-label-tmp>\r\n                            {{ item.language | translate }}\r\n                        </ng-template>\r\n                        <ng-template let-index=\"index\" let-item=\"item\" ng-option-tmp>\r\n                            {{ item.language | translate }}\r\n                        </ng-template>\r\n                    </ng-select>\r\n                </div>\r\n\r\n                <div class=\"form__field\">\r\n                    <label>{{ 'SETTINGS.APP_LOCK.TITLE' | translate }}</label>\r\n                    <ng-select\r\n                        (change)=\"onLockChange()\"\r\n                        [(ngModel)]=\"variablesService.settings.appLockTime\"\r\n                        [clearable]=\"false\"\r\n                        [items]=\"appLockOptions\"\r\n                        [searchable]=\"false\"\r\n                        bindLabel=\"translationKey\"\r\n                        bindValue=\"time\"\r\n                        class=\"with-circle\"\r\n                    >\r\n                        <ng-template let-item=\"item\" ng-label-tmp>\r\n                            {{ item.translationKey | translate }}\r\n                        </ng-template>\r\n                        <ng-template let-index=\"index\" let-item=\"item\" ng-option-tmp>\r\n                            {{ item.translationKey | translate }}\r\n                        </ng-template>\r\n                    </ng-select>\r\n                </div>\r\n\r\n                <div class=\"form__field\">\r\n                    <label>{{ 'SETTINGS.SCALE.TITLE' | translate }}</label>\r\n                    <ng-select\r\n                        (change)=\"setScale()\"\r\n                        [(ngModel)]=\"variablesService.settings.scale\"\r\n                        [clearable]=\"false\"\r\n                        [items]=\"appScaleOptions\"\r\n                        [searchable]=\"false\"\r\n                        bindLabel=\"name\"\r\n                        bindValue=\"value\"\r\n                        class=\"with-circle\"\r\n                    >\r\n                        <ng-template let-item=\"item\" ng-label-tmp>\r\n                            {{ item.name | translate }}\r\n                        </ng-template>\r\n                        <ng-template let-index=\"index\" let-item=\"item\" ng-option-tmp>\r\n                            {{ item.name | translate }}\r\n                        </ng-template>\r\n                    </ng-select>\r\n                </div>\r\n\r\n                <div class=\"form__field\">\r\n                    <label>{{ 'SETTINGS.APP_LOG_TITLE' | translate }}</label>\r\n                    <ng-select\r\n                        (change)=\"onLogChange()\"\r\n                        [(ngModel)]=\"variablesService.settings.appLog\"\r\n                        [clearable]=\"false\"\r\n                        [items]=\"appLogOptions\"\r\n                        [searchable]=\"false\"\r\n                        bindLabel=\"id\"\r\n                        bindValue=\"id\"\r\n                        class=\"with-circle\"\r\n                    >\r\n                    </ng-select>\r\n                </div>\r\n\r\n                <div class=\"form__field\">\r\n                    <label>{{ 'SETTINGS.NOTIFICATIONS' | translate }}</label>\r\n                    <app-switch (emitChange)=\"toggleNotifications()\" [value]=\"currentNotificationsState\"></app-switch>\r\n                </div>\r\n\r\n                <div class=\"form__field\">\r\n                    <label>{{ 'SETTINGS.USE_TOR_TO_RELAY_TRANSACTIONS' | translate }} (Temporarily disabled)</label>\r\n                    <app-switch (emitChange)=\"toggleUseTor()\" [disabled]=\"true\"\r\n                                [value]=\"false && appUseTor\"></app-switch>\r\n                </div>\r\n\r\n                <div class=\"form__field\">\r\n                    <label>{{ 'SETTINGS.DARK_THEME' | translate }}</label>\r\n                    <app-switch (emitChange)=\"toggleDarkTheme()\"\r\n                                [value]=\"variablesService.settings.isDarkTheme\"></app-switch>\r\n                </div>\r\n\r\n                <div class=\"form__field\">\r\n                    <label>{{ 'SETTINGS.SHOW_BALANCE' | translate }}</label>\r\n                    <app-switch (emitChange)=\"showPrice()\"\r\n                                [value]=\"this.variablesService.visibilityBalance$ | async\"></app-switch>\r\n                </div>\r\n\r\n                <form [formGroup]=\"pdcCompanionForm\">\r\n                    <div class=\"form__field\">\r\n                        <label>\r\n                            {{ 'SETTINGS.FORM.PDC_COMPANION.LABELS.LABEL1' | translate }}\r\n                            <ng-container *ngIf=\"!variablesService.appPass\">\r\n                                {{ 'SETTINGS.FORM.PDC_COMPANION.LABELS.LABEL4' | translate }}\r\n                            </ng-container>\r\n                        </label>\r\n                        <app-switch formControlName=\"pdcCompation\"></app-switch>\r\n                    </div>\r\n                    <ng-container *ngIf=\"pdcCompanionForm.controls.pdcCompation.getRawValue()\">\r\n                        <div class=\"form__card\">\r\n                            <div class=\"form__field form__field--secret\">\r\n                                <label\r\n                                    for=\"field-secret\">{{ 'SETTINGS.FORM.PDC_COMPANION.LABELS.LABEL2' | translate }}</label>\r\n                                <input\r\n                                    (contextmenu)=\"\r\n                                        variablesService.onContextMenuOnlyCopy($event, pdcCompanionForm.controls['secret'].value)\r\n                                    \"\r\n                                    [class.invalid]=\"pdcCompanionForm.controls['secret'].invalid\"\r\n                                    [readonly]=\"true\"\r\n                                    class=\"form__field--input\"\r\n                                    formControlName=\"secret\"\r\n                                    id=\"field-secret\"\r\n                                    type=\"text\"\r\n                                />\r\n\r\n                                <button (click)=\"copySecret()\" class=\"btn--copy\">\r\n                                    <mat-icon svgIcon=\"pdc-copy\"></mat-icon>\r\n                                </button>\r\n\r\n                                <button (click)=\"regenerateSecret()\" class=\"btn--regenerate\">\r\n                                    <mat-icon svgIcon=\"pdc-regenerate\"></mat-icon>\r\n                                </button>\r\n\r\n                                <div *ngIf=\"isSecretWasCopied\" class=\"info success\" style=\"text-align: right\">\r\n                                    {{ 'SETTINGS.SECRET_WAS_COPIED' | translate }}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"form__field\">\r\n                                <label\r\n                                    for=\"field-port\">{{ 'SETTINGS.FORM.PDC_COMPANION.LABELS.LABEL3' | translate }}</label>\r\n                                <input\r\n                                    (contextmenu)=\"\r\n                                        variablesService.onContextMenuOnlyCopy($event, this.variablesService.rpc_port?.toString())\r\n                                    \"\r\n                                    [readonly]=\"true\"\r\n                                    [value]=\"this.variablesService.rpc_port\"\r\n                                    class=\"form__field--input\"\r\n                                    id=\"field-port\"\r\n                                    type=\"text\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </ng-container>\r\n                </form>\r\n\r\n                <form (ngSubmit)=\"onSubmitChangePass()\" [formGroup]=\"changeForm\">\r\n                    <h4 class=\"master-password-title mb-2\">\r\n                        <ng-container *ngIf=\"!variablesService.appPass\">\r\n                            {{ 'SETTINGS.MASTER_PASSWORD.TITLE1' | translate }}\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"variablesService.appPass\">\r\n                            {{ 'SETTINGS.MASTER_PASSWORD.TITLE2' | translate }}\r\n                        </ng-container>\r\n                    </h4>\r\n\r\n                    <div class=\"form__card\">\r\n                        <div *ngIf=\"variablesService.appPass\" class=\"form__field\">\r\n                            <label for=\"old-password\">{{ 'SETTINGS.MASTER_PASSWORD.OLD' | translate }}</label>\r\n                            <input\r\n                                (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\r\n                                [class.invalid]=\"\r\n                                    changeForm.invalid &&\r\n                                    changeForm.controls['password'].valid &&\r\n                                    (changeForm.controls['password'].dirty || changeForm.controls['password'].touched) &&\r\n                                    changeForm.errors &&\r\n                                    changeForm.errors['pass_mismatch'] &&\r\n                                    changeForm.get('password').value.length > 0\r\n                                \"\r\n                                class=\"form__field--input\"\r\n                                formControlName=\"password\"\r\n                                id=\"old-password\"\r\n                                placeholder=\"{{ 'PLACEHOLDERS.PLACEHOLDER_OLD' | translate }}\"\r\n                                type=\"password\"\r\n                            />\r\n                            <div\r\n                                *ngIf=\"\r\n                                    changeForm.invalid &&\r\n                                    changeForm.controls['password'].valid &&\r\n                                    (changeForm.controls['password'].dirty || changeForm.controls['password'].touched) &&\r\n                                    changeForm.errors &&\r\n                                    changeForm.errors['pass_mismatch'] &&\r\n                                    changeForm.get('password').value.length > 0\r\n                                \"\r\n                                class=\"error\"\r\n                            >\r\n                                {{ 'SETTINGS.FORM_ERRORS.CURRENT_PASS_NOT_MATCH' | translate }}\r\n                            </div>\r\n                            <div *ngIf=\"changeForm.invalid && (changeForm.controls['password'].dirty ||\r\n                            changeForm.controls['password'].touched) && changeForm.controls['password'].errors?.pattern\"\r\n                                 class=\"error\">\r\n                                {{ 'ERRORS.REGEXP_INVALID_PASSWORD' | translate }}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"form__field\">\r\n                            <label for=\"new-password\">{{ 'SETTINGS.MASTER_PASSWORD.NEW' | translate }}</label>\r\n                            <input\r\n                                (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\r\n                                [class.invalid]=\"changeForm.controls['new_password'].touched && changeForm.controls['new_password'].invalid\"\r\n                                class=\"form__field--input\"\r\n                                formControlName=\"new_password\"\r\n                                id=\"new-password\"\r\n                                placeholder=\"{{ 'PLACEHOLDERS.PLACEHOLDER_NEW' | translate }}\"\r\n                                type=\"password\"\r\n                            />\r\n                            <div\r\n                                *ngIf=\"changeForm.controls['new_password'].touched && changeForm.controls['new_password'].invalid\"\r\n                                class=\"error\"\r\n                            >\r\n                                <div *ngIf=\"changeForm.controls['new_password'].errors?.pattern\">\r\n                                    {{ 'ERRORS.REGEXP_INVALID_PASSWORD' | translate }}\r\n                                </div>\r\n                                <div *ngIf=\"changeForm.controls['new_password'].hasError('required')\">\r\n                                    {{ 'ERRORS.REQUIRED' | translate }}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"form__field\">\r\n                            <label for=\"confirm-password\">{{ 'SETTINGS.MASTER_PASSWORD.CONFIRM' | translate }}</label>\r\n                            <input\r\n                                (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\r\n                                [class.invalid]=\"\r\n                                    changeForm.invalid &&\r\n                                    (changeForm.controls['new_confirmation'].dirty || changeForm.controls['new_confirmation'].touched) &&\r\n                                    changeForm.errors &&\r\n                                    changeForm.errors['mismatch'] &&\r\n                                    changeForm.get('new_confirmation').value.length > 0\r\n                                \"\r\n                                class=\"form__field--input\"\r\n                                formControlName=\"new_confirmation\"\r\n                                id=\"confirm-password\"\r\n                                placeholder=\"{{ 'PLACEHOLDERS.PLACEHOLDER_CONFIRM' | translate }}\"\r\n                                type=\"password\"\r\n                            />\r\n                            <div\r\n                                *ngIf=\"\r\n                                    changeForm.invalid &&\r\n                                    (changeForm.controls['new_confirmation'].dirty || changeForm.controls['new_confirmation'].touched) &&\r\n                                    changeForm.errors &&\r\n                                    changeForm.errors['mismatch'] &&\r\n                                    changeForm.get('new_confirmation').value.length > 0\r\n                                \"\r\n                                class=\"error\"\r\n                            >\r\n                                {{ 'SETTINGS.FORM_ERRORS.CONFIRM_NOT_MATCH' | translate }}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"submit-button-container\">\r\n                        <button [disabled]=\"!changeForm.valid\" class=\"primary big max-w-19-rem w-100\" type=\"submit\">\r\n                            {{ 'SETTINGS.MASTER_PASSWORD.BUTTON' | translate }}\r\n                        </button>\r\n                        <span *ngIf=\"ifSaved\" [class.active]=\"ifSaved\" class=\"ml-1 color-aqua\">{{\r\n                                'SETTINGS.SETTINGS_SAVED' | translate\r\n                            }}</span>\r\n                    </div>\r\n                </form>\r\n\r\n                <div class=\"mt-2\">\r\n                    <p *ngIf=\"!isBuildVersionWasCopied\">\r\n                        Build version: {{ currentBuild }}\r\n                        <button (click)=\"copyBuildVersion()\" class=\"btn--copy\">\r\n                            <mat-icon svgIcon=\"pdc-copy\"></mat-icon>\r\n                        </button>\r\n                    </p>\r\n\r\n                    <p *ngIf=\"isBuildVersionWasCopied\" style=\"color: var(--aqua-500)\">\r\n                        {{ 'Build version was copied' | translate }}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, NgZone, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BackendService } from '@api/services/backend.service';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { ModalService } from '@parts/services/modal.service';\r\nimport { Wallet } from '@api/models/wallet.model';\r\nimport { hasOwnProperty } from '@parts/functions/has-own-property';\r\nimport BigNumber from 'bignumber.js';\r\nimport { BreadcrumbItems } from '@parts/components/breadcrumbs/breadcrumbs.models';\r\n\r\n@Component({\r\n    selector: 'app-transfer-alias',\r\n    template: `\r\n        <div class=\"page-container\">\r\n            <div class=\"toolbar mb-2\">\r\n                <div class=\"left\">\r\n                    <app-back-button></app-back-button>\r\n                    <h1 class=\"ml-2\">{{ 'BREADCRUMBS.TRANSFER_ALIAS' | translate }}</h1>\r\n                </div>\r\n                <div class=\"right\"></div>\r\n            </div>\r\n\r\n            <div class=\"page-content\">\r\n                <app-breadcrumbs class=\"mb-2\" [items]=\"breadcrumbItems\"></app-breadcrumbs>\r\n\r\n                <div class=\"scrolled-content\">\r\n                    <form class=\"form\">\r\n                        <div class=\"form__field\">\r\n                            <label for=\"alias-name\">\r\n                                {{ 'TRANSFER_ALIAS.NAME.LABEL' | translate }}\r\n                            </label>\r\n                            <input\r\n                                [value]=\"alias.name\"\r\n                                class=\"form__field--input\"\r\n                                id=\"alias-name\"\r\n                                name=\"alias-name\"\r\n                                placeholder=\"{{ 'EDIT_ALIAS.NAME.PLACEHOLDER' | translate }}\"\r\n                                readonly\r\n                                type=\"text\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div class=\"form__field textarea\">\r\n                            <label for=\"alias-comment\">\r\n                                {{ 'TRANSFER_ALIAS.COMMENT.LABEL' | translate }}\r\n                            </label>\r\n                            <textarea\r\n                                [(ngModel)]=\"alias.comment\"\r\n                                id=\"alias-comment\"\r\n                                name=\"alias-comment\"\r\n                                placeholder=\"{{ 'EDIT_ALIAS.COMMENT.PLACEHOLDER' | translate }}\"\r\n                            ></textarea>\r\n                        </div>\r\n\r\n                        <div class=\"form__field\">\r\n                            <label for=\"alias-transfer\">\r\n                                {{ 'TRANSFER_ALIAS.ADDRESS.LABEL' | translate }}\r\n                            </label>\r\n                            <input\r\n                                (contextmenu)=\"variablesService.onContextMenu($event)\"\r\n                                (input)=\"changeAddress()\"\r\n                                [(ngModel)]=\"transferAddress\"\r\n                                [class.invalid]=\"\r\n                                    transferAddress.length > 0 &&\r\n                                    (transferAddressAlias ||\r\n                                        !transferAddressValid ||\r\n                                        (transferAddressValid && !permissionSend) ||\r\n                                        notEnoughMoney)\r\n                                \"\r\n                                class=\"form__field--input\"\r\n                                id=\"alias-transfer\"\r\n                                name=\"alias-transfer\"\r\n                                placeholder=\"{{ 'TRANSFER_ALIAS.ADDRESS.PLACEHOLDER' | translate }}\"\r\n                                type=\"text\"\r\n                            />\r\n                            <div\r\n                                *ngIf=\"\r\n                                    transferAddress.length > 0 &&\r\n                                    (transferAddressAlias ||\r\n                                        !transferAddressValid ||\r\n                                        (transferAddressValid && !permissionSend) ||\r\n                                        notEnoughMoney)\r\n                                \"\r\n                                class=\"error\"\r\n                            >\r\n                                <div *ngIf=\"!transferAddressValid\">\r\n                                    {{ 'TRANSFER_ALIAS.FORM_ERRORS.WRONG_ADDRESS' | translate }}\r\n                                </div>\r\n                                <div *ngIf=\"transferAddressAlias || (transferAddressValid && !permissionSend)\">\r\n                                    {{ 'TRANSFER_ALIAS.FORM_ERRORS.ALIAS_EXISTS' | translate }}\r\n                                </div>\r\n                                <div *ngIf=\"notEnoughMoney && transferAddressValid && !transferAddressAlias\">\r\n                                    {{ 'TRANSFER_ALIAS.FORM_ERRORS.NO_MONEY' | translate }}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"alias-cost mb-2\">\r\n                            {{\r\n                                'TRANSFER_ALIAS.COST'\r\n                                    | translate\r\n                                        : {\r\n                                              value: variablesService.default_fee,\r\n                                              currency: variablesService.defaultTicker\r\n                                          }\r\n                            }}\r\n                        </div>\r\n\r\n                        <button\r\n                            (click)=\"transferAlias()\"\r\n                            [disabled]=\"transferAddressAlias || !transferAddressValid || notEnoughMoney\"\r\n                            class=\"primary big w-100\"\r\n                            type=\"button\"\r\n                        >\r\n                            {{ 'TRANSFER_ALIAS.BUTTON_TRANSFER' | translate }}\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `,\r\n    styles: [\r\n        `\r\n            :host {\r\n                width: 100%;\r\n                height: 100%;\r\n                overflow: hidden;\r\n            }\r\n        `,\r\n    ],\r\n})\r\nexport class TransferAliasComponent implements OnInit {\r\n    wallet: Wallet;\r\n\r\n    alias: any;\r\n\r\n    breadcrumbItems: BreadcrumbItems = [\r\n        {\r\n            routerLink: '/wallet/history',\r\n            title: this.variablesService.currentWallet.name,\r\n        },\r\n        {\r\n            title: 'BREADCRUMBS.TRANSFER_ALIAS',\r\n        },\r\n    ];\r\n\r\n    transferAddress = '';\r\n\r\n    transferAddressValid: boolean;\r\n\r\n    transferAddressAlias: boolean;\r\n\r\n    permissionSend: boolean;\r\n\r\n    notEnoughMoney: boolean;\r\n\r\n    requestProcessing = false;\r\n\r\n    constructor(\r\n        public variablesService: VariablesService,\r\n        private router: Router,\r\n        private backend: BackendService,\r\n        private modalService: ModalService,\r\n        private ngZone: NgZone\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        this.wallet = this.variablesService.currentWallet;\r\n        const alias = this.backend.getWalletAlias(this.wallet.address);\r\n        this.alias = {\r\n            name: alias.name,\r\n            address: alias.address,\r\n            comment: alias.comment,\r\n            tracking_key: alias.tracking_key,\r\n        };\r\n        const unlocked_balance = new BigNumber(this.wallet.getBalanceByTicker('PDC')?.unlocked || 0);\r\n        this.notEnoughMoney = unlocked_balance.isLessThan(this.variablesService.default_fee_big);\r\n    }\r\n\r\n    changeAddress(): void {\r\n        this.backend.validateAddress(this.transferAddress, status => {\r\n            this.transferAddressValid = status;\r\n            if (status) {\r\n                this.backend.getPoolInfo((statusPool, dataPool) => {\r\n                    if (hasOwnProperty(dataPool, 'aliases_que') && dataPool.aliases_que.length) {\r\n                        this.setStatus(!dataPool.aliases_que.some(el => el.address === this.transferAddress));\r\n                    } else {\r\n                        this.setStatus(status);\r\n                    }\r\n                });\r\n            } else {\r\n                this.setStatus(false);\r\n            }\r\n        });\r\n    }\r\n\r\n    setStatus(statusSet): void {\r\n        this.permissionSend = statusSet;\r\n        if (statusSet) {\r\n            this.backend.getAliasByAddress(this.transferAddress, status => {\r\n                this.ngZone.run(() => {\r\n                    if (status) {\r\n                        this.transferAddressAlias = true;\r\n                        this.permissionSend = false;\r\n                    } else {\r\n                        this.transferAddressAlias = false;\r\n                    }\r\n                });\r\n            });\r\n        } else {\r\n            this.ngZone.run(() => {\r\n                this.transferAddressAlias = false;\r\n            });\r\n        }\r\n    }\r\n\r\n    transferAlias(): void {\r\n        if (this.requestProcessing || !this.permissionSend || !this.transferAddressValid || this.notEnoughMoney) {\r\n            return;\r\n        }\r\n        this.requestProcessing = true;\r\n        const newAlias = {\r\n            name: this.alias.name,\r\n            address: this.transferAddress,\r\n            comment: this.alias.comment,\r\n            tracking_key: this.alias.tracking_key,\r\n        };\r\n        this.backend.updateAlias(this.wallet.wallet_id, newAlias, this.variablesService.default_fee, (status, data) => {\r\n            if (status && hasOwnProperty(data, 'success') && data.success) {\r\n                this.modalService.prepareModal('info', 'TRANSFER_ALIAS.REQUEST_SEND_REG');\r\n                this.ngZone.run(() => {\r\n                    this.router.navigate(['/wallet/']);\r\n                });\r\n            }\r\n            this.requestProcessing = false;\r\n        });\r\n    }\r\n}\r\n","import { Component, inject, NgZone } from '@angular/core';\r\nimport { NonNullableFormBuilder, Validators } from '@angular/forms';\r\nimport { BackendService } from '@api/services/backend.service';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { Router } from '@angular/router';\r\nimport { hasOwnProperty } from '@parts/functions/has-own-property';\r\nimport { regExpPassword, PdcValidators } from '@parts/utils/pdc-validators';\r\nimport { BreadcrumbItems } from '@parts/components/breadcrumbs/breadcrumbs.models';\r\n\r\n@Component({\r\n    selector: 'app-wallet-details',\r\n    template: `\r\n        <div class=\"page-container\">\r\n            <div class=\"toolbar mb-2\">\r\n                <div class=\"left\">\r\n                    <app-back-button></app-back-button>\r\n                    <h1 class=\"ml-2\">{{ 'BREADCRUMBS.WALLET_DETAILS' | translate }}</h1>\r\n                </div>\r\n                <div class=\"right\"></div>\r\n            </div>\r\n\r\n            <div class=\"page-content\">\r\n                <app-breadcrumbs class=\"mb-2\" [items]=\"breadcrumbItems\"></app-breadcrumbs>\r\n\r\n                <div class=\"scrolled-content\">\r\n                    <div fxFlexFill fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n                        <form (ngSubmit)=\"beforeSubmitDetails()\" [formGroup]=\"detailsForm\" class=\"form\">\r\n                            <div class=\"form__field\">\r\n                                <label for=\"wallet-name\">{{ 'WALLET_DETAILS.LABEL_NAME' | translate }}</label>\r\n                                <input\r\n                                    (contextmenu)=\"variablesService.onContextMenu($event)\"\r\n                                    [maxLength]=\"variablesService.maxWalletNameLength\"\r\n                                    [placeholder]=\"'PLACEHOLDERS.WALLET_NAME_PLACEHOLDER' | translate\"\r\n                                    class=\"form__field--input\"\r\n                                    formControlName=\"name\"\r\n                                    id=\"wallet-name\"\r\n                                    type=\"text\"\r\n                                />\r\n                                <div\r\n                                    *ngIf=\"\r\n                                        detailsForm.controls.name.invalid &&\r\n                                        (detailsForm.controls.name.dirty || detailsForm.controls.name.touched)\r\n                                    \"\r\n                                    class=\"error\"\r\n                                >\r\n                                    <div *ngIf=\"detailsForm.controls.name.errors['duplicate']\">\r\n                                        {{ 'WALLET_DETAILS.FORM_ERRORS.NAME_DUPLICATE' | translate }}\r\n                                    </div>\r\n                                    <div *ngIf=\"detailsForm.controls.name.value.length >= variablesService.maxWalletNameLength\">\r\n                                        {{ 'WALLET_DETAILS.FORM_ERRORS.MAX_LENGTH' | translate }}\r\n                                    </div>\r\n                                    <div *ngIf=\"detailsForm.controls.name.hasError('required')\">\r\n                                        {{ 'WALLET_DETAILS.FORM_ERRORS.NAME_REQUIRED' | translate }}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div fxLayout=\"row nowrap\" fxLayoutAlign=\"start center\" fxLayoutGap=\"1rem\">\r\n                                <button [disabled]=\"detailsForm.invalid\" class=\"primary big max-w-19-rem w-100 mb-1\" type=\"submit\">\r\n                                    {{ 'SETTINGS.MASTER_PASSWORD.BUTTON' | translate }}\r\n                                </button>\r\n                                <p *ngIf=\"ifSaved\" class=\"color-aqua\">Saved!</p>\r\n                            </div>\r\n                            <div class=\"form__field\">\r\n                                <label for=\"wallet-location\">{{ 'WALLET_DETAILS.LABEL_FILE_LOCATION' | translate }}</label>\r\n                                <input\r\n                                    (contextmenu)=\"variablesService.onContextMenuOnlyCopy($event, detailsForm.controls.path.value)\"\r\n                                    class=\"form__field--input cursor-default\"\r\n                                    formControlName=\"path\"\r\n                                    id=\"wallet-location\"\r\n                                    readonly\r\n                                    type=\"text\"\r\n                                />\r\n                            </div>\r\n                        </form>\r\n\r\n                        <ng-container\r\n                            *ngIf=\"!variablesService.currentWallet?.is_auditable && !variablesService.currentWallet?.is_watch_only\"\r\n                        >\r\n                            <ng-container *ngIf=\"!showSeed; else seedPhraseContent\">\r\n                                <form\r\n                                    (ngSubmit)=\"beforeSubmitPasswordSeedPhrase()\"\r\n                                    [formGroup]=\"passwordSeedPhraseForm\"\r\n                                    class=\"form form__card pb-2\"\r\n                                    fxFlex=\"0 0 auto\"\r\n                                    fxLayout=\"column\"\r\n                                    fxLayoutAlign=\"start center\"\r\n                                >\r\n                                    <div class=\"form__field\">\r\n                                        <label for=\"create-password\">{{ 'WALLET_DETAILS.CREATE_PASSWORD_SECURE' | translate }}</label>\r\n                                        <input\r\n                                            class=\"form__field--input\"\r\n                                            formControlName=\"password\"\r\n                                            id=\"create-password\"\r\n                                            placeholder=\"{{ 'PLACEHOLDERS.PASSWORD_PLACEHOLDER' | translate }}\"\r\n                                            type=\"password\"\r\n                                        />\r\n                                        <div\r\n                                            *ngIf=\"\r\n                                                passwordSeedPhraseForm.controls.password.invalid &&\r\n                                                (passwordSeedPhraseForm.controls['password'].dirty ||\r\n                                                    passwordSeedPhraseForm.controls['password'].touched)\r\n                                            \"\r\n                                            class=\"error\"\r\n                                        >\r\n                                            <ng-container *ngIf=\"passwordSeedPhraseForm.controls['password'].hasError('pattern')\">\r\n                                                {{ 'ERRORS.REGEXP_INVALID_PASSWORD' | translate }}\r\n                                            </ng-container>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"form__field\">\r\n                                        <label for=\"confirm-password\">{{ 'WALLET_DETAILS.FORM.CONFIRM_PASSWORD' | translate }}</label>\r\n                                        <input\r\n                                            [class.invalid]=\"\r\n                                                passwordSeedPhraseForm.invalid &&\r\n                                                passwordSeedPhraseForm.get('confirmPassword').value.length > 0\r\n                                            \"\r\n                                            class=\"form__field--input\"\r\n                                            formControlName=\"confirmPassword\"\r\n                                            id=\"confirm-password\"\r\n                                            placeholder=\"{{ 'PLACEHOLDERS.PLACEHOLDER_CONFIRM' | translate }}\"\r\n                                            type=\"password\"\r\n                                        />\r\n                                        <div\r\n                                            *ngIf=\"\r\n                                                passwordSeedPhraseForm.invalid &&\r\n                                                (passwordSeedPhraseForm.controls['confirmPassword'].dirty ||\r\n                                                    passwordSeedPhraseForm.controls['confirmPassword'].touched)\r\n                                            \"\r\n                                            class=\"error\"\r\n                                        >\r\n                                            <div\r\n                                                *ngIf=\"\r\n                                                    passwordSeedPhraseForm.invalid &&\r\n                                                    passwordSeedPhraseForm.get('confirmPassword').value.length > 0\r\n                                                \"\r\n                                            >\r\n                                                {{ 'WALLET_DETAILS.FORM_ERRORS.PASSWORDS_DONT_MATCH' | translate }}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <button [disabled]=\"!passwordSeedPhraseForm.valid\" class=\"primary big w-100 mb-2\" type=\"submit\">\r\n                                        <mat-icon svgIcon=\"pdc-check-shield\" class=\"mr-1\"></mat-icon>\r\n                                        {{ 'WALLET_DETAILS.FORM.GENERATE_SECURE_SEED' | translate }}\r\n                                    </button>\r\n\r\n                                    <p class=\"color-primary\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                                        <mat-icon svgIcon=\"pdc-info\" class=\"mr-1\"></mat-icon>\r\n                                        {{ 'WALLET_DETAILS.FORM.SECURED_SEED_WILL_REQUIRE' | translate }}\r\n                                    </p>\r\n                                </form>\r\n                            </ng-container>\r\n\r\n                            <ng-template #seedPhraseContent>\r\n                                <div class=\"seed-phrase form__card pb-2\" fxFlex=\"0 0 auto\" fxLayout=\"column\">\r\n                                    <div class=\"header mb-2\" fxFlex=\"0 0 auto\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                                        <div class=\"left\">\r\n                                            <span>{{ 'WALLET_DETAILS.LABEL_SEED_PHRASE' | translate }}</span>\r\n                                        </div>\r\n                                        <div class=\"right\">\r\n                                            <span\r\n                                                *ngIf=\"passwordSeedPhraseForm.controls.password.value.length === 0\"\r\n                                                class=\"status color-red\"\r\n                                                fxLayout=\"row\"\r\n                                                fxLayoutAlign=\"start center\"\r\n                                            >\r\n                                                {{ 'WALLET_DETAILS.SEED_IS_UNSECURED' | translate }}\r\n                                                <mat-icon svgIcon=\"pdc-unsecured\" class=\"ml-1\"></mat-icon>\r\n                                            </span>\r\n                                            <span\r\n                                                *ngIf=\"passwordSeedPhraseForm.controls.password.value.length > 0\"\r\n                                                class=\"status color-aqua\"\r\n                                                fxLayout=\"row\"\r\n                                                fxLayoutAlign=\"start center\"\r\n                                            >\r\n                                                {{ 'WALLET_DETAILS.SEED_IS_SECURED' | translate }}\r\n                                                <mat-icon svgIcon=\"pdc-secured\" class=\"ml-1\"></mat-icon>\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div\r\n                                        (contextmenu)=\"variablesService.onContextMenuOnlyCopy($event, seedPhrase)\"\r\n                                        class=\"content mb-1\"\r\n                                        fxLayout=\"row wrap\"\r\n                                    >\r\n                                        <ng-container *ngFor=\"let word of seedPhrase.split(' '); let index = index\">\r\n                                            <div\r\n                                                class=\"item p-1 mr-1 mb-1 border-radius-0_8-rem\"\r\n                                                fxLayout=\"row nowrap\"\r\n                                                fxLayoutAlign=\"start center\"\r\n                                            >\r\n                                                <div class=\"number p-1 mr-1\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                                                    {{ index + 1 }}\r\n                                                </div>\r\n                                                <span class=\"word\" fxLayout=\"row\">{{ word }}</span>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                    <div class=\"footer max-w-50-rem w-100\" fxLayout=\"column\">\r\n                                        <button (click)=\"copySeedPhrase()\" class=\"outline big w-100 mb-2\" type=\"button\">\r\n                                            <ng-container *ngIf=\"!seedPhraseCopied\">\r\n                                                <mat-icon svgIcon=\"pdc-copy\" class=\"mr-1\"></mat-icon>\r\n                                                {{ 'SEED_PHRASE.BUTTON_COPY' | translate }}\r\n                                            </ng-container>\r\n                                            <ng-container *ngIf=\"seedPhraseCopied\">\r\n                                                <mat-icon svgIcon=\"pdc-check\" class=\"mr-1\"></mat-icon>\r\n                                                {{ 'SEED_PHRASE.BUTTON_COPIED' | translate }}\r\n                                            </ng-container>\r\n                                        </button>\r\n                                        <p *ngIf=\"passwordSeedPhraseForm.controls.password.value.length > 0\" class=\"text-align-center\">\r\n                                            <mat-icon svgIcon=\"pdc-info\" class=\"mr-1\"></mat-icon>\r\n                                            <span class=\"color-primary\">{{ 'WALLET_DETAILS.REMEMBER_YOU_WILL_REQUIRE' | translate }}</span>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </ng-template>\r\n                        </ng-container>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `,\r\n})\r\nexport class WalletDetailsComponent {\r\n    breadcrumbItems: BreadcrumbItems = [\r\n        {\r\n            routerLink: '/wallet/history',\r\n            title: this.variablesService.currentWallet.name,\r\n        },\r\n        {\r\n            title: 'BREADCRUMBS.WALLET_DETAILS',\r\n        },\r\n    ];\r\n\r\n    seedPhrase = '';\r\n\r\n    showSeed = false;\r\n\r\n    seedPhraseCopied = false;\r\n\r\n    ifSaved = false;\r\n\r\n    fb = inject(NonNullableFormBuilder);\r\n\r\n    detailsForm = this.fb.group({\r\n        name: this.fb.control('', [Validators.required, PdcValidators.duplicate(this.variablesService.walletNamesForComparisons)]),\r\n        path: this.fb.control(''),\r\n    });\r\n\r\n    passwordSeedPhraseForm = this.fb.group(\r\n        {\r\n            password: this.fb.control('', Validators.pattern(regExpPassword)),\r\n            confirmPassword: this.fb.control(''),\r\n        },\r\n        {\r\n            validators: [PdcValidators.formMatch('password', 'confirmPassword')],\r\n        }\r\n    );\r\n\r\n    constructor(\r\n        public variablesService: VariablesService,\r\n        private router: Router,\r\n        private backend: BackendService,\r\n        private ngZone: NgZone\r\n    ) {\r\n        const { currentWallet } = this.variablesService;\r\n        const { name, path } = currentWallet;\r\n        this.detailsForm.patchValue(\r\n            {\r\n                name,\r\n                path,\r\n            },\r\n            {\r\n                emitEvent: false,\r\n            }\r\n        );\r\n    }\r\n\r\n    beforeSubmitPasswordSeedPhrase(): void {\r\n        if (this.passwordSeedPhraseForm.invalid) {\r\n            this.passwordSeedPhraseForm.updateValueAndValidity();\r\n            this.passwordSeedPhraseForm.markAllAsTouched();\r\n            return;\r\n        }\r\n\r\n        this.submitPasswordSeedPhrase();\r\n    }\r\n\r\n    submitPasswordSeedPhrase(): void {\r\n        const { wallet_id } = this.variablesService.currentWallet;\r\n        const { password: seed_password } = this.passwordSeedPhraseForm.getRawValue();\r\n        this.backend.getSmartWalletInfo({ wallet_id, seed_password }, (status, data) => {\r\n            if (hasOwnProperty(data, 'seed_phrase')) {\r\n                this.ngZone.run(() => {\r\n                    this.showSeed = true;\r\n                    this.seedPhrase = data['seed_phrase'].trim();\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    beforeSubmitDetails(): void {\r\n        if (this.detailsForm.invalid) {\r\n            this.detailsForm.updateValueAndValidity();\r\n            this.detailsForm.markAllAsTouched();\r\n            return;\r\n        }\r\n\r\n        this.submitDetails();\r\n    }\r\n\r\n    submitDetails(): void {\r\n        const getRawValue = this.detailsForm.getRawValue();\r\n        const { name } = getRawValue;\r\n        this.variablesService.currentWallet.name = name;\r\n        this.detailsForm.reset(getRawValue);\r\n        this.refreshDetailsFormValidators();\r\n        this.ifSaved = true;\r\n        setTimeout(() => {\r\n            this.ifSaved = false;\r\n        }, 3000);\r\n    }\r\n\r\n    copySeedPhrase(): void {\r\n        this.backend.setClipboard(this.seedPhrase, () => {\r\n            this.ngZone.run(() => {\r\n                setTimeout(() => {\r\n                    this.seedPhraseCopied = false;\r\n                }, 4000);\r\n                this.seedPhraseCopied = true;\r\n            });\r\n        });\r\n    }\r\n\r\n    private refreshDetailsFormValidators(): void {\r\n        const walletNamesForComparisons = this.variablesService.walletNamesForComparisons;\r\n        const validatorsForName = [Validators.required, PdcValidators.duplicate(walletNamesForComparisons)];\r\n        this.detailsForm.controls.name.clearValidators();\r\n        this.detailsForm.controls.name.setValidators(validatorsForName);\r\n        this.detailsForm.controls.name.updateValueAndValidity();\r\n    }\r\n}\r\n","import { Component, inject, NgZone, OnDestroy, OnInit } from '@angular/core';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { Subject } from 'rxjs';\r\nimport { AssetBalance, ParamsRemoveCustomAssetId } from '@api/models/assets.model';\r\nimport { PaginatePipeArgs } from 'ngx-pagination';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { CdkOverlayOrigin } from '@angular/cdk/overlay';\r\nimport { AssetDetailsComponent } from '@parts/modals/asset-details/asset-details.component';\r\nimport { BackendService } from '@api/services/backend.service';\r\nimport { ConfirmModalComponent, ConfirmModalData } from '@parts/modals/confirm-modal/confirm-modal.component';\r\nimport { WalletsService } from '@parts/services/wallets.service';\r\nimport { BigNumber } from 'bignumber.js';\r\nimport { LOCKED_BALANCE_HELP_PAGE } from '@parts/data/constants';\r\nimport { IntToMoneyPipe } from '@parts/pipes';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { pdcAssetInfo } from '@parts/data/assets';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\n\r\n@Component({\r\n    selector: 'app-assets',\r\n    templateUrl: `./assets.component.html`,\r\n})\r\nexport class AssetsComponent implements OnInit, OnDestroy {\r\n    paginatePipeArgs: PaginatePipeArgs = {\r\n        id: 'pagination-assets-id',\r\n        itemsPerPage: 10,\r\n        currentPage: 1,\r\n    };\r\n\r\n    triggerOrigin!: CdkOverlayOrigin;\r\n\r\n    currentAssetBalance!: AssetBalance;\r\n\r\n    isOpenDropDownMenu = false;\r\n\r\n    private readonly _destroy$ = new Subject<void>();\r\n\r\n    private readonly _matDialog: MatDialog = inject(MatDialog);\r\n\r\n    public readonly variablesService: VariablesService = inject(VariablesService);\r\n\r\n    private readonly _backendService: BackendService = inject(BackendService);\r\n\r\n    private readonly _walletsService: WalletsService = inject(WalletsService);\r\n\r\n    private readonly _intToMoneyPipe: IntToMoneyPipe = inject(IntToMoneyPipe);\r\n\r\n    private readonly _translateService: TranslateService = inject(TranslateService);\r\n\r\n    private readonly _ngZone: NgZone = inject(NgZone);\r\n\r\n    get isShowPagination(): boolean {\r\n        const { currentWallet } = this.variablesService;\r\n        if (currentWallet) {\r\n            const { balances } = currentWallet;\r\n            return (balances?.length || 0) > this.paginatePipeArgs.itemsPerPage;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this._listenChangeWallet();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._destroy$.next();\r\n        this._destroy$.complete();\r\n    }\r\n\r\n    toggleDropDownMenu(trigger: CdkOverlayOrigin, assetBalance: AssetBalance): void {\r\n        this.isOpenDropDownMenu = !this.isOpenDropDownMenu;\r\n        this.triggerOrigin = trigger;\r\n        this.currentAssetBalance = assetBalance;\r\n    }\r\n\r\n    trackByAssets(index: number, { asset_info: { asset_id } }: AssetBalance): number | string {\r\n        return asset_id || index;\r\n    }\r\n\r\n    trackByPages(index: number): number | string {\r\n        return index;\r\n    }\r\n\r\n    assetDetails(): void {\r\n        const { asset_info } = this.currentAssetBalance;\r\n        const config: MatDialogConfig = {\r\n            data: {\r\n                asset_info\r\n            },\r\n        };\r\n        this._matDialog.open(AssetDetailsComponent, config);\r\n    }\r\n\r\n    beforeRemoveAsset(): void {\r\n        if (!this.currentAssetBalance) {\r\n            return;\r\n        }\r\n        const { full_name } = this.currentAssetBalance.asset_info;\r\n        const config: MatDialogConfig<ConfirmModalData> = {\r\n            data: {\r\n                // TODO: Add in translates\r\n                title: `Do you want delete \"${full_name}\"`,\r\n            },\r\n        };\r\n\r\n        this._matDialog\r\n            .open<ConfirmModalComponent, ConfirmModalData, boolean>(ConfirmModalComponent, config)\r\n            .afterClosed()\r\n            .pipe(takeUntil(this._destroy$))\r\n            .subscribe({\r\n                next: confirmed => confirmed && this._removeAsset(),\r\n            });\r\n    }\r\n\r\n    private _removeAsset(): void {\r\n        const {\r\n            currentWallet\r\n        } = this.variablesService;\r\n        const { wallet_id, sendMoneyParams } = currentWallet;\r\n        const {\r\n            asset_info: { asset_id },\r\n        } = this.currentAssetBalance;\r\n\r\n        const params: ParamsRemoveCustomAssetId = {\r\n            wallet_id,\r\n            asset_id,\r\n        };\r\n\r\n        this._backendService.removeCustomAssetId(params, () => {\r\n            this._ngZone.run(() => {\r\n                if (sendMoneyParams?.asset_id === asset_id) {\r\n                    this._walletsService.currentWallet.sendMoneyParams.asset_id = pdcAssetInfo.asset_id;\r\n                }\r\n\r\n                this._walletsService.updateWalletInfo(wallet_id);\r\n\r\n                this.currentAssetBalance = undefined;\r\n            });\r\n        });\r\n    }\r\n\r\n    getBalanceTooltip(balance: AssetBalance): HTMLDivElement {\r\n        const tooltip = document.createElement('div');\r\n        const scrollWrapper = document.createElement('div');\r\n        const visibilityBalance = this.variablesService.visibilityBalance$.value;\r\n\r\n        if (!balance) {\r\n            return null;\r\n        }\r\n\r\n        scrollWrapper.classList.add('balance-scroll-list');\r\n        [balance].forEach(({ unlocked, total, asset_info: { ticker, decimal_point } }: AssetBalance) => {\r\n            const available = document.createElement('span');\r\n            available.setAttribute('class', 'available');\r\n            available.innerText = `${this._translateService.instant('WALLET.AVAILABLE_BALANCE')} `;\r\n            const availableB = document.createElement('b');\r\n            availableB.innerText = visibilityBalance\r\n                ? `${this._intToMoneyPipe.transform(unlocked, decimal_point)} ${ticker || '---'}`\r\n                : '******';\r\n            available.appendChild(availableB);\r\n            scrollWrapper.appendChild(available);\r\n\r\n            const locked = document.createElement('span');\r\n            locked.setAttribute('class', 'locked');\r\n            locked.innerText = `${this._translateService.instant('WALLET.LOCKED_BALANCE')} `;\r\n            const lockedB = document.createElement('b');\r\n            lockedB.innerText = visibilityBalance\r\n                ? `${this._intToMoneyPipe.transform(new BigNumber(total).minus(unlocked), decimal_point)} ${ticker || '---'}`\r\n                : '******';\r\n            locked.appendChild(lockedB);\r\n            scrollWrapper.appendChild(locked);\r\n        });\r\n        tooltip.appendChild(scrollWrapper);\r\n        const link = document.createElement('span');\r\n        link.setAttribute('class', 'link');\r\n        link.innerHTML = this._translateService.instant('WALLET.LOCKED_BALANCE_LINK');\r\n        link.addEventListener('click', () => {\r\n            this._backendService.openUrlInBrowser(LOCKED_BALANCE_HELP_PAGE);\r\n        });\r\n        tooltip.appendChild(link);\r\n        return tooltip;\r\n    }\r\n\r\n    isShowDeleteAsset(): boolean {\r\n        const {\r\n            asset_info: { asset_id },\r\n        } = this.currentAssetBalance;\r\n        const {\r\n            verifiedAssetInfoWhitelist$: { value: verifiedAssetInfoWhitelist },\r\n        } = this.variablesService;\r\n        /**\r\n         * You can't delete asset pdc and assets that are in whitelist\r\n         * */\r\n        return ![pdcAssetInfo.asset_id, ...verifiedAssetInfoWhitelist.map(i => i.asset_id)].includes(asset_id);\r\n    }\r\n\r\n    isShowPriceColumns(balance: AssetBalance): boolean {\r\n        return balance.asset_info.asset_id === pdcAssetInfo.asset_id;\r\n    }\r\n\r\n    private _listenChangeWallet(): void {\r\n        const { currentWalletChangedEvent } = this.variablesService;\r\n        currentWalletChangedEvent.pipe(takeUntil(this._destroy$)).subscribe({\r\n            next: () => {\r\n                this.paginatePipeArgs.currentPage = 0;\r\n            },\r\n        });\r\n    }\r\n}\r\n","<div fxFlexFill fxLayout=\"column\">\r\n    <div [class.mb-2]=\"isShowPagination\" class=\"scrolled-content\" fxFlex=\"1 1 auto\">\r\n        <table class=\"pdc-table assets-table\">\r\n            <thead>\r\n            <tr>\r\n                <th>\r\n                    <div class=\"bg title\">\r\n                        {{ 'ASSETS.TABLE.LABELS.NAME' | translate }}\r\n                    </div>\r\n                </th>\r\n                <th>\r\n                    <div class=\"bg title\">\r\n                        {{ 'ASSETS.TABLE.LABELS.BALANCE' | translate }}\r\n                    </div>\r\n                </th>\r\n                <th>\r\n                    <div class=\"bg title\">\r\n                        {{ 'ASSETS.TABLE.LABELS.VALUE' | translate }}\r\n                    </div>\r\n                </th>\r\n                <th>\r\n                    <div class=\"bg title\">\r\n                        {{ 'ASSETS.TABLE.LABELS.PRICE' | translate }}\r\n                    </div>\r\n                </th>\r\n                <th>\r\n                    <div class=\"bg title\">&nbsp;</div>\r\n                </th>\r\n            </tr>\r\n            <div class=\"row-divider\"></div>\r\n            </thead>\r\n            <tbody>\r\n            <ng-container *ngFor=\"let balance of variablesService.currentWallet.balances$ | async | paginate :\r\n                paginatePipeArgs; trackBy: trackByAssets\">\r\n                <tr\r\n                    [delay]=\"100\"\r\n                    [placement]=\"'bottom'\"\r\n                    [timeDelay]=\"1500\"\r\n                    [tooltipClass]=\"'balance-tooltip'\"\r\n                    [tooltip]=\"getBalanceTooltip(balance)\"\r\n                >\r\n                    <td>\r\n                        <div class=\"text-ellipsis\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"2rem\">\r\n                            <div [innerHTML]=\"balance.asset_info | getLogoByAssetInfo\" class=\"token-logo mr-1\"></div>\r\n                            <b class=\"text-ellipsis\">{{ balance.asset_info.full_name }}</b>\r\n                        </div>\r\n                    </td>\r\n                    <td>\r\n                        <div class=\"text-ellipsis\">\r\n                            <b *appVisibilityBalance>\r\n                                {{ balance.total | intToMoney : balance.asset_info.decimal_point }}\r\n                                {{ balance.asset_info.ticker }}\r\n                            </b>\r\n                        </div>\r\n                    </td>\r\n\r\n                    <ng-container\r\n                        *ngIf=\"isShowPriceColumns(balance); else templateNotLoadPrice\">\r\n                        <td>\r\n                            <div class=\"text-ellipsis\">\r\n                                <b *appVisibilityBalance>{{\r\n                                        (balance.total | intToMoney : balance.asset_info.decimal_point) *\r\n                                        variablesService.pdcMoneyEquivalent | currency : 'USD'\r\n                                    }}</b>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            <div class=\"text-ellipsis\">\r\n                                <b class=\"mr-0_5\">{{ variablesService.pdcMoneyEquivalent | currency : 'USD' }}</b>\r\n                                <span\r\n                                    [class.color-aqua]=\"variablesService.pdcMoneyEquivalentPercent > 0\"\r\n                                    [class.color-red]=\"variablesService.pdcMoneyEquivalentPercent < 0\"\r\n                                >{{ variablesService.pdcMoneyEquivalentPercent | number : '1.2-2' }} %</span>\r\n                            </div>\r\n                        </td>\r\n                    </ng-container>\r\n\r\n                    <ng-template #templateNotLoadPrice>\r\n                        <td></td>\r\n                        <td></td>\r\n                    </ng-template>\r\n\r\n                    <td>\r\n                        <div class=\"text-ellipsis\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\r\n                            <button\r\n                                #trigger=\"cdkOverlayOrigin\"\r\n                                (click)=\"toggleDropDownMenu(trigger, balance); $event.stopPropagation()\"\r\n                                [disabled]=\"false\"\r\n                                cdkOverlayOrigin\r\n                                class=\"btn-icon circle row-options small ml-auto\"\r\n                                type=\"button\"\r\n                            >\r\n                                <mat-icon class=\"small\" svgIcon=\"pdc-row-options\"></mat-icon>\r\n                            </button>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n                <tr class=\"row-divider\"></tr>\r\n            </ng-container>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n\r\n    <pagination-template\r\n        #p=\"paginationApi\"\r\n        (pageChange)=\"paginatePipeArgs.currentPage = $event\"\r\n        *ngIf=\"isShowPagination\"\r\n        [id]=\"paginatePipeArgs.id\"\r\n        class=\"ngx-pagination custom-pagination\"\r\n    >\r\n        <button (click)=\"p.previous()\" [disabled]=\"p.isFirstPage()\"\r\n                class=\"pagination-previous btn-icon circle small mr-0_5\">\r\n            <mat-icon svgIcon=\"pdc-arrow-left\"></mat-icon>\r\n        </button>\r\n\r\n        <div *ngFor=\"let page of p.pages; trackBy: trackByPages\" [class.current]=\"p.getCurrent() === page.value\"\r\n             class=\"mr-0_5\">\r\n            <a (click)=\"p.setCurrent(page.value)\" *ngIf=\"p.getCurrent() !== page.value\">\r\n                <span>{{ page.label }}</span>\r\n            </a>\r\n            <div *ngIf=\"p.getCurrent() === page.value\">\r\n                <span>{{ page.label }}</span>\r\n            </div>\r\n        </div>\r\n\r\n        <button (click)=\"p.next()\" [disabled]=\"p.isLastPage()\" class=\"pagination-next btn-icon circle small\">\r\n            <mat-icon svgIcon=\"pdc-arrow-right\"></mat-icon>\r\n        </button>\r\n    </pagination-template>\r\n</div>\r\n\r\n<ng-template\r\n    (backdropClick)=\"$event.stopPropagation(); isOpenDropDownMenu = false\"\r\n    [cdkConnectedOverlayBackdropClass]=\"'opacity-0'\"\r\n    [cdkConnectedOverlayHasBackdrop]=\"true\"\r\n    [cdkConnectedOverlayOpen]=\"isOpenDropDownMenu\"\r\n    [cdkConnectedOverlayOrigin]=\"triggerOrigin\"\r\n    [cdkConnectedOverlayPositions]=\"[\r\n                {\r\n                    originX: 'end',\r\n                    originY: 'top',\r\n                    overlayX: 'end',\r\n                    overlayY: 'top',\r\n                    offsetY: 30\r\n                }\r\n            ]\"\r\n    cdkConnectedOverlay\r\n>\r\n    <ul (click)=\"isOpenDropDownMenu = false\" class=\"list\">\r\n        <li class=\"item\">\r\n            <button (click)=\"assetDetails()\" class=\"w-100 px-2 py-1\" type=\"button\">\r\n                <mat-icon class=\"mr-1\" svgIcon=\"pdc-info-v2\"></mat-icon>\r\n                <span>{{ 'ASSETS.DROP_DOWN_MENU.ASSET_DETAILS' | translate }}</span>\r\n            </button>\r\n        </li>\r\n\r\n        <ng-container\r\n            *ngIf=\"\r\n                        variablesService.currentWallet.loaded &&\r\n                        variablesService.daemon_state === 2 &&\r\n                        !variablesService.currentWallet.is_auditable &&\r\n                        !variablesService.currentWallet.is_watch_only\r\n                    \"\r\n        >\r\n            <li class=\"item\">\r\n                <button [state]=\"{ asset: currentAssetBalance }\" class=\"w-100 px-2 py-1\" routerLink=\"/wallet/send\">\r\n                    <mat-icon class=\"mr-1\" svgIcon=\"pdc-send\"></mat-icon>\r\n                    <span>{{ 'Send' | translate }}</span>\r\n                </button>\r\n            </li>\r\n            <ng-container *ngIf=\"variablesService.is_hardfok_active$ | async\">\r\n                <li class=\"item\">\r\n                    <button [state]=\"{ asset: currentAssetBalance }\" class=\"w-100 px-2 py-1\"\r\n                            routerLink=\"/wallet/create-swap\">\r\n                        <mat-icon class=\"mr-1\" svgIcon=\"pdc-swap\"></mat-icon>\r\n                        <span>{{ 'Swap' | translate }}</span>\r\n                    </button>\r\n                </li>\r\n            </ng-container>\r\n        </ng-container>\r\n\r\n        <ng-container *ngIf=\"isShowDeleteAsset()\">\r\n            <li class=\"item\">\r\n                <button (click)=\"beforeRemoveAsset()\" class=\"w-100 px-2 py-1\" type=\"button\">\r\n                    <mat-icon class=\"mr-1\" svgIcon=\"pdc-delete\"></mat-icon>\r\n                    <span>{{ 'ASSETS.DROP_DOWN_MENU.REMOVE_ASSET' | translate }}</span>\r\n                </button>\r\n            </li>\r\n        </ng-container>\r\n    </ul>\r\n</ng-template>\r\n","import { Component, inject, NgZone } from '@angular/core';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { NonNullableFormBuilder, ValidationErrors, Validators } from '@angular/forms';\r\nimport { AssetBalance, AssetInfo } from '@api/models/assets.model';\r\nimport BigNumber from 'bignumber.js';\r\nimport { intToMoney } from '@parts/functions/int-to-money';\r\nimport { insuficcientFunds } from '@parts/utils/pdc-errors';\r\nimport { BackendService } from '@api/services/backend.service';\r\nimport { moneyToInt } from '@parts/functions/money-to-int';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n    selector: 'app-burn-custom-asset',\r\n    templateUrl: './burn-custom-asset.component.html',\r\n    styleUrls: ['./burn-custom-asset.component.scss'],\r\n})\r\nexport class BurnCustomAssetComponent {\r\n    public readonly variablesService: VariablesService = inject(VariablesService);\r\n\r\n    public readonly data: { asset_info: AssetInfo } = inject(MAT_DIALOG_DATA);\r\n\r\n    public readonly matDialogRef: MatDialogRef<BurnCustomAssetComponent> = inject(MatDialogRef);\r\n\r\n    private readonly _fb: NonNullableFormBuilder = inject(NonNullableFormBuilder);\r\n\r\n    public readonly form = this._fb.group({\r\n        amount: this._fb.control('', [\r\n            Validators.required,\r\n            (control): ValidationErrors | null => {\r\n                const { value: amount } = control;\r\n                const {\r\n                    asset_info: { asset_id },\r\n                } = this.data;\r\n                const { currentWallet, maximum_value } = this.variablesService;\r\n                const prepared_amount = new BigNumber(amount);\r\n                const assetBalance: AssetBalance | undefined = currentWallet.getBalanceByAssetId(asset_id);\r\n\r\n                if (!assetBalance) {\r\n                    return {\r\n                        asset_not_found: true,\r\n                    };\r\n                }\r\n\r\n                const {\r\n                    unlocked,\r\n                    asset_info: { decimal_point },\r\n                } = assetBalance;\r\n\r\n                const maximum_amount_by_decimal_point = intToMoney(maximum_value, decimal_point);\r\n                if (prepared_amount.isGreaterThan(maximum_amount_by_decimal_point)) {\r\n                    return { greater_than_maximum_amount: { max: maximum_amount_by_decimal_point } };\r\n                }\r\n\r\n                const preparedUnlocked = intToMoney(unlocked, decimal_point);\r\n                return prepared_amount.isGreaterThan(preparedUnlocked) ? { insuficcientFunds } : null;\r\n            },\r\n        ]),\r\n    });\r\n\r\n    private readonly _backendService: BackendService = inject(BackendService);\r\n\r\n    private readonly _ngZone: NgZone = inject(NgZone);\r\n\r\n    public submit(): void {\r\n        const { amount } = this.form.getRawValue();\r\n        const {\r\n            currentWallet: { wallet_id },\r\n        } = this.variablesService;\r\n        const {\r\n            asset_info: { asset_id, decimal_point },\r\n        } = this.data;\r\n\r\n        const params = {\r\n            burn_amount: moneyToInt(amount, decimal_point).toString(),\r\n            asset_id,\r\n        };\r\n\r\n        this._backendService.asyncCall2a(\r\n            'call_wallet_rpc',\r\n            wallet_id,\r\n            {\r\n                jsonrpc: '2.0',\r\n                id: 0,\r\n                method: 'burn_asset',\r\n                params,\r\n            },\r\n            (job_id: number): void => {\r\n                this._ngZone.run(() => {\r\n                    this.matDialogRef.close(job_id);\r\n                });\r\n            }\r\n        );\r\n    }\r\n}\r\n","<form (ngSubmit)=\"submit()\" [formGroup]=\"form\">\r\n    <h3 mat-dialog-title>\r\n        {{ 'Burn' | translate }}\r\n    </h3>\r\n\r\n    <mat-dialog-content>\r\n        <div class=\"form__field mb-0\">\r\n            <label for=\"amount\">\r\n                {{ 'Amount' | translate }}\r\n                <span class=\"color-red\">*</span>\r\n            </label>\r\n\r\n            <input\r\n                (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\r\n                [class.invalid]=\"form.controls.amount.touched && form.controls.amount.invalid\"\r\n                [decimalPoint]=\"data.asset_info.decimal_point\"\r\n                [placeholder]=\"'1000000' | translate\"\r\n                appInputValidate=\"money\"\r\n                autofocus\r\n                class=\"form__field--input\"\r\n                formControlName=\"amount\"\r\n                id=\"amount\"\r\n                name=\"amount\"\r\n                type=\"text\"\r\n            />\r\n\r\n            <div *ngIf=\"form.controls.amount.invalid && (form.controls.amount.touched || form.controls.amount.dirty)\" class=\"error\">\r\n                <div *ngIf=\"form.controls.amount.hasError('required')\">\r\n                    {{ 'ERRORS.REQUIRED' | translate }}\r\n                </div>\r\n                <div *ngIf=\"form.controls.amount.hasError('insuficcientFunds')\">\r\n                    {{ form.controls.amount.errors['insuficcientFunds'].errorText | translate }}\r\n                </div>\r\n                <div *ngIf=\"form.controls.amount.hasError('asset_not_found')\">\r\n                    {{ 'ERRORS.ASSET_NOT_FOUND' | translate }}\r\n                </div>\r\n                <div *ngIf=\"form.controls.amount.hasError('greater_than_maximum_amount')\">\r\n                    {{ 'ERRORS.MAX' | translate : { max: form.controls.amount.errors['greater_than_maximum_amount'].max } }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </mat-dialog-content>\r\n\r\n    <mat-dialog-actions>\r\n        <div fxFlex=\"1 1 auto\" fxLayout=\"row nowrap\" fxLayoutGap=\"1rem\">\r\n            <button mat-dialog-close class=\"outline big w-100\" type=\"button\">\r\n                {{ 'Cancel' | translate }}\r\n            </button>\r\n            <button [disabled]=\"form.invalid\" class=\"primary big w-100\" type=\"submit\">\r\n                {{ 'Confirm' | translate }}\r\n            </button>\r\n        </div>\r\n    </mat-dialog-actions>\r\n</form>\r\n","import { Component, inject } from '@angular/core';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { NonNullableFormBuilder } from '@angular/forms';\r\nimport { PdcValidators } from '@parts/utils/pdc-validators';\r\nimport { DeployAssetParams } from '@api/models/custom-asstest.model';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n    selector: 'app-confirm-create-custom-asset',\r\n    templateUrl: './confirm-create-custom-asset.component.html',\r\n    styleUrls: ['./confirm-create-custom-asset.component.scss'],\r\n})\r\nexport class ConfirmCreateCustomAssetComponent {\r\n    public readonly variablesService: VariablesService = inject(VariablesService);\r\n\r\n    public readonly data: { asset_descriptor: DeployAssetParams['asset_descriptor'] } = inject(MAT_DIALOG_DATA);\r\n\r\n    private readonly fb: NonNullableFormBuilder = inject(NonNullableFormBuilder);\r\n\r\n    public readonly confirmForm = this.fb.group(\r\n        {\r\n            password: this.fb.control(''),\r\n            appPass: this.fb.control(this.variablesService.appPass || ''),\r\n        },\r\n        { validators: [PdcValidators.formMatch('password', 'appPass', 'passwordNotMatch')] }\r\n    );\r\n}\r\n","<form [formGroup]=\"confirmForm\">\r\n    <h3 mat-dialog-title>\r\n        {{ 'CONFIRM_CREATE_CUSTOM_ASSET.TITLE' | translate }}\r\n    </h3>\r\n\r\n    <mat-dialog-content>\r\n        <div class=\"table-info mb-2\">\r\n            <div class=\"row\">\r\n                <div class=\"label max-w-19-rem w-100\">\r\n                    {{ 'CONFIRM_CREATE_CUSTOM_ASSET.TABLE.LABEL1' | translate }}\r\n                </div>\r\n                <div class=\"text\">\r\n                    {{ data.asset_descriptor.ticker }}\r\n                </div>\r\n            </div>\r\n\r\n            <hr class=\"separator\" />\r\n\r\n            <div class=\"row\">\r\n                <div class=\"label max-w-19-rem w-100\">\r\n                    {{ 'CONFIRM_CREATE_CUSTOM_ASSET.TABLE.LABEL2' | translate }}\r\n                </div>\r\n                <div class=\"text\">\r\n                    {{ data.asset_descriptor.full_name }}\r\n                </div>\r\n            </div>\r\n\r\n            <hr class=\"separator\" />\r\n\r\n            <div class=\"row\">\r\n                <div class=\"label max-w-19-rem w-100\">\r\n                    {{ 'CONFIRM_CREATE_CUSTOM_ASSET.TABLE.LABEL3' | translate }}\r\n                </div>\r\n                <div class=\"text\">\r\n                    {{ data.asset_descriptor.total_max_supply | intToMoney : data.asset_descriptor.decimal_point }}\r\n                </div>\r\n            </div>\r\n\r\n            <hr class=\"separator\" />\r\n\r\n            <div class=\"row\">\r\n                <div class=\"label max-w-19-rem w-100\">\r\n                    {{ 'CONFIRM_CREATE_CUSTOM_ASSET.TABLE.LABEL4' | translate }}\r\n                </div>\r\n                <div class=\"text\">\r\n                    {{ data.asset_descriptor.current_supply | intToMoney : data.asset_descriptor.decimal_point }}\r\n                </div>\r\n            </div>\r\n\r\n            <hr class=\"separator\" />\r\n\r\n            <div class=\"row\">\r\n                <div class=\"label max-w-19-rem w-100\">\r\n                    {{ 'CONFIRM_CREATE_CUSTOM_ASSET.TABLE.LABEL5' | translate }}\r\n                </div>\r\n                <div class=\"text\">\r\n                    {{ data.asset_descriptor.decimal_point }}\r\n                </div>\r\n            </div>\r\n\r\n            <hr class=\"separator\" />\r\n\r\n            <div class=\"row\">\r\n                <div class=\"label max-w-19-rem w-100\">\r\n                    {{ 'CONFIRM_CREATE_CUSTOM_ASSET.TABLE.LABEL6' | translate }}\r\n                </div>\r\n                <div class=\"text\">\r\n                    {{ data.asset_descriptor.meta_info }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div *ngIf=\"variablesService.appPass\" class=\"form__field mb-0\">\r\n            <label for=\"password\">\r\n                {{ 'LOGIN.MASTER_PASS' | translate }}\r\n                <span class=\"color-red\">*</span>\r\n            </label>\r\n            <input\r\n                (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\r\n                [class.invalid]=\"confirmForm.touched && confirmForm.invalid\"\r\n                [placeholder]=\"'PLACEHOLDERS.MASTER_PASS_PLACEHOLDER' | translate\"\r\n                autofocus\r\n                class=\"form__field--input\"\r\n                formControlName=\"password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n            />\r\n            <div *ngIf=\"confirmForm.touched && confirmForm.invalid\" class=\"error\">\r\n                <div *ngIf=\"confirmForm.hasError('passwordNotMatch')\">\r\n                    {{ 'LOGIN.FORM_ERRORS.WRONG_PASSWORD' | translate }}\r\n                </div>\r\n                <div *ngIf=\"confirmForm.controls.password.hasError('required')\">\r\n                    {{ 'LOGIN.FORM_ERRORS.PASS_REQUIRED' | translate }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </mat-dialog-content>\r\n\r\n    <mat-dialog-actions>\r\n        <div fxFlex=\"1 1 auto\" fxLayout=\"row nowrap\" fxLayoutGap=\"1rem\">\r\n            <button [mat-dialog-close]=\"false\" class=\"outline big w-100\" type=\"button\">\r\n                {{ 'CONFIRM_CREATE_CUSTOM_ASSET.BUTTONS.BUTTON1' | translate }}\r\n            </button>\r\n            <button [mat-dialog-close]=\"true\" [disabled]=\"confirmForm.invalid\" class=\"primary big w-100\"\r\n                    type=\"submit\">\r\n                {{ 'CONFIRM_CREATE_CUSTOM_ASSET.BUTTONS.BUTTON2' | translate }}\r\n            </button>\r\n        </div>\r\n    </mat-dialog-actions>\r\n</form>\r\n","import { Component, inject, NgZone } from '@angular/core';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { NonNullableFormBuilder, ValidationErrors, Validators } from '@angular/forms';\r\nimport { AssetInfo } from '@api/models/assets.model';\r\nimport { EmitParams } from '@api/models/custom-asstest.model';\r\nimport { BackendService } from '@api/services/backend.service';\r\nimport { intToMoney } from '@parts/functions/int-to-money';\r\nimport BigNumber from 'bignumber.js';\r\nimport { moneyToInt } from '@parts/functions/money-to-int';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n    selector: 'app-emit-custom-asset',\r\n    templateUrl: './emit-custom-asset.component.html',\r\n    styleUrls: ['./emit-custom-asset.component.scss'],\r\n})\r\nexport class EmitCustomAssetComponent {\r\n    public readonly variablesService: VariablesService = inject(VariablesService);\r\n\r\n    public readonly data: { asset_info: AssetInfo } = inject(MAT_DIALOG_DATA);\r\n\r\n    public readonly matDialogRef: MatDialogRef<EmitCustomAssetComponent> = inject(MatDialogRef);\r\n\r\n    private readonly _backendService: BackendService = inject(BackendService);\r\n\r\n    private readonly _fb: NonNullableFormBuilder = inject(NonNullableFormBuilder);\r\n\r\n    public readonly form = this._fb.group({\r\n        amount: this._fb.control('', [\r\n            Validators.required,\r\n            (control): ValidationErrors | null => {\r\n                const {\r\n                    asset_info: { total_max_supply, current_supply, decimal_point },\r\n                } = this.data;\r\n                const { value: amount } = control;\r\n\r\n                const prepared_total_max_supply: BigNumber = new BigNumber(intToMoney(total_max_supply, decimal_point));\r\n                const prepared_current_supply: BigNumber = new BigNumber(intToMoney(current_supply, decimal_point));\r\n                if (prepared_current_supply.plus(amount).isGreaterThan(prepared_total_max_supply)) {\r\n                    return { greater_than_total_max_supply: { max: prepared_total_max_supply.toString() } };\r\n                }\r\n                return null;\r\n            },\r\n        ]),\r\n    });\r\n\r\n    private _ngZone: NgZone = inject(NgZone);\r\n\r\n    public submit(): void {\r\n        const {\r\n            currentWallet: { wallet_id, address },\r\n        } = this.variablesService;\r\n        const {\r\n            asset_info: { asset_id, decimal_point },\r\n        } = this.data;\r\n        const { amount } = this.form.getRawValue();\r\n        const params: EmitParams = {\r\n            asset_id,\r\n            destinations: [\r\n                {\r\n                    address,\r\n                    amount: moneyToInt(amount, decimal_point).toString(),\r\n                    asset_id: '0000000000000000000000000000000000000000000000000000000000000000',\r\n                },\r\n            ],\r\n        };\r\n\r\n        this._backendService.asyncCall2a(\r\n            'call_wallet_rpc',\r\n            wallet_id,\r\n            {\r\n                jsonrpc: '2.0',\r\n                id: 0,\r\n                method: 'emit_asset',\r\n                params,\r\n            },\r\n            async (job_id: number): Promise<void> => {\r\n                this._ngZone.run(() => {\r\n                    this.matDialogRef.close(job_id);\r\n                });\r\n            }\r\n        );\r\n    }\r\n}\r\n","<form (ngSubmit)=\"submit()\" [formGroup]=\"form\">\r\n    <h3 mat-dialog-title>\r\n        {{ 'Emit' | translate }}\r\n    </h3>\r\n\r\n    <mat-dialog-content>\r\n        <div class=\"form__field mb-0\">\r\n            <label for=\"amount\">\r\n                {{ 'Amount' | translate }}\r\n                <span class=\"color-red\">*</span>\r\n            </label>\r\n            <input\r\n                (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\r\n                [class.invalid]=\"form.controls.amount.touched && form.controls.amount.invalid\"\r\n                [decimalPoint]=\"data.asset_info.decimal_point\"\r\n                [placeholder]=\"'1000000' | translate\"\r\n                appInputValidate=\"money\"\r\n                autofocus\r\n                class=\"form__field--input\"\r\n                formControlName=\"amount\"\r\n                id=\"amount\"\r\n                name=\"amount\"\r\n                type=\"text\"\r\n            />\r\n            <div *ngIf=\"form.controls.amount.touched && form.controls.amount.invalid\" class=\"error\">\r\n                <div *ngIf=\"form.controls.amount.hasError('required')\">\r\n                    {{ 'ERRORS.REQUIRED' | translate }}\r\n                </div>\r\n                <div *ngIf=\"form.controls.amount.hasError('greater_than_total_max_supply')\">\r\n                    {{ 'ERRORS.GREATER_THAN_TOTAL_MAX_SUPPLY' | translate }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </mat-dialog-content>\r\n\r\n    <mat-dialog-actions>\r\n        <div fxFlex=\"1 1 auto\" fxLayout=\"row nowrap\" fxLayoutGap=\"1rem\">\r\n            <button mat-dialog-close class=\"outline big w-100\" type=\"button\">\r\n                {{ 'Cancel' | translate }}\r\n            </button>\r\n            <button [disabled]=\"form.invalid\" class=\"primary big w-100\" type=\"submit\">\r\n                {{ 'Confirm' | translate }}\r\n            </button>\r\n        </div>\r\n    </mat-dialog-actions>\r\n</form>\r\n","import { Component, ElementRef, inject, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { AsyncCommandResults, BackendService } from '@api/services/backend.service';\r\nimport { Subject } from 'rxjs';\r\nimport { filter, takeUntil } from 'rxjs/operators';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { BLOCK_EXPLORER_TN_TX_URL_PREFIX, BLOCK_EXPLORER_TX_URL_PREFIX } from '@parts/data/constants';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\n\r\n@Component({\r\n    selector: 'app-transaction-details-for-custom-assets',\r\n    templateUrl: './transaction-details-for-custom-assets.component.html',\r\n    styleUrls: ['./transaction-details-for-custom-assets.component.scss'],\r\n})\r\nexport class TransactionDetailsForCustomAssetsComponent implements OnInit, OnDestroy {\r\n    public status: 'loading' | 'success' | 'error' = 'loading';\r\n\r\n    public data: { job_id: number } = inject(MAT_DIALOG_DATA);\r\n\r\n    public details: { new_asset_id: string; result_tx: string };\r\n\r\n    public error: any;\r\n\r\n    @ViewChild('elDetailsList', { static: true }) elDetailsList: ElementRef;\r\n\r\n    public isShowDetailsState: boolean = false;\r\n\r\n    public variablesService: VariablesService = inject(VariablesService);\r\n\r\n    private _backendService: BackendService = inject(BackendService);\r\n\r\n    private _destroy$: Subject<void> = new Subject<void>();\r\n\r\n    ngOnInit(): void {\r\n        this._backendService.dispatchAsyncCallResult$\r\n            .pipe(\r\n                filter(Boolean),\r\n                filter(({ job_id }: AsyncCommandResults) => this.data.job_id === job_id),\r\n                takeUntil(this._destroy$)\r\n            )\r\n            .subscribe({\r\n                next: ({ response }) => {\r\n                    if (response.error) {\r\n                        this.status = 'error';\r\n                        this.error = response.error;\r\n                    } else {\r\n                        this.status = 'success';\r\n                        this.details = response.result;\r\n                    }\r\n                },\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._destroy$.next();\r\n        this._destroy$.complete();\r\n    }\r\n\r\n    toggleDetails(): void {\r\n        this.isShowDetailsState = !this.isShowDetailsState;\r\n        setTimeout(() => this.scrollToBottomDetailsList(), 100);\r\n    }\r\n\r\n    private scrollToBottomDetailsList(): void {\r\n        if (this.elDetailsList) {\r\n            const { nativeElement } = this.elDetailsList;\r\n            nativeElement.scrollTop = nativeElement.scrollHeight;\r\n        }\r\n    }\r\n\r\n    openInBrowser(hash: string): void {\r\n        this._backendService.openUrlInBrowser(\r\n            (this.variablesService.testnet ? BLOCK_EXPLORER_TN_TX_URL_PREFIX : BLOCK_EXPLORER_TX_URL_PREFIX) + hash\r\n        );\r\n    }\r\n}\r\n","<h3 mat-dialog-title>\r\n    {{ 'SEND_DETAILS_MODAL.TITLE1' | translate }}\r\n</h3>\r\n\r\n<mat-dialog-content fxLayout=\"column\">\r\n    <div class=\"status mb-2\" fxFlex=\"0 0 auto\" fxLayout=\"column\" fxLayoutAlign=\" center\">\r\n        <div *ngIf=\"status === 'success'\" class=\"image\">\r\n            <img alt=\"success\" src=\"assets/icons/aqua/transaction_success.svg\" />\r\n        </div>\r\n\r\n        <div *ngIf=\"status === 'error'\" class=\"image\">\r\n            <img alt=\"failed\" class=\"image\" src=\"assets/icons/red/transaction_failed.svg\" />\r\n        </div>\r\n\r\n        <div *ngIf=\"status === 'loading'\" class=\"loader\"></div>\r\n\r\n        <p class=\"color-primary mt-2\">\r\n            {{\r\n                {\r\n                    success: 'TOR_LIB_STATE.STATE_SENT_SUCCESS',\r\n                    error: 'TOR_LIB_STATE.STATE_SEND_FAILED',\r\n                    loading: 'Loading...'\r\n                }[status] | translate\r\n            }}\r\n        </p>\r\n    </div>\r\n\r\n    <div *ngIf=\"details || error\" class=\"details border-radius-0_8-rem overflow-hidden\" fxFlex=\"0 0 auto\"\r\n         fxLayout=\"column\">\r\n        <div\r\n            (click)=\"toggleDetails()\"\r\n            class=\"header overflow-hidden py-1 px-2 w-100 cursor-pointer\"\r\n            fxLayout=\"row\"\r\n            fxLayoutAlign=\"space-between center\"\r\n        >\r\n            <p class=\"title text-ellipsis mr-2\">\r\n                {{ 'SEND_DETAILS_MODAL.TITLE2' | translate }}\r\n            </p>\r\n            <button fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                <mat-icon\r\n                    class=\"ml-1\"\r\n                    svgIcon=\"pdc-dropdown-arrow-down\"\r\n                    [ngClass]=\"{\r\n                        'rotate-180': isShowDetailsState\r\n                    }\"\r\n                ></mat-icon>\r\n            </button>\r\n        </div>\r\n        <div\r\n            [class.px-2]=\"isShowDetailsState\"\r\n            [class.py-1]=\"isShowDetailsState\"\r\n            [fxHide]=\"!isShowDetailsState\"\r\n            class=\"details-wrapper\"\r\n            fxFlex=\"1 1 auto\"\r\n            fxLayout=\"row\"\r\n        >\r\n            <ul #elDetailsList class=\"details-list scrolled-content\">\r\n                <ng-container *ngIf=\"details\">\r\n                    <ng-container *ngIf=\"details.new_asset_id as new_asset_id\">\r\n                        <li class=\"item mb-1 color-primary\" fxLayout=\"row nowrap\" fxLayoutAlign=\"start center\">\r\n                            <span class=\"text word-break-break-all\">\r\n                                New asset id: {{ new_asset_id || '---' }}\r\n                            </span>\r\n                            <app-copy-button [value]=\"new_asset_id\" class=\"ml-1\">\r\n                            </app-copy-button>\r\n                        </li>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"details.result_tx as result_tx\">\r\n                        <li class=\"item mb-1 color-primary\" fxLayout=\"row nowrap\" fxLayoutAlign=\"start center\">\r\n                            <span class=\"text word-break-break-all cursor-pointer\" (click)=\"openInBrowser(result_tx)\">\r\n                                Result tx: {{ result_tx }}\r\n                            </span>\r\n                            <app-copy-button [value]=\"result_tx\" class=\"ml-1\">\r\n                            </app-copy-button>\r\n                        </li>\r\n                    </ng-container>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"error\">\r\n                    <li class=\"item mb-1 color-red\" fxLayout=\"row nowrap\" fxLayoutAlign=\"start center\">\r\n                        <span class=\"text word-break-break-all\">\r\n                            Error: {{ error.message || 'Ops... Unknown error...' }}\r\n                        </span>\r\n                    </li>\r\n                </ng-container>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions>\r\n    <div fxFlex=\"1 1 auto\" fxLayout=\"row nowrap\" fxLayoutGap=\"1rem\">\r\n        <button [mat-dialog-close]=\"status === 'success'\" class=\"outline big w-100\" type=\"button\">\r\n            {{ 'MODALS.OK' | translate }}\r\n        </button>\r\n    </div>\r\n</mat-dialog-actions>\r\n","import { Component, inject, NgZone } from '@angular/core';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { NonNullableFormBuilder, ValidationErrors, Validators } from '@angular/forms';\r\nimport { AssetInfo } from '@api/models/assets.model';\r\nimport { BackendService } from '@api/services/backend.service';\r\nimport { UpdateAssetParams } from '@api/models/custom-asstest.model';\r\nimport { regExpHex } from '@parts/utils/pdc-validators';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n    selector: 'app-update-custom-asset',\r\n    templateUrl: './update-custom-asset.component.html',\r\n    styleUrls: ['./update-custom-asset.component.scss'],\r\n})\r\nexport class UpdateCustomAssetComponent {\r\n    public readonly variablesService: VariablesService = inject(VariablesService);\r\n    public readonly data: { asset_info: AssetInfo } = inject(MAT_DIALOG_DATA);\r\n    public readonly matDialogRef: MatDialogRef<UpdateCustomAssetComponent> = inject(MatDialogRef);\r\n    private readonly _backendService: BackendService = inject(BackendService);\r\n    private readonly fb: NonNullableFormBuilder = inject(NonNullableFormBuilder);\r\n    private _ngZone: NgZone = inject(NgZone);\r\n    public readonly form = this.fb.group({\r\n        owner: this.fb.control('', [\r\n            Validators.required,\r\n            (control): ValidationErrors | null => {\r\n                if (control.value.length === 64) {\r\n                    if (!regExpHex.test(control.value)) {\r\n                        return { hex_not_valid: true };\r\n                    } else {\r\n                        return null;\r\n                    }\r\n                }\r\n\r\n                if (control.value) {\r\n                    this._backendService.validateAddress(control.value, (status, data) => {\r\n                        this._ngZone.run(() => {\r\n                            if (status === false) {\r\n                                control.setErrors(Object.assign({ address_not_valid: true }, control.errors));\r\n                            } else {\r\n                                if (control.hasError('address_not_valid')) {\r\n                                    delete control.errors['address_not_valid'];\r\n                                    if (Object.keys(control.errors).length === 0) {\r\n                                        control.setErrors(null);\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                    });\r\n                    return control.hasError('address_not_valid') ? { address_not_valid: true } : null;\r\n                }\r\n\r\n                return null;\r\n            },\r\n        ]),\r\n    });\r\n\r\n    public submit(): void {\r\n        const { wallet_id } = this.variablesService.currentWallet;\r\n        const { asset_id } = this.data.asset_info;\r\n        const { owner } = this.form.getRawValue();\r\n        const params: UpdateAssetParams = {\r\n            asset_id,\r\n            asset_descriptor: {\r\n                owner,\r\n            },\r\n        };\r\n\r\n        this._backendService.asyncCall2a(\r\n            'call_wallet_rpc',\r\n            wallet_id,\r\n            {\r\n                jsonrpc: '2.0',\r\n                id: 0,\r\n                method: 'update_asset',\r\n                params,\r\n            },\r\n            async (job_id: number): Promise<void> => {\r\n                this._ngZone.run(() => {\r\n                    this.matDialogRef.close(job_id);\r\n                });\r\n            }\r\n        );\r\n    }\r\n}\r\n","<form (ngSubmit)=\"submit()\" [formGroup]=\"form\">\r\n    <h3 mat-dialog-title>\r\n        {{ 'Update asset' | translate }}\r\n    </h3>\r\n    <mat-dialog-content>\r\n        <div class=\"form__field mb-0\">\r\n            <label for=\"owner\">\r\n                {{ 'Owner' | translate }}\r\n                <span class=\"color-red\">*</span>\r\n            </label>\r\n            <input\r\n                (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\r\n                [class.invalid]=\"form.controls.owner.touched && form.controls.owner.invalid\"\r\n                [placeholder]=\"'Owner' | translate\"\r\n                autofocus\r\n                class=\"form__field--input\"\r\n                formControlName=\"owner\"\r\n                id=\"owner\"\r\n                name=\"owner\"\r\n                type=\"text\"\r\n            />\r\n            <div *ngIf=\"form.controls.owner.invalid && (form.controls.owner.touched || form.controls.owner.dirty)\" class=\"error\">\r\n                <div *ngIf=\"form.controls.owner.hasError('required')\">\r\n                    {{ 'ERRORS.REQUIRED' | translate }}\r\n                </div>\r\n                <div *ngIf=\"form.controls.owner.hasError('hex_not_valid')\">\r\n                    {{ 'ERRORS.HEX_NOT_VALID' | translate }}\r\n                </div>\r\n                <div *ngIf=\"form.controls.owner.hasError('address_not_valid')\">\r\n                    {{ 'ERRORS.ADDRESS_NOT_VALID' | translate }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </mat-dialog-content>\r\n\r\n    <mat-dialog-actions>\r\n        <div fxFlex=\"1 1 auto\" fxLayout=\"row nowrap\" fxLayoutGap=\"1rem\">\r\n            <button mat-dialog-close class=\"outline big w-100\" type=\"button\">\r\n                {{ 'Cancel' | translate }}\r\n            </button>\r\n            <button [disabled]=\"form.invalid\" class=\"primary big w-100\" type=\"submit\">\r\n                {{ 'Confirm' | translate }}\r\n            </button>\r\n        </div>\r\n    </mat-dialog-actions>\r\n</form>\r\n","import { Component, inject, NgZone } from '@angular/core';\r\nimport { BreadcrumbItems } from '@parts/components/breadcrumbs/breadcrumbs.models';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { AbstractControl, FormControl, FormGroup, NonNullableFormBuilder, ValidationErrors, Validators } from '@angular/forms';\r\nimport { ConfirmCreateCustomAssetComponent } from '../../modals/confirm-create-custom-asset/confirm-create-custom-asset.component';\r\nimport { AssetDescriptor, DeployAssetParams, Destinations } from '@api/models/custom-asstest.model';\r\nimport { filter, take } from 'rxjs/operators';\r\nimport { BackendService } from '@api/services/backend.service';\r\nimport { Router } from '@angular/router';\r\nimport { BigNumber } from 'bignumber.js';\r\nimport { intToMoney } from '@parts/functions/int-to-money';\r\nimport { moneyToInt } from '@parts/functions/money-to-int';\r\nimport { TransactionDetailsForCustomAssetsComponent } from '../../modals/transaction-details-for-custom-assets/transaction-details-for-custom-assets.component';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\n\r\ntype CreateNewAssetFrom = FormGroup<{\r\n    ticker: FormControl<string>;\r\n    full_name: FormControl<string>;\r\n    total_max_supply: FormControl<string>;\r\n    current_supply: FormControl<string>;\r\n    decimal_point: FormControl<string>;\r\n    meta_info: FormControl<string>;\r\n    hidden_supply: FormControl<boolean>;\r\n}>;\r\n\r\n@Component({\r\n    selector: 'app-create-new-asset',\r\n    templateUrl: './create-new-asset.component.html',\r\n    styleUrls: ['./create-new-asset.component.scss'],\r\n})\r\nexport class CreateNewAssetComponent {\r\n    public readonly breadcrumbItems: BreadcrumbItems = [\r\n        {\r\n            routerLink: '/custom-assets',\r\n            title: 'CREATE_NEW_ASSETS.BREADCRUMBS.BREADCRUMB1',\r\n        },\r\n        {\r\n            title: 'CREATE_NEW_ASSETS.BREADCRUMBS.BREADCRUMB2',\r\n        },\r\n    ];\r\n\r\n    public readonly variablesService: VariablesService = inject(VariablesService);\r\n\r\n    private readonly _backendService: BackendService = inject(BackendService);\r\n\r\n    private readonly _fb: NonNullableFormBuilder = inject(NonNullableFormBuilder);\r\n\r\n    public form: CreateNewAssetFrom = this._fb.group(\r\n        {\r\n            ticker: this._fb.control<string>('', [\r\n                Validators.required,\r\n                Validators.pattern(/^[A-Za-z0-9]+$/),\r\n                Validators.minLength(1),\r\n                Validators.maxLength(14),\r\n            ]),\r\n            full_name: this._fb.control<string>('', [\r\n                Validators.pattern(/^[A-Za-z0-9.,:!\\-() ]+$/),\r\n                Validators.minLength(0),\r\n                Validators.maxLength(400),\r\n            ]),\r\n            total_max_supply: this._fb.control<string>(undefined, [Validators.required]),\r\n            current_supply: this._fb.control<string>(undefined, [Validators.required]),\r\n            decimal_point: this._fb.control<string>('12', [Validators.required, Validators.min(0), Validators.max(18)]),\r\n            meta_info: this._fb.control<string>('', [Validators.maxLength(255)]),\r\n            hidden_supply: this._fb.control<boolean>(false),\r\n        },\r\n        {\r\n            validators: [\r\n                (control: AbstractControl) => {\r\n                    const error = {\r\n                        current_supply: 'ERRORS.CANNOT_BE_GREATER_THAN_TOTAL_MAX_SUPPLY',\r\n                    };\r\n                    const total_max_supply = new BigNumber(control.get('total_max_supply').value);\r\n                    const current_supply = new BigNumber(control.get('current_supply').value);\r\n\r\n                    if (total_max_supply.isLessThan(current_supply)) {\r\n                        return error;\r\n                    }\r\n\r\n                    return null;\r\n                },\r\n                (control: AbstractControl): ValidationErrors => {\r\n                    const { maximum_value } = this.variablesService;\r\n                    const { value: decimal_point } = control.get('decimal_point');\r\n                    const { value: total_max_supply } = control.get('total_max_supply');\r\n\r\n                    const prepared_total_max_supply = new BigNumber(total_max_supply);\r\n                    const max = new BigNumber(intToMoney(maximum_value, +decimal_point || 0));\r\n                    const error = { greater_than_max: { max: max.toString() } };\r\n\r\n                    if (prepared_total_max_supply.isGreaterThan(max)) {\r\n                        return error;\r\n                    }\r\n\r\n                    return null;\r\n                },\r\n            ],\r\n        }\r\n    );\r\n\r\n    private readonly _router: Router = inject(Router);\r\n\r\n    private readonly _matDialog: MatDialog = inject(MatDialog);\r\n\r\n    private readonly _ngZone: NgZone = inject(NgZone);\r\n\r\n    details(job_id: number): void {\r\n        const config: MatDialogConfig = {\r\n            data: {\r\n                job_id,\r\n            },\r\n            disableClose: true,\r\n        };\r\n        this._matDialog\r\n            .open(TransactionDetailsForCustomAssetsComponent, config)\r\n            .afterClosed()\r\n            .pipe(filter(Boolean), take(1))\r\n            .subscribe({\r\n                next: async () => {\r\n                    await this._ngZone.run(async () => {\r\n                        await this._router.navigate(['/wallet/custom-assets']);\r\n                    });\r\n                },\r\n            });\r\n    }\r\n\r\n    submit(): void {\r\n        const { address, wallet_id } = this.variablesService.currentWallet;\r\n        const { ticker, full_name, meta_info, hidden_supply, current_supply, total_max_supply, decimal_point } = this.form.getRawValue();\r\n\r\n        let countDestination = 1;\r\n        let destinationAmount: string = moneyToInt(current_supply, decimal_point).toString();\r\n        const halfDestinationAmount: string = new BigNumber(destinationAmount).div(2).toString();\r\n\r\n        if (\r\n            !halfDestinationAmount.includes('.') &&\r\n            new BigNumber(halfDestinationAmount).plus(halfDestinationAmount).eq(destinationAmount)\r\n        ) {\r\n            countDestination = 2;\r\n            destinationAmount = halfDestinationAmount;\r\n        }\r\n\r\n        const asset_descriptor: AssetDescriptor = {\r\n            ticker,\r\n            full_name,\r\n            meta_info,\r\n            hidden_supply,\r\n            decimal_point: new BigNumber(decimal_point).toNumber(),\r\n            total_max_supply: moneyToInt(total_max_supply, decimal_point).toString(),\r\n        };\r\n        const destinations: Destinations = [];\r\n\r\n        for (let i = 0; i < countDestination; i++) {\r\n            destinations.push({\r\n                address,\r\n                amount: destinationAmount,\r\n                asset_id: '0000000000000000000000000000000000000000000000000000000000000000',\r\n            });\r\n        }\r\n\r\n        const params: DeployAssetParams = {\r\n            asset_descriptor,\r\n            destinations,\r\n        };\r\n\r\n        const config: MatDialogConfig = {\r\n            disableClose: true,\r\n            data: {\r\n                asset_descriptor: {\r\n                    ...asset_descriptor,\r\n                    current_supply: moneyToInt(current_supply, decimal_point).toString(),\r\n                },\r\n            },\r\n        };\r\n        this._matDialog\r\n            .open(ConfirmCreateCustomAssetComponent, config)\r\n            .afterClosed()\r\n            .pipe(filter(Boolean), take(1))\r\n            .subscribe({\r\n                next: () => {\r\n                    this._backendService.asyncCall2a(\r\n                        'call_wallet_rpc',\r\n                        wallet_id,\r\n                        {\r\n                            jsonrpc: '2.0',\r\n                            id: 0,\r\n                            method: 'deploy_asset',\r\n                            params,\r\n                        },\r\n                        async (job_id: number): Promise<void> => {\r\n                            this._ngZone.run(() => this.details(job_id));\r\n                        }\r\n                    );\r\n                },\r\n            });\r\n    }\r\n}\r\n","<div class=\"scrolled-content\" fxFlex=\"1 1 auto\" fxLayout=\"column\">\r\n    <app-breadcrumbs [items]=\"breadcrumbItems\" class=\"mb-2\"></app-breadcrumbs>\r\n\r\n    <form (ngSubmit)=\"submit()\" [formGroup]=\"form\" class=\"form\" fxFlex=\"0 1 50rem\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n        <!-- ticker -->\r\n        <div class=\"form__field--row\">\r\n            <div class=\"form__field\">\r\n                <label for=\"ticker\">\r\n                    {{ 'CREATE_NEW_ASSETS.FORM.LABELS.LABEL1' | translate }}\r\n                    <span class=\"color-red\">*</span>\r\n                </label>\r\n                <input\r\n                    (contextmenu)=\"variablesService.onContextMenu($event)\"\r\n                    [placeholder]=\"'CT' | translate\"\r\n                    class=\"form__field--input\"\r\n                    formControlName=\"ticker\"\r\n                    id=\"ticker\"\r\n                    type=\"text\"\r\n                />\r\n                <div *ngIf=\"form.controls.ticker.invalid && (form.controls.ticker.dirty || form.controls.ticker.touched)\" class=\"error\">\r\n                    <div *ngIf=\"form.controls.ticker.errors['required']\">\r\n                        {{ 'ERRORS.REQUIRED' | translate }}\r\n                    </div>\r\n\r\n                    <div *ngIf=\"form.controls.ticker.errors['minlength'] as err\">\r\n                        {{ 'ERRORS.MIN_LENGTH' | translate : { requiredLength: err.requiredLength } }}\r\n                    </div>\r\n\r\n                    <div *ngIf=\"form.controls.ticker.errors['maxlength'] as err\">\r\n                        {{ 'ERRORS.MAX_LENGTH' | translate : { requiredLength: err.requiredLength } }}\r\n                    </div>\r\n\r\n                    <div *ngIf=\"form.controls.ticker.errors['pattern'] as err\">\r\n                        {{ 'ERRORS.INVALID_TICKER_PATTERN' | translate }}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form__field\">\r\n                <label for=\"full_name\">\r\n                    {{ 'CREATE_NEW_ASSETS.FORM.LABELS.LABEL2' | translate }}\r\n                    <span class=\"color-red\">*</span>\r\n                </label>\r\n                <input\r\n                    (contextmenu)=\"variablesService.onContextMenu($event)\"\r\n                    [placeholder]=\"'CREATE_NEW_ASSETS.FORM.PLACEHOLDERS.PLACEHOLDER1' | translate\"\r\n                    class=\"form__field--input\"\r\n                    formControlName=\"full_name\"\r\n                    id=\"full_name\"\r\n                    type=\"text\"\r\n                />\r\n                <div\r\n                    *ngIf=\"form.controls.full_name.invalid && (form.controls.full_name.dirty || form.controls.full_name.touched)\"\r\n                    class=\"error\"\r\n                >\r\n                    <div *ngIf=\"form.controls.full_name.errors['required']\">\r\n                        {{ 'ERRORS.REQUIRED' | translate }}\r\n                    </div>\r\n\r\n                    <div *ngIf=\"form.controls.full_name.errors['minlength'] as err\">\r\n                        {{ 'ERRORS.MIN_LENGTH' | translate : { requiredLength: err.requiredLength } }}\r\n                    </div>\r\n\r\n                    <div *ngIf=\"form.controls.full_name.errors['maxLength'] as err\">\r\n                        {{ 'ERRORS.MAX_LENGTH' | translate : { requiredLength: err.requiredLength } }}\r\n                    </div>\r\n\r\n                    <div *ngIf=\"form.controls.full_name.errors['pattern'] as err\">\r\n                        {{ 'ERRORS.INVALID_FULL_NAME_ASSET_PATTERN' | translate }}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- total_max_supply -->\r\n        <div class=\"form__field--row\">\r\n            <div class=\"form__field\">\r\n                <label for=\"total_max_supply\">\r\n                    {{ 'CREATE_NEW_ASSETS.FORM.LABELS.LABEL3' | translate }}\r\n                    <!--<span class=\"color-red\">*</span>-->\r\n                </label>\r\n                <input\r\n                    (contextmenu)=\"variablesService.onContextMenu($event)\"\r\n                    [placeholder]=\"'1000000000' | translate\"\r\n                    appInputValidate=\"money\"\r\n                    [decimalPoint]=\"+form.controls.decimal_point.value\"\r\n                    class=\"form__field--input\"\r\n                    formControlName=\"total_max_supply\"\r\n                    id=\"total_max_supply\"\r\n                    type=\"text\"\r\n                />\r\n                <div\r\n                    *ngIf=\"\r\n                        form.controls.total_max_supply.invalid &&\r\n                        (form.controls.total_max_supply.dirty || form.controls.total_max_supply.touched)\r\n                    \"\r\n                    class=\"error\"\r\n                >\r\n                    <span *ngIf=\"form.controls.total_max_supply.errors['required']\">\r\n                        {{ 'ERRORS.REQUIRED' | translate }}\r\n                    </span>\r\n                </div>\r\n\r\n                <div *ngIf=\"form.hasError('greater_than_max') && (form.dirty || form.touched)\" class=\"error\">\r\n                    {{ 'ERRORS.TO_BIG_TOTAL_SUPPLY' | translate }}\r\n                    {{ 'ERRORS.MAX' | translate : { max: form.errors['greater_than_max'].max } }}\r\n                </div>\r\n            </div>\r\n\r\n            <!-- current_supply -->\r\n            <div class=\"form__field\">\r\n                <label for=\"current_supply\">\r\n                    {{ 'CREATE_NEW_ASSETS.FORM.LABELS.LABEL4' | translate }}\r\n                    <span class=\"color-red\">*</span>\r\n                </label>\r\n                <input\r\n                    (contextmenu)=\"variablesService.onContextMenu($event)\"\r\n                    [placeholder]=\"'1000000000' | translate\"\r\n                    appInputValidate=\"money\"\r\n                    [decimalPoint]=\"+form.controls.decimal_point.value\"\r\n                    class=\"form__field--input\"\r\n                    formControlName=\"current_supply\"\r\n                    id=\"current_supply\"\r\n                    type=\"text\"\r\n                />\r\n                <div\r\n                    *ngIf=\"\r\n                        form.controls.current_supply.invalid && (form.controls.current_supply.dirty || form.controls.current_supply.touched)\r\n                    \"\r\n                    class=\"error\"\r\n                >\r\n                    <div *ngIf=\"form.controls.current_supply.errors['required']\">\r\n                        {{ 'ERRORS.REQUIRED' | translate }}\r\n                    </div>\r\n                </div>\r\n                <div *ngIf=\"form.hasError('current_supply') && (form.dirty || form.touched)\" class=\"error\">\r\n                    {{ form.errors['current_supply'] | translate }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- decimal_point -->\r\n        <div class=\"form__field\">\r\n            <label for=\"decimal_point\">\r\n                {{ 'CREATE_NEW_ASSETS.FORM.LABELS.LABEL5' | translate }}\r\n                <span class=\"color-red\">*</span>\r\n            </label>\r\n            <input\r\n                (contextmenu)=\"variablesService.onContextMenu($event)\"\r\n                [placeholder]=\"'12' | translate\"\r\n                appInputValidate=\"integer\"\r\n                class=\"form__field--input\"\r\n                formControlName=\"decimal_point\"\r\n                id=\"decimal_point\"\r\n                type=\"text\"\r\n            />\r\n            <div\r\n                *ngIf=\"form.controls.decimal_point.invalid && (form.controls.decimal_point.dirty || form.controls.decimal_point.touched)\"\r\n                class=\"error\"\r\n            >\r\n                <div *ngIf=\"form.controls.decimal_point.errors['required']\">\r\n                    {{ 'ERRORS.REQUIRED' | translate }}\r\n                </div>\r\n\r\n                <div *ngIf=\"form.controls.decimal_point.errors['min'] as error\">\r\n                    {{ 'ERRORS.MIN' | translate : { min: error.min } }}\r\n                </div>\r\n\r\n                <div *ngIf=\"form.controls.decimal_point.errors['max'] as error\">\r\n                    {{ 'ERRORS.MAX' | translate : { max: error.max } }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- meta_info -->\r\n        <div class=\"form__field textarea\">\r\n            <label for=\"meta_info\">\r\n                {{ 'CREATE_NEW_ASSETS.FORM.LABELS.LABEL6' | translate }}\r\n            </label>\r\n            <textarea\r\n                [placeholder]=\"'CREATE_NEW_ASSETS.FORM.PLACEHOLDERS.PLACEHOLDER2' | translate\"\r\n                formControlName=\"meta_info\"\r\n                id=\"meta_info\"\r\n            ></textarea>\r\n\r\n            <div\r\n                *ngIf=\"form.controls.meta_info.invalid && (form.controls.meta_info.dirty || form.controls.meta_info.touched)\"\r\n                class=\"error\"\r\n            >\r\n                <div *ngIf=\"form.controls.meta_info.errors['maxlength'] as err\">\r\n                    {{ 'ERRORS.MAX_LENGTH' | translate : { requiredLength: err.requiredLength } }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <button [disabled]=\"form.invalid\" class=\"primary big max-w-19-rem w-100\" type=\"submit\">\r\n            {{ 'CREATE_NEW_ASSETS.FORM.BUTTONS.BUTTON1' | translate }}\r\n        </button>\r\n    </form>\r\n</div>\r\n","import { Component, inject, OnInit } from '@angular/core';\r\nimport { PaginatePipeArgs } from 'ngx-pagination';\r\nimport { CdkOverlayOrigin, ConnectedPosition } from '@angular/cdk/overlay';\r\nimport { AssetInfo } from '@api/models/assets.model';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { WalletsService } from '@parts/services/wallets.service';\r\nimport { AssetDetailsComponent } from '@parts/modals/asset-details/asset-details.component';\r\nimport { UpdateCustomAssetComponent } from '../../modals/update-custom-asset/update-custom-asset.component';\r\nimport { BurnCustomAssetComponent } from '../../modals/burn-custom-asset/burn-custom-asset.component';\r\nimport { EmitCustomAssetComponent } from '../../modals/emit-custom-asset/emit-custom-asset.component';\r\nimport { filter, switchMap } from 'rxjs/operators';\r\nimport { TransactionDetailsForCustomAssetsComponent } from '../../modals/transaction-details-for-custom-assets/transaction-details-for-custom-assets.component';\r\nimport { Observable, take } from 'rxjs';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\n\r\n@Component({\r\n    selector: 'app-custom-assets',\r\n    templateUrl: './custom-assets.component.html',\r\n    styleUrls: ['./custom-assets.component.scss'],\r\n})\r\nexport class CustomAssetsComponent implements OnInit {\r\n    paginationId: string = 'pagination-custom-assets-id';\r\n\r\n    triggerOrigin: CdkOverlayOrigin | undefined;\r\n\r\n    currentAssetInfo: AssetInfo | undefined;\r\n\r\n    isOpenDropDownMenu: boolean = false;\r\n\r\n    connectedOverlayPositions: ConnectedPosition[] = [\r\n        {\r\n            originX: 'end',\r\n            originY: 'top',\r\n            overlayX: 'end',\r\n            overlayY: 'top',\r\n            offsetY: 30,\r\n        },\r\n    ];\r\n    paginateArgs: PaginatePipeArgs = {\r\n        id: this.paginationId,\r\n        itemsPerPage: 10,\r\n        currentPage: 1,\r\n    };\r\n\r\n    public variablesService: VariablesService = inject(VariablesService);\r\n\r\n    private readonly _matDialog: MatDialog = inject(MatDialog);\r\n\r\n    private readonly _walletsService: WalletsService = inject(WalletsService);\r\n\r\n    get assets(): AssetInfo[] {\r\n        return this._walletsService.currentWallet?.assetsInfoWhitelist?.own_assets ?? [];\r\n    }\r\n\r\n    get isShowPagination(): boolean {\r\n        const { currentWallet } = this.variablesService;\r\n        if (!currentWallet) {\r\n            return false;\r\n        }\r\n        const {\r\n            assetsInfoWhitelist: { own_assets },\r\n        } = currentWallet;\r\n        return own_assets?.length > this.paginateArgs.itemsPerPage;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this._loadAssets();\r\n    }\r\n\r\n    toggleDropDownMenu(trigger: CdkOverlayOrigin, asset: AssetInfo): void {\r\n        this.isOpenDropDownMenu = !this.isOpenDropDownMenu;\r\n        this.triggerOrigin = trigger;\r\n        this.currentAssetInfo = asset;\r\n    }\r\n\r\n    closeDropDownMenu(): void {\r\n        this.isOpenDropDownMenu = false;\r\n    }\r\n\r\n    trackByAssets(index: number): number | string {\r\n        return index;\r\n    }\r\n\r\n    trackByPages(index: number): number | string {\r\n        return index;\r\n    }\r\n\r\n    openDialog(type: 'assetDetails' | 'emit' | 'burn' | 'update'): void {\r\n        const config: MatDialogConfig = {\r\n            data: {\r\n                asset_info: this.currentAssetInfo,\r\n            },\r\n        };\r\n\r\n        let closed: Observable<number | undefined>;\r\n\r\n        switch (type) {\r\n            case 'assetDetails': {\r\n                this._matDialog.open(AssetDetailsComponent, config);\r\n                return;\r\n            }\r\n            case 'emit': {\r\n                closed = this._matDialog\r\n                    .open<EmitCustomAssetComponent, any, number | undefined>(EmitCustomAssetComponent, config)\r\n                    .afterClosed();\r\n                break;\r\n            }\r\n            case 'burn': {\r\n                closed = this._matDialog\r\n                    .open<BurnCustomAssetComponent, any, number | undefined>(BurnCustomAssetComponent, config)\r\n                    .afterClosed();\r\n                break;\r\n            }\r\n            case 'update': {\r\n                closed = this._matDialog\r\n                    .open<UpdateCustomAssetComponent, any, number | undefined>(UpdateCustomAssetComponent, config)\r\n                    .afterClosed();\r\n                break;\r\n            }\r\n        }\r\n\r\n        closed\r\n            .pipe(\r\n                filter(job_id => typeof job_id === 'number'),\r\n                switchMap(job_id => {\r\n                    const config2: MatDialogConfig = {\r\n                        data: {\r\n                            job_id,\r\n                        },\r\n                    };\r\n                    return this._matDialog\r\n                        .open<TransactionDetailsForCustomAssetsComponent, any, boolean>(TransactionDetailsForCustomAssetsComponent, config2)\r\n                        .afterClosed();\r\n                }),\r\n                filter(Boolean),\r\n                take(1)\r\n            )\r\n            .subscribe({\r\n                next: () => this._loadAssets(),\r\n            });\r\n    }\r\n\r\n    private _loadAssets(): void {\r\n        const {\r\n            currentWallet: { wallet_id },\r\n        } = this._walletsService;\r\n        this._walletsService.loadAssetsInfoWhitelist(wallet_id);\r\n    }\r\n}\r\n","<div [ngClass]=\"{ center: !assets.length }\" class=\"container\">\r\n    <ng-container *ngIf=\"assets.length; else emptyTemplate\">\r\n        <div class=\"scrolled-content mb-2\" fxFlex=\"1 1 auto\">\r\n            <table class=\"pdc-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                            <div class=\"bg title\">\r\n                                {{ 'CUSTOM_ASSETS.TABLE.LABELS.LABEL1' | translate }}\r\n                            </div>\r\n                        </th>\r\n                        <th>\r\n                            <div class=\"bg title\">\r\n                                {{ 'CUSTOM_ASSETS.TABLE.LABELS.LABEL2' | translate }}\r\n                            </div>\r\n                        </th>\r\n                        <th>\r\n                            <div class=\"bg title\">\r\n                                {{ 'CUSTOM_ASSETS.TABLE.LABELS.LABEL3' | translate }}\r\n                            </div>\r\n                        </th>\r\n                        <th>\r\n                            <div class=\"bg title\">\r\n                                {{ 'CUSTOM_ASSETS.TABLE.LABELS.LABEL4' | translate }}\r\n                            </div>\r\n                        </th>\r\n                        <th>\r\n                            <div class=\"bg title\">\r\n                                {{ 'CUSTOM_ASSETS.TABLE.LABELS.LABEL5' | translate }}\r\n                            </div>\r\n                        </th>\r\n                        <th>\r\n                            <div class=\"bg title\">\r\n                                {{ 'CUSTOM_ASSETS.TABLE.LABELS.LABEL6' | translate }}\r\n                            </div>\r\n                        </th>\r\n                        <th>\r\n                            <div class=\"bg title\">&nbsp;</div>\r\n                        </th>\r\n                    </tr>\r\n                    <div class=\"row-divider\"></div>\r\n                </thead>\r\n                <tbody>\r\n                    <ng-container *ngFor=\"let asset of assets | paginate : paginateArgs; trackBy: trackByAssets\">\r\n                        <tr>\r\n                            <td (contextmenu)=\"variablesService.onContextMenuOnlyCopy($event, asset.asset_id)\">\r\n                                {{ asset.asset_id | pdcShortString }}\r\n                            </td>\r\n                            <td>{{ asset.ticker }}</td>\r\n                            <td>{{ asset.full_name }}</td>\r\n                            <td>{{ asset.total_max_supply | intToMoney : asset.decimal_point }}</td>\r\n                            <td>{{ asset.current_supply | intToMoney : asset.decimal_point }}</td>\r\n                            <td>{{ asset.decimal_point }}</td>\r\n                            <td>\r\n                                <div fxLayout=\"row\" fxLayoutAlign=\"end center\">\r\n                                    <button\r\n                                        #trigger=\"cdkOverlayOrigin\"\r\n                                        (click)=\"$event.stopPropagation(); toggleDropDownMenu(trigger, asset)\"\r\n                                        [disabled]=\"false\"\r\n                                        cdkOverlayOrigin\r\n                                        class=\"btn-icon circle row-options small ml-auto\"\r\n                                        type=\"button\"\r\n                                    >\r\n                                        <mat-icon class=\"small\" svgIcon=\"pdc-row-options\"></mat-icon>\r\n                                    </button>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr class=\"row-divider\"></tr>\r\n                    </ng-container>\r\n                </tbody>\r\n            </table>\r\n\r\n            <a class=\"btn create-new-asset primary big\" routerLink=\"/wallet/create-new-asset\">{{\r\n                'CUSTOM_ASSETS.BUTTONS.BUTTON1' | translate\r\n            }}</a>\r\n        </div>\r\n\r\n        <pagination-template\r\n            #p=\"paginationApi\"\r\n            (pageChange)=\"paginateArgs.currentPage = $event\"\r\n            *ngIf=\"isShowPagination\"\r\n            [id]=\"paginationId\"\r\n            class=\"ngx-pagination custom-pagination\"\r\n        >\r\n            <button (click)=\"p.previous()\" [disabled]=\"p.isFirstPage()\" class=\"pagination-previous btn-icon circle small mr-0_5\">\r\n                <mat-icon svgIcon=\"pdc-arrow-left\"></mat-icon>\r\n            </button>\r\n\r\n            <div *ngFor=\"let page of p.pages; trackBy: trackByPages\" [class.current]=\"p.getCurrent() === page.value\" class=\"mr-0_5\">\r\n                <a (click)=\"p.setCurrent(page.value)\" *ngIf=\"p.getCurrent() !== page.value\">\r\n                    <span>{{ page.label }}</span>\r\n                </a>\r\n                <div *ngIf=\"p.getCurrent() === page.value\">\r\n                    <span>{{ page.label }}</span>\r\n                </div>\r\n            </div>\r\n\r\n            <button (click)=\"p.next()\" [disabled]=\"p.isLastPage()\" class=\"pagination-next btn-icon circle small\">\r\n                <mat-icon svgIcon=\"pdc-arrow-right\"></mat-icon>\r\n            </button>\r\n        </pagination-template>\r\n    </ng-container>\r\n\r\n    <ng-template #emptyTemplate>\r\n        <p class=\"mb-2\">{{ 'CUSTOM_ASSETS.TEXT.EMPTY' | translate }}</p>\r\n        <a class=\"btn create-new-asset primary big\" routerLink=\"/wallet/create-new-asset\">{{\r\n            'CUSTOM_ASSETS.BUTTONS.BUTTON1' | translate\r\n        }}</a>\r\n    </ng-template>\r\n</div>\r\n\r\n<ng-template\r\n    (backdropClick)=\"$event.stopPropagation(); closeDropDownMenu()\"\r\n    [cdkConnectedOverlayBackdropClass]=\"'opacity-0'\"\r\n    [cdkConnectedOverlayHasBackdrop]=\"true\"\r\n    [cdkConnectedOverlayOpen]=\"isOpenDropDownMenu\"\r\n    [cdkConnectedOverlayOrigin]=\"triggerOrigin\"\r\n    [cdkConnectedOverlayPositions]=\"connectedOverlayPositions\"\r\n    cdkConnectedOverlay\r\n>\r\n    <ul (click)=\"closeDropDownMenu()\" class=\"list\">\r\n        <li class=\"item\">\r\n            <button (click)=\"openDialog('assetDetails')\" class=\"w-100 px-2 py-1\" type=\"button\">\r\n                <mat-icon svgIcon=\"pdc-info-v2\" class=\"mr-1\"></mat-icon>\r\n                <span>{{ 'CUSTOM_ASSETS.DROP_MENU.LABELS.LABEL1' | translate }}</span>\r\n            </button>\r\n        </li>\r\n        <li class=\"item\">\r\n            <button (click)=\"openDialog('emit')\" class=\"w-100 px-2 py-1\" type=\"button\">\r\n                <mat-icon svgIcon=\"pdc-emit\" class=\"mr-1\"></mat-icon>\r\n                <span>{{ 'CUSTOM_ASSETS.DROP_MENU.LABELS.LABEL2' | translate }}</span>\r\n            </button>\r\n        </li>\r\n        <li class=\"item\">\r\n            <button (click)=\"openDialog('update')\" class=\"w-100 px-2 py-1\" type=\"button\">\r\n                <mat-icon svgIcon=\"pdc-update\" class=\"mr-1\"></mat-icon>\r\n                <span>{{ 'CUSTOM_ASSETS.DROP_MENU.LABELS.LABEL3' | translate }}</span>\r\n            </button>\r\n        </li>\r\n        <li class=\"item\">\r\n            <button (click)=\"openDialog('burn')\" class=\"w-100 px-2 py-1\" type=\"button\">\r\n                <mat-icon svgIcon=\"pdc-burn\" class=\"mr-1\"></mat-icon>\r\n                <span>{{ 'CUSTOM_ASSETS.DROP_MENU.LABELS.LABEL4' | translate }}</span>\r\n            </button>\r\n        </li>\r\n    </ul>\r\n</ng-template>\r\n","import { Component, NgZone, OnDestroy, OnInit } from '@angular/core';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { PaginationService } from '@store/pagination/pagination.service';\r\nimport { PaginationStore } from '@store/pagination/pagination.store';\r\nimport { Wallet } from '@api/models/wallet.model';\r\nimport { BackendService } from '@api/services/backend.service';\r\nimport { Subject } from 'rxjs';\r\nimport { hasOwnProperty } from '@parts/functions/has-own-property';\r\nimport { collapseOnLeaveAnimation, expandOnEnterAnimation } from 'angular-animations';\r\nimport { PdcAssetInfo, pdcAssetInfo } from '@parts/data/assets';\r\nimport { filter, takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'app-history',\r\n    templateUrl: './history.component.html',\r\n    styleUrls: ['./history.component.scss'],\r\n    animations: [expandOnEnterAnimation(), collapseOnLeaveAnimation()],\r\n})\r\nexport class HistoryComponent implements OnInit, OnDestroy {\r\n    public pdcAssetInfo: PdcAssetInfo = pdcAssetInfo;\r\n\r\n    public opened_transaction_details: string | undefined;\r\n\r\n    public stop_paginate: boolean = false;\r\n\r\n    public mining: boolean = false;\r\n\r\n    public wallet: Wallet;\r\n\r\n    private _destroy$: Subject<void> = new Subject<void>();\r\n\r\n    constructor(\r\n        public variablesService: VariablesService,\r\n        private _pagination: PaginationService,\r\n        private _backendService: BackendService,\r\n        private _ngZone: NgZone,\r\n        private _paginationStore: PaginationStore\r\n    ) {}\r\n\r\n    get currentWallet(): Wallet {\r\n        return this.variablesService.currentWallet;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.init();\r\n\r\n        this.variablesService.currentWalletChangedEvent.pipe(filter(Boolean), takeUntil(this._destroy$)).subscribe({\r\n            next: (wallet: Wallet) => {\r\n                this.getRecentTransfers();\r\n                this.mining = wallet.exclude_mining_txs;\r\n            },\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.opened_transaction_details = undefined;\r\n\r\n        this._destroy$.next();\r\n        this._destroy$.complete();\r\n    }\r\n\r\n    init(): void {\r\n        let restore = false;\r\n        if (hasOwnProperty(this.variablesService.after_sync_request, String(this.variablesService.currentWallet.wallet_id))) {\r\n            restore = this.variablesService.after_sync_request[this.variablesService.currentWallet.wallet_id];\r\n        }\r\n        if (!this.variablesService.sync_started && restore && this.variablesService.currentWallet.wallet_id) {\r\n            this.wallet = this.variablesService.getNotLoadedWallet();\r\n            if (this.wallet) {\r\n                this.tick();\r\n            }\r\n            // if this is was restore wallet, and it was selected on moment when sync completed\r\n            this.getRecentTransfers();\r\n            this.variablesService.after_sync_request[this.variablesService.currentWallet.wallet_id] = false;\r\n        }\r\n        let after_sync_request = false;\r\n        if (hasOwnProperty(this.variablesService.after_sync_request, String(this.variablesService.currentWallet.wallet_id))) {\r\n            after_sync_request = this.variablesService.after_sync_request[this.variablesService.currentWallet.wallet_id];\r\n        }\r\n        if (after_sync_request && !this.variablesService.sync_started) {\r\n            // if user click on the wallet at the first time after restore.\r\n            this.getRecentTransfers();\r\n        }\r\n\r\n        if (hasOwnProperty(this.variablesService.stop_paginate, String(this.variablesService.currentWallet.wallet_id))) {\r\n            this.stop_paginate = this.variablesService.stop_paginate[this.variablesService.currentWallet.wallet_id];\r\n        } else {\r\n            this.stop_paginate = false;\r\n        }\r\n        // this will hide pagination a bit earlier\r\n        this.wallet = this.variablesService.getNotLoadedWallet();\r\n        if (this.wallet) {\r\n            this.tick();\r\n        }\r\n    }\r\n\r\n    resetPaginationValues(): void {\r\n        this._ngZone.run(() => {\r\n            const total_history_item = this.variablesService.currentWallet.total_history_item;\r\n            const count = this.variablesService.count;\r\n            this.variablesService.currentWallet.totalPages = Math.ceil(total_history_item / count);\r\n            this.variablesService.currentWallet.exclude_mining_txs = this.mining;\r\n            this.variablesService.currentWallet.currentPage = 1;\r\n\r\n            if (!this.variablesService.currentWallet.totalPages) {\r\n                this.variablesService.currentWallet.totalPages = 1;\r\n            }\r\n            this.variablesService.currentWallet.totalPages > this.variablesService.maxPages\r\n                ? (this.variablesService.currentWallet.pages = new Array(5).fill(1).map((value, index) => value + index))\r\n                : (this.variablesService.currentWallet.pages = new Array(this.variablesService.currentWallet.totalPages)\r\n                      .fill(1)\r\n                      .map((value, index) => value + index));\r\n        });\r\n    }\r\n\r\n    setPage(pageNumber: number): void {\r\n        // this is will allow pagination for wallets that was open from existed wallets'\r\n        if (pageNumber === this.variablesService.currentWallet.currentPage) {\r\n            return;\r\n        }\r\n        if (this.variablesService.currentWallet.open_from_exist && !this.variablesService.currentWallet.updated) {\r\n            this.variablesService.get_recent_transfers = false;\r\n            this.variablesService.currentWallet.updated = true;\r\n        }\r\n        // if not running get_recent_transfers callback\r\n        if (!this.variablesService.get_recent_transfers) {\r\n            this.variablesService.currentWallet.currentPage = pageNumber;\r\n        }\r\n        if (!this.variablesService.get_recent_transfers) {\r\n            this.getRecentTransfers();\r\n        }\r\n    }\r\n\r\n    toggleMiningTransactions(): void {\r\n        if (!this.variablesService.sync_started && !this.wallet) {\r\n            const value = this._paginationStore.value;\r\n            if (!value) {\r\n                this._paginationStore.setPage(1, 0, this.variablesService.currentWallet.wallet_id); // add back page for the first page\r\n            } else {\r\n                const pages = value.filter(item => item.walletID === this.variablesService.currentWallet.wallet_id);\r\n                if (pages.length === 0) {\r\n                    this._paginationStore.setPage(1, 0, this.variablesService.currentWallet.wallet_id); // add back page for the first page\r\n                }\r\n            }\r\n            this.mining = !this.mining;\r\n            this.resetPaginationValues();\r\n            this.getRecentTransfers();\r\n        }\r\n    }\r\n\r\n    getRecentTransfers(): void {\r\n        const offset = this._pagination.getOffset(this.variablesService.currentWallet.wallet_id);\r\n        const value = this._paginationStore.value;\r\n        const pages = value ? value.filter(item => item.walletID === this.variablesService.currentWallet.wallet_id) : [];\r\n        this._backendService.getRecentTransfers(\r\n            this.variablesService.currentWallet.wallet_id,\r\n            offset,\r\n            this.variablesService.count,\r\n            this.variablesService.currentWallet.exclude_mining_txs,\r\n            (status, data) => {\r\n                const isForward = this._paginationStore.isForward(pages, this.variablesService.currentWallet.currentPage);\r\n                if (this.mining && isForward && pages && pages.length === 1) {\r\n                    this.variablesService.currentWallet.currentPage = 1; // set init page after navigation back\r\n                }\r\n\r\n                const history = data && data.history;\r\n                this.variablesService.stop_paginate[this.variablesService.currentWallet.wallet_id] =\r\n                    (history && history.length < this.variablesService.count) || !history;\r\n                this.stop_paginate = this.variablesService.stop_paginate[this.variablesService.currentWallet.wallet_id];\r\n                if (!this.variablesService.stop_paginate[this.variablesService.currentWallet.wallet_id]) {\r\n                    const page = this.variablesService.currentWallet.currentPage + 1;\r\n                    if (isForward && this.mining && history && history.length === this.variablesService.count) {\r\n                        this._paginationStore.setPage(page, data.last_item_index, this.variablesService.currentWallet.wallet_id); // add back page for current page\r\n                    }\r\n                }\r\n\r\n                this._pagination.calcPages(data);\r\n                this._pagination.prepareHistory(data, status);\r\n\r\n                this._ngZone.run(() => {\r\n                    this.variablesService.get_recent_transfers = false;\r\n                    if (hasOwnProperty(this.variablesService.after_sync_request, String(this.variablesService.currentWallet.wallet_id))) {\r\n                        // this is will complete get_recent_transfers request\r\n                        // this will switch of\r\n                        this.variablesService.after_sync_request[this.variablesService.currentWallet.wallet_id] = false;\r\n                    }\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    tick(): void {\r\n        const walletInterval = setInterval(() => {\r\n            this.wallet = this.variablesService.getNotLoadedWallet();\r\n            if (!this.wallet) {\r\n                clearInterval(walletInterval);\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    toggleTransactionDetails(tx_hash: string): void {\r\n        if (tx_hash === this.opened_transaction_details) {\r\n            this.opened_transaction_details = undefined;\r\n        } else {\r\n            this.opened_transaction_details = tx_hash;\r\n        }\r\n    }\r\n}\r\n","<div class=\"history-wrap\" fxFlexFill fxLayout=\"column\">\r\n    <div class=\"wrap-table scrolled-content mb-2\" fxFlex=\"1 1 auto\">\r\n        <table class=\"pdc-table history-table\">\r\n            <thead>\r\n                <tr>\r\n                    <th>\r\n                        <div class=\"bg title\">{{ 'HISTORY.STATUS' | translate }}</div>\r\n                    </th>\r\n                    <th>\r\n                        <div class=\"bg title\">{{ 'HISTORY.AMOUNT' | translate }}</div>\r\n                    </th>\r\n                    <th>\r\n                        <div class=\"bg title\">{{ 'HISTORY.FEE' | translate }}</div>\r\n                    </th>\r\n                    <th>\r\n                        <div class=\"bg title\">{{ 'HISTORY.ADDRESS' | translate }}</div>\r\n                    </th>\r\n                    <th>\r\n                        <div class=\"bg title\">{{ 'HISTORY.DATE' | translate }}</div>\r\n                    </th>\r\n                </tr>\r\n                <div class=\"row-divider\"></div>\r\n            </thead>\r\n            <tbody>\r\n                <ng-container *ngFor=\"let transaction of variablesService.currentWallet.history; let i = index\">\r\n                    <tr\r\n                        (click)=\"toggleTransactionDetails(transaction.tx_hash)\"\r\n                        [class.locked-transaction]=\"!transaction.is_mining && transaction.unlock_time > 0\"\r\n                    >\r\n                        <!-- Status -->\r\n                        <td>\r\n                            <app-transaction-status [transaction]=\"transaction\"></app-transaction-status>\r\n                        </td>\r\n\r\n                        <!-- Amount -->\r\n                        <td>\r\n                            <ng-container *ngFor=\"let item of transaction | getAmountItems : currentWallet\">\r\n                                <div class=\"cell-amount\" *appVisibilityBalance>\r\n                                    <div class=\"amount\">{{ item.amount }}</div>\r\n                                    <span class=\"ticker\">{{ item.ticker }}</span>\r\n                                </div>\r\n                            </ng-container>\r\n                        </td>\r\n\r\n                        <!-- Fee -->\r\n                        <td>\r\n                            <div class=\"cell-fee\" *ngIf=\"transaction | isVisibleFee\">\r\n                                <ng-container *ngIf=\"transaction?.subtransfers?.length\">\r\n                                    <ng-container *ngIf=\"transaction.fee; else noFeeTemplate\">\r\n                                        <mat-icon svgIcon=\"pdc-fire\" class=\"mr-1\" style=\"opacity: 50\"></mat-icon>\r\n\r\n                                        {{ transaction.fee | intToMoney }}\r\n                                        {{ variablesService.defaultTicker }}\r\n                                    </ng-container>\r\n\r\n                                    <ng-template #noFeeTemplate>\r\n                                        <span>{{ 'HISTORY.NO_FEE' | translate }}</span>\r\n                                    </ng-template>\r\n                                </ng-container>\r\n                            </div>\r\n                        </td>\r\n\r\n                        <!-- Address -->\r\n                        <td class=\"remote-address\">\r\n                            <ng-container [ngSwitch]=\"true\">\r\n                                <ng-container *ngSwitchCase=\"!(transaction.tx_type === 0)\">\r\n                                    <div class=\"text-ellipsis\">\r\n                                        <span>\r\n                                            {{ transaction | historyTypeMessages }}\r\n                                        </span>\r\n                                    </div>\r\n                                </ng-container>\r\n\r\n                                <ng-container *ngSwitchCase=\"transaction.tx_type === 0\">\r\n                                    <div\r\n                                        *ngIf=\"\r\n                                                    transaction.remote_addresses &&\r\n                                                    transaction.remote_addresses[0] &&\r\n                                                    !transaction.remote_aliases?.[0]?.trim()?.length\r\n                                                  \"\r\n                                        class=\"text-ellipsis\"\r\n                                    >\r\n                                        <span\r\n                                            (contextmenu)=\"variablesService.onContextMenuOnlyCopy($event, transaction.remote_addresses[0])\"\r\n                                        >\r\n                                            {{ transaction.remote_addresses[0] | pdcShortString }}\r\n                                        </span>\r\n                                    </div>\r\n                                    <ng-container *ngIf=\"transaction.remote_aliases && transaction.remote_aliases?.[0]?.trim()?.length\">\r\n                                        <div fxLayout=\"row wrap\">\r\n                                            <ng-container *ngFor=\"let alias of transaction.remote_aliases\">\r\n                                                <ng-container *ngIf=\"alias && alias.length\">\r\n                                                    <div\r\n                                                        (contextmenu)=\"variablesService.onContextMenuOnlyCopy($event, '@' + alias)\"\r\n                                                        [class.available]=\"alias.length >= 1 && alias.length <= 5\"\r\n                                                        [class.mb-0_5]=\"transaction.remote_aliases.length >= 2\"\r\n                                                        [class.mr-0_5]=\"transaction.remote_aliases.length >= 2\"\r\n                                                        class=\"alias\"\r\n                                                        fxLayout=\"row inline\"\r\n                                                    >\r\n                                                        {{ '@' + alias }}\r\n                                                    </div>\r\n                                                </ng-container>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n\r\n                                <ng-container\r\n                                    *ngSwitchCase=\"\r\n                                        !(transaction.remote_addresses?.length || transaction.remote_aliases?.length) &&\r\n                                        transaction.tx_type === 0\r\n                                    \"\r\n                                >\r\n                                    {{ 'HISTORY.HIDDEN' | translate }}\r\n                                </ng-container>\r\n                            </ng-container>\r\n                        </td>\r\n\r\n                        <!-- Date -->\r\n                        <td>\r\n                            <div class=\"text-ellipsis\">\r\n                                {{ transaction.timestamp * 1000 | date : 'dd-MM-yyyy HH:mm' }}\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <div class=\"row-divider\"></div>\r\n\r\n                    <tr>\r\n                        <td colspan=\"5\" [ngStyle]=\"{ padding: '0', 'border-radius': '0.8rem' }\">\r\n                            <app-transaction-details\r\n                                *ngIf=\"transaction.tx_hash === opened_transaction_details\"\r\n                                @expandOnEnter\r\n                                @collapseOnLeave\r\n                                [transaction]=\"transaction\"\r\n                            ></app-transaction-details>\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <tr\r\n                        *ngIf=\"transaction.tx_hash === opened_transaction_details as state\"\r\n                        [@expandOnEnter]=\"{ value: state, params: { duration: 150 } }\"\r\n                        [@collapseOnLeave]=\"{\r\n                            value: state,\r\n                            params: { duration: 400 }\r\n                        }\"\r\n                        class=\"row-divider\"\r\n                    ></tr>\r\n                </ng-container>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n\r\n    <div class=\"pagination-wrapper\">\r\n        <div class=\"pagination\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n            <div class=\"left\" fxLayout=\"row\" fxLayoutAlign=\" center\">\r\n                <button\r\n                    (click)=\"setPage(variablesService.currentWallet.currentPage - 1)\"\r\n                    [disabled]=\"\r\n                        variablesService.currentWallet.currentPage === 1 ||\r\n                        variablesService.isCurrentWalletSync ||\r\n                        !variablesService.isCurrentWalletLoaded\r\n                    \"\r\n                    class=\"btn-icon circle small mr-1\"\r\n                >\r\n                    <mat-icon svgIcon=\"pdc-arrow-left\"></mat-icon>\r\n                </button>\r\n\r\n                <ng-container *ngIf=\"!mining\">\r\n                    <button\r\n                        (click)=\"setPage(page)\"\r\n                        *ngFor=\"let page of variablesService.currentWallet.pages\"\r\n                        [disabled]=\"variablesService.isCurrentWalletSync || !variablesService.isCurrentWalletLoaded\"\r\n                        [class.color-primary]=\"variablesService.currentWallet.currentPage === page\"\r\n                        class=\"mr-0_5\"\r\n                    >\r\n                        {{ page }}\r\n                    </button>\r\n                </ng-container>\r\n\r\n                <ng-container *ngIf=\"mining\">\r\n                    <button\r\n                        (click)=\"setPage(variablesService.currentWallet.currentPage)\"\r\n                        [disabled]=\"stop_paginate || variablesService.isCurrentWalletSync || !variablesService.isCurrentWalletLoaded\"\r\n                        [ngClass]=\"{\r\n                            'color-primary': variablesService.currentWallet.currentPage,\r\n                            disabled: variablesService.isCurrentWalletSync || !variablesService.isCurrentWalletLoaded\r\n                        }\"\r\n                        class=\"mr-0_5\"\r\n                    >\r\n                        {{ variablesService.currentWallet.currentPage }}\r\n                    </button>\r\n                </ng-container>\r\n\r\n                <button\r\n                    (click)=\"setPage(variablesService.currentWallet.currentPage + 1)\"\r\n                    [disabled]=\"stop_paginate || variablesService.isCurrentWalletSync || !variablesService.isCurrentWalletLoaded\"\r\n                    class=\"btn-icon circle small ml-0_5\"\r\n                >\r\n                    <mat-icon svgIcon=\"pdc-arrow-right\"></mat-icon>\r\n                </button>\r\n            </div>\r\n            <div class=\"right\" fxLayout=\"row\" fxLayoutAlign=\" center\">\r\n                <span class=\"switch-text mr-2\">Hide mining transactions</span>\r\n                <app-switch\r\n                    (emitChange)=\"toggleMiningTransactions()\"\r\n                    [disabled]=\"variablesService.isCurrentWalletSync || !variablesService.isCurrentWalletLoaded\"\r\n                    [value]=\"mining\"\r\n                ></app-switch>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport QRCode from 'qrcode';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { RCV_ADDR_QR_SCALE } from '@parts/data/constants';\r\n\r\n@Component({\r\n    selector: 'app-receive',\r\n    template: `\r\n        <div class=\"container overflow-auto\" fxFlexFill fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n            <div class=\"wrap-qr mb-2\">\r\n                <img alt=\"qr-code\" [src]=\"qrImageSrc\" />\r\n            </div>\r\n\r\n            <div\r\n                class=\"address border-radius-0_8-rem overflow-hidden pl-1 pr-0_5 pt-0_5 pb-0_5\"\r\n                fxFlex=\"0 0 auto\"\r\n                fxLayout=\"row\"\r\n                fxLayoutAlign=\"space-between center\"\r\n            >\r\n                <span\r\n                    [delay]=\"150\"\r\n                    [placement]=\"'bottom'\"\r\n                    [timeout]=\"0\"\r\n                    [tooltipClass]=\"'table-tooltip'\"\r\n                    [tooltip]=\"variablesService.currentWallet.address\"\r\n                    class=\"text-ellipsis mr-1\"\r\n                    >{{ variablesService.currentWallet.address | pdcShortString : 9 : 9 }}</span\r\n                >\r\n                <app-copy-button [value]=\"variablesService.currentWallet.address\"> </app-copy-button>\r\n            </div>\r\n        </div>\r\n    `,\r\n    styles: [\r\n        `\r\n            :host {\r\n                width: 100%;\r\n            }\r\n        `,\r\n    ],\r\n})\r\nexport class ReceiveComponent implements OnInit {\r\n    qrImageSrc: string;\r\n\r\n    constructor(public variablesService: VariablesService) {}\r\n\r\n    ngOnInit(): void {\r\n        QRCode.toDataURL(this.variablesService.currentWallet.address, {\r\n            width: 200 * RCV_ADDR_QR_SCALE,\r\n            height: 200 * RCV_ADDR_QR_SCALE,\r\n        })\r\n            .then(url => {\r\n                this.qrImageSrc = url;\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n            });\r\n    }\r\n}\r\n","import {\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    HostBinding,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n    Output,\r\n    Renderer2,\r\n    ViewChild,\r\n} from '@angular/core';\r\nimport {\r\n    AsyncCommandResults,\r\n    BackendService,\r\n    CurrentActionState,\r\n    ResponseAsyncTransfer,\r\n    StatusCurrentActionState,\r\n} from '@api/services/backend.service';\r\nimport { BehaviorSubject, Subject } from 'rxjs';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { filter, takeUntil } from 'rxjs/operators';\r\nimport { BLOCK_EXPLORER_TN_TX_URL_PREFIX, BLOCK_EXPLORER_TX_URL_PREFIX } from '@parts/data/constants';\r\n\r\nconst successfulStatuses: string[] = [\r\n    StatusCurrentActionState.STATE_SENDING,\r\n    StatusCurrentActionState.STATE_SENT_SUCCESS,\r\n    StatusCurrentActionState.STATE_INITIALIZING,\r\n    StatusCurrentActionState.STATE_DOWNLOADING_CONSENSUS,\r\n    StatusCurrentActionState.STATE_MAKING_TUNNEL_A,\r\n    StatusCurrentActionState.STATE_MAKING_TUNNEL_B,\r\n    StatusCurrentActionState.STATE_CREATING_STREAM,\r\n    StatusCurrentActionState.STATE_SUCCESS,\r\n];\r\n\r\nconst failedStatuses: string[] = [StatusCurrentActionState.STATE_SEND_FAILED, StatusCurrentActionState.STATE_FAILED];\r\n\r\n@Component({\r\n    selector: 'app-send-details-modal',\r\n    templateUrl: './send-details-modal.component.html',\r\n    styleUrls: ['./send-details-modal.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SendDetailsModalComponent implements OnInit, OnDestroy {\r\n    @HostBinding('class.modal-overlay') modalOverlay = true;\r\n\r\n    @Input() job_id: number;\r\n\r\n    @Output() eventClose = new EventEmitter<boolean>();\r\n\r\n    @ViewChild('elDetailsList', { static: true }) elDetailsList: ElementRef;\r\n\r\n    responseData$ = new BehaviorSubject<ResponseAsyncTransfer>(null);\r\n\r\n    stateDetails$ = new BehaviorSubject<boolean>(false);\r\n\r\n    currentActionState$ = new BehaviorSubject<CurrentActionState>(null);\r\n\r\n    currentActionStates$ = new BehaviorSubject<CurrentActionState[]>([]);\r\n\r\n    success = false;\r\n\r\n    private destroy$: Subject<void> = new Subject<void>();\r\n\r\n    constructor(private backendService: BackendService, private variablesService: VariablesService, private renderer: Renderer2) {}\r\n\r\n    get currentActionState(): CurrentActionState {\r\n        return this.currentActionState$.value;\r\n    }\r\n\r\n    get currentActionStates(): CurrentActionState[] {\r\n        return this.currentActionStates$.value;\r\n    }\r\n\r\n    get isSentSuccess(): boolean {\r\n        return this.currentActionState && this.currentActionState.status === StatusCurrentActionState.STATE_SENT_SUCCESS;\r\n    }\r\n\r\n    get isSentFailed(): boolean {\r\n        return this.currentActionState && this.currentActionState.status === StatusCurrentActionState.STATE_SEND_FAILED;\r\n    }\r\n\r\n    get isDetailsNotEmpty(): boolean {\r\n        return !!(this.responseData$.value || this.currentActionStates$.value.length > 0);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.renderer.addClass(document.body, 'no-scroll');\r\n        const {\r\n            currentWallet: { wallet_id },\r\n            settings: { appUseTor },\r\n        } = this.variablesService;\r\n\r\n        if (appUseTor) {\r\n            this.backendService.handleCurrentActionState$.pipe(filter(Boolean), takeUntil(this.destroy$)).subscribe({\r\n                next: (currentActionState: CurrentActionState) => {\r\n                    this.currentActionState$.next(currentActionState);\r\n                    this.currentActionStates$.next([...this.currentActionStates, currentActionState]);\r\n                },\r\n            });\r\n        } else {\r\n            const actionState: CurrentActionState = {\r\n                status: StatusCurrentActionState.STATE_INITIALIZING,\r\n                wallet_id,\r\n            };\r\n            this.currentActionState$.next(actionState);\r\n            this.currentActionStates$.next([...this.currentActionStates, actionState]);\r\n        }\r\n\r\n        this.backendService.dispatchAsyncCallResult$\r\n            .pipe(\r\n                filter(Boolean),\r\n                filter(({ job_id, response }: AsyncCommandResults<ResponseAsyncTransfer>) => this.job_id === job_id && !!response),\r\n                takeUntil(this.destroy$)\r\n            )\r\n            .subscribe({\r\n                next: ({ response }: AsyncCommandResults<ResponseAsyncTransfer>) => {\r\n                    const { response_data } = response;\r\n                    const success = response_data?.success ?? false;\r\n                    this.success = success;\r\n\r\n                    const actionState: CurrentActionState = {\r\n                        status: success ? StatusCurrentActionState.STATE_SENT_SUCCESS : StatusCurrentActionState.STATE_SEND_FAILED,\r\n                        wallet_id,\r\n                    };\r\n                    this.currentActionState$.next(actionState);\r\n                    this.currentActionStates$.next([...this.currentActionStates, actionState]);\r\n\r\n                    this.responseData$.next(response);\r\n                },\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.renderer.removeClass(document.body, 'no-scroll');\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    toggleDetails(): void {\r\n        this.stateDetails$.next(!this.stateDetails$.value);\r\n        setTimeout(() => this.scrollToBottomDetailsList(), 100);\r\n    }\r\n\r\n    trackBy(index: number): number {\r\n        return index;\r\n    }\r\n\r\n    isSuccess(action: CurrentActionState): boolean {\r\n        return successfulStatuses.includes(action && action.status);\r\n    }\r\n\r\n    isFailed(action: CurrentActionState): boolean {\r\n        return failedStatuses.includes(action && action.status);\r\n    }\r\n\r\n    private scrollToBottomDetailsList(): void {\r\n        if (this.elDetailsList) {\r\n            const { nativeElement } = this.elDetailsList;\r\n            nativeElement.scrollTop = nativeElement.scrollHeight;\r\n        }\r\n    }\r\n\r\n    openInBrowser(hash: string): void {\r\n        this.backendService.openUrlInBrowser(\r\n            (this.variablesService.testnet ? BLOCK_EXPLORER_TN_TX_URL_PREFIX : BLOCK_EXPLORER_TX_URL_PREFIX) + hash\r\n        );\r\n    }\r\n}\r\n","<div class=\"send-details-modal-wrapper\" fxFlex=\"0 1 54rem\">\r\n    <div class=\"wrapper w-100\" fxFlex fxLayout=\"column\">\r\n        <h3 class=\"title mb-2\" fxFlex=\"0 0 auto\">\r\n            {{ 'SEND_DETAILS_MODAL.TITLE1' | translate }}\r\n        </h3>\r\n\r\n        <div class=\"content mb-2 overflow-x-hidden overflow-y-auto\" fxFlex=\"1 1 auto\" fxLayout=\"column\">\r\n            <div class=\"status mb-2\" fxFlex=\"0 0 auto\" fxLayout=\"column\" fxLayoutAlign=\" center\">\r\n                <div *ngIf=\"isSentSuccess\" class=\"image\">\r\n                    <img alt=\"success\" src=\"assets/icons/aqua/transaction_success.svg\" />\r\n                </div>\r\n\r\n                <div *ngIf=\"isSentFailed\" class=\"image\">\r\n                    <img alt=\"failed\" class=\"image\" src=\"assets/icons/red/transaction_failed.svg\" />\r\n                </div>\r\n\r\n                <div *ngIf=\"!isSentSuccess && !isSentFailed\" class=\"loader\"></div>\r\n\r\n                <p class=\"color-primary mt-2\" *ngIf=\"currentActionState$ | async as currentActionState\">\r\n                    {{\r\n                        (currentActionState ? 'TOR_LIB_STATE' + '.' + currentActionState.status : 'TOR_LIB_STATE.STATE_INITIALIZING')\r\n                            | translate\r\n                    }}\r\n                    {{ !isSentSuccess && !isSentFailed ? '...' : '' }}\r\n                </p>\r\n\r\n                <ng-container *ngIf=\"responseData$ | async as data\">\r\n                    <ng-container\r\n                        *ngTemplateOutlet=\"\r\n                            errorCodesTemplate;\r\n                            context: {\r\n                                error_code: data.error_code\r\n                            }\r\n                        \"\r\n                    ></ng-container>\r\n                </ng-container>\r\n            </div>\r\n\r\n            <div class=\"details border-radius-0_8-rem overflow-hidden\" fxFlex=\"0 0 auto\" fxLayout=\"column\">\r\n                <div\r\n                    (click)=\"isDetailsNotEmpty && toggleDetails()\"\r\n                    class=\"header overflow-hidden py-1 px-2 w-100 cursor-pointer\"\r\n                    fxLayout=\"row\"\r\n                    fxLayoutAlign=\"space-between center\"\r\n                >\r\n                    <p class=\"title text-ellipsis mr-2\">\r\n                        {{ 'SEND_DETAILS_MODAL.TITLE2' | translate }}\r\n                    </p>\r\n                    <button *ngIf=\"isDetailsNotEmpty\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                        <mat-icon\r\n                            svgIcon=\"pdc-dropdown-arrow-down\"\r\n                            [ngClass]=\"{\r\n                                'rotate-180': stateDetails$ | async\r\n                            }\"\r\n                        ></mat-icon>\r\n                    </button>\r\n                </div>\r\n                <div\r\n                    [class.px-2]=\"stateDetails$ | async\"\r\n                    [class.py-1]=\"stateDetails$ | async\"\r\n                    [fxHide]=\"!(stateDetails$ | async)\"\r\n                    class=\"details-wrapper\"\r\n                    fxFlex=\"1 1 auto\"\r\n                    fxLayout=\"row\"\r\n                >\r\n                    <ul #elDetailsList class=\"details-list scrolled-content\">\r\n                        <li\r\n                            *ngFor=\"let action of currentActionStates$ | async; let last = last; trackBy: trackBy\"\r\n                            class=\"item mb-1 color-primary\"\r\n                            fxLayout=\"row nowrap\"\r\n                            fxLayoutAlign=\" center\"\r\n                        >\r\n                            <span class=\"text text-ellipsis mr-1\"\r\n                                >{{ 'TOR_LIB_STATE' + '.' + action?.status | translate\r\n                                }}{{ last && !isSentSuccess && !isSentFailed ? '...' : '' }}</span\r\n                            >\r\n                            <ng-container *ngIf=\"!last\">\r\n                                <img *ngIf=\"isSuccess(action)\" alt=\"success\" class=\"image\" src=\"assets/icons/blue/check_with_blue_bg.svg\" />\r\n\r\n                                <img *ngIf=\"isFailed(action)\" alt=\"failed\" class=\"image\" src=\"assets/icons/red/transaction_failed.svg\" />\r\n                            </ng-container>\r\n\r\n                            <ng-container *ngIf=\"last\">\r\n                                <img\r\n                                    *ngIf=\"last && isSentSuccess\"\r\n                                    alt=\"success\"\r\n                                    class=\"image\"\r\n                                    src=\"assets/icons/blue/check_with_blue_bg.svg\"\r\n                                />\r\n\r\n                                <img\r\n                                    *ngIf=\"last && isSentFailed\"\r\n                                    alt=\"failed\"\r\n                                    class=\"image\"\r\n                                    src=\"assets/icons/red/transaction_failed.svg\"\r\n                                />\r\n                            </ng-container>\r\n                        </li>\r\n\r\n                        <ng-container *ngIf=\"responseData$ | async as data\">\r\n                            <li class=\"item mb-1 color-primary\" fxLayout=\"row nowrap\" fxLayoutAlign=\" center\">\r\n                                <span class=\"word-break-break-all cursor-pointer\"\r\n                                      (click)=\"openInBrowser(data.response_data.tx_hash)\">\r\n                                    tx id: {{ data.response_data.tx_hash || '---' }}\r\n                                </span>\r\n                                <app-copy-button *ngIf=\"data.response_data.tx_hash\" [value]=\"data.response_data.tx_hash\" class=\"ml-1\">\r\n                                </app-copy-button>\r\n                            </li>\r\n                            <li class=\"item mb-1 color-primary\" fxLayout=\"row nowrap\" fxLayoutAlign=\" center\">\r\n                                <div class=\"word-break-break-all\">\r\n                                    tx size:\r\n                                    {{ data.response_data.tx_blob_size }}\r\n                                    bytes\r\n                                </div>\r\n                            </li>\r\n                            <li *ngIf=\"data.error_code !== 'OK'\" class=\"item\">\r\n                                <ng-container\r\n                                    *ngTemplateOutlet=\"\r\n                                        errorCodesTemplate;\r\n                                        context: {\r\n                                            prefix: 'Error:',\r\n                                            error_code: data.error_code\r\n                                        }\r\n                                    \"\r\n                                ></ng-container>\r\n                            </li>\r\n                        </ng-container>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"controls\" fxFlex=\"0 0 auto\">\r\n            <button (click)=\"eventClose.emit(success)\" [disabled]=\"!isSentSuccess && !isSentFailed\" class=\"primary big w-100\">\r\n                {{ 'Ok' | translate }}\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #errorCodesTemplate let-prefix=\"prefix\" let-error_code=\"error_code\">\r\n    <ng-container [ngSwitch]=\"error_code\">\r\n        <ng-container *ngSwitchCase=\"'NOT_ENOUGH_MONEY'\">\r\n            <p class=\"color-red\">{{ prefix }} {{ 'SEND.ERROR_CODES' + '.' + error_code | translate }}</p>\r\n        </ng-container>\r\n        <ng-container *ngSwitchCase=\"'OK'\"></ng-container>\r\n        <ng-container *ngSwitchDefault>\r\n            <p class=\"color-red\">{{ prefix }} {{ error_code }}</p>\r\n        </ng-container>\r\n    </ng-container>\r\n</ng-template>\r\n","import {\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    EventEmitter,\r\n    HostBinding,\r\n    inject,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n    Output,\r\n    Renderer2,\r\n} from '@angular/core';\r\nimport { NonNullableFormBuilder, Validators } from '@angular/forms';\r\nimport { SendMoneyFormParams } from '@api/models/send-money.model';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { PdcValidators } from '@parts/utils/pdc-validators';\r\nimport { BigNumber } from 'bignumber.js';\r\nimport { AssetBalance, PriceInfo } from '@api/models/assets.model';\r\n\r\n@Component({\r\n    selector: 'app-send-modal',\r\n    templateUrl: './send-modal.component.html',\r\n    styleUrls: ['./send-modal.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SendModalComponent implements OnInit, OnDestroy {\r\n    @HostBinding('class.modal-overlay') modalOverlay = true;\r\n\r\n    @Input() sendMoneyParams: SendMoneyFormParams;\r\n\r\n    @Input() priceInfo: PriceInfo;\r\n\r\n    @Output() confirmed: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n    get amount(): string {\r\n        const { amount, isAmountUSD, asset_id } = this.sendMoneyParams;\r\n        const convertedAmountUSD = (): string => {\r\n            let usd = 0;\r\n\r\n            if (typeof this.priceInfo.data === 'object') {\r\n                const { data } = this.priceInfo;\r\n                usd = data.usd;\r\n            }\r\n\r\n            let decimal_point = 0;\r\n\r\n            const { currentWallet } = this.variablesService;\r\n            const asset: AssetBalance | undefined = currentWallet.getBalanceByAssetId(asset_id);\r\n\r\n            if (asset) {\r\n                const { asset_info } = asset;\r\n                decimal_point = asset_info.decimal_point;\r\n            }\r\n\r\n            const convertedAmount = new BigNumber(amount || 0).dividedBy(usd || 0).decimalPlaces(decimal_point);\r\n\r\n            return convertedAmount.toString();\r\n        };\r\n\r\n        return isAmountUSD ? convertedAmountUSD() : amount;\r\n    }\r\n\r\n    cdr = inject(ChangeDetectorRef);\r\n\r\n    fb = inject(NonNullableFormBuilder);\r\n\r\n    confirmForm = this.fb.group({\r\n        password: this.fb.control(''),\r\n        appPass: this.fb.control(''),\r\n    });\r\n\r\n    constructor(public variablesService: VariablesService, private renderer: Renderer2) {}\r\n\r\n    ngOnInit(): void {\r\n        this.renderer.addClass(document.body, 'no-scroll');\r\n        const { appPass } = this.variablesService;\r\n        if (appPass) {\r\n            this.confirmForm.controls.appPass.patchValue(appPass, {\r\n                emitEvent: false,\r\n            });\r\n            this.confirmForm.setValidators([PdcValidators.formMatch('password', 'appPass', 'passwordNotMatch')]);\r\n            this.confirmForm.controls.password.setValidators([Validators.required]);\r\n            this.confirmForm.updateValueAndValidity();\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.renderer.removeClass(document.body, 'no-scroll');\r\n    }\r\n\r\n    beforeSubmit(): void {\r\n        if (this.confirmForm.invalid) {\r\n            this.confirmForm.markAsTouched();\r\n            this.confirmForm.updateValueAndValidity();\r\n            this.cdr.detectChanges();\r\n            return;\r\n        }\r\n\r\n        this.submit();\r\n    }\r\n\r\n    submit(): void {\r\n        this.confirmed.emit(true);\r\n    }\r\n\r\n    onClose(): void {\r\n        this.confirmed.emit(false);\r\n    }\r\n}\r\n","<div class=\"send-modal-wrapper\" fxLayout=\"row\">\r\n    <div class=\"wrapper\">\r\n        <form (ngSubmit)=\"beforeSubmit()\" [formGroup]=\"confirmForm\" class=\"overflow-hidden\" fxFlexFill fxLayout=\"column\">\r\n            <h3 class=\"title mb-2\" fxFlex=\"0 0 auto\">\r\n                {{ 'CONFIRM.TITLE' | translate }}\r\n            </h3>\r\n\r\n            <div class=\"content w-100 overflow-x-hidden overflow-y-auto\" fxFlex=\"1 1 auto\">\r\n                <div class=\"table-info mb-2\">\r\n                    <div class=\"row\">\r\n                        <div class=\"label max-w-19-rem w-100\">\r\n                            {{ 'CONFIRM.MESSAGE.SEND' | translate }}\r\n                        </div>\r\n                        <div class=\"text\">\r\n                            {{ amount }}\r\n                            {{ (sendMoneyParams.asset_id | getAssetInfo)?.ticker || '***' }}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <hr class=\"separator\" />\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"label max-w-19-rem w-100\">\r\n                            {{ 'CONFIRM.MESSAGE.FROM' | translate }}\r\n                        </div>\r\n                        <div class=\"text\">\r\n                            {{ variablesService.currentWallet.address }}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <ng-container *ngIf=\"!!sendMoneyParams.address\">\r\n                        <hr class=\"separator\" />\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"label max-w-19-rem w-100\">\r\n                                {{ 'CONFIRM.MESSAGE.TO' | translate }}\r\n                            </div>\r\n                            <div class=\"text\">{{ sendMoneyParams.address }}</div>\r\n                        </div>\r\n                    </ng-container>\r\n\r\n                    <ng-container *ngIf=\"!!sendMoneyParams.comment\">\r\n                        <hr class=\"separator\" />\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"label max-w-19-rem w-100\">\r\n                                {{ 'CONFIRM.MESSAGE.COMMENT' | translate }}\r\n                            </div>\r\n                            <div class=\"text\">{{ sendMoneyParams.comment }}</div>\r\n                        </div>\r\n                    </ng-container>\r\n                </div>\r\n\r\n                <div *ngIf=\"variablesService.appPass\" class=\"form__field fixed\">\r\n                    <label for=\"password\">\r\n                        {{ 'LOGIN.MASTER_PASS' | translate }}\r\n                        <span class=\"color-red\">*</span>\r\n                    </label>\r\n                    <input\r\n                        (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\r\n                        [placeholder]=\"'PLACEHOLDERS.MASTER_PASS_PLACEHOLDER' | translate\"\r\n                        autofocus\r\n                        class=\"form__field--input\"\r\n                        [class.invalid]=\"confirmForm.touched && confirmForm.invalid\"\r\n                        formControlName=\"password\"\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                    />\r\n                    <div *ngIf=\"confirmForm.touched && confirmForm.invalid\" class=\"error\">\r\n                        <div *ngIf=\"confirmForm.hasError('passwordNotMatch') && !confirmForm.controls.password.hasError('required')\">\r\n                            {{ 'LOGIN.FORM_ERRORS.WRONG_PASSWORD' | translate }}\r\n                        </div>\r\n                        <div *ngIf=\"confirmForm.controls.password.hasError('required')\">\r\n                            {{ 'LOGIN.FORM_ERRORS.PASS_REQUIRED' | translate }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"controls w-100\" fxFlex=\"0 0 auto\" fxLayout=\"row nowrap\" fxLayoutGap=\"1rem\">\r\n                <button (click)=\"onClose()\" class=\"outline big w-100\" type=\"button\">\r\n                    {{ 'CONFIRM.BUTTON_CANCEL' | translate }}\r\n                </button>\r\n                <button class=\"primary big w-100\" type=\"submit\">\r\n                    {{ 'CONFIRM.BUTTON_CONFIRM' | translate }}\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SendModalComponent } from './send-modal/send-modal.component';\r\nimport { SendDetailsModalComponent } from './send-details-modal/send-details-modal.component';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { GetAssetInfoPipe } from '@parts/pipes';\r\nimport { CopyButtonComponent } from '@parts/components/copy-button.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@NgModule({\r\n    declarations: [SendModalComponent, SendDetailsModalComponent],\r\n    imports: [CommonModule, TranslateModule, FlexLayoutModule, ReactiveFormsModule, GetAssetInfoPipe, CopyButtonComponent, MatIconModule],\r\n    exports: [SendModalComponent, SendDetailsModalComponent],\r\n})\r\nexport class WalletModalsModule {}\r\n","import { Component, inject, NgZone, OnDestroy } from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup, NonNullableFormBuilder, ValidationErrors, Validators } from '@angular/forms';\r\nimport { BackendService } from '@api/services/backend.service';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { BigNumber } from 'bignumber.js';\r\nimport { MIXIN } from '@parts/data/constants';\r\nimport { catchError, debounceTime, distinctUntilChanged, map, retry, startWith, switchMap, takeUntil, tap } from 'rxjs/operators';\r\nimport { BehaviorSubject, combineLatest, merge, Observable, of, Subject } from 'rxjs';\r\nimport { AssetBalance, PriceInfo } from '@api/models/assets.model';\r\nimport { regExpAliasName } from '@parts/utils/pdc-validators';\r\nimport { insuficcientFunds } from '@parts/utils/pdc-errors';\r\nimport { DeeplinkParams } from '@api/models/wallet.model';\r\nimport { WrapInfo } from '@api/models/wrap-info';\r\nimport { ApiPdcService } from '@api/services/api-pdc.service';\r\nimport { SendMoneyFormParams } from '@api/models/send-money.model';\r\nimport { PdcAssetInfo, pdcAssetInfo } from '@parts/data/assets';\r\nimport { moneyToInt } from '@parts/functions/money-to-int';\r\nimport { intToMoney } from '@parts/functions/int-to-money';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { WalletsService } from '@parts/services/wallets.service';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\ninterface AmountInputParams {\r\n    decimalPoint: number;\r\n    inputTicker: string;\r\n    hintTicker: string;\r\n    hintAmount: string;\r\n    reverseDisabled: boolean;\r\n}\r\n\r\ntype AssetItems = (AssetBalance & { disabled: boolean })[];\r\n\r\nconst defaultSendMoneyParams: SendMoneyFormParams = {\r\n    asset_id: pdcAssetInfo.asset_id,\r\n    wallet_id: undefined,\r\n    address: '',\r\n    amount: undefined,\r\n    isAmountUSD: false,\r\n    comment: '',\r\n    mixin: MIXIN,\r\n    fee: '0.01',\r\n    push_payer: true,\r\n    hide_receiver: false,\r\n};\r\n\r\n@Component({\r\n    selector: 'app-send',\r\n    templateUrl: 'send.component.html',\r\n    styles: [\r\n        `\r\n            :host {\r\n                width: 100%;\r\n            }\r\n        `,\r\n    ],\r\n})\r\nexport class SendComponent implements OnDestroy {\r\n    job_id: number;\r\n\r\n    isSendModalState: boolean = false;\r\n\r\n    isSendDetailsModalState: boolean = false;\r\n\r\n    wrapInfo: WrapInfo;\r\n\r\n    loadingWrapInfo$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\r\n\r\n    isVisibleWrapInfoState$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n\r\n    aliasAddress: string;\r\n\r\n    isVisibleAdditionalOptionsState: boolean = false;\r\n\r\n    variablesService: VariablesService = inject(VariablesService);\r\n\r\n    wrapInfoService: ApiPdcService = inject(ApiPdcService);\r\n\r\n    assetItems$: Observable<AssetItems> = combineLatest([this.variablesService.currentWallet.balances$, this.isVisibleWrapInfoState$]).pipe(\r\n        map(([balances, disabled]) => {\r\n            const items: AssetItems = [];\r\n\r\n            balances.forEach((balance: AssetBalance) => {\r\n                const {\r\n                    asset_info: { asset_id },\r\n                } = balance;\r\n\r\n                if (asset_id === pdcAssetInfo.asset_id) {\r\n                    return items.push({ ...balance, disabled: false });\r\n                }\r\n\r\n                return items.push({ ...balance, disabled });\r\n            });\r\n\r\n            return items;\r\n        })\r\n    );\r\n\r\n    lowerCaseDisabled$: BehaviorSubject<boolean> = new BehaviorSubject(true);\r\n\r\n    form: FormGroup<{\r\n        wallet_id: FormControl<number>;\r\n        address: FormControl<string>;\r\n        amount: FormControl<string>;\r\n        isAmountUSD: FormControl<boolean>;\r\n        comment: FormControl<string>;\r\n        asset_id: FormControl<string>;\r\n        mixin: FormControl<number>;\r\n        fee: FormControl<string>;\r\n        push_payer: FormControl<boolean>;\r\n        hide_receiver: FormControl<boolean>;\r\n    }>;\r\n\r\n    addressItems$: Observable<string[]>;\r\n\r\n    loadingAddressItems$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\r\n\r\n    amountInputParams: AmountInputParams = {\r\n        decimalPoint: 0,\r\n        inputTicker: '',\r\n        hintTicker: '',\r\n        hintAmount: '',\r\n        reverseDisabled: false,\r\n    };\r\n\r\n    errorMessages: { [key: string]: string | undefined } = {\r\n        address: undefined,\r\n        fee: undefined,\r\n        amount: undefined,\r\n    };\r\n\r\n    public readonly pdcAssetInfo: PdcAssetInfo = pdcAssetInfo;\r\n\r\n    public priceInfo: PriceInfo = { success: false, data: 'Asset not found' };\r\n\r\n    private readonly _priceInfo$: Subject<PriceInfo> = new Subject();\r\n\r\n    private readonly _fb: NonNullableFormBuilder = inject(NonNullableFormBuilder);\r\n\r\n    private readonly _httpClient: HttpClient = inject(HttpClient);\r\n\r\n    private readonly _destroy$: Subject<void> = new Subject<void>();\r\n\r\n    private readonly _backendService: BackendService = inject(BackendService);\r\n\r\n    private readonly _ngZone: NgZone = inject(NgZone);\r\n\r\n    private readonly _translateService: TranslateService = inject(TranslateService);\r\n\r\n    private readonly _walletsService: WalletsService = inject(WalletsService);\r\n\r\n    private readonly _openedWalletItems: string[] = this._walletsService.wallets.map(({ address, alias }) => alias?.name ?? address);\r\n\r\n    private readonly _aliasItems: string[] = this.variablesService.aliases.map(({ name }) => name);\r\n\r\n    constructor() {\r\n        this._getWrapInfo();\r\n\r\n        this._createForm();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._destroy$.next();\r\n        this._destroy$.complete();\r\n    }\r\n\r\n    updateAddressErrorMessage(): void {\r\n        const {\r\n            controls: { address },\r\n        } = this.form;\r\n        let message: string | undefined;\r\n\r\n        switch (true) {\r\n            case address.hasError('address_not_valid'): {\r\n                message = 'SEND.FORM_ERRORS.ADDRESS_NOT_VALID';\r\n                break;\r\n            }\r\n            case address.hasError('alias_not_found'): {\r\n                message = 'SEND.FORM_ERRORS.ALIAS_NOT_FOUND';\r\n                break;\r\n            }\r\n            case address.hasError('alias_not_valid'): {\r\n                message = 'SEND.FORM_ERRORS.ALIAS_NOT_VALID';\r\n                break;\r\n            }\r\n            case address.hasError('required'): {\r\n                message = 'ERRORS.REQUIRED';\r\n                break;\r\n            }\r\n        }\r\n        this.errorMessages['address'] = message;\r\n    }\r\n\r\n    updateAmountErrorMessage(): void {\r\n        const {\r\n            controls: { amount },\r\n        } = this.form;\r\n        let message: string | undefined;\r\n\r\n        switch (true) {\r\n            case amount.hasError('zero'): {\r\n                message = 'SEND.FORM_ERRORS.AMOUNT_ZERO';\r\n                break;\r\n            }\r\n            case amount.hasError('great_than_unwraped_coins'): {\r\n                message = 'SEND.FORM_ERRORS.GREAT_THAN_UNWRAPPED_COINS';\r\n                break;\r\n            }\r\n            case amount.hasError('less_than_pdc_needed'): {\r\n                message = 'SEND.FORM_ERRORS.LESS_THAN_PDC_NEEDED';\r\n                break;\r\n            }\r\n            case amount.hasError('wrap_info_null'): {\r\n                message = 'SEND.FORM_ERRORS.WRAP_INFO_NULL';\r\n                break;\r\n            }\r\n            case amount.hasError('required'): {\r\n                message = 'ERRORS.REQUIRED';\r\n                break;\r\n            }\r\n            case this.form.hasError('insuficcientFunds'): {\r\n                message = this.form.errors['insuficcientFunds'].errorText;\r\n                break;\r\n            }\r\n            case this.form.hasError('greater_than_maximum_amount'): {\r\n                message = this._translateService.instant('ERRORS.MAX', { max: this.form.errors['greater_than_maximum_amount'].max });\r\n                break;\r\n            }\r\n            case this.form.hasError('asset_not_found'): {\r\n                message = 'ERRORS.ASSET_NOT_FOUND';\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.errorMessages['amount'] = message;\r\n    }\r\n\r\n    updateFeeErrorMessage(): void {\r\n        const {\r\n            controls: { fee },\r\n        } = this.form;\r\n        let message: string | undefined;\r\n\r\n        switch (true) {\r\n            case fee.hasError('less_min'): {\r\n                const { default_fee } = this.variablesService;\r\n                message = this._translateService.instant('SEND.FORM_ERRORS.FEE_MINIMUM', { fee: default_fee });\r\n                break;\r\n            }\r\n            case fee.hasError('required'): {\r\n                message = 'SEND.FORM_ERRORS.FEE_REQUIRED';\r\n                break;\r\n            }\r\n            case fee.hasError('greater_than_max_amount'): {\r\n                const { maximum_value } = this.variablesService;\r\n                const { decimal_point } = pdcAssetInfo;\r\n                const max = intToMoney(maximum_value, decimal_point);\r\n                message = this._translateService.instant('ERRORS.MAX', { max });\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.errorMessages['fee'] = message;\r\n    }\r\n\r\n    isVisibleError(control: AbstractControl): boolean {\r\n        return control.invalid && (control.dirty || control.touched);\r\n    }\r\n\r\n    beforeSubmit(): void {\r\n        this.isSendModalState = true;\r\n    }\r\n\r\n    handleConfirmed(confirmed: boolean): void {\r\n        this.isSendModalState = false;\r\n        if (confirmed) {\r\n            this.submit();\r\n        }\r\n    }\r\n\r\n    submit(): void {\r\n        let sendMoneyParams = this.form.getRawValue();\r\n\r\n        const { address, asset_id, isAmountUSD, hide_receiver } = sendMoneyParams;\r\n        let { amount } = sendMoneyParams;\r\n\r\n        const { currentWallet } = this.variablesService;\r\n        const asset: AssetBalance | undefined = currentWallet.getBalanceByAssetId(asset_id);\r\n\r\n        if (asset) {\r\n            const convertedAmountUSD = (): string => {\r\n                let usd = 0;\r\n\r\n                if (typeof this.priceInfo.data === 'object') {\r\n                    const { data } = this.priceInfo;\r\n                    usd = data.usd;\r\n                }\r\n\r\n                let decimal_point = 0;\r\n\r\n                if (asset) {\r\n                    const { asset_info } = asset;\r\n                    decimal_point = asset_info.decimal_point;\r\n                }\r\n\r\n                const convertedAmount = new BigNumber(amount || 0).dividedBy(usd || 0).decimalPlaces(decimal_point);\r\n\r\n                return convertedAmount.toString();\r\n            };\r\n\r\n            amount = isAmountUSD ? convertedAmountUSD() : amount;\r\n\r\n            sendMoneyParams = {\r\n                ...sendMoneyParams,\r\n                amount,\r\n            };\r\n        } else {\r\n            this.form.controls.asset_id.setErrors({\r\n                asset_not_found: true,\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (address.indexOf('@') === 0) {\r\n            const aliasName = address;\r\n            const { aliases } = this.variablesService;\r\n            const alias = aliases.find(({ name }) => name === aliasName);\r\n\r\n            if (!alias) {\r\n                this.form.controls.address.setErrors({\r\n                    alias_not_found: true,\r\n                });\r\n                return;\r\n            }\r\n\r\n            sendMoneyParams = {\r\n                ...sendMoneyParams,\r\n                address: alias.address,\r\n            };\r\n        }\r\n\r\n        // Remove unused param\r\n        delete sendMoneyParams.isAmountUSD;\r\n\r\n        sendMoneyParams = {\r\n            ...sendMoneyParams,\r\n            // Need to send \"true\" if the value is \"false\" and \"false\" if the value is \"true\"\r\n            hide_receiver: !hide_receiver,\r\n        };\r\n\r\n        this._backendService.sendMoney(sendMoneyParams, (job_id: number) => {\r\n            this._ngZone.run(() => {\r\n                this.job_id = job_id;\r\n                this.isSendDetailsModalState = true;\r\n                this.variablesService.currentWallet.sendMoneyParams = null;\r\n            });\r\n        });\r\n    }\r\n\r\n    getReceivedValue(): number | BigNumber {\r\n        const {\r\n            controls: {\r\n                amount: { value: amount },\r\n                isAmountUSD: { value: isAmountUSD },\r\n                asset_id: { value: asset_id },\r\n            },\r\n        } = this.form;\r\n\r\n        const convertedAmountUSD = (): string => {\r\n            let usd = 0;\r\n\r\n            if (typeof this.priceInfo.data === 'object') {\r\n                const { data } = this.priceInfo;\r\n                usd = data.usd;\r\n            }\r\n\r\n            let decimal_point = 0;\r\n            const { currentWallet } = this.variablesService;\r\n            const asset: AssetBalance | undefined = currentWallet.getBalanceByAssetId(asset_id);\r\n\r\n            if (asset) {\r\n                const { asset_info } = asset;\r\n                decimal_point = asset_info.decimal_point;\r\n            }\r\n\r\n            const convertedAmount = new BigNumber(amount || 0).dividedBy(usd || 0).decimalPlaces(decimal_point);\r\n\r\n            return convertedAmount.toString();\r\n        };\r\n        const preparedAmount: BigNumber = moneyToInt(isAmountUSD ? convertedAmountUSD() : amount || '0');\r\n\r\n        const {\r\n            tx_cost: { pdc_needed_for_erc20 },\r\n        } = this.wrapInfo;\r\n        const needed: BigNumber = new BigNumber(pdc_needed_for_erc20);\r\n\r\n        if (preparedAmount && needed) {\r\n            return preparedAmount.minus(needed);\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    handeCloseSendDetailsModal(success: boolean): void {\r\n        this.isSendDetailsModalState = false;\r\n        this.job_id = null;\r\n\r\n        if (success) {\r\n            const { currentWallet } = this.variablesService;\r\n            const { wallet_id } = currentWallet;\r\n            currentWallet.sendMoneyParams = null;\r\n\r\n            this.form.reset({ ...defaultSendMoneyParams, wallet_id }, { emitEvent: false });\r\n        }\r\n    }\r\n\r\n    pasteListenAddressField(event: ClipboardEvent): void {\r\n        event.preventDefault();\r\n        const {\r\n            controls: { address },\r\n        } = this.form;\r\n        const { clipboardData } = event;\r\n        let value: string = clipboardData.getData('Text') ?? '';\r\n        this.lowerCaseDisabled$.next(value.indexOf('@') !== 0);\r\n\r\n        if (value.indexOf('@') === 0) {\r\n            value = value.toLowerCase();\r\n        }\r\n\r\n        address.patchValue(value);\r\n    }\r\n\r\n    trackByFn(index: number, value: string): number | string {\r\n        return value ?? index;\r\n    }\r\n\r\n    toggleAmountUSD(): void {\r\n        const { isAmountUSD } = this.form.getRawValue();\r\n        this.form.controls.isAmountUSD.patchValue(!isAmountUSD);\r\n    }\r\n\r\n    private _createForm(): void {\r\n        const { currentWallet, default_fee, maxCommentLength, maximum_value } = this.variablesService;\r\n\r\n        let params: SendMoneyFormParams;\r\n\r\n        if (currentWallet.sendMoneyParams) {\r\n            params = currentWallet.sendMoneyParams;\r\n        } else {\r\n            params = {\r\n                ...defaultSendMoneyParams,\r\n                wallet_id: currentWallet.wallet_id,\r\n                fee: default_fee,\r\n            };\r\n        }\r\n\r\n        if (currentWallet.is_auditable && !currentWallet.is_watch_only) {\r\n            params.hide_receiver = true;\r\n        }\r\n\r\n        if (currentWallet.is_auditable) {\r\n            params.mixin = 0;\r\n        }\r\n\r\n        const state = history.state || {};\r\n        const history_asset: AssetBalance = state['asset'];\r\n\r\n        if (history_asset) {\r\n            const {\r\n                asset_info: { asset_id, decimal_point },\r\n            } = history_asset;\r\n            params.asset_id = asset_id;\r\n            if (params.amount) {\r\n                params.amount = intToMoney(moneyToInt(params.amount, decimal_point), decimal_point);\r\n            }\r\n        }\r\n\r\n        this.form = this._fb.group(\r\n            {\r\n                wallet_id: this._fb.control<number>(params.wallet_id, {\r\n                    validators: [Validators.required],\r\n                }),\r\n                address: this._fb.control<string>(params.address, {\r\n                    validators: [\r\n                        Validators.required,\r\n                        (control: AbstractControl): ValidationErrors | null => {\r\n                            this.aliasAddress = '';\r\n                            this.isVisibleWrapInfoState$.next(false);\r\n                            if (control.value) {\r\n                                if (control.value.indexOf('@') !== 0) {\r\n                                    this._backendService.validateAddress(control.value, (valid_status, data) => {\r\n                                        this._ngZone.run(() => {\r\n                                            this.isVisibleWrapInfoState$.next(data.error_code === 'WRAP');\r\n                                            if (data.error_code === 'WRAP') {\r\n                                                this.form.controls.asset_id.patchValue(pdcAssetInfo.asset_id);\r\n                                            }\r\n\r\n                                            if (valid_status === false && !this.isVisibleWrapInfoState$.value) {\r\n                                                control.setErrors(Object.assign({ address_not_valid: true }, control.errors));\r\n                                            } else {\r\n                                                if (control.hasError('address_not_valid')) {\r\n                                                    delete control.errors['address_not_valid'];\r\n                                                    if (Object.keys(control.errors).length === 0) {\r\n                                                        control.setErrors(null);\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        });\r\n                                    });\r\n                                    return control.hasError('address_not_valid') ? { address_not_valid: true } : null;\r\n                                } else {\r\n                                    if (!regExpAliasName.test(control.value)) {\r\n                                        return { alias_not_valid: true };\r\n                                    } else {\r\n                                        this._backendService.getAliasInfoByName(\r\n                                            control.value.replace('@', ''),\r\n                                            (alias_status, alias_data) => {\r\n                                                this._ngZone.run(() => {\r\n                                                    this.aliasAddress = alias_data.address;\r\n                                                    if (alias_status) {\r\n                                                        if (control.hasError('alias_not_found')) {\r\n                                                            delete control.errors['alias_not_found'];\r\n                                                            if (Object.keys(control.errors).length === 0) {\r\n                                                                control.setErrors(null);\r\n                                                            }\r\n                                                        }\r\n                                                    } else {\r\n                                                        control.setErrors(Object.assign({ alias_not_found: true }, control.errors));\r\n                                                    }\r\n                                                });\r\n                                            }\r\n                                        );\r\n                                    }\r\n                                    return control.hasError('alias_not_found') ? { alias_not_found: true } : null;\r\n                                }\r\n                            }\r\n                            return null;\r\n                        },\r\n                    ],\r\n                }),\r\n                amount: this._fb.control<string>(params.amount, {\r\n                    validators: [\r\n                        Validators.required,\r\n                        ({ value }: AbstractControl): ValidationErrors | null => {\r\n                            const isZero: boolean = new BigNumber(value).eq(0);\r\n\r\n                            if (isZero) {\r\n                                return { zero: true };\r\n                            }\r\n\r\n                            return null;\r\n                        },\r\n                    ],\r\n                }),\r\n                isAmountUSD: this._fb.control<boolean>(params.isAmountUSD),\r\n                comment: this._fb.control<string>(params.comment, {\r\n                    validators: [Validators.maxLength(maxCommentLength)],\r\n                }),\r\n                asset_id: this._fb.control<string>(params.asset_id, {\r\n                    validators: [Validators.required],\r\n                }),\r\n                mixin: this._fb.control<number>(\r\n                    { value: params.mixin, disabled: currentWallet.is_auditable },\r\n                    {\r\n                        validators: [Validators.required, Validators.min(0), Validators.max(1000)],\r\n                    }\r\n                ),\r\n                fee: this._fb.control<string>(params.fee, {\r\n                    validators: [\r\n                        Validators.required,\r\n                        (control: AbstractControl): ValidationErrors | null => {\r\n                            const max: BigNumber = new BigNumber(intToMoney(maximum_value, pdcAssetInfo.decimal_point));\r\n                            const amount: BigNumber = new BigNumber(control.value);\r\n                            return amount.isGreaterThan(max) ? { greater_than_max_amount: { max: max.toString() } } : null;\r\n                        },\r\n                        ({ value }: FormControl): ValidationErrors | null => {\r\n                            if (new BigNumber(value).isLessThan(default_fee)) {\r\n                                return { less_min: true };\r\n                            }\r\n                            return null;\r\n                        },\r\n                    ],\r\n                }),\r\n                push_payer: this._fb.control(params.push_payer),\r\n                hide_receiver: this._fb.control<boolean>({\r\n                    value: params.hide_receiver,\r\n                    disabled: currentWallet.is_auditable && !currentWallet.is_watch_only,\r\n                }),\r\n            },\r\n            {\r\n                validators: [\r\n                    (form: FormGroup): ValidationErrors | null => {\r\n                        const asset_id = form.controls.asset_id.value;\r\n                        const isAmountUSD = form.controls.isAmountUSD.value;\r\n\r\n                        const convertedAmountUSD = (): BigNumber => {\r\n                            let usd = 0;\r\n                            if (typeof this.priceInfo.data === 'object') {\r\n                                const { data } = this.priceInfo;\r\n                                usd = data.usd;\r\n                            }\r\n                            return new BigNumber(form.controls.amount.value).dividedBy(usd);\r\n                        };\r\n\r\n                        const amount: BigNumber = isAmountUSD ? convertedAmountUSD() : new BigNumber(form.controls.amount.value);\r\n\r\n                        const assetBalance: AssetBalance | undefined = currentWallet.getBalanceByAssetId(asset_id);\r\n\r\n                        if (this.isVisibleWrapInfoState$.value) {\r\n                            let error = null;\r\n\r\n                            if (!this.wrapInfo) {\r\n                                error = { wrap_info_null: true };\r\n                            }\r\n\r\n                            if (amount.isGreaterThan(intToMoney(new BigNumber(this.wrapInfo.unwraped_coins_left)))) {\r\n                                error = { great_than_unwraped_coins: true };\r\n                            }\r\n\r\n                            if (amount.isLessThan(intToMoney(new BigNumber(this.wrapInfo.tx_cost.pdc_needed_for_erc20)))) {\r\n                                error = { less_than_pdc_needed: true };\r\n                            }\r\n\r\n                            if (error) {\r\n                                form.controls.amount.setErrors(error);\r\n                            }\r\n                        }\r\n\r\n                        if (!assetBalance) {\r\n                            return {\r\n                                asset_not_found: true,\r\n                            };\r\n                        }\r\n\r\n                        const {\r\n                            unlocked,\r\n                            asset_info: { decimal_point },\r\n                        } = assetBalance;\r\n\r\n                        const maximum_amount_by_decimal_point = intToMoney(this.variablesService.maximum_value, decimal_point);\r\n                        if (amount.isGreaterThan(maximum_amount_by_decimal_point)) {\r\n                            return { greater_than_maximum_amount: { max: maximum_amount_by_decimal_point } };\r\n                        }\r\n\r\n                        const preparedUnlocked = intToMoney(unlocked, decimal_point);\r\n                        return amount.isGreaterThan(preparedUnlocked) ? { insuficcientFunds } : null;\r\n                    },\r\n                ],\r\n            }\r\n        );\r\n\r\n        this._listenSendActionData();\r\n\r\n        this._saveSendMoneyParams();\r\n\r\n        this._formListeners();\r\n\r\n        if (currentWallet.sendMoneyParams) {\r\n            this.form.markAllAsTouched();\r\n            this.form.updateValueAndValidity();\r\n            this._updateErrorMessages();\r\n        }\r\n    }\r\n\r\n    private _formListeners(): void {\r\n        const { currentWallet } = this.variablesService;\r\n        const { controls } = this.form;\r\n\r\n        combineLatest([\r\n            controls.asset_id.valueChanges.pipe(startWith(controls.asset_id.value)),\r\n            controls.isAmountUSD.valueChanges.pipe(startWith(controls.isAmountUSD.value), distinctUntilChanged()),\r\n            controls.amount.valueChanges.pipe(startWith(controls.amount.value)),\r\n            this._priceInfo$,\r\n        ])\r\n            .pipe(\r\n                map(([asset_id, isAmountUSD, amount, priceInfo]) => {\r\n                    const { decimal_point, ticker } = currentWallet.getBalanceByAssetId(asset_id)?.asset_info ?? {};\r\n\r\n                    const params: AmountInputParams = {\r\n                        decimalPoint: decimal_point,\r\n                        inputTicker: ticker,\r\n                        hintTicker: 'USD',\r\n                        hintAmount: '0',\r\n                        reverseDisabled: false,\r\n                    };\r\n\r\n                    const { success } = priceInfo;\r\n\r\n                    if (success) {\r\n                        const { data } = priceInfo;\r\n\r\n                        let usd = 0;\r\n\r\n                        if (typeof data === 'object') {\r\n                            usd = data.usd;\r\n                        }\r\n\r\n                        if (isAmountUSD) {\r\n                            params.decimalPoint = 2;\r\n                            params.inputTicker = 'USD';\r\n                            params.hintTicker = ticker;\r\n                            params.hintAmount = `~ ${new BigNumber(+amount ?? 0).dividedBy(usd ?? 0).decimalPlaces(decimal_point)}`;\r\n                        } else {\r\n                            params.decimalPoint = decimal_point;\r\n                            params.inputTicker = ticker;\r\n                            params.hintTicker = 'USD';\r\n                            params.hintAmount = `~ ${new BigNumber(usd ?? 0).multipliedBy(+amount ?? 0).decimalPlaces(2)}`;\r\n                        }\r\n                    } else {\r\n                        params.reverseDisabled = true;\r\n                        controls.isAmountUSD.patchValue(false);\r\n                    }\r\n\r\n                    return params;\r\n                })\r\n            )\r\n            .pipe(takeUntil(this._destroy$))\r\n            .subscribe({\r\n                next: params => {\r\n                    this.amountInputParams = params;\r\n                },\r\n            });\r\n\r\n        controls.asset_id.valueChanges\r\n            .pipe(\r\n                startWith(controls.asset_id.value),\r\n                switchMap(asset_id => {\r\n                    const default$ = of({\r\n                        success: false,\r\n                        data: 'Asset not found',\r\n                    });\r\n                    const price$ = this._httpClient.get<PriceInfo>(`https://explorer.pdc.org/api/price?asset_id=${asset_id}`).pipe(\r\n                        retry(5),\r\n                        catchError((err: Error) => {\r\n                            return default$;\r\n                        })\r\n                    );\r\n                    return pdcAssetInfo.asset_id === asset_id ? price$ : default$;\r\n                }),\r\n                takeUntil(this._destroy$)\r\n            )\r\n            .subscribe({\r\n                next: (value: PriceInfo) => {\r\n                    this.priceInfo = value;\r\n                    this._priceInfo$.next(value);\r\n\r\n                    this.form.controls.amount.updateValueAndValidity({ emitEvent: false });\r\n                },\r\n            });\r\n\r\n        merge(controls.address.statusChanges, controls.address.valueChanges)\r\n            .pipe(takeUntil(this._destroy$))\r\n            .subscribe((): void => this.updateAddressErrorMessage());\r\n\r\n        merge(controls.amount.statusChanges, controls.amount.valueChanges, this.form.statusChanges, this.form.valueChanges)\r\n            .pipe(takeUntil(this._destroy$))\r\n            .subscribe((): void => this.updateAmountErrorMessage());\r\n\r\n        merge(controls.fee.statusChanges, controls.fee.valueChanges)\r\n            .pipe(takeUntil(this._destroy$))\r\n            .subscribe((): void => this.updateFeeErrorMessage());\r\n\r\n        this.addressItems$ = controls.address.valueChanges.pipe(\r\n            startWith(controls.address.value),\r\n            tap(value => {\r\n                const condition = value[0] === '@';\r\n                this.lowerCaseDisabled$.next(!condition);\r\n                this.loadingAddressItems$.next(condition);\r\n            }),\r\n            debounceTime(250),\r\n            map(value => {\r\n                if (!value?.length) {\r\n                    return this._openedWalletItems;\r\n                }\r\n                if (value[0] === '@') {\r\n                    return this._aliasItems.filter(name => {\r\n                        return name.includes(value);\r\n                    });\r\n                }\r\n                return [];\r\n            }),\r\n            tap(() => this.loadingAddressItems$.next(false))\r\n        );\r\n    }\r\n\r\n    private _updateErrorMessages(): void {\r\n        this.updateAddressErrorMessage();\r\n        this.updateAmountErrorMessage();\r\n        this.updateFeeErrorMessage();\r\n    }\r\n\r\n    private _saveSendMoneyParams(): void {\r\n        const { valueChanges } = this.form;\r\n        const { currentWallet } = this.variablesService;\r\n        valueChanges.pipe(debounceTime(200), takeUntil(this._destroy$)).subscribe({\r\n            next: (): void => {\r\n                currentWallet.sendMoneyParams = this.form.getRawValue();\r\n            },\r\n        });\r\n    }\r\n\r\n    private _getWrapInfo(): void {\r\n        this.wrapInfoService\r\n            .getWrapInfo()\r\n            .pipe(\r\n                tap(() => this.loadingWrapInfo$.next(true)),\r\n                retry(5),\r\n                takeUntil(this._destroy$)\r\n            )\r\n            .subscribe({\r\n                next: (wrapInfo: WrapInfo) => {\r\n                    this.wrapInfo = wrapInfo;\r\n                    this.loadingWrapInfo$.next(false);\r\n                },\r\n                error: () => {\r\n                    this.loadingWrapInfo$.next(false);\r\n                },\r\n                complete: () => {\r\n                    this.loadingWrapInfo$.next(false);\r\n                },\r\n            });\r\n    }\r\n\r\n    private _listenSendActionData(): void {\r\n        this.variablesService.sendActionData$.pipe(takeUntil(this._destroy$)).subscribe({\r\n            next: (value: DeeplinkParams) => {\r\n                if (value && value.action === 'send') {\r\n                    const { address, amount, comment, comments, mixins, fee, hide_sender, hide_receiver } = value;\r\n                    this.isVisibleAdditionalOptionsState = true;\r\n                    this.form.patchValue({\r\n                        address,\r\n                        amount: amount || null,\r\n                        comment: comment || comments || '',\r\n                        mixin: +mixins || MIXIN,\r\n                        asset_id: pdcAssetInfo.asset_id,\r\n                        fee: fee || this.variablesService.default_fee,\r\n                        push_payer: hide_sender === 'false',\r\n                        hide_receiver: hide_receiver === 'false',\r\n                    });\r\n                    this.variablesService.sendActionData$.next({});\r\n                }\r\n            },\r\n        });\r\n    }\r\n}\r\n","<div class=\"container scrolled-content\" fxFlex=\"1 1 auto\">\r\n    <form (ngSubmit)=\"beforeSubmit()\" [formGroup]=\"form\" class=\"form\" fxFlex=\"0 1 50rem\" fxLayout=\"column\"\r\n          fxLayoutAlign=\"start stretch\">\r\n        <div class=\"form__field--row\">\r\n            <!-- Address -->\r\n            <ng-container\r\n                *ngIf=\"{\r\n                    items: addressItems$ | async,\r\n                    loading: loadingAddressItems$ | async,\r\n                    lowerCaseDisabled: lowerCaseDisabled$ | async\r\n                } as vm\"\r\n            >\r\n                <div class=\"form__field fixed\">\r\n                    <label for=\"address\">\r\n                        {{ 'SEND.ADDRESS' | translate }}\r\n                        <span class=\"color-red\">*</span>\r\n                    </label>\r\n\r\n                    <input\r\n                        (blur)=\"updateAddressErrorMessage()\"\r\n                        (contextmenu)=\"variablesService.onContextMenu($event)\"\r\n                        (paste)=\"pasteListenAddressField($event)\"\r\n                        [lowerCaseDisabled]=\"vm.lowerCaseDisabled\"\r\n                        [matAutocomplete]=\"auto\"\r\n                        [placeholder]=\"'PLACEHOLDERS.ADDRESS_PLACEHOLDER' | translate\"\r\n                        class=\"form__field--input\"\r\n                        formControlName=\"address\"\r\n                        id=\"address\"\r\n                        lowerCase\r\n                        matAutocompletePosition=\"below\"\r\n                        type=\"text\"\r\n                    />\r\n\r\n                    <mat-autocomplete #auto=\"matAutocomplete\" class=\"pdc-autocomplete-panel\">\r\n                        <mat-option *ngIf=\"vm.loading\" class=\"loading\" disabled>\r\n                            <pdc-loader class=\"mx-auto\" style=\"display: block; width: fit-content\"></pdc-loader>\r\n                        </mat-option>\r\n\r\n                        <mat-option\r\n                            *ngIf=\"form.controls.address.value[0] === '@' && vm.items?.length === 0 && !vm.loading\"\r\n                            disabled>\r\n                            <span class=\"pl-1\"> Not found aliases </span>\r\n                        </mat-option>\r\n\r\n                        <ng-container *ngIf=\"!vm.loading\">\r\n                            <mat-option *ngFor=\"let item of vm.items; trackBy: trackByFn\" [value]=\"item\">\r\n                                <!-- Alias -->\r\n                                <ng-container *ngIf=\"item[0] === '@'; else itemAddressTemplate\">\r\n                                    <div\r\n                                        [ngClass]=\"{\r\n                                            available: item.length >= 2 && item.length <= 6,\r\n                                            'pl-1': item.length > 6\r\n                                        }\"\r\n                                        class=\"alias\"\r\n                                    >\r\n                                        {{ item }}\r\n                                    </div>\r\n                                </ng-container>\r\n                                <!-- Address -->\r\n                                <ng-template #itemAddressTemplate>\r\n                                    <span class=\"pl-1\">{{ item | pdcShortString }}</span>\r\n                                </ng-template>\r\n                            </mat-option>\r\n                        </ng-container>\r\n                    </mat-autocomplete>\r\n\r\n                    <div *ngIf=\"isVisibleError(form.controls.address)\" class=\"error\">\r\n                        {{ errorMessages['address'] | translate }}\r\n                    </div>\r\n\r\n                    <div *ngIf=\"aliasAddress\" class=\"info text-ellipsis\">\r\n                        <span>{{ aliasAddress | pdcShortString }}</span>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n\r\n            <!-- Amount -->\r\n            <div class=\"form__field fixed amount\">\r\n                <label for=\"send-amount\">\r\n                    {{ 'SEND.AMOUNT' | translate }}\r\n                    <span class=\"color-red\">*</span>\r\n                </label>\r\n\r\n                <input\r\n                    (contextmenu)=\"variablesService.onContextMenu($event)\"\r\n                    [decimalPoint]=\"amountInputParams.decimalPoint\"\r\n                    [placeholder]=\"form.value.isAmountUSD ? '0.00' : '0'\"\r\n                    appInputValidate=\"money\"\r\n                    class=\"form__field--input\"\r\n                    formControlName=\"amount\"\r\n                    id=\"send-amount\"\r\n                    type=\"text\"\r\n                />\r\n\r\n                <button (click)=\"toggleAmountUSD()\" [disabled]=\"amountInputParams.reverseDisabled\" class=\"btn-reverse\"\r\n                        type=\"button\">\r\n                    <mat-icon class=\"small\" svgIcon=\"pdc-swap\"></mat-icon>\r\n                </button>\r\n\r\n                <div\r\n                    [delay]=\"150\"\r\n                    [placement]=\"'bottom'\"\r\n                    [timeDelay]=\"1000\"\r\n                    [timeout]=\"0\"\r\n                    [tooltipClass]=\"'table-tooltip'\"\r\n                    [tooltip]=\"amountInputParams.inputTicker\"\r\n                    class=\"ticker\"\r\n                >\r\n                    <div class=\"text-ellipsis\">\r\n                        {{ amountInputParams.inputTicker }}\r\n                    </div>\r\n                </div>\r\n\r\n                <div *ngIf=\"!errorMessages['amount']\" class=\"hint text-ellipsis\">{{ amountInputParams.hintAmount }}\r\n                    {{ amountInputParams.hintTicker }}\r\n                </div>\r\n\r\n                <ng-container *ngIf=\"isVisibleError(form.controls.amount) || isVisibleError(form)\">\r\n                    <div class=\"error\" *ngIf=\"errorMessages['amount'] as message\">\r\n                        {{ message | translate }}\r\n                    </div>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Comment -->\r\n        <div class=\"form__field fixed\">\r\n            <label for=\"send-comment\">{{ 'SEND.COMMENT' | translate }}</label>\r\n            <input\r\n                (contextmenu)=\"variablesService.onContextMenu($event)\"\r\n                [maxLength]=\"variablesService.maxCommentLength\"\r\n                class=\"form__field--input\"\r\n                formControlName=\"comment\"\r\n                id=\"send-comment\"\r\n                placeholder=\"{{ 'PLACEHOLDERS.COMMENT_PLACEHOLDER' | translate }}\"\r\n                type=\"text\"\r\n            />\r\n            <div *ngIf=\"isVisibleError(form.controls.comment)\" class=\"error\">\r\n                <div *ngIf=\"form.controls.comment.hasError('maxLength')\">\r\n                    {{ 'SEND.FORM_ERRORS.MAX_LENGTH' | translate }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Wrap information -->\r\n        <ng-container *ngIf=\"isVisibleWrapInfoState$ | async\">\r\n            <div *ngIf=\"wrapInfo && !(loadingWrapInfo$ | async)\" class=\"wrap mt-2 mb-2 p-2\">\r\n                <div class=\"title\">\r\n                    {{ 'SEND.WRAP.TITLE' | translate }}\r\n                    <mat-icon svgIcon=\"pdc-info\"></mat-icon>\r\n                </div>\r\n                <div class=\"text-wrap\">\r\n                    {{ 'SEND.WRAP.MAIN_TEXT' | translate }}\r\n                </div>\r\n                <div class=\"title\">{{ 'SEND.WRAP.ESTIMATE' | translate }}</div>\r\n                <table class=\"text-wrap\">\r\n                    <tr>\r\n                        <td>{{ 'SEND.WRAP.WILL_RECEIVE' | translate }}</td>\r\n                        <td *ngIf=\"!form.controls.amount.errors\">\r\n                            {{ getReceivedValue() | intToMoney }}\r\n                            {{ 'SEND.WRAP.wPDC' | translate }}\r\n                        </td>\r\n                        <td *ngIf=\"form.controls.amount.errors\">-</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>{{ 'SEND.WRAP.FEE' | translate }}</td>\r\n                        <td>\r\n                            {{ wrapInfo?.tx_cost?.pdc_needed_for_erc20 | intToMoney : pdcAssetInfo.decimal_point }}\r\n                            {{ 'SEND.WRAP.PDC' | translate }}\r\n                            ({{ '$' + wrapInfo.tx_cost?.usd_needed_for_erc20 }})\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n        </ng-container>\r\n\r\n        <!-- Asset -->\r\n        <div class=\"form__field fixed\">\r\n            <label>\r\n                {{ 'SEND.ASSET' | translate }}\r\n                <span class=\"color-red\">*</span>\r\n            </label>\r\n            <ng-select\r\n                (change)=\"form.controls.amount.updateValueAndValidity()\"\r\n                [bindValue]=\"'asset_info.asset_id'\"\r\n                [clearable]=\"false\"\r\n                [items]=\"assetItems$ | async\"\r\n                [searchable]=\"false\"\r\n                class=\"custom-select with-circle\"\r\n                formControlName=\"asset_id\"\r\n            >\r\n                <ng-template let-asset=\"item\" ng-label-tmp ng-option-tmp>\r\n                    <div class=\"token-logo\" [innerHTML]=\"asset.asset_info | getLogoByAssetInfo\"></div>\r\n                    {{ asset.asset_info.full_name ?? '***' }}\r\n                    <ng-container *appVisibilityBalance>\r\n                        ({{ asset.total | intToMoney : asset.asset_info.decimal_point }} {{ asset.asset_info.ticker }})\r\n                    </ng-container>\r\n                </ng-template>\r\n            </ng-select>\r\n            <div *ngIf=\"isVisibleError(form.controls.asset_id) || isVisibleError(form)\" class=\"error\">\r\n                <div *ngIf=\"form.controls.asset_id.hasError('required')\">\r\n                    {{ 'ERRORS.REQUIRED' | translate }}\r\n                </div>\r\n                <div *ngIf=\"form.hasError('max_decimal_point')\">\r\n                    {{ 'ERRORS.MAX_DECIMAL_POINT' | translate : { max: form.errors['max_decimal_point'].max } }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Details -->\r\n        <div class=\"details mb-2\">\r\n            <button\r\n                (click)=\"isVisibleAdditionalOptionsState = !isVisibleAdditionalOptionsState\"\r\n                [class.border-radius-all]=\"!isVisibleAdditionalOptionsState\"\r\n                class=\"header\"\r\n                type=\"button\"\r\n            >\r\n                <span>{{ 'SEND.DETAILS' | translate }}</span>\r\n                <mat-icon\r\n                    [ngClass]=\"{\r\n                        'rotate-180': isVisibleAdditionalOptionsState\r\n                    }\"\r\n                    class=\"ml-1\"\r\n                    svgIcon=\"pdc-dropdown-arrow-down\"\r\n                ></mat-icon>\r\n            </button>\r\n\r\n            <div *ngIf=\"isVisibleAdditionalOptionsState\" class=\"content\">\r\n                <!--<div class=\"form__field&#45;&#45;row\">-->\r\n                <!-- MIXIN -->\r\n                <!--<div class=\"form__field fixed\">-->\r\n                <!--    <label for=\"send-mixin\">-->\r\n                <!--        {{ 'SEND.MIXIN' | translate }}-->\r\n                <!--        <span class=\"color-red\">*</span>-->\r\n                <!--    </label>-->\r\n                <!--    <input-->\r\n                <!--        (contextmenu)=\"variablesService.onContextMenu($event)\"-->\r\n                <!--        [placeholder]=\"'PLACEHOLDERS.AMOUNT_PLACEHOLDER' | translate\"-->\r\n                <!--        appInputValidate=\"integer\"-->\r\n                <!--        class=\"form__field&#45;&#45;input\"-->\r\n                <!--        formControlName=\"mixin\"-->\r\n                <!--        id=\"send-mixin\"-->\r\n                <!--        maxlength=\"3\"-->\r\n                <!--        type=\"text\"-->\r\n                <!--    />-->\r\n                <!--    <div *ngIf=\"isVisibleError(form.controls.mixin)\" class=\"error\">-->\r\n                <!--        <div *ngIf=\"form.controls.mixin.hasError('required')\">-->\r\n                <!--            {{ 'ERRORS.REQUIRED' | translate }}-->\r\n                <!--        </div>-->\r\n                <!--        <div *ngIf=\"form.controls.mixin.hasError('min')\">-->\r\n                <!--            {{ 'Min' }} {{ form.controls.mixin.getError('min')['min'] }}-->\r\n                <!--        </div>-->\r\n                <!--        <div *ngIf=\"form.controls.mixin.hasError('max')\">-->\r\n                <!--            {{ 'Max' }} {{ form.controls.mixin.getError('max')['max'] }}-->\r\n                <!--        </div>-->\r\n                <!--    </div>-->\r\n                <!--</div>-->\r\n\r\n                <!-- FEE -->\r\n                <div class=\"form__field fixed\">\r\n                    <label for=\"send-fee\">\r\n                        {{ 'SEND.FEE' | translate }}\r\n                        <span class=\"color-red\">*</span>\r\n                    </label>\r\n                    <input\r\n                        (blur)=\"updateFeeErrorMessage()\"\r\n                        (contextmenu)=\"variablesService.onContextMenu($event)\"\r\n                        [placeholder]=\"'PLACEHOLDERS.FEE_PLACEHOLDER' | translate\"\r\n                        appInputValidate=\"money\"\r\n                        class=\"form__field--input\"\r\n                        formControlName=\"fee\"\r\n                        id=\"send-fee\"\r\n                        type=\"text\"\r\n                    />\r\n                    <div *ngIf=\"isVisibleError(form.controls.fee)\" class=\"error\">\r\n                        {{ errorMessages['fee'] | translate }}\r\n                    </div>\r\n                </div>\r\n                <!--</div>-->\r\n\r\n                <!-- PUSH -->\r\n                <app-checkbox [label]=\"'SEND.INCLUDE_SENDER_ADDRESS' | translate\" class=\"mt-1\" formControlName=\"push_payer\"></app-checkbox>\r\n\r\n                <!-- HIDE -->\r\n                <app-checkbox [label]=\"'SEND.HIDE' | translate\" class=\"mt-1\" formControlName=\"hide_receiver\"></app-checkbox>\r\n            </div>\r\n        </div>\r\n\r\n        <button [disabled]=\"form.invalid || !variablesService.currentWallet.loaded\"\r\n                class=\"primary big max-w-19-rem w-100\" type=\"submit\">\r\n            {{ 'SEND.BUTTON' | translate }}\r\n        </button>\r\n    </form>\r\n</div>\r\n\r\n<app-send-modal\r\n    (confirmed)=\"handleConfirmed($event)\"\r\n    *ngIf=\"isSendModalState\"\r\n    [priceInfo]=\"priceInfo\"\r\n    [sendMoneyParams]=\"form.getRawValue()\"\r\n></app-send-modal>\r\n\r\n<app-send-details-modal\r\n    (eventClose)=\"handeCloseSendDetailsModal($event)\"\r\n    *ngIf=\"isSendDetailsModalState\"\r\n    [job_id]=\"job_id\"\r\n></app-send-details-modal>\r\n","import { AfterViewInit, Component, inject, NgZone, OnDestroy, OnInit } from '@angular/core';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { Chart } from 'angular-highcharts';\r\nimport { BackendService } from '@api/services/backend.service';\r\nimport { IntToMoneyPipe } from '@parts/pipes/int-to-money-pipe/int-to-money.pipe';\r\nimport { BigNumber } from 'bignumber.js';\r\nimport { combineLatest, skip, Subject } from 'rxjs';\r\nimport * as Highcharts from 'highcharts';\r\nimport { debounceTime, delay, filter, take, takeUntil, tap } from 'rxjs/operators';\r\nimport { NonNullableFormBuilder } from '@angular/forms';\r\n\r\ntype TPeriod = '1 week' | '2 week' | '1 month' | '3 month' | '6 month' | '1 year' | 'All';\r\n\r\ntype TGroup = 'day' | 'week' | 'month';\r\n\r\ninterface IPeriodItem {\r\n    title: string;\r\n    value: TPeriod;\r\n}\r\n\r\ninterface IGroupItem {\r\n    title: string;\r\n    value: TGroup;\r\n}\r\n\r\nconst periodItems: IPeriodItem[] = [\r\n    {\r\n        title: 'STAKING.PERIOD.WEEK1',\r\n        value: '1 week',\r\n    },\r\n    {\r\n        title: 'STAKING.PERIOD.WEEK2',\r\n        value: '2 week',\r\n    },\r\n    {\r\n        title: 'STAKING.PERIOD.MONTH1',\r\n        value: '1 month',\r\n    },\r\n    {\r\n        title: 'STAKING.PERIOD.MONTH3',\r\n        value: '3 month',\r\n    },\r\n    {\r\n        title: 'STAKING.PERIOD.MONTH6',\r\n        value: '6 month',\r\n    },\r\n    {\r\n        title: 'STAKING.PERIOD.YEAR',\r\n        value: '1 year',\r\n    },\r\n    {\r\n        title: 'STAKING.PERIOD.ALL',\r\n        value: 'All',\r\n    },\r\n];\r\n\r\nconst groupItems: IGroupItem[] = [\r\n    {\r\n        title: 'STAKING.GROUP.DAY',\r\n        value: 'day',\r\n    },\r\n    {\r\n        title: 'STAKING.GROUP.WEEK',\r\n        value: 'week',\r\n    },\r\n    {\r\n        title: 'STAKING.GROUP.MONTH',\r\n        value: 'month',\r\n    },\r\n];\r\n\r\n@Component({\r\n    selector: 'app-staking',\r\n    templateUrl: './staking.component.html',\r\n    styles: [\r\n        `\r\n            :host {\r\n                width: 100%;\r\n                height: auto;\r\n            }\r\n        `,\r\n    ],\r\n})\r\nexport class StakingComponent implements OnInit, AfterViewInit, OnDestroy {\r\n    public readonly variablesService: VariablesService = inject(VariablesService);\r\n\r\n    public chart: Chart;\r\n\r\n    public total: BigNumber = new BigNumber(0);\r\n\r\n    public pending = {\r\n        list: [],\r\n        total: new BigNumber(0),\r\n    };\r\n\r\n    get isShowStagingSwitch(): boolean {\r\n        const {\r\n            currentWallet: { is_watch_only, is_auditable },\r\n        } = this.variablesService;\r\n        const condition1: boolean = !is_auditable && !is_watch_only;\r\n        const condition2: boolean = is_auditable && !is_watch_only;\r\n        return condition1 || condition2;\r\n    }\r\n\r\n    get isShowPointerDetails(): boolean {\r\n        const { date, amount } = this.pointDetails;\r\n        return date !== null && amount !== null;\r\n    }\r\n\r\n    public periodItems: IPeriodItem[] = periodItems;\r\n\r\n    public groupItems: IGroupItem[] = groupItems;\r\n\r\n    private readonly _fb: NonNullableFormBuilder = inject(NonNullableFormBuilder);\r\n\r\n    public readonly filtersForm = this._fb.group({\r\n        group: this._fb.control<TGroup>('day'),\r\n        period: this._fb.control<TPeriod>('All'),\r\n    });\r\n\r\n    public pointDetails: { date: string; amount: any } = {\r\n        date: null,\r\n        amount: null,\r\n    };\r\n\r\n    public originalData = [];\r\n\r\n    private readonly _destroy$: Subject<void> = new Subject<void>();\r\n\r\n    private readonly _backendService: BackendService = inject(BackendService);\r\n\r\n    private readonly _ngZone: NgZone = inject(NgZone);\r\n\r\n    private readonly _intToMoneyPipe: IntToMoneyPipe = inject(IntToMoneyPipe);\r\n\r\n    private _cacheData: Map<string, { data: any[]; minDate: number }> = new Map();\r\n\r\n    ngOnInit(): void {\r\n        this.chart = new Chart({\r\n            title: { text: '' },\r\n            credits: { enabled: false },\r\n            exporting: { enabled: false },\r\n            legend: { enabled: false },\r\n            chart: {\r\n                type: 'line',\r\n                backgroundColor: 'transparent',\r\n            },\r\n            yAxis: {\r\n                min: 0,\r\n                tickAmount: 5,\r\n                title: {\r\n                    text: '',\r\n                },\r\n                gridLineColor: '#2b3644',\r\n                gridLineWidth: 2,\r\n                lineColor: '#2b3644',\r\n                lineWidth: 2,\r\n                tickWidth: 2,\r\n                tickLength: 120,\r\n                tickColor: '#2b3644',\r\n                labels: {\r\n                    y: -8,\r\n                    align: 'left',\r\n                    x: -120,\r\n                    style: {\r\n                        color: '#e0e0e0',\r\n                        fontSize: '13px',\r\n                    },\r\n                    format: '{value} ' + this.variablesService.defaultTicker,\r\n                },\r\n            },\r\n            xAxis: {\r\n                type: 'datetime',\r\n                gridLineColor: '#2b3644',\r\n                lineColor: '#2b3644',\r\n                lineWidth: 2,\r\n                tickWidth: 2,\r\n                tickLength: 10,\r\n                tickColor: '#2b3644',\r\n                labels: {\r\n                    style: {\r\n                        color: '#e0e0e0',\r\n                        fontSize: '13px',\r\n                    },\r\n                },\r\n                minPadding: 0,\r\n                maxPadding: 0,\r\n                minRange: 86400000, // tickInterval: 86400000,\r\n                minTickInterval: 3600000,\r\n            },\r\n            tooltip: {\r\n                enabled: false,\r\n            },\r\n            plotOptions: {\r\n                area: {\r\n                    fillColor: {\r\n                        linearGradient: {\r\n                            x1: 0,\r\n                            y1: 0,\r\n                            x2: 0,\r\n                            y2: 1,\r\n                        },\r\n                        stops: [\r\n                            [0, 'rgba(124,181,236,0.2)'],\r\n                            [1, 'rgba(124,181,236,0)'],\r\n                        ],\r\n                    },\r\n                    marker: {\r\n                        enabled: false,\r\n                        radius: 2,\r\n                    },\r\n                    lineWidth: 2,\r\n                    threshold: null,\r\n                },\r\n\r\n                series: {\r\n                    point: {\r\n                        events: {\r\n                            mouseOver: (obj): void => {\r\n                                this.pointDetails.date = obj.target['x'];\r\n                                this.pointDetails.amount = obj.target['y'];\r\n                            },\r\n                        },\r\n                    },\r\n                    events: {\r\n                        mouseOut: (): void => {\r\n                            this.pointDetails.date = null;\r\n                            this.pointDetails.amount = null;\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n            series: [\r\n                {\r\n                    type: 'area',\r\n                    data: [],\r\n                },\r\n            ],\r\n        });\r\n\r\n        this._restoreFiltersForm();\r\n        this._subscribeToHeightAppEvent();\r\n        this._subscribeToRefreshStakingEvent();\r\n        this._subscribeToFilterChanges();\r\n        this._subscribeToThemeChanges();\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.chart.ref$\r\n            .pipe(\r\n                delay(50),\r\n                tap(ref => ref.reflow()),\r\n                delay(50),\r\n                take(1)\r\n            )\r\n            .subscribe({\r\n                next: () => {\r\n                    this._getMiningHistory();\r\n                },\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._destroy$.next();\r\n        this._destroy$.complete();\r\n    }\r\n\r\n    private _restoreFiltersForm(): void {\r\n        const { stakingFilters } = this.variablesService.settings.filters;\r\n        if (stakingFilters) {\r\n            this.filtersForm.patchValue(stakingFilters);\r\n        }\r\n    }\r\n\r\n    private _subscribeToHeightAppEvent(): void {\r\n        const { getHeightAppEvent } = this.variablesService;\r\n\r\n        getHeightAppEvent.pipe(takeUntil(this._destroy$)).subscribe({\r\n            next: (newHeight: number) => {\r\n                if (this.pending.total.isZero()) {\r\n                    return;\r\n                }\r\n\r\n                this._updatePendingList(newHeight);\r\n            },\r\n        });\r\n    }\r\n\r\n    private _updatePendingList(newHeight: number): void {\r\n        this.pending.list = this.pending.list.filter(item => newHeight - item.h < 10);\r\n        this.pending.total = this.pending.list.reduce((total, item) => total.plus(item.a), new BigNumber(0));\r\n    }\r\n\r\n    private _subscribeToRefreshStakingEvent(): void {\r\n        this.variablesService.refreshStakingEvent$.pipe(takeUntil(this._destroy$)).subscribe({\r\n            next: () => {\r\n                this._getMiningHistory();\r\n                this._changePeriod();\r\n            }\r\n        });\r\n    }\r\n\r\n    private _subscribeToFilterChanges(): void {\r\n        this.filtersForm.valueChanges.pipe(debounceTime(250), takeUntil(this._destroy$)).subscribe({\r\n            next: () => {\r\n                this.variablesService.settings.filters.stakingFilters = this.filtersForm.getRawValue();\r\n                this._changePeriod();\r\n            },\r\n        });\r\n    }\r\n\r\n    private _subscribeToThemeChanges(): void {\r\n        combineLatest([this.chart.ref$, this.variablesService.isDarkTheme$])\r\n            .pipe(takeUntil(this._destroy$))\r\n            .subscribe({\r\n                next: ([ref, isDarkTheme]) => {\r\n                    const options = isDarkTheme ? this._getDarkThemeOptions() : this._getLightThemeOptions();\r\n                    ref.update(options, true);\r\n                },\r\n            });\r\n    }\r\n\r\n    private _getDarkThemeOptions(): Highcharts.Options {\r\n        return {\r\n            plotOptions: {\r\n                area: {\r\n                    fillColor: {\r\n                        linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\r\n                        stops: [\r\n                            [0, 'rgba(124,181,236,0.2)'],\r\n                            [1, 'rgba(124,181,236,0)'],\r\n                        ],\r\n                    },\r\n                    marker: { enabled: false, radius: 2 },\r\n                    lineWidth: 2,\r\n                    threshold: null,\r\n                },\r\n            },\r\n            yAxis: {\r\n                gridLineColor: '#2b3644',\r\n                lineColor: '#2b3644',\r\n                tickColor: '#2b3644',\r\n                labels: { style: { color: '#e0e0e0' } },\r\n            },\r\n            xAxis: {\r\n                gridLineColor: '#2b3644',\r\n                lineColor: '#2b3644',\r\n                tickColor: '#2b3644',\r\n                labels: { style: { color: '#e0e0e0' } },\r\n            },\r\n        };\r\n    }\r\n\r\n    private _getLightThemeOptions(): Highcharts.Options {\r\n        return {\r\n            plotOptions: {\r\n                area: {\r\n                    color: '#1F8FEB',\r\n                    marker: { enabled: false, radius: 2 },\r\n                    lineWidth: 2,\r\n                    threshold: null,\r\n                },\r\n            },\r\n            yAxis: {\r\n                gridLineColor: '#1F8FEB20',\r\n                lineColor: '#1F8FEB20',\r\n                tickColor: '#1F8FEB20',\r\n                labels: { style: { color: '#0C0C3A' } },\r\n            },\r\n            xAxis: {\r\n                gridLineColor: '#1F8FEB20',\r\n                lineColor: '#1F8FEB20',\r\n                tickColor: '#1F8FEB20',\r\n                labels: { style: { color: '#0C0C3A' } },\r\n            },\r\n        };\r\n    }\r\n\r\n    private _getMiningHistory(): void {\r\n        const wallet = this.variablesService.currentWallet;\r\n\r\n        const { wallet_id, loaded } = wallet;\r\n\r\n        if (!loaded) {\r\n            return;\r\n        }\r\n\r\n        this._backendService.getMiningHistory(wallet_id, (_, data) => {\r\n            this._ngZone.run(() => {\r\n                this._cacheData.clear();\r\n                this._processMiningHistoryData(data);\r\n            });\r\n        });\r\n    }\r\n\r\n    private _processMiningHistoryData(data: any): void {\r\n        this.total = new BigNumber(0);\r\n        this.pending.list = [];\r\n        this.pending.total = new BigNumber(0);\r\n        this.originalData = [];\r\n\r\n        if (!data.mined_entries) {\r\n            return;\r\n        }\r\n\r\n        data.mined_entries.forEach(item => {\r\n            this._processMinedEntry(item);\r\n        });\r\n\r\n        this.originalData.sort((a, b) => a[0] - b[0]);\r\n        this._changePeriod();\r\n    }\r\n\r\n    private _processMinedEntry(item: any): void {\r\n        const timestamp = item.t.toString().length === 10 ? item.t * 1000 : item.t;\r\n        item.t = new Date(timestamp).setUTCMilliseconds(0);\r\n\r\n        this.total = this.total.plus(item.a);\r\n\r\n        if (this.variablesService.height_app - item.h < 10) {\r\n            this.pending.list.push(item);\r\n            this.pending.total = this.pending.total.plus(item.a);\r\n        }\r\n\r\n        this.originalData.push([parseInt(item.t, 10), parseFloat(this._intToMoneyPipe.transform(item.a))]);\r\n    }\r\n\r\n    private _changePeriod(): void {\r\n        this.chart.ref$.pipe(take(1)).subscribe({\r\n            next: ref => {\r\n                const formValue = this.filtersForm.getRawValue();\r\n                const { group, period } = formValue;\r\n                const currentDate = new Date();\r\n\r\n                const periodsConfig = {\r\n                    '1 week': 7,\r\n                    '2 week': 14,\r\n                    '1 month': 30,\r\n                    '3 month': 90,\r\n                    '6 month': 180,\r\n                    '1 year': 365,\r\n                };\r\n\r\n                let data = [];\r\n                let minDate;\r\n                const cacheKey = `${group}-${period}`;\r\n                if (this._cacheData.has(cacheKey)) {\r\n                    const cacheData = this._cacheData.get(cacheKey);\r\n                    data = cacheData.data;\r\n                    minDate = cacheData.minDate;\r\n                } else {\r\n                    data = this._getGroupedData(this.originalData, group);\r\n                    minDate = this._getMinDateForPeriod(period, currentDate, periodsConfig);\r\n                    this._cacheData.set(cacheKey, { data, minDate });\r\n                }\r\n\r\n                ref.series[0].setData([...data], true);\r\n                ref.xAxis[0].setExtremes(minDate, null);\r\n                ref.reflow();\r\n            },\r\n        });\r\n    }\r\n\r\n    private _getGroupedData(data: any[], group: TGroup): any[] {\r\n        const groupedData = [];\r\n\r\n        data.forEach(item => {\r\n            const time = this._makeGroupTime(group, new Date(item[0]));\r\n            const existingItem = groupedData.find(newItem => newItem[0] === time);\r\n\r\n            if (existingItem) {\r\n                existingItem[1] = new BigNumber(existingItem[1]).plus(item[1]).toNumber();\r\n            } else {\r\n                groupedData.push([time, item[1]]);\r\n            }\r\n        });\r\n\r\n        return groupedData;\r\n    }\r\n\r\n    private _makeGroupTime(group: TGroup, date: Date): number {\r\n        if (group === 'day') {\r\n            return date.setHours(0, 0, 0, 0);\r\n        } else if (group === 'week') {\r\n            return new Date(date.setDate(date.getDate() - date.getDay())).setHours(0, 0, 0, 0);\r\n        } else {\r\n            return new Date(date.setDate(1)).setHours(0, 0, 0, 0);\r\n        }\r\n    }\r\n\r\n    private _getMinDateForPeriod(\r\n        period: TPeriod,\r\n        currentDate: Date,\r\n        periodsConfig: {\r\n            [key: string]: number;\r\n        }\r\n    ): number | null {\r\n        const daysOffset = periodsConfig[period];\r\n        if (daysOffset) {\r\n            return Date.UTC(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate() - daysOffset, 0, 0, 0, 0);\r\n        }\r\n        return null;\r\n    }\r\n}\r\n","<div class=\"chart-wrap\" fxFlexFill fxLayout=\"column\">\r\n    <div class=\"scrolled-content h-100\" fxFlex=\"1 1 auto\" fxLayout=\"column\">\r\n        <div class=\"chart-header mb-1\" fxFlex=\"0 0 auto\" fxLayout=\"column\">\r\n            <div class=\"row\" fxFlex=\"0 0 auto\" fxLayout=\"row nowrap\" fxLayoutAlign=\"space-between start\" fxLayoutGap=\"1rem\">\r\n                <div\r\n                    class=\"left\"\r\n                    fxFlex=\"1 1 calc(50% - 0.5rem)\"\r\n                    fxLayout=\"row wrap\"\r\n                    fxLayoutAlign=\"start center\"\r\n                    fxLayoutGap=\"1rem\"\r\n                >\r\n                    <div class=\"items\" fxLayout=\"row wrap\" fxLayoutGap=\"1rem\">\r\n                        <div\r\n                            *ngIf=\"isShowStagingSwitch\"\r\n                            class=\"item overflow-hidden p-1 border-radius-0_8-rem mb-1\"\r\n                            fxLayout=\"row nowrap\"\r\n                            fxLayoutAlign=\"space-between center\"\r\n                        >\r\n                            <div class=\"left overflow-hidden mr-1\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                                {{ 'STAKING.TITLE' | translate }}\r\n                            </div>\r\n\r\n                            <div class=\"right overflow-hidden w-100\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\r\n                                <app-staking-switch\r\n                                    [(staking)]=\"variablesService.currentWallet.staking\"\r\n                                    [wallet_id]=\"variablesService.currentWallet.wallet_id\"\r\n                                >\r\n                                </app-staking-switch>\r\n                            </div>\r\n                        </div>\r\n                        <div\r\n                            class=\"item overflow-hidden p-1 border-radius-0_8-rem mb-1\"\r\n                            fxLayout=\"row nowrap\"\r\n                            fxLayoutAlign=\"space-between center\"\r\n                        >\r\n                            <div class=\"left overflow-hidden mr-1\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                                {{ 'STAKING.TITLE_PENDING' | translate }}\r\n                                :\r\n                            </div>\r\n                            <div class=\"right overflow-hidden w-100\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\r\n                                <div class=\"text-ellipsis mr-1\">\r\n                                    {{ pending.total | intToMoney }}\r\n                                </div>\r\n                                {{ variablesService.defaultTicker }}\r\n                            </div>\r\n                        </div>\r\n                        <div\r\n                            class=\"item overflow-hidden p-1 border-radius-0_8-rem mb-1\"\r\n                            fxLayout=\"row nowrap\"\r\n                            fxLayoutAlign=\"space-between center\"\r\n                        >\r\n                            <div class=\"left overflow-hidden mr-1\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                                {{ 'STAKING.TITLE_TOTAL' | translate }}\r\n                                :\r\n                            </div>\r\n                            <div class=\"right overflow-hidden w-100\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\r\n                                <div class=\"text-ellipsis mr-1\">\r\n                                    {{ total | intToMoney }}\r\n                                </div>\r\n                                {{ variablesService.defaultTicker }}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"right\" fxFlex=\"1 1 calc(50% - 0.5rem)\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"1rem\">\r\n                    <ng-container *ngIf=\"isShowPointerDetails\">\r\n                        <div class=\"selected overflow-hidden\" fxHide fxShow.lg fxShow.xl>\r\n                            <div class=\"overflow-hidden\" fxLayout=\"row\">\r\n                                <div class=\"text-ellipsis\">\r\n                                    {{ pointDetails.date | date : 'EEEE, MMMM d, y' }}\r\n                                    {{ pointDetails.amount }}\r\n                                </div>\r\n                                <div class=\"ml-0_5\">\r\n                                    {{ variablesService.defaultTicker }}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </ng-container>\r\n\r\n                    <ng-select\r\n                        [clearable]=\"false\"\r\n                        [items]=\"groupItems\"\r\n                        [searchable]=\"false\"\r\n                        bindLabel=\"title\"\r\n                        bindValue=\"value\"\r\n                        [formControl]=\"filtersForm.controls.group\"\r\n                        class=\"selected-group max-w-19-rem w-100\"\r\n                    >\r\n                        <ng-template let-item=\"item\" ng-label-tmp>\r\n                            Sort by {{ (item.title | translate | lowercase) + 's' }}\r\n                        </ng-template>\r\n                        <ng-template let-index=\"index\" let-item=\"item\" ng-option-tmp>\r\n                            {{ item.title | translate }}\r\n                        </ng-template>\r\n                    </ng-select>\r\n                </div>\r\n            </div>\r\n            <div\r\n                class=\"row\"\r\n                fxFlex=\"0 0 2rem\"\r\n                fxHide.lg\r\n                fxHide.xl\r\n                fxLayout=\"row nowrap\"\r\n                fxLayoutAlign=\"space-between center\"\r\n                fxLayoutGap=\"1rem\"\r\n                fxShow\r\n            >\r\n                <div class=\"left\"></div>\r\n                <div class=\"right\" fxLayoutAlign=\"end center\">\r\n                    <div *ngIf=\"pointDetails && pointDetails.date\" class=\"selected overflow-hidden\">\r\n                        <div class=\"overflow-hidden\" fxLayout=\"row\">\r\n                            <div class=\"text-ellipsis\">\r\n                                {{ pointDetails.date | date : 'EEEE, MMMM d, y' }}\r\n                                {{ pointDetails.amount }}\r\n                            </div>\r\n                            <div class=\"ml-0_5\">\r\n                                {{ variablesService.defaultTicker }}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"chart border-radius-0_8-rem\" fxFlex=\"1 1 auto\" fxLayoutAlign=\" center\">\r\n            <div [chart]=\"chart\"></div>\r\n        </div>\r\n\r\n        <div class=\"chart-options mt-2\" fxFlex=\"0 0 auto\" fxLayoutAlign=\" center\">\r\n            <ng-container *ngFor=\"let item of periodItems; let last = last\">\r\n                <button\r\n                    (click)=\"filtersForm.controls.period.patchValue(item.value)\"\r\n                    [class.active]=\"item.value === filtersForm.controls.period.value\"\r\n                    [class.mr-1]=\"!last\"\r\n                    [class.outline]=\"!last\"\r\n                    [class.primary]=\"last\"\r\n                    class=\"big w-100\"\r\n                    type=\"button\"\r\n                >\r\n                    {{ item.title | translate }}\r\n                </button>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, inject } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FlexModule } from '@angular/flex-layout';\r\nimport { GetAssetInfoPipe, IntToMoneyPipeModule } from '@parts/pipes';\r\nimport { NonNullableFormBuilder, ReactiveFormsModule } from '@angular/forms';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { PdcValidators } from '@parts/utils/pdc-validators';\r\nimport { ProposalDetails } from '@api/models/swap.model';\r\nimport { MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';\r\n\r\n@Component({\r\n    selector: 'app-swap-confirm-master-password',\r\n    standalone: true,\r\n    imports: [CommonModule, FlexModule, ReactiveFormsModule, TranslateModule, IntToMoneyPipeModule, GetAssetInfoPipe, MatDialogModule],\r\n    templateUrl: './swap-confirm-master-password.component.html',\r\n    styleUrls: ['./swap-confirm-master-password.component.scss'],\r\n})\r\nexport class SwapConfirmMasterPasswordComponent {\r\n    variablesService: VariablesService = inject(VariablesService);\r\n\r\n    fb: NonNullableFormBuilder = inject(NonNullableFormBuilder);\r\n\r\n    confirmForm = this.fb.group(\r\n        {\r\n            password: this.fb.control(''),\r\n            appPass: this.fb.control(this.variablesService.appPass || ''),\r\n        },\r\n        { validators: [PdcValidators.formMatch('password', 'appPass', 'passwordNotMatch')] }\r\n    );\r\n\r\n    data: { proposalDetails: ProposalDetails } = inject(MAT_DIALOG_DATA);\r\n}\r\n","<form [formGroup]=\"confirmForm\">\r\n    <h3 mat-dialog-title>\r\n        {{ 'CONFIRM.TITLE' | translate }}\r\n    </h3>\r\n\r\n    <mat-dialog-content>\r\n        <div class=\"table-info mb-2\">\r\n            <div class=\"row\">\r\n                <div class=\"label max-w-19-rem w-100\">\r\n                    {{ 'CONFIRM_SWAP.FORM.TABLE.LABELS.LABEL1' | translate }}\r\n                </div>\r\n                <div class=\"text\">\r\n                    <ng-container *ngFor=\"let item of data.proposalDetails.to_initiator\">\r\n                        {{ item.amount | intToMoney : (item.asset_id | getAssetInfo)?.decimal_point }}\r\n                        {{ (item.asset_id | getAssetInfo)?.ticker || '***' }}\r\n                        <br />\r\n                    </ng-container>\r\n                </div>\r\n            </div>\r\n\r\n            <hr class=\"separator\" />\r\n\r\n            <div class=\"row\">\r\n                <div class=\"label max-w-19-rem w-100\">\r\n                    {{ 'CONFIRM_SWAP.FORM.TABLE.LABELS.LABEL2' | translate }}\r\n                </div>\r\n                <div class=\"text\">\r\n                    <ng-container *ngFor=\"let item of data.proposalDetails.to_finalizer\">\r\n                        {{ item.amount | intToMoney }}\r\n                        {{ (item.asset_id | getAssetInfo)?.ticker || '***' }}\r\n                        <br />\r\n                    </ng-container>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div *ngIf=\"variablesService.appPass\" class=\"form__field mb-0\">\r\n            <label for=\"password\">\r\n                {{ 'LOGIN.MASTER_PASS' | translate }}\r\n                <span class=\"color-red\">*</span>\r\n            </label>\r\n            <input\r\n                (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\r\n                [class.invalid]=\"confirmForm.touched && confirmForm.invalid\"\r\n                [placeholder]=\"'PLACEHOLDERS.MASTER_PASS_PLACEHOLDER' | translate\"\r\n                autofocus\r\n                class=\"form__field--input\"\r\n                formControlName=\"password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n            />\r\n            <div *ngIf=\"confirmForm.touched && confirmForm.invalid\" class=\"error\">\r\n                <div *ngIf=\"confirmForm.hasError('passwordNotMatch')\">\r\n                    {{ 'LOGIN.FORM_ERRORS.WRONG_PASSWORD' | translate }}\r\n                </div>\r\n                <div *ngIf=\"confirmForm.controls.password.hasError('required')\">\r\n                    {{ 'LOGIN.FORM_ERRORS.PASS_REQUIRED' | translate }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </mat-dialog-content>\r\n\r\n    <mat-dialog-actions>\r\n        <div fxFlex=\"1 1 auto\" fxLayout=\"row nowrap\" fxLayoutGap=\"1rem\">\r\n            <button [mat-dialog-close]=\"false\" class=\"outline big w-100\" type=\"button\">\r\n                {{ 'CONFIRM.BUTTON_CANCEL' | translate }}\r\n            </button>\r\n            <button [mat-dialog-close]=\"true\" [disabled]=\"confirmForm.invalid\" class=\"primary big w-100\"\r\n                    type=\"submit\">\r\n                {{ 'CONFIRM.BUTTON_CONFIRM' | translate }}\r\n            </button>\r\n        </div>\r\n    </mat-dialog-actions>\r\n</form>\r\n","import { Component, ElementRef, inject, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { BackendService } from '@api/services/backend.service';\r\nimport { Subject } from 'rxjs';\r\nimport { BLOCK_EXPLORER_TN_TX_URL_PREFIX, BLOCK_EXPLORER_TX_URL_PREFIX } from '@parts/data/constants';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { FlexLayoutModule, FlexModule } from '@angular/flex-layout';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { CopyButtonComponent } from '@parts/components/copy-button.component';\r\n\r\n@Component({\r\n    selector: 'app-swap-details',\r\n    templateUrl: './swap-details.component.html',\r\n    styleUrls: ['./swap-details.component.scss'],\r\n    standalone: true,\r\n    imports: [CommonModule, MatDialogModule, TranslateModule, FlexModule, MatIconModule, FlexLayoutModule, CopyButtonComponent],\r\n})\r\nexport class SwapDetailsComponent implements OnInit, OnDestroy {\r\n    public status: 'loading' | 'success' | 'error' = 'loading';\r\n\r\n    // public data: { job_id: number } = inject(MAT_DIALOG_DATA);\r\n\r\n    public data: { response: any } = inject(MAT_DIALOG_DATA);\r\n\r\n    public details: { result_tx_id: string };\r\n\r\n    public error: any;\r\n\r\n    @ViewChild('elDetailsList', { static: true }) elDetailsList: ElementRef;\r\n\r\n    public isShowDetailsState: boolean = false;\r\n\r\n    public variablesService: VariablesService = inject(VariablesService);\r\n\r\n    private _backendService: BackendService = inject(BackendService);\r\n\r\n    private _destroy$: Subject<void> = new Subject<void>();\r\n\r\n    ngOnInit(): void {\r\n        // this._backendService.dispatchAsyncCallResult$\r\n        //     .pipe(\r\n        //         filter(Boolean),\r\n        //         filter(({ job_id }: AsyncCommandResults) => this.data.job_id === job_id),\r\n        //         takeUntil(this._destroy$)\r\n        //     )\r\n        //     .subscribe({\r\n        //         next: ({ response }) => {\r\n        //             if (response.error) {\r\n        //                 this.status = 'error';\r\n        //                 this.error = response.error;\r\n        //             } else {\r\n        //                 this.status = 'success';\r\n        //                 this.details = response.result;\r\n        //             }\r\n        //         },\r\n        //     });\r\n\r\n        const { response } = this.data;\r\n        if (response.error) {\r\n            this.status = 'error';\r\n            this.error = response.error;\r\n        } else {\r\n            this.status = 'success';\r\n            this.details = response.result;\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._destroy$.next();\r\n        this._destroy$.complete();\r\n    }\r\n\r\n    toggleDetails(): void {\r\n        this.isShowDetailsState = !this.isShowDetailsState;\r\n        setTimeout(() => this.scrollToBottomDetailsList(), 100);\r\n    }\r\n\r\n    private scrollToBottomDetailsList(): void {\r\n        if (this.elDetailsList) {\r\n            const { nativeElement } = this.elDetailsList;\r\n            nativeElement.scrollTop = nativeElement.scrollHeight;\r\n        }\r\n    }\r\n\r\n    openInBrowser(hash: string): void {\r\n        this._backendService.openUrlInBrowser(\r\n            (this.variablesService.testnet ? BLOCK_EXPLORER_TN_TX_URL_PREFIX : BLOCK_EXPLORER_TX_URL_PREFIX) + hash\r\n        );\r\n    }\r\n}\r\n","<h3 mat-dialog-title>\r\n    {{ 'SEND_DETAILS_MODAL.TITLE1' | translate }}\r\n</h3>\r\n\r\n<mat-dialog-content fxLayout=\"column\">\r\n    <div class=\"status mb-2\" fxFlex=\"0 0 auto\" fxLayout=\"column\" fxLayoutAlign=\" center\">\r\n        <div *ngIf=\"status === 'success'\" class=\"image\">\r\n            <img alt=\"success\" src=\"assets/icons/aqua/transaction_success.svg\" />\r\n        </div>\r\n\r\n        <div *ngIf=\"status === 'error'\" class=\"image\">\r\n            <img alt=\"failed\" class=\"image\" src=\"assets/icons/red/transaction_failed.svg\" />\r\n        </div>\r\n\r\n        <div *ngIf=\"status === 'loading'\" class=\"loader\"></div>\r\n\r\n        <p class=\"color-primary mt-2\">\r\n            {{\r\n                {\r\n                    success: 'TOR_LIB_STATE.STATE_SENT_SUCCESS',\r\n                    error: 'TOR_LIB_STATE.STATE_SEND_FAILED',\r\n                    loading: 'Loading...'\r\n                }[status] | translate\r\n            }}\r\n        </p>\r\n    </div>\r\n\r\n    <div *ngIf=\"details || error\" class=\"details border-radius-0_8-rem overflow-hidden\" fxFlex=\"0 0 auto\"\r\n         fxLayout=\"column\">\r\n        <div\r\n            (click)=\"toggleDetails()\"\r\n            class=\"header overflow-hidden py-1 px-2 w-100 cursor-pointer\"\r\n            fxLayout=\"row\"\r\n            fxLayoutAlign=\"space-between center\"\r\n        >\r\n            <p class=\"title text-ellipsis mr-2\">\r\n                {{ 'SEND_DETAILS_MODAL.TITLE2' | translate }}\r\n            </p>\r\n            <button fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                <mat-icon\r\n                    class=\"ml-1\"\r\n                    svgIcon=\"pdc-dropdown-arrow-down\"\r\n                    [ngClass]=\"{\r\n                        'rotate-180': isShowDetailsState\r\n                    }\"\r\n                ></mat-icon>\r\n            </button>\r\n        </div>\r\n        <div\r\n            [class.px-2]=\"isShowDetailsState\"\r\n            [class.py-1]=\"isShowDetailsState\"\r\n            [fxHide]=\"!isShowDetailsState\"\r\n            class=\"details-wrapper\"\r\n            fxFlex=\"1 1 auto\"\r\n            fxLayout=\"row\"\r\n        >\r\n            <ul #elDetailsList class=\"details-list scrolled-content\">\r\n                <ng-container *ngIf=\"details\">\r\n                    <ng-container *ngIf=\"details.result_tx_id as result_tx_id\">\r\n                        <li class=\"item mb-1 color-primary\" fxLayout=\"row nowrap\" fxLayoutAlign=\"start center\">\r\n                            <span class=\"text word-break-break-all cursor-pointer\" (click)=\"openInBrowser(result_tx_id)\">\r\n                                Result tx: {{ result_tx_id }}\r\n                            </span>\r\n                            <app-copy-button [value]=\"result_tx_id\" class=\"ml-1\">\r\n                            </app-copy-button>\r\n                        </li>\r\n                    </ng-container>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"error\">\r\n                    <li class=\"item mb-1 color-red\" fxLayout=\"row nowrap\" fxLayoutAlign=\"start center\">\r\n                        <span class=\"text word-break-break-all\">\r\n                            Error: {{ error.message || 'Ops... Unknown error...' }}\r\n                        </span>\r\n                    </li>\r\n                </ng-container>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions>\r\n    <div fxFlex=\"1 1 auto\" fxLayout=\"row nowrap\" fxLayoutGap=\"1rem\">\r\n        <button [mat-dialog-close]=\"status === 'success'\" class=\"outline big w-100\" type=\"button\">\r\n            {{ 'MODALS.OK' | translate }}\r\n        </button>\r\n    </div>\r\n</mat-dialog-actions>\r\n","import { Component, inject, NgZone, OnDestroy, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BreadcrumbsComponent } from '@parts/components/breadcrumbs/breadcrumbs.component';\r\nimport { BreadcrumbItems } from '@parts/components/breadcrumbs/breadcrumbs.models';\r\nimport { Router, RouterLinkWithHref } from '@angular/router';\r\nimport { InputValidateModule } from '@parts/directives';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { NonNullableFormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, filter, take, takeUntil } from 'rxjs/operators';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { ParamsCallRpc } from '@api/models/call_rpc.model';\r\nimport { BackendService } from '@api/services/backend.service';\r\nimport { IntToMoneyPipeModule } from '@parts/pipes';\r\nimport { SwapConfirmMasterPasswordComponent } from '../../modals/swap-confirm-master-password/swap-confirm-master-password.component';\r\nimport { ProposalDetails } from '@api/models/swap.model';\r\nimport { GetAssetInfoPipe } from '@parts/pipes/get-asset-info.pipe';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { SwapDetailsComponent } from '../../modals/swap-details/swap-details.component';\r\n\r\n@Component({\r\n    selector: 'app-confirm-swap',\r\n    standalone: true,\r\n    imports: [\r\n        CommonModule,\r\n        BreadcrumbsComponent,\r\n        RouterLinkWithHref,\r\n        InputValidateModule,\r\n        TranslateModule,\r\n        ReactiveFormsModule,\r\n        IntToMoneyPipeModule,\r\n        GetAssetInfoPipe,\r\n    ],\r\n    templateUrl: './confirm-swap.component.html',\r\n    styleUrls: ['./confirm-swap.component.scss'],\r\n})\r\nexport class ConfirmSwapComponent implements OnInit, OnDestroy {\r\n    breadcrumbItems: BreadcrumbItems = [\r\n        {\r\n            routerLink: '/wallet/swap',\r\n            title: 'CONFIRM_SWAP.BREADCRUMBS.ITEM1',\r\n        },\r\n        {\r\n            title: 'CONFIRM_SWAP.BREADCRUMBS.ITEM2',\r\n        },\r\n    ];\r\n\r\n    errorRpc: { code: number; message: string } | undefined;\r\n\r\n    variablesService = inject(VariablesService);\r\n\r\n    fb = inject(NonNullableFormBuilder);\r\n\r\n    form = this.fb.group({\r\n        hex_raw_proposal: this.fb.control<string>('', [Validators.required]),\r\n    });\r\n\r\n    proposalDetails: ProposalDetails | undefined;\r\n\r\n    hex_raw_proposal: string | undefined;\r\n\r\n    private backendService: BackendService = inject(BackendService);\r\n\r\n    private router: Router = inject(Router);\r\n\r\n    private ngZone: NgZone = inject(NgZone);\r\n\r\n    private _matDialog: MatDialog = inject(MatDialog);\r\n\r\n    private destroy$ = new Subject<void>();\r\n\r\n    ngOnInit(): void {\r\n        this.form.controls.hex_raw_proposal.valueChanges\r\n            .pipe(distinctUntilChanged(), debounceTime(500), takeUntil(this.destroy$))\r\n            .subscribe({\r\n                next: (hex_raw_proposal: string) => {\r\n                    this.hex_raw_proposal = hex_raw_proposal;\r\n                    this.getProposalDetails(hex_raw_proposal);\r\n                },\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    swapConfirmMasterPasswordDialog(): void {\r\n        const proposalDetails = this.proposalDetails;\r\n        const config: MatDialogConfig = {\r\n            data: {\r\n                proposalDetails,\r\n            },\r\n            disableClose: true,\r\n        };\r\n        this._matDialog\r\n            .open(SwapConfirmMasterPasswordComponent, config)\r\n            .afterClosed()\r\n            .pipe(filter(Boolean), take(1))\r\n            .subscribe({\r\n                next: () => this.acceptProposal(),\r\n            });\r\n    }\r\n\r\n    acceptProposal(): void {\r\n        if (!this.hex_raw_proposal) {\r\n            return;\r\n        }\r\n        const { wallet_id } = this.variablesService.currentWallet;\r\n        const hex_raw_proposal = this.hex_raw_proposal;\r\n\r\n        const params: ParamsCallRpc = {\r\n            jsonrpc: '2.0',\r\n            id: 0,\r\n            method: 'ionic_swap_accept_proposal',\r\n            params: { hex_raw_proposal },\r\n        };\r\n        this.backendService.call_wallet_rpc([wallet_id, params], (status, response) => {\r\n            this.ngZone.run(() => {\r\n                const config: MatDialogConfig = {\r\n                    data: {\r\n                        response,\r\n                    },\r\n                    disableClose: true,\r\n                };\r\n                this._matDialog\r\n                    .open(SwapDetailsComponent, config)\r\n                    .afterClosed()\r\n                    .pipe(filter(Boolean), take(1))\r\n                    .subscribe({\r\n                        next: () => this.router.navigate(['/wallet/history']),\r\n                    });\r\n            });\r\n        });\r\n    }\r\n\r\n    private getProposalDetails(hex_raw_proposal: string): void {\r\n        const { wallet_id } = this.variablesService.currentWallet;\r\n\r\n        const params: ParamsCallRpc = {\r\n            jsonrpc: '2.0',\r\n            id: 0,\r\n            method: 'ionic_swap_get_proposal_info',\r\n            params: { hex_raw_proposal },\r\n        };\r\n\r\n        this.backendService.call_wallet_rpc([wallet_id, params], (status, response_data) => {\r\n            this.ngZone.run(() => {\r\n                const proposal = response_data?.result?.['proposal'];\r\n                if (proposal) {\r\n                    this.proposalDetails = proposal;\r\n                    this.errorRpc = undefined;\r\n                } else {\r\n                    this.proposalDetails = undefined;\r\n                    this.errorRpc = response_data.error;\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n","<div class=\"container scrolled-content\">\r\n    <app-breadcrumbs [items]=\"breadcrumbItems\" class=\"mb-2\"></app-breadcrumbs>\r\n\r\n    <form [formGroup]=\"form\" class=\"form\">\r\n        <div class=\"form__field textarea mb-2\">\r\n            <label for=\"swap-proposal-hex\">\r\n                {{ 'CONFIRM_SWAP.FORM.LABELS.LABEL1' | translate }}\r\n            </label>\r\n            <textarea\r\n                [placeholder]=\"'CONFIRM_SWAP.FORM.PLACEHOLDERS.PLACEHOLDER1' | translate\"\r\n                formControlName=\"hex_raw_proposal\"\r\n                id=\"swap-proposal-hex\"\r\n            ></textarea>\r\n        </div>\r\n\r\n        <div *ngIf=\"proposalDetails\" class=\"form__field mb-2\">\r\n            <label for=\"swap-proposal-hex\">\r\n                {{ 'CONFIRM_SWAP.FORM.LABELS.LABEL2' | translate }}\r\n            </label>\r\n            <div class=\"table-info\">\r\n                <div class=\"row\">\r\n                    <div class=\"label max-w-19-rem w-100\">\r\n                        {{ 'CONFIRM_SWAP.FORM.TABLE.LABELS.LABEL1' | translate }}\r\n                    </div>\r\n\r\n                    <div class=\"text\">\r\n                        <p *ngFor=\"let item of proposalDetails.to_initiator\">\r\n                            {{ item.amount | intToMoney : (item.asset_id | getAssetInfo)?.decimal_point }}\r\n                            {{ (item.asset_id | getAssetInfo)?.ticker || '***' }}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <hr class=\"separator\" />\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"label max-w-19-rem w-100\">\r\n                        {{ 'CONFIRM_SWAP.FORM.TABLE.LABELS.LABEL2' | translate }}\r\n                    </div>\r\n                    <div class=\"text\">\r\n                        <p *ngFor=\"let item of proposalDetails.to_finalizer\">\r\n                            {{ item.amount | intToMoney : (item.asset_id | getAssetInfo)?.decimal_point }}\r\n                            {{ (item.asset_id | getAssetInfo)?.ticker || '***' }}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"actions\">\r\n            <button (click)=\"swapConfirmMasterPasswordDialog()\" [disabled]=\"!proposalDetails\" class=\"btn primary big w-100\" type=\"button\">\r\n                {{ 'CONFIRM_SWAP.FORM.BUTTONS.BUTTON1' | translate }}\r\n            </button>\r\n\r\n            <a class=\"btn outline big w-100\" routerLink=\"/wallet/swap\">\r\n                {{ 'CONFIRM_SWAP.FORM.BUTTONS.BUTTON2' | translate }}\r\n            </a>\r\n        </div>\r\n\r\n        <div *ngIf=\"errorRpc\" class=\"error mt-2\">\r\n            {{ 'ERRORS.INVALID_PROPOSAL' | translate }}\r\n        </div>\r\n    </form>\r\n</div>\r\n","import { ChangeDetectorRef, Component, inject, NgZone, OnDestroy } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Router, RouterLinkWithHref } from '@angular/router';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { BreadcrumbsComponent } from '@parts/components/breadcrumbs/breadcrumbs.component';\r\nimport { BreadcrumbItems } from '@parts/components/breadcrumbs/breadcrumbs.models';\r\nimport { DefaultImgModule, InputValidateModule, LowerCaseDirective } from '@parts/directives';\r\nimport {\r\n    AbstractControl,\r\n    FormBuilder,\r\n    FormControl,\r\n    FormGroup,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    ValidationErrors,\r\n    Validators,\r\n} from '@angular/forms';\r\nimport { IntToMoneyPipeModule, MoneyToIntPipeModule, ShortStringPipe } from '@parts/pipes';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { AssetBalance, AssetInfo } from '@api/models/assets.model';\r\nimport { pdcAssetInfo } from '@parts/data/assets';\r\nimport { regExpAliasName } from '@parts/utils/pdc-validators';\r\nimport { BackendService } from '@api/services/backend.service';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\nimport { debounceTime, filter, map, startWith, switchMap, tap } from 'rxjs/operators';\r\nimport { BigNumber } from 'bignumber.js';\r\nimport { assetHasNotBeenAddedToWallet, insuficcientFunds } from '@parts/utils/pdc-errors';\r\nimport { ParamsCallRpc } from '@api/models/call_rpc.model';\r\nimport { LoaderComponent } from '@parts/components/loader.component';\r\nimport { Wallet } from '@api/models/wallet.model';\r\nimport { intToMoney } from '@parts/functions/int-to-money';\r\nimport { moneyToInt } from '@parts/functions/money-to-int';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { WalletsService } from '@parts/services/wallets.service';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { GetLogoByAssetInfoPipe } from '@parts/pipes/get-logo-by-asset-info.pipe';\r\n\r\n@Component({\r\n    selector: 'app-create-swap',\r\n    standalone: true,\r\n    imports: [\r\n        CommonModule,\r\n        RouterLinkWithHref,\r\n        TranslateModule,\r\n        BreadcrumbsComponent,\r\n        InputValidateModule,\r\n        ReactiveFormsModule,\r\n        DefaultImgModule,\r\n        NgSelectModule,\r\n        LowerCaseDirective,\r\n        ShortStringPipe,\r\n        FormsModule,\r\n        IntToMoneyPipeModule,\r\n        MoneyToIntPipeModule,\r\n        LoaderComponent,\r\n        MatAutocompleteModule,\r\n        MatOptionModule,\r\n        MatIconModule,\r\n        GetLogoByAssetInfoPipe,\r\n    ],\r\n    templateUrl: './create-swap.component.html',\r\n    styleUrls: ['./create-swap.component.scss'],\r\n})\r\nexport class CreateSwapComponent implements OnDestroy {\r\n    breadcrumbItems: BreadcrumbItems = [\r\n        {\r\n            routerLink: '/wallet/swap',\r\n            title: 'CREATE_SWAP.BREADCRUMBS.ITEM1',\r\n        },\r\n        {\r\n            title: 'CREATE_SWAP.BREADCRUMBS.ITEM2',\r\n        },\r\n    ];\r\n\r\n    variablesService: VariablesService = inject(VariablesService);\r\n\r\n    fb: FormBuilder = inject(FormBuilder);\r\n\r\n    aliasAddress: string;\r\n\r\n    loading$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n\r\n    lowerCaseDisabled$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\r\n\r\n    errorRpc: { code: number; message: string } = null;\r\n\r\n    currentWallet: Wallet = this.variablesService.currentWallet;\r\n\r\n    sendingAssetsInfo$: Observable<AssetInfo[]>;\r\n\r\n    sendingDecimalPoint$: Observable<number>;\r\n\r\n    receivingAssetsInfo$: Observable<AssetInfo[]>;\r\n\r\n    receivingDecimalPoint$: Observable<number>;\r\n\r\n    form: FormGroup<{\r\n        sending: FormGroup<{\r\n            amount: FormControl<string>;\r\n            asset_id: FormControl<string>;\r\n        }>;\r\n        receiving: FormGroup<{\r\n            amount: FormControl<string>;\r\n            asset_id: FormControl<string>;\r\n        }>;\r\n        receiverAddress: FormControl<string>;\r\n    }>;\r\n\r\n    errorMessages: { [key: string]: string | undefined } = {\r\n        receiverAddress: undefined,\r\n    };\r\n\r\n    addressItems$: Observable<string[]>;\r\n\r\n    loadingAddressItems$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\r\n\r\n    private _cdr: ChangeDetectorRef = inject(ChangeDetectorRef);\r\n\r\n    private _walletsService: WalletsService = inject(WalletsService);\r\n\r\n    private _openedWalletItems: string[] = this._walletsService.wallets.map(({ address, alias }) => alias?.name ?? address);\r\n\r\n    private _aliasItems: string[] = this.variablesService.aliases.map(({ name }) => name);\r\n\r\n    private _backendService: BackendService = inject(BackendService);\r\n\r\n    private _ngZone: NgZone = inject(NgZone);\r\n\r\n    private _router = inject(Router);\r\n\r\n    private _destroy$ = new Subject<void>();\r\n\r\n    constructor() {\r\n        this._createForm();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._destroy$.next();\r\n        this._destroy$.complete();\r\n    }\r\n\r\n    isVisibleErrorByControl(control: AbstractControl): boolean {\r\n        return control.invalid && (control.dirty || control.touched);\r\n    }\r\n\r\n    isVisibleErrorByForm(form: FormGroup): boolean {\r\n        return form.invalid && (form.dirty || form.touched);\r\n    }\r\n\r\n    reverse(): void {\r\n        const { sending, receiving } = this.form.getRawValue();\r\n\r\n        const markAllAsTouched = () => {\r\n            this.form.controls.sending.markAllAsTouched();\r\n            this.form.controls.receiving.markAllAsTouched();\r\n        };\r\n\r\n        markAllAsTouched();\r\n\r\n        this.form.patchValue({\r\n            sending: receiving,\r\n            receiving: sending,\r\n        });\r\n        this.form.controls.sending.controls.amount.updateValueAndValidity();\r\n        this.form.controls.receiving.controls.amount.updateValueAndValidity();\r\n    }\r\n\r\n    updateReceiverAddressErrorMessage(): void {\r\n        const {\r\n            controls: { receiverAddress },\r\n        } = this.form;\r\n        let message: string | undefined;\r\n\r\n        switch (true) {\r\n            case receiverAddress.hasError('address_not_valid'): {\r\n                message = 'SEND.FORM_ERRORS.ADDRESS_NOT_VALID';\r\n                break;\r\n            }\r\n            case receiverAddress.hasError('alias_not_found'): {\r\n                message = 'SEND.FORM_ERRORS.ALIAS_NOT_FOUND';\r\n                break;\r\n            }\r\n            case receiverAddress.hasError('alias_not_valid'): {\r\n                message = 'SEND.FORM_ERRORS.ALIAS_NOT_VALID';\r\n                break;\r\n            }\r\n            case receiverAddress.hasError('required'): {\r\n                message = 'ERRORS.REQUIRED';\r\n                break;\r\n            }\r\n        }\r\n        this.errorMessages['receiverAddress'] = message;\r\n    }\r\n\r\n    pasteListenReceiverAddressField(event: ClipboardEvent): void {\r\n        event.preventDefault();\r\n        const {\r\n            controls: { receiverAddress },\r\n        } = this.form;\r\n        const { clipboardData } = event;\r\n        let value: string = clipboardData.getData('Text') ?? '';\r\n        this.lowerCaseDisabled$.next(value.indexOf('@') !== 0);\r\n\r\n        if (value.indexOf('@') === 0) {\r\n            value = value.toLowerCase();\r\n        }\r\n\r\n        receiverAddress.patchValue(value);\r\n    }\r\n\r\n    trackByFn(index: number, value: string): number | string {\r\n        return value ?? index;\r\n    }\r\n\r\n    beforeSubmit(): void {\r\n        if (this.form.invalid) {\r\n            this.form.markAllAsTouched();\r\n            this.form.updateValueAndValidity();\r\n            return;\r\n        }\r\n        this.submit();\r\n    }\r\n\r\n    submit(): void {\r\n        this.loading$.next(true);\r\n        const { sending, receiving, receiverAddress } = this.form.getRawValue();\r\n        const { wallet_id } = this.variablesService.currentWallet;\r\n        const { default_fee_big } = this.variablesService;\r\n\r\n        const { currentWallet } = this.variablesService;\r\n\r\n        const sendingAsset: AssetInfo | undefined = currentWallet.getAssetInfoByAssetId(sending.asset_id);\r\n        const receivingAsset: AssetInfo | undefined = currentWallet.getAssetInfoByAssetId(receiving.asset_id);\r\n\r\n        if (!sendingAsset) {\r\n            this.form.controls.sending.controls.asset_id.setErrors({\r\n                alias_not_found: true,\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!receivingAsset) {\r\n            this.form.controls.receiving.controls.asset_id.setErrors({\r\n                alias_not_found: true,\r\n            });\r\n            return;\r\n        }\r\n\r\n        const params2: ParamsCallRpc = {\r\n            jsonrpc: '2.0',\r\n            id: 0,\r\n            method: 'ionic_swap_generate_proposal',\r\n            params: {\r\n                proposal: {\r\n                    to_finalizer: [\r\n                        {\r\n                            asset_id: sending.asset_id,\r\n                            amount: moneyToInt(sending.amount, sendingAsset.decimal_point),\r\n                        },\r\n                    ],\r\n                    to_initiator: [\r\n                        {\r\n                            asset_id: receiving.asset_id,\r\n                            amount: moneyToInt(receiving.amount, receivingAsset.decimal_point),\r\n                        },\r\n                    ],\r\n                    mixins: 10,\r\n                    fee_paid_by_a: default_fee_big,\r\n                    expiration_time: 0,\r\n                },\r\n            },\r\n        };\r\n\r\n        if (receiverAddress.indexOf('@') === 0) {\r\n            const aliasName = receiverAddress;\r\n            const { aliases } = this.variablesService;\r\n            const alias = aliases.find(({ name }) => name === aliasName);\r\n\r\n            if (!alias) {\r\n                this.form.controls.receiverAddress.setErrors({\r\n                    alias_not_found: true,\r\n                });\r\n                return;\r\n            }\r\n\r\n            params2.params['destination_address'] = alias.address;\r\n        } else {\r\n            params2.params['destination_address'] = receiverAddress;\r\n        }\r\n\r\n        this._backendService.call_wallet_rpc([wallet_id, params2], (status, response_data) => {\r\n            if (response_data?.result) {\r\n                this._ngZone.run(() => {\r\n                    this._router\r\n                        .navigateByUrl('/wallet/swap-proposal-hex', {\r\n                            state: {\r\n                                hex_raw_proposal: response_data.result['hex_raw_proposal'],\r\n                            },\r\n                        })\r\n                        .then();\r\n                });\r\n            } else {\r\n                this._ngZone.run(() => {\r\n                    this.errorRpc = response_data.error;\r\n                    this.loading$.next(false);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    private _formListeners(): void {\r\n        const { balances$ } = this.currentWallet;\r\n        this.sendingAssetsInfo$ = this.form.controls.receiving.controls.asset_id.valueChanges.pipe(\r\n            startWith(this.form.controls.receiving.controls.asset_id.value),\r\n            switchMap(asset_id => balances$.pipe(\r\n                map(balances => balances.filter(v => v.asset_info.asset_id !== asset_id)),\r\n                map(balances => balances.map(({ asset_info }) => asset_info))\r\n            ))\r\n        );\r\n        this.receivingAssetsInfo$ = this.form.controls.sending.controls.asset_id.valueChanges.pipe(\r\n            startWith(this.form.controls.sending.controls.asset_id.value),\r\n            switchMap(asset_id => balances$.pipe(\r\n                map(balances => balances.filter(v => v.asset_info.asset_id !== asset_id)),\r\n                map(balances => balances.map(({ asset_info }) => asset_info))\r\n            ))\r\n        );\r\n\r\n        const { currentWallet } = this.variablesService;\r\n\r\n        this.sendingDecimalPoint$ = this.form.controls.sending.controls.asset_id.valueChanges.pipe(\r\n            startWith(this.form.controls.sending.controls.asset_id.value),\r\n            map((asset_id: string) => {\r\n                return currentWallet.getBalanceByAssetId(asset_id)?.asset_info.decimal_point ?? 0;\r\n            })\r\n        );\r\n\r\n        this.receivingDecimalPoint$ = this.form.controls.receiving.controls.asset_id.valueChanges.pipe(\r\n            startWith(this.form.controls.receiving.controls.asset_id.value),\r\n            map((asset_id: string) => {\r\n                return currentWallet.getBalanceByAssetId(asset_id)?.asset_info.decimal_point ?? 0;\r\n            })\r\n        );\r\n\r\n        this.addressItems$ = this.form.controls.receiverAddress.valueChanges.pipe(\r\n            startWith(this.form.controls.receiverAddress.value),\r\n            tap(value => {\r\n                const condition = value[0] === '@';\r\n                this.lowerCaseDisabled$.next(!condition);\r\n                this.loadingAddressItems$.next(condition);\r\n            }),\r\n            debounceTime(250),\r\n            map(value => {\r\n                if (!value?.length) {\r\n                    return this._openedWalletItems;\r\n                }\r\n                if (value[0] === '@') {\r\n                    return this._aliasItems.filter(name => {\r\n                        return name.includes(value);\r\n                    });\r\n                }\r\n                return [];\r\n            }),\r\n            tap(() => this.loadingAddressItems$.next(false))\r\n        );\r\n    }\r\n\r\n    private _createForm(): void {\r\n        this.form = this.fb.group(\r\n            {\r\n                sending: this.fb.group(\r\n                    {\r\n                        amount: this.fb.control(null, {\r\n                            validators: [\r\n                                Validators.required,\r\n                                ({ value }: FormControl): ValidationErrors | null => {\r\n                                    const amount: BigNumber = new BigNumber(value);\r\n\r\n                                    if (amount.eq(0)) {\r\n                                        return { zero: true };\r\n                                    }\r\n\r\n                                    return null;\r\n                                },\r\n                            ],\r\n                        }),\r\n                        asset_id: this.fb.control(pdcAssetInfo.asset_id, [Validators.required]),\r\n                    },\r\n                    {\r\n                        validators: [\r\n                            (form: FormGroup): ValidationErrors | null => {\r\n                                const { value: asset_id } = form.get('asset_id');\r\n                                const { value: amount } = form.get('amount');\r\n                                const preparedAmount = new BigNumber(amount);\r\n\r\n                                const { maximum_value } = this.variablesService;\r\n                                if (!asset_id) {\r\n                                    return null;\r\n                                }\r\n\r\n                                const asset: AssetBalance | undefined = this.variablesService.currentWallet.balances?.find(\r\n                                    v => v.asset_info.asset_id === asset_id\r\n                                );\r\n                                if (asset) {\r\n                                    const {\r\n                                        asset_info: { decimal_point },\r\n                                        unlocked,\r\n                                    } = asset;\r\n                                    const maximum_amount_by_decimal_point = intToMoney(maximum_value, decimal_point);\r\n                                    if (preparedAmount.isGreaterThan(maximum_amount_by_decimal_point)) {\r\n                                        return { greater_than_maximum_amount: { max: maximum_amount_by_decimal_point } };\r\n                                    }\r\n\r\n                                    const preparedUnlocked = intToMoney(unlocked, decimal_point);\r\n                                    return preparedAmount.isGreaterThan(preparedUnlocked) ? { insuficcientFunds } : null;\r\n                                } else {\r\n                                    return { assetHasNotBeenAddedToWallet };\r\n                                }\r\n                            },\r\n                        ],\r\n                    }\r\n                ),\r\n                receiving: this.fb.group(\r\n                    {\r\n                        amount: this.fb.control(\r\n                            {\r\n                                value: null,\r\n                                disabled: this.currentWallet.balances.length === 1,\r\n                            },\r\n                            [\r\n                                Validators.required,\r\n                                (control: FormControl): ValidationErrors | null => {\r\n                                    if (!control.value) {\r\n                                        return null;\r\n                                    }\r\n\r\n                                    if (control.value === 0) {\r\n                                        return { zero: true };\r\n                                    }\r\n                                    return null;\r\n                                },\r\n                            ]\r\n                        ),\r\n                        asset_id: this.fb.control(\r\n                            {\r\n                                value: this.currentWallet.balances.length <= 1\r\n                                    ? null\r\n                                    : this.currentWallet.balances[1]?.asset_info?.asset_id ?? pdcAssetInfo.asset_id,\r\n                                disabled: this.currentWallet.balances.length <= 1,\r\n                            },\r\n                            [Validators.required]\r\n                        ),\r\n                    },\r\n                    {\r\n                        validators: [\r\n                            (form: FormGroup): ValidationErrors | null => {\r\n                                const asset_id = form.controls.asset_id.value;\r\n                                const amount = new BigNumber(form.controls.amount.value);\r\n                                if (!asset_id) {\r\n                                    return null;\r\n                                }\r\n\r\n                                const asset: AssetBalance | undefined = this.variablesService.currentWallet.balances?.find(\r\n                                    v => v.asset_info.asset_id === asset_id\r\n                                );\r\n                                if (asset) {\r\n                                    const {\r\n                                        asset_info: { decimal_point },\r\n                                    } = asset;\r\n                                    const maximum_amount_by_decimal_point = intToMoney(this.variablesService.maximum_value, decimal_point);\r\n                                    if (amount.isGreaterThan(maximum_amount_by_decimal_point)) {\r\n                                        return { greater_than_maximum_amount: { max: maximum_amount_by_decimal_point } };\r\n                                    }\r\n                                    return null;\r\n                                } else {\r\n                                    return { assetHasNotBeenAddedToWallet };\r\n                                }\r\n                            },\r\n                        ],\r\n                    }\r\n                ),\r\n                receiverAddress: this.fb.control('', [\r\n                    Validators.required,\r\n                    (control: FormControl): ValidationErrors | null => {\r\n                        this.aliasAddress = '';\r\n                        if (control.value) {\r\n                            if (control.value.indexOf('@') !== 0) {\r\n                                this._backendService.validateAddress(control.value, (valid_status, data) => {\r\n                                    this._ngZone.run(() => {\r\n                                        if (valid_status === false) {\r\n                                            control.setErrors(Object.assign({ address_not_valid: true }, control.errors));\r\n                                        } else {\r\n                                            if (control.hasError('address_not_valid')) {\r\n                                                delete control.errors['address_not_valid'];\r\n                                                if (Object.keys(control.errors).length === 0) {\r\n                                                    control.setErrors(null);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                        this._cdr.markForCheck();\r\n                                        this._cdr.detectChanges();\r\n                                    });\r\n                                });\r\n                                return control.hasError('address_not_valid') ? { address_not_valid: true } : null;\r\n                            } else {\r\n                                if (!regExpAliasName.test(control.value)) {\r\n                                    return { alias_not_valid: true };\r\n                                } else {\r\n                                    this._backendService.getAliasInfoByName(control.value.replace('@', ''), (alias_status, alias_data) => {\r\n                                        this._ngZone.run(() => {\r\n                                            this.aliasAddress = alias_data.address;\r\n                                            if (alias_status) {\r\n                                                if (control.hasError('alias_not_found')) {\r\n                                                    delete control.errors['alias_not_found'];\r\n                                                    if (Object.keys(control.errors).length === 0) {\r\n                                                        control.setErrors(null);\r\n                                                    }\r\n                                                }\r\n                                            } else {\r\n                                                control.setErrors(Object.assign({ alias_not_found: true }, control.errors));\r\n                                            }\r\n                                            this._cdr.markForCheck();\r\n                                            this._cdr.detectChanges();\r\n                                        });\r\n                                    });\r\n                                }\r\n                                return control.hasError('alias_not_found') ? { alias_not_found: true } : null;\r\n                            }\r\n                        }\r\n                        return null;\r\n                    },\r\n                ]),\r\n            },\r\n            {\r\n                validators: [\r\n                    (control: AbstractControl): ValidationErrors | null => {\r\n                        const condition = control.get('sending').get('asset_id').value === control.get('receiving').get('asset_id').value;\r\n                        if (condition) {\r\n                            control.get('receiving').get('asset_id').setErrors({ sameAssetsId: true });\r\n                        } else {\r\n                            control.get('receiving').get('asset_id').setErrors(null);\r\n                        }\r\n                        return null;\r\n                    },\r\n                ],\r\n            }\r\n        );\r\n\r\n        this._setSendingAssetIdFromHistoryState();\r\n\r\n        this._formListeners();\r\n    }\r\n\r\n    private _setSendingAssetIdFromHistoryState(): void {\r\n        const state = history.state || {};\r\n        const history_asset: AssetBalance = state['asset'];\r\n        if (history_asset) {\r\n            const {\r\n                asset_info: { asset_id },\r\n            } = history_asset;\r\n            this.form.patchValue({\r\n                sending: {\r\n                    asset_id,\r\n                }\r\n            });\r\n\r\n            if (this.form.getRawValue().receiving.asset_id === asset_id) {\r\n                for (const balance of this.currentWallet.balances) {\r\n                    if (balance.asset_info.asset_id !== asset_id) {\r\n                        this.form.patchValue({\r\n                            receiving: {\r\n                                asset_id: balance.asset_info.asset_id,\r\n                            }\r\n                        });\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","<div class=\"container scrolled-content\">\r\n    <app-breadcrumbs [items]=\"breadcrumbItems\" class=\"mb-2\"></app-breadcrumbs>\r\n\r\n    <form (ngSubmit)=\"beforeSubmit()\" [formGroup]=\"form\" class=\"form\">\r\n        <!-- Sending -->\r\n        <div class=\"form__row\" formGroupName=\"sending\">\r\n            <div class=\"form__field fixed\">\r\n                <label for=\"sending-amount\">\r\n                    {{ 'CREATE_SWAP.FORM.LABELS.LABEL1' | translate }}\r\n                </label>\r\n                <input\r\n                    (contextmenu)=\"variablesService.onContextMenu($event)\"\r\n                    [decimalPoint]=\"sendingDecimalPoint$ | async\"\r\n                    [placeholder]=\"'CREATE_SWAP.FORM.PLACEHOLDERS.PLACEHOLDER1' | translate\"\r\n                    appInputValidate=\"money\"\r\n                    class=\"form__field--input\"\r\n                    formControlName=\"amount\"\r\n                    id=\"sending-amount\"\r\n                    type=\"text\"\r\n                />\r\n                <div\r\n                    *ngIf=\"isVisibleErrorByControl(form.controls.sending.controls.amount) || isVisibleErrorByForm(form.controls.sending)\"\r\n                    class=\"error\"\r\n                >\r\n                    <ng-container [ngSwitch]=\"true\">\r\n                        <ng-container *ngSwitchCase=\"form.controls.sending.controls.amount.hasError('zero')\">\r\n                            {{ 'SEND.FORM_ERRORS.AMOUNT_ZERO' | translate }}\r\n                        </ng-container>\r\n                        <ng-container *ngSwitchCase=\"form.controls.sending.controls.amount.hasError('required') && !form.controls.sending.hasError('assetHasNotBeenAddedToWallet')\">\r\n                            {{ 'ERRORS.REQUIRED' | translate }}\r\n                        </ng-container>\r\n                        <ng-container *ngSwitchCase=\"form.controls.sending.hasError('greater_than_maximum_amount')\">\r\n                            {{ 'ERRORS.MAX' | translate : { max: form.controls.sending.errors['greater_than_maximum_amount'].max } }}\r\n                        </ng-container>\r\n                        <ng-container *ngSwitchCase=\"form.controls.sending.hasError('insuficcientFunds')\">\r\n                            {{ form.controls.sending.errors['insuficcientFunds'].errorText | translate }}\r\n                        </ng-container>\r\n                        <ng-container *ngSwitchCase=\"form.controls.sending.hasError('assetHasNotBeenAddedToWallet')\">\r\n                            {{ form.controls.sending.errors['assetHasNotBeenAddedToWallet'].errorText | translate }}\r\n                        </ng-container>\r\n                    </ng-container>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form__field fixed\">\r\n                <label> &nbsp; </label>\r\n                <ng-select\r\n                    (change)=\"form.controls.sending.controls.amount.updateValueAndValidity()\"\r\n                    [bindValue]=\"'asset_id'\"\r\n                    [clearable]=\"false\"\r\n                    [items]=\"sendingAssetsInfo$ | async\"\r\n                    [searchable]=\"false\"\r\n                    class=\"custom-select with-circle\"\r\n                    formControlName=\"asset_id\"\r\n                >\r\n                    <ng-template let-item=\"item\" ng-label-tmp ng-option-tmp>\r\n                        <div class=\"token-logo\" [innerHTML]=\"item | getLogoByAssetInfo\"></div>\r\n                        {{ item.full_name || '---' }}\r\n                    </ng-template>\r\n                </ng-select>\r\n            </div>\r\n        </div>\r\n        <!-- /Sending -->\r\n\r\n        <div class=\"wrapper-reverse\">\r\n            <button (click)=\"reverse()\" [disabled]=\"currentWallet.balances.length === 1\" class=\"revers\" type=\"button\">\r\n                <mat-icon class=\"rotate-90\" svgIcon=\"pdc-swap\"></mat-icon>\r\n            </button>\r\n        </div>\r\n\r\n        <!-- Receiving -->\r\n        <div class=\"form__row\" formGroupName=\"receiving\">\r\n            <div class=\"form__field fixed\">\r\n                <label for=\"receiving-amount\">\r\n                    {{ 'CREATE_SWAP.FORM.LABELS.LABEL2' | translate }}\r\n                </label>\r\n                <input\r\n                    [decimalPoint]=\"receivingDecimalPoint$ | async\"\r\n                    [placeholder]=\"'CREATE_SWAP.FORM.PLACEHOLDERS.PLACEHOLDER1' | translate\"\r\n                    appInputValidate=\"money\"\r\n                    class=\"form__field--input\"\r\n                    formControlName=\"amount\"\r\n                    id=\"receiving-amount\"\r\n                    type=\"text\"\r\n                />\r\n                <div\r\n                    *ngIf=\"\r\n                        isVisibleErrorByControl(form.controls.receiving.controls.amount) || isVisibleErrorByForm(form.controls.receiving)\r\n                    \"\r\n                    class=\"error\"\r\n                >\r\n                    <ng-container [ngSwitch]=\"true\">\r\n                        <ng-container *ngSwitchCase=\"form.controls.receiving.controls.amount.hasError('required') && !form.controls.receiving.hasError('assetHasNotBeenAddedToWallet')\">\r\n                            {{ 'ERRORS.REQUIRED' | translate }}\r\n                        </ng-container>\r\n                        <ng-container *ngSwitchCase=\"form.controls.receiving.controls.amount.hasError('zero')\">\r\n                            {{ 'SEND.FORM_ERRORS.AMOUNT_ZERO' | translate }}\r\n                        </ng-container>\r\n                        <ng-container *ngSwitchCase=\"form.controls.receiving.hasError('greater_than_maximum_amount')\">\r\n                            {{ 'ERRORS.MAX' | translate : { max: form.controls.receiving.errors['greater_than_maximum_amount'].max } }}\r\n                        </ng-container>\r\n                        <ng-container *ngSwitchCase=\"form.controls.receiving.hasError('assetHasNotBeenAddedToWallet')\">\r\n                            {{ form.controls.receiving.errors['assetHasNotBeenAddedToWallet'].errorText | translate }}\r\n                        </ng-container>\r\n                    </ng-container>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form__field fixed\">\r\n                <label> &nbsp; </label>\r\n                <ng-select\r\n                    [bindValue]=\"'asset_id'\"\r\n                    [clearable]=\"false\"\r\n                    [items]=\"receivingAssetsInfo$ | async\"\r\n                    [searchable]=\"false\"\r\n                    class=\"custom-select with-circle\"\r\n                    formControlName=\"asset_id\"\r\n                >\r\n                    <ng-template let-item=\"item\" ng-label-tmp ng-option-tmp>\r\n                        <div class=\"token-logo\" [innerHTML]=\"item | getLogoByAssetInfo\"></div>\r\n                        {{ item.full_name || '---' }}\r\n                    </ng-template>\r\n                </ng-select>\r\n                <div\r\n                    *ngIf=\"\r\n                        form.controls.receiving.controls.asset_id.invalid &&\r\n                        (form.controls.receiving.controls.asset_id.dirty ||\r\n                            form.controls.receiving.controls.asset_id.touched ||\r\n                            form.touched)\r\n                    \"\r\n                    class=\"error\"\r\n                >\r\n                    <ng-container *ngIf=\"form.controls.receiving.controls.asset_id.hasError('sameAssetsId')\">\r\n                        {{ 'CREATE_SWAP.FORM.ERRORS.ERROR1' | translate }}\r\n                    </ng-container>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- /Receiving -->\r\n\r\n        <!-- Receiving Address -->\r\n        <div\r\n            *ngIf=\"{\r\n                items: addressItems$ | async,\r\n                loading: loadingAddressItems$ | async,\r\n                lowerCaseDisabled: lowerCaseDisabled$ | async\r\n            } as vm\"\r\n            class=\"form__field fixed\"\r\n        >\r\n            <label for=\"address\">\r\n                {{ 'CREATE_SWAP.FORM.LABELS.LABEL3' | translate }}\r\n                <span class=\"color-red\">*</span>\r\n            </label>\r\n\r\n            <input\r\n                (blur)=\"updateReceiverAddressErrorMessage()\"\r\n                (contextmenu)=\"variablesService.onContextMenu($event)\"\r\n                (paste)=\"pasteListenReceiverAddressField($event)\"\r\n                [lowerCaseDisabled]=\"vm.lowerCaseDisabled\"\r\n                [matAutocomplete]=\"auto\"\r\n                [placeholder]=\"'PLACEHOLDERS.ADDRESS_PLACEHOLDER' | translate\"\r\n                class=\"form__field--input\"\r\n                formControlName=\"receiverAddress\"\r\n                lowerCase\r\n                matAutocompletePosition=\"below\"\r\n                type=\"text\"\r\n                id=\"address\"\r\n            />\r\n\r\n            <mat-autocomplete #auto=\"matAutocomplete\" class=\"pdc-autocomplete-panel\">\r\n                <mat-option *ngIf=\"vm.loading\" class=\"loading\" disabled>\r\n                    <pdc-loader class=\"mx-auto\" style=\"display: block; width: fit-content\"></pdc-loader>\r\n                </mat-option>\r\n\r\n                <mat-option *ngIf=\"form.controls.receiverAddress.value[0] === '@' && vm.items?.length === 0 && !vm.loading\" disabled>\r\n                    <span class=\"pl-1\"> Not found aliases </span>\r\n                </mat-option>\r\n\r\n                <ng-container *ngIf=\"!vm.loading\">\r\n                    <mat-option *ngFor=\"let item of vm.items; trackBy: trackByFn\" [value]=\"item\">\r\n                        <!-- Alias -->\r\n                        <ng-container *ngIf=\"item[0] === '@'; else itemAddressTemplate\">\r\n                            <div\r\n                                [ngClass]=\"{\r\n                                    available: item.length >= 2 && item.length <= 6,\r\n                                    'pl-1': item.length > 6\r\n                                }\"\r\n                                class=\"alias\"\r\n                            >\r\n                                {{ item }}\r\n                            </div>\r\n                        </ng-container>\r\n                        <!-- Address -->\r\n                        <ng-template #itemAddressTemplate>\r\n                            <span class=\"pl-1\">{{ item | pdcShortString }}</span>\r\n                        </ng-template>\r\n                    </mat-option>\r\n                </ng-container>\r\n            </mat-autocomplete>\r\n\r\n            <div *ngIf=\"isVisibleErrorByControl(form.controls.receiverAddress)\" class=\"error\">\r\n                {{ errorMessages['receiverAddress'] | translate }}\r\n            </div>\r\n\r\n            <div *ngIf=\"aliasAddress\" class=\"info text-ellipsis\">\r\n                <span>{{ aliasAddress | pdcShortString }}</span>\r\n            </div>\r\n        </div>\r\n        <!-- /Address -->\r\n\r\n        <div class=\"actions\">\r\n            <button [disabled]=\"form.invalid || (loading$ | async)\" class=\"btn primary big w-100\" type=\"submit\">\r\n                <ng-container *ngIf=\"!(loading$ | async)\">{{ 'CREATE_SWAP.FORM.BUTTONS.BUTTON1' | translate }} </ng-container>\r\n                <pdc-loader *ngIf=\"loading$ | async\" [type]=\"'circle'\"></pdc-loader>\r\n            </button>\r\n            <a class=\"btn outline big w-100\" routerLink=\"/wallet/swap\">{{ 'CREATE_SWAP.FORM.BUTTONS.BUTTON2' | translate }}</a>\r\n        </div>\r\n\r\n        <div *ngIf=\"errorRpc\" class=\"error mt-2\">\r\n            {{ 'ERRORS.INVALID_PROPOSAL' | translate }}\r\n        </div>\r\n    </form>\r\n</div>\r\n","import { Component, inject, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BreadcrumbsComponent } from '@parts/components/breadcrumbs/breadcrumbs.component';\r\nimport { BreadcrumbItems } from '@parts/components/breadcrumbs/breadcrumbs.models';\r\nimport { RouterLinkWithHref } from '@angular/router';\r\nimport { InputValidateModule } from '@parts/directives';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { BackendService } from '@api/services/backend.service';\r\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { IDeactivateComponent } from '@parts/interfaces/deactivete-component.interface';\r\nimport { Observable } from 'rxjs';\r\nimport { ConfirmModalComponent, ConfirmModalData } from '@parts/modals/confirm-modal/confirm-modal.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\n\r\n@Component({\r\n    selector: 'app-swap-proposal-hex',\r\n    standalone: true,\r\n    imports: [\r\n        CommonModule,\r\n        BreadcrumbsComponent,\r\n        RouterLinkWithHref,\r\n        InputValidateModule,\r\n        TranslateModule,\r\n        ReactiveFormsModule,\r\n        MatIconModule,\r\n    ],\r\n    templateUrl: './swap-proposal-hex.component.html',\r\n    styleUrls: ['./swap-proposal-hex.component.scss'],\r\n})\r\nexport class SwapProposalHexComponent implements OnInit, IDeactivateComponent {\r\n    breadcrumbItems: BreadcrumbItems = [\r\n        {\r\n            routerLink: '/wallet/swap',\r\n            title: 'SWAP_PROPOSAL_HEX.BREADCRUMBS.ITEM1',\r\n        },\r\n        {\r\n            title: 'SWAP_PROPOSAL_HEX.BREADCRUMBS.ITEM2',\r\n        },\r\n    ];\r\n\r\n    copyAnimation = false;\r\n\r\n    copyAnimationTimeout: any;\r\n\r\n    fb = inject(FormBuilder);\r\n\r\n    form = this.fb.group({\r\n        hex_raw_proposal: this.fb.control('', [Validators.required]),\r\n    });\r\n\r\n    private readonly backendService: BackendService = inject(BackendService);\r\n\r\n    private readonly _matDialog: MatDialog = inject(MatDialog);\r\n\r\n    ngOnInit(): void {\r\n        this.setSwapProposalHexFromHistoryState();\r\n    }\r\n\r\n    copy(): void {\r\n        const { hex_raw_proposal } = this.form.getRawValue();\r\n        this.backendService.setClipboard(hex_raw_proposal);\r\n        this.copyAnimation = true;\r\n        this.copyAnimationTimeout = setTimeout(() => {\r\n            this.copyAnimation = false;\r\n            clearTimeout(this.copyAnimationTimeout);\r\n        }, 2000);\r\n    }\r\n\r\n    canExit(): Observable<boolean> | Promise<boolean> | boolean {\r\n        const config: MatDialogConfig<ConfirmModalData> = {\r\n            disableClose: true,\r\n            data: {\r\n                title: 'SWAP_PROPOSAL_HEX.MODALS.CONFIRM_MODAL.TITLE',\r\n                message: 'SWAP_PROPOSAL_HEX.MODALS.CONFIRM_MODAL.MESSAGE',\r\n                buttons: {\r\n                    submit: 'SWAP_PROPOSAL_HEX.MODALS.CONFIRM_MODAL.BUTTONS.SUBMIT',\r\n                    close: 'SWAP_PROPOSAL_HEX.MODALS.CONFIRM_MODAL.BUTTONS.CLOSE',\r\n                },\r\n            },\r\n        };\r\n        const dialogRef = this._matDialog\r\n            .open<ConfirmModalComponent, ConfirmModalData, boolean>(ConfirmModalComponent, config);\r\n        return dialogRef.afterClosed();\r\n    }\r\n\r\n    private setSwapProposalHexFromHistoryState(): void {\r\n        const historyState = history.state || {};\r\n        const hex_raw_proposal = historyState['hex_raw_proposal'];\r\n        if (hex_raw_proposal) {\r\n            this.form.controls.hex_raw_proposal.patchValue(hex_raw_proposal, { emitEvent: false });\r\n        }\r\n    }\r\n}\r\n","<div class=\"container scrolled-content\">\r\n    <app-breadcrumbs [items]=\"breadcrumbItems\" class=\"mb-2\"></app-breadcrumbs>\r\n\r\n    <form [formGroup]=\"form\" class=\"form\">\r\n        <div class=\"form__field textarea\">\r\n            <label for=\"swap-proposal-hex\">\r\n                {{ 'SWAP_PROPOSAL_HEX.FORM.LABELS.LABEL1' | translate }}\r\n            </label>\r\n            <textarea\r\n                [placeholder]=\"'SWAP_PROPOSAL_HEX.FORM.PLACEHOLDERS.PLACEHOLDER1' | translate\"\r\n                formControlName=\"hex_raw_proposal\"\r\n                id=\"swap-proposal-hex\"\r\n                readonly\r\n            ></textarea>\r\n        </div>\r\n\r\n        <div class=\"actions\">\r\n            <button (click)=\"copy()\" [disabled]=\"form.invalid\" class=\"btn primary big w-100\" type=\"button\">\r\n                <mat-icon class=\"mr-1\" [svgIcon]=\"copyAnimation ? 'pdc-check' : 'pdc-copy'\"></mat-icon>\r\n                {{ 'SWAP_PROPOSAL_HEX.FORM.BUTTONS.BUTTON1' | translate }}\r\n            </button>\r\n\r\n            <a class=\"btn outline big w-100\" routerLink=\"/wallet/swap\">\r\n                {{ 'SWAP_PROPOSAL_HEX.FORM.BUTTONS.BUTTON2' | translate }}\r\n            </a>\r\n        </div>\r\n    </form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FlexModule } from '@angular/flex-layout';\r\nimport { RouterLinkWithHref } from '@angular/router';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n@Component({\r\n    selector: 'app-swap',\r\n    standalone: true,\r\n    imports: [CommonModule, FlexModule, RouterLinkWithHref, TranslateModule],\r\n    templateUrl: './swap.component.html',\r\n    styleUrls: ['./swap.component.scss'],\r\n})\r\nexport class SwapComponent implements OnInit {\r\n    constructor() {}\r\n\r\n    ngOnInit(): void {}\r\n}\r\n","<div class=\"container scrolled-content\">\r\n    <div class=\"actions\">\r\n        <a class=\"btn primary big w-100\" routerLink=\"/wallet/create-swap\">{{ 'SWAP.BUTTONS.BUTTON1' | translate }}</a>\r\n        <a class=\"btn primary big w-100\" routerLink=\"/wallet/confirm-swap\">{{ 'SWAP.BUTTONS.BUTTON2' | translate }}</a>\r\n    </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanDeactivate, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { IDeactivateComponent } from '@parts/interfaces/deactivete-component.interface';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class SwapProposalHexGuard implements CanDeactivate<IDeactivateComponent> {\r\n    canDeactivate(\r\n        component: IDeactivateComponent,\r\n        currentRoute: ActivatedRouteSnapshot,\r\n        currentState: RouterStateSnapshot,\r\n        nextState?: RouterStateSnapshot\r\n    ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n        return component.canExit ? component.canExit() : true;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { WalletComponent } from './wallet/wallet.component';\r\nimport { paths, pathsChildrenWallet } from '../paths';\r\nimport { SendComponent } from './tabs/send/send.component';\r\nimport { ReceiveComponent } from './tabs/receive/receive.component';\r\nimport { HistoryComponent } from './tabs/history/history.component';\r\nimport { StakingComponent } from './tabs/staking/staking.component';\r\nimport { AssetsComponent } from './tabs/assets/assets.component';\r\nimport { WithSidebarLayoutComponent } from '../../layouts/with-sidebar-layout/with-sidebar-layout.component';\r\nimport { ConfirmSwapComponent } from './tabs/swap/pages/confirm-swap/confirm-swap.component';\r\nimport { SwapComponent } from './tabs/swap/pages/swap/swap.component';\r\nimport { CreateSwapComponent } from './tabs/swap/pages/create-swap/create-swap.component';\r\nimport { SwapProposalHexComponent } from './tabs/swap/pages/swap-proposal-hex/swap-proposal-hex.component';\r\nimport { SwapProposalHexGuard } from './tabs/swap/parts/guards/swap-proposal-hex.guard';\r\nimport { CustomAssetsComponent } from './tabs/custom-assets/pages/custom-assets/custom-assets.component';\r\nimport { CreateNewAssetComponent } from './tabs/custom-assets/pages/create-new-asset/create-new-asset.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: paths.wallet,\r\n        component: WithSidebarLayoutComponent,\r\n        children: [\r\n            {\r\n                path: '',\r\n                component: WalletComponent,\r\n                children: [\r\n                    {\r\n                        path: pathsChildrenWallet.assets,\r\n                        component: AssetsComponent,\r\n                    },\r\n                    {\r\n                        path: pathsChildrenWallet.send,\r\n                        component: SendComponent,\r\n                    },\r\n                    {\r\n                        path: pathsChildrenWallet.receive,\r\n                        component: ReceiveComponent,\r\n                    },\r\n                    {\r\n                        path: pathsChildrenWallet.history,\r\n                        component: HistoryComponent,\r\n                    },\r\n                    {\r\n                        path: pathsChildrenWallet.staking,\r\n                        component: StakingComponent,\r\n                    },\r\n                    {\r\n                        path: 'swap',\r\n                        component: SwapComponent,\r\n                    },\r\n                    {\r\n                        path: 'create-swap',\r\n                        component: CreateSwapComponent,\r\n                    },\r\n                    {\r\n                        path: 'swap-proposal-hex',\r\n                        component: SwapProposalHexComponent,\r\n                        canDeactivate: [SwapProposalHexGuard],\r\n                    },\r\n                    {\r\n                        path: 'confirm-swap',\r\n                        component: ConfirmSwapComponent,\r\n                    },\r\n                    {\r\n                        path: 'custom-assets',\r\n                        component: CustomAssetsComponent,\r\n                    },\r\n                    {\r\n                        path: 'create-new-asset',\r\n                        component: CreateNewAssetComponent,\r\n                    },\r\n                    {\r\n                        path: '',\r\n                        redirectTo: pathsChildrenWallet.assets,\r\n                        pathMatch: 'full',\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class WalletRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { WalletRoutingModule } from './wallet-routing.module';\r\nimport { AssetsComponent } from './tabs/assets/assets.component';\r\nimport { WalletComponent } from './wallet/wallet.component';\r\nimport { FlexLayoutModule, FlexModule } from '@angular/flex-layout';\r\nimport { TooltipModule } from '@parts/directives/tooltip/tooltip.module';\r\nimport {\r\n    ContractStatusMessagesPipeModule,\r\n    HistoryTypeMessagesPipeModule,\r\n    IntToMoneyPipeModule,\r\n    IsAvailableAliasNamePipeModule,\r\n    ShortStringPipe,\r\n} from '@parts/pipes';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { ConfirmModalModule } from '@parts/modals/confirm-modal/confirm-modal.module';\r\nimport { ExportHistoryModalModule } from './wallet/modals/export-history-modal/export-history-modal.module';\r\nimport { WalletDetailsComponent } from '../wallet-details/wallet-details.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { DefaultImgModule, InputValidateModule, LowerCaseDirective } from '@parts/directives';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { HistoryComponent } from './tabs/history/history.component';\r\nimport { StakingComponent } from './tabs/staking/staking.component';\r\nimport { ChartModule } from 'angular-highcharts';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { ReceiveComponent } from './tabs/receive/receive.component';\r\nimport { DialogModule } from '@angular/cdk/dialog';\r\nimport { SendComponent } from './tabs/send/send.component';\r\nimport { ExportImportComponent } from '../export-import/export-import.component';\r\nimport { CheckboxComponent } from '@parts/components/checkbox.component';\r\nimport { CopyButtonComponent } from '@parts/components/copy-button.component';\r\nimport { StakingSwitchComponent } from '@parts/components/staking-switch.component';\r\nimport { SwitchComponent } from '@parts/components/switch.component';\r\nimport { BreadcrumbsComponent } from '@parts/components/breadcrumbs/breadcrumbs.component';\r\nimport { BackButtonComponent } from '@parts/components/back-button/back-button.component';\r\nimport { WalletModalsModule } from './tabs/send/modals/wallet-modals.module';\r\nimport { GetAssetInfoPipe } from '@parts/pipes/get-asset-info.pipe';\r\nimport { MigrateWalletToZarcanumComponent } from './wallet/modals/migrate-wallet-to-zarcanum/migrate-wallet-to-zarcanum.component';\r\nimport { SuccessSweepBareOutsComponent } from './wallet/modals/success-sweep-bare-outs/success-sweep-bare-outs.component';\r\nimport { GetAmountItemsPipe } from '@parts/pipes/get-amount-items.pipe';\r\nimport { TransactionStatusComponent } from '@parts/components/transaction-status/transaction-status.component';\r\nimport { IsVisibleFeePipe } from '@parts/pipes/is-visible-fee.pipe';\r\nimport { CustomAssetsComponent } from './tabs/custom-assets/pages/custom-assets/custom-assets.component';\r\nimport { CreateNewAssetComponent } from './tabs/custom-assets/pages/create-new-asset/create-new-asset.component';\r\nimport { ConfirmCreateCustomAssetComponent } from './tabs/custom-assets/modals/confirm-create-custom-asset/confirm-create-custom-asset.component';\r\nimport { UpdateCustomAssetComponent } from './tabs/custom-assets/modals/update-custom-asset/update-custom-asset.component';\r\nimport { EmitCustomAssetComponent } from './tabs/custom-assets/modals/emit-custom-asset/emit-custom-asset.component';\r\nimport { BurnCustomAssetComponent } from './tabs/custom-assets/modals/burn-custom-asset/burn-custom-asset.component';\r\nimport { TransactionDetailsForCustomAssetsComponent } from './tabs/custom-assets/modals/transaction-details-for-custom-assets/transaction-details-for-custom-assets.component';\r\nimport { TransactionDetailsComponent } from '@parts/components/transaction-details.component';\r\nimport { VisibilityBalanceDirective } from '@parts/directives/visibility-balance.directive';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { LoaderComponent } from '@parts/components/loader.component';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AssetDetailsComponent } from '@parts/modals/asset-details/asset-details.component';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { GetLogoByAssetInfoPipe } from '@parts/pipes/get-logo-by-asset-info.pipe';\r\nimport { ShieldTestnetComponent } from '@parts/components/shield-testnet/shield-testnet.component';\r\nimport {\r\n    VisibilityBalanceButtonComponent\r\n} from '@parts/components/visibility-balance-button/visibility-balance-button.component';\r\nimport { MigrateAlertComponent } from '@parts/components/migrate-alert/migrate-alert.component';\r\nimport { AliasControlsComponent } from '@parts/components/alias-controls/alias-controls.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        WalletComponent,\r\n        AssetsComponent,\r\n        WalletDetailsComponent,\r\n        HistoryComponent,\r\n        StakingComponent,\r\n        ReceiveComponent,\r\n        ExportImportComponent,\r\n        SendComponent,\r\n        MigrateWalletToZarcanumComponent,\r\n        SuccessSweepBareOutsComponent,\r\n        CustomAssetsComponent,\r\n        CreateNewAssetComponent,\r\n        ConfirmCreateCustomAssetComponent,\r\n        UpdateCustomAssetComponent,\r\n        EmitCustomAssetComponent,\r\n        BurnCustomAssetComponent,\r\n        TransactionDetailsForCustomAssetsComponent,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        WalletRoutingModule,\r\n        FlexModule,\r\n        TooltipModule,\r\n        ShortStringPipe,\r\n        TranslateModule,\r\n        IsAvailableAliasNamePipeModule,\r\n        ConfirmModalModule,\r\n        ExportHistoryModalModule,\r\n        ReactiveFormsModule,\r\n        OverlayModule,\r\n        DefaultImgModule,\r\n        NgxPaginationModule,\r\n        SwitchComponent,\r\n        ChartModule,\r\n        NgSelectModule,\r\n        FormsModule,\r\n        FlexLayoutModule,\r\n        StakingSwitchComponent,\r\n        DialogModule,\r\n        IntToMoneyPipeModule,\r\n        ContractStatusMessagesPipeModule,\r\n        HistoryTypeMessagesPipeModule,\r\n        InputValidateModule,\r\n        CheckboxComponent,\r\n        AssetDetailsComponent,\r\n        CopyButtonComponent,\r\n        LowerCaseDirective,\r\n        BreadcrumbsComponent,\r\n        BackButtonComponent,\r\n        WalletModalsModule,\r\n        GetAssetInfoPipe,\r\n        GetAmountItemsPipe,\r\n        TransactionStatusComponent,\r\n        IsVisibleFeePipe,\r\n        TransactionDetailsComponent,\r\n        VisibilityBalanceDirective,\r\n        MatAutocompleteModule,\r\n        LoaderComponent,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        MatDialogModule,\r\n        GetLogoByAssetInfoPipe,\r\n        ShieldTestnetComponent,\r\n        VisibilityBalanceButtonComponent,\r\n        MigrateAlertComponent,\r\n        AliasControlsComponent,\r\n    ],\r\n})\r\nexport class WalletModule {}\r\n","import { Component, inject, NgZone } from '@angular/core';\r\nimport { FormControl, NonNullableFormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { PdcValidators } from '@parts/utils/pdc-validators';\r\nimport { BackendService } from '@api/services/backend.service';\r\nimport { AssetBalance, ParamsAddCustomAssetId } from '@api/models/assets.model';\r\nimport { WalletsService } from '@parts/services/wallets.service';\r\nimport { wrongAssetId } from '@parts/utils/pdc-errors';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FlexModule } from '@angular/flex-layout';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { LoaderComponent } from '@parts/components/loader.component';\r\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n    selector: 'app-add-custom-token',\r\n    standalone: true,\r\n    templateUrl: './add-custom-token.component.html',\r\n    styleUrls: ['./add-custom-token.component.scss'],\r\n    imports: [CommonModule, FlexModule, TranslateModule, ReactiveFormsModule, LoaderComponent, MatDialogModule],\r\n})\r\nexport class AddCustomTokenComponent {\r\n    loading: boolean = false;\r\n\r\n    private fb: NonNullableFormBuilder = inject(NonNullableFormBuilder);\r\n\r\n    formGroup = this.fb.group<{ asset_id: FormControl<string> }>({\r\n        asset_id: this.fb.control('', Validators.compose([Validators.required, PdcValidators.hash, Validators.maxLength(64)])),\r\n    });\r\n\r\n    public variablesService: VariablesService = inject(VariablesService);\r\n\r\n    public backendService: BackendService = inject(BackendService);\r\n\r\n    private walletsService: WalletsService = inject(WalletsService);\r\n\r\n    private ngZone: NgZone = inject(NgZone);\r\n\r\n    private matDialogRef: MatDialogRef<AssetBalance | undefined> = inject(MatDialogRef);\r\n\r\n    beforeSubmit(): void {\r\n        if (this.formGroup.invalid) {\r\n            this.formGroup.markAsTouched();\r\n            this.formGroup.updateValueAndValidity();\r\n            return;\r\n        }\r\n\r\n        this.submit();\r\n    }\r\n\r\n    submit(): void {\r\n        this.loading = true;\r\n        const { asset_id } = this.formGroup.getRawValue();\r\n        const { wallet_id } = this.variablesService.currentWallet;\r\n        const params: ParamsAddCustomAssetId = {\r\n            asset_id,\r\n            wallet_id,\r\n        };\r\n        this.backendService.addCustomAssetId(params, (status, { asset_descriptor }) => {\r\n            this.ngZone.run(() => {\r\n                if (status) {\r\n                    const asset: AssetBalance = {\r\n                        asset_info: {\r\n                            ...asset_descriptor,\r\n                            asset_id,\r\n                        },\r\n                        awaiting_in: 0,\r\n                        awaiting_out: 0,\r\n                        total: 0,\r\n                        unlocked: 0,\r\n                    };\r\n                    this.walletsService.updateWalletInfo(wallet_id);\r\n                    this.matDialogRef.close(asset);\r\n                } else {\r\n                    this.formGroup.controls.asset_id.setErrors({\r\n                        wrongAssetId,\r\n                    });\r\n                    this.loading = false;\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n","<form (ngSubmit)=\"beforeSubmit()\" [formGroup]=\"formGroup\">\r\n    <h3 mat-dialog-title>\r\n        {{ 'WALLET.MODAL_WHITELIST_ASSET.TITLE' | translate }}\r\n    </h3>\r\n\r\n    <mat-dialog-content>\r\n        <div class=\"form__field mb-0\">\r\n            <label for=\"asset_id\">{{ 'WALLET.MODAL_WHITELIST_ASSET.FIELD_TITLE' | translate }}</label>\r\n            <input\r\n                (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\r\n                class=\"form__field--input\"\r\n                formControlName=\"asset_id\"\r\n                id=\"asset_id\"\r\n                maxlength=\"64\"\r\n                name=\"asset_id\"\r\n                placeholder=\"Enter Asset ID\"\r\n                type=\"text\"\r\n            />\r\n            <ng-container *ngIf=\"formGroup.get('asset_id').touched\">\r\n                <div *ngIf=\"formGroup.get('asset_id').hasError('invalidHash')\" class=\"error\">\r\n                    {{ 'WALLET.MODAL_WHITELIST_ASSET.FORM_ERRORS.ERROR1' | translate }}\r\n                </div>\r\n                <div *ngIf=\"formGroup.get('asset_id').hasError('wrongAssetId')\" class=\"error\">\r\n                    {{ formGroup.get('asset_id').errors['wrongAssetId'].errorText | translate }}\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </mat-dialog-content>\r\n\r\n    <mat-dialog-actions>\r\n        <div fxFlex=\"1 1 auto\"  fxLayout=\"row nowrap\" fxLayoutGap=\"1rem\">\r\n            <button class=\"outline big w-100\" mat-dialog-close type=\"button\">\r\n                {{ 'MODALS.CANCEL' | translate }}\r\n            </button>\r\n            <button [disabled]=\"formGroup.invalid || loading\" class=\"primary big w-100\" type=\"submit\">\r\n                <ng-container *ngIf=\"!loading; else loadingTemplate\">\r\n                    {{ 'MODALS.ADD_TOKEN' | translate }}\r\n                </ng-container>\r\n                <ng-template #loadingTemplate>\r\n                    <pdc-loader></pdc-loader>\r\n                </ng-template>\r\n            </button>\r\n        </div>\r\n    </mat-dialog-actions>\r\n</form>\r\n","import { Component, inject } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BackendService } from '@api/services/backend.service';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n    selector: 'app-export-history-modal',\r\n    templateUrl: './export-history-modal.component.html',\r\n    styleUrls: ['./export-history-modal.component.scss'],\r\n})\r\nexport class ExportHistoryModalComponent {\r\n    posFilterIsOn: boolean = true;\r\n\r\n    exportData = {\r\n        wallet_id: 0,\r\n        include_pos_transactions: false,\r\n        path: 'C:\\\\some_file.txt',\r\n        format: 'json',\r\n    };\r\n\r\n    exportFormats = [\r\n        {\r\n            format: 'json',\r\n            formatName: 'JSON',\r\n        },\r\n        {\r\n            format: 'text',\r\n            formatName: 'Text',\r\n        },\r\n        {\r\n            format: 'csv',\r\n            formatName: 'CSV',\r\n        },\r\n    ];\r\n\r\n    currentFormat: string = this.exportFormats[0].format;\r\n\r\n    private backend: BackendService = inject(BackendService);\r\n\r\n    public variablesService: VariablesService = inject(VariablesService);\r\n\r\n    private translate: TranslateService = inject(TranslateService);\r\n\r\n    private matDialogRef: MatDialogRef<ExportHistoryModalComponent> = inject(MatDialogRef);\r\n\r\n    confirmExport(): void {\r\n        this.exportData.format = `${this.currentFormat}`;\r\n        this.exportData.wallet_id = this.variablesService.currentWallet.wallet_id;\r\n        this.exportData.include_pos_transactions = this.posFilterIsOn;\r\n\r\n        this.backend.saveFileDialog(\r\n            this.translate.instant('EXPORT_HISTORY.SAVED_FILE'),\r\n            `${this.exportData.format}`,\r\n            this.variablesService.settings.default_path,\r\n            (file_status, file_data) => {\r\n                if (this.exportData.format === 'text') {\r\n                    this.exportData.path = file_data.path + '.txt';\r\n                } else {\r\n                    this.exportData.path = file_data.path + `.${this.exportData.format}`;\r\n                }\r\n                if (file_status) {\r\n                    this.backend.exportWalletHistory(JSON.stringify(this.exportData));\r\n                    this.matDialogRef.close();\r\n                }\r\n            }\r\n        );\r\n    }\r\n}\r\n","<form>\r\n    <h4 mat-dialog-title>\r\n        {{ 'EXPORT_HISTORY.TITLE' | translate }}\r\n    </h4>\r\n\r\n    <mat-dialog-content style=\"overflow: visible\">\r\n        <div class=\"form__field\">\r\n            <label>Format:</label>\r\n            <ng-select\r\n                [(ngModel)]=\"currentFormat\"\r\n                [clearable]=\"false\"\r\n                [items]=\"exportFormats\"\r\n                [searchable]=\"false\"\r\n                bindLabel=\"formatName\"\r\n                bindValue=\"format\"\r\n                name=\"format\"\r\n            >\r\n                <ng-template let-item=\"item\" ng-label-tmp>\r\n                    {{ item.formatName }}\r\n                </ng-template>\r\n                <ng-template let-index=\"index\" let-item=\"item\" ng-option-tmp>\r\n                    {{ item.formatName }}\r\n                </ng-template>\r\n            </ng-select>\r\n        </div>\r\n\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n            <span class=\"color-primary mr-1\">{{ 'EXPORT_HISTORY.FILTER' | translate }}</span>\r\n            <app-switch (emitChange)=\"posFilterIsOn = !posFilterIsOn\" [value]=\"posFilterIsOn\"></app-switch>\r\n        </div>\r\n    </mat-dialog-content>\r\n\r\n    <mat-dialog-actions>\r\n        <div fxFlex=\"1 1 auto\" fxLayout=\"row nowrap\" fxLayoutGap=\"1rem\">\r\n            <button (click)=\"confirmExport()\" class=\"primary big w-100\" type=\"submit\">\r\n                {{ 'EXPORT_HISTORY.EXPORT' | translate }}\r\n            </button>\r\n            <button class=\"outline big w-100\" mat-dialog-close type=\"button\">\r\n                {{ 'EXPORT_HISTORY.CANCEL' | translate }}\r\n            </button>\r\n        </div>\r\n    </mat-dialog-actions>\r\n</form>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { ExportHistoryModalComponent } from './export-history-modal.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { FlexModule } from '@angular/flex-layout';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CheckboxComponent } from '@parts/components/checkbox.component';\r\nimport { SwitchComponent } from '@parts/components/switch.component';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\n\r\n@NgModule({\r\n    declarations: [ExportHistoryModalComponent],\r\n    exports: [ExportHistoryModalComponent],\r\n    imports: [CommonModule, TranslateModule, FlexModule, SwitchComponent, CheckboxComponent, NgSelectModule, FormsModule, MatDialogModule],\r\n})\r\nexport class ExportHistoryModalModule {}\r\n","import { Component, inject, NgZone } from '@angular/core';\r\nimport { GetBareOutsStats, SweepBareOuts } from '@api/models/rpc.models';\r\nimport { BackendService } from '@api/services/backend.service';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { ParamsCallRpc } from '@api/models/call_rpc.model';\r\nimport { ModalService } from '@parts/services/modal.service';\r\nimport { SuccessSweepBareOutsComponent } from '../success-sweep-bare-outs/success-sweep-bare-outs.component';\r\nimport { ZARCANUM_MIGRATION } from '@parts/data/constants';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogConfig, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n    selector: 'app-migrate-wallet-to-zarcanum',\r\n    templateUrl: './migrate-wallet-to-zarcanum.component.html',\r\n    styleUrls: ['./migrate-wallet-to-zarcanum.component.scss'],\r\n})\r\nexport class MigrateWalletToZarcanumComponent {\r\n    readonly data: GetBareOutsStats = inject<GetBareOutsStats>(MAT_DIALOG_DATA);\r\n\r\n    private readonly _matDialog: MatDialog = inject(MatDialog);\r\n\r\n    private readonly _matDialogRef: MatDialogRef<MigrateWalletToZarcanumComponent> = inject(MatDialogRef);\r\n\r\n    private readonly _backendService: BackendService = inject(BackendService);\r\n\r\n    private readonly _variableService: VariablesService = inject(VariablesService);\r\n\r\n    private readonly _modalService: ModalService = inject(ModalService);\r\n\r\n    private readonly _ngZone: NgZone = inject(NgZone);\r\n\r\n    migrate(): void {\r\n        const {\r\n            currentWallet: { wallet_id },\r\n        } = this._variableService;\r\n\r\n        const params: ParamsCallRpc = { id: 0, jsonrpc: '2.0', method: 'sweep_bare_outs', params: {} };\r\n        this._backendService.call_wallet_rpc([wallet_id, params], (status, response_data) => {\r\n            this._ngZone.run(() => {\r\n                if (response_data?.result) {\r\n                    const data = response_data.result;\r\n\r\n                    const config: MatDialogConfig<SweepBareOuts> = {\r\n                        data,\r\n                    };\r\n\r\n                    this._matDialog.open(SuccessSweepBareOutsComponent, config);\r\n                } else {\r\n                    const message = response_data.error;\r\n                    this._modalService.prepareModal('error', message);\r\n                }\r\n\r\n                this._matDialogRef.close();\r\n            });\r\n        });\r\n    }\r\n\r\n    openZarcanumMigration(): void {\r\n        this._backendService.openUrlInBrowser(ZARCANUM_MIGRATION);\r\n    }\r\n}\r\n","<h3 mat-dialog-title>\r\n    {{ 'MIGRATE_WALLET_TO_ZARCANUM.TITLE' | translate }}\r\n</h3>\r\n\r\n<mat-dialog-content>\r\n    <div class=\"details\">\r\n        <p class=\"mb-2 mt-2\">\r\n            {{\r\n                'MIGRATE_WALLET_TO_ZARCANUM.TEXT1'\r\n                    | translate\r\n                        : {\r\n                              total_bare_outs: data.total_bare_outs,\r\n                              total_amount: data.total_amount | intToMoney\r\n                          }\r\n            }}\r\n        </p>\r\n        <p (click)=\"openZarcanumMigration()\" class=\"text-align-center cursor-pointer mb-2\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n            <mat-icon class=\"mr-0_5\" svgIcon=\"pdc-question\"></mat-icon>\r\n            <span class=\"color-primary\">{{ 'MIGRATE_WALLET_TO_ZARCANUM.LINK1' | translate }}</span>\r\n        </p>\r\n        <hr class=\"mb-2\" />\r\n        <p class=\"mb-2\">\r\n            {{\r\n                'MIGRATE_WALLET_TO_ZARCANUM.TEXT2'\r\n                    | translate\r\n                        : {\r\n                              txs_count: data.txs_count,\r\n                              expected_total_fee: data.expected_total_fee | intToMoney\r\n                          }\r\n            }}\r\n        </p>\r\n    </div>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions>\r\n    <div fxFlex=\"1 1 auto\" fxLayout=\"row nowrap\" fxLayoutGap=\"1rem\">\r\n        <button (click)=\"migrate()\" class=\"primary big w-100\" type=\"button\">\r\n            {{ 'MIGRATE_WALLET_TO_ZARCANUM.BUTTON1' | translate }}\r\n        </button>\r\n    </div>\r\n</mat-dialog-actions>\r\n","import { Component, inject } from '@angular/core';\r\nimport { SweepBareOuts } from '@api/models/rpc.models';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n    selector: 'app-success-sweep-bare-outs',\r\n    templateUrl: './success-sweep-bare-outs.component.html',\r\n    styleUrls: ['./success-sweep-bare-outs.component.scss'],\r\n})\r\nexport class SuccessSweepBareOutsComponent {\r\n    readonly data: SweepBareOuts = inject<SweepBareOuts>(MAT_DIALOG_DATA);\r\n\r\n    stateDetails: boolean = false;\r\n\r\n    toggleDetails(): void {\r\n        this.stateDetails = !this.stateDetails;\r\n    }\r\n}\r\n","<h3 mat-dialog-title>\r\n    {{ 'SEND_DETAILS_MODAL.TITLE1' | translate }}\r\n</h3>\r\n\r\n<mat-dialog-content fxLayout=\"column\">\r\n    <div class=\"status mb-2\" fxFlex=\"0 0 auto\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n        <div class=\"image\">\r\n            <img alt=\"success\" src=\"assets/icons/aqua/transaction_success.svg\" />\r\n        </div>\r\n\r\n        <p class=\"color-primary mt-2\">\r\n            {{ 'TOR_LIB_STATE.STATE_SENT_SUCCESS' | translate }}\r\n        </p>\r\n    </div>\r\n\r\n    <div class=\"details border-radius-0_8-rem overflow-hidden\" fxFlex=\"0 0 auto\" fxLayout=\"column\">\r\n        <div\r\n            (click)=\"toggleDetails()\"\r\n            [ngStyle]=\"{ 'border-radius': (stateDetails) ? '0.8rem 0.8rem 0 0' : '0.8rem' }\"\r\n            class=\"header overflow-hidden py-1 px-2 w-100 cursor-pointer\"\r\n            fxLayout=\"row\"\r\n            fxLayoutAlign=\"space-between center\"\r\n        >\r\n            <p class=\"title text-ellipsis mr-2\">\r\n                {{ 'SEND_DETAILS_MODAL.TITLE2' | translate }}\r\n            </p>\r\n            <button fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                <mat-icon\r\n                    [ngClass]=\"{\r\n                        'rotate-180': stateDetails\r\n                    }\"\r\n                    svgIcon=\"pdc-dropdown-arrow-down\"\r\n                ></mat-icon>\r\n            </button>\r\n        </div>\r\n        <div\r\n            [class.px-2]=\"stateDetails\"\r\n            [class.py-1]=\"stateDetails\"\r\n            [fxHide]=\"!(stateDetails)\"\r\n            [ngStyle]=\"{ 'border-radius': (stateDetails) ? '0 0 0.8rem 0.8rem ' : '0' }\"\r\n            class=\"details-wrapper\"\r\n            fxFlex=\"1 1 auto\"\r\n            fxLayout=\"row\"\r\n        >\r\n            <ul class=\"details-list scrolled-content\">\r\n                <li class=\"item mb-1\" fxLayout=\"row nowrap\" fxLayoutAlign=\" center\">\r\n                    <p>\r\n                        {{\r\n                            'SUCCESS_SWEEP_BARE_OUTS.DETAILS'\r\n                                | translate\r\n                                : {\r\n                                    txs_sent: data.txs_sent,\r\n                                    bare_outs_swept: data.bare_outs_swept,\r\n                                    amount_swept: data.amount_swept | intToMoney,\r\n                                    fee_spent: data.fee_spent | intToMoney\r\n                                }\r\n                        }}\r\n                    </p>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions>\r\n    <div fxFlex=\"1 1 auto\">\r\n        <button class=\"primary big w-100\" mat-dialog-close>\r\n            {{ 'Ok' | translate }}\r\n        </button>\r\n    </div>\r\n</mat-dialog-actions>\r\n","import { Component, HostListener, inject, NgZone, OnDestroy, OnInit } from '@angular/core';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { BackendService, Commands } from '@api/services/backend.service';\r\nimport { Observable, Subject, take } from 'rxjs';\r\nimport { StateKeys, Store, Sync } from '@store/store';\r\nimport { distinctUntilChanged, filter, map, takeUntil } from 'rxjs/operators';\r\nimport { hasOwnProperty } from '@parts/functions/has-own-property';\r\nimport { ConfirmModalComponent, ConfirmModalData } from '@parts/modals/confirm-modal/confirm-modal.component';\r\nimport { ExportHistoryModalComponent } from './modals/export-history-modal/export-history-modal.component';\r\nimport { AddCustomTokenComponent } from './modals/add-custom-token/add-custom-token.component';\r\nimport { AssetBalance } from '@api/models/assets.model';\r\nimport { AssetDetailsComponent } from '@parts/modals/asset-details/asset-details.component';\r\nimport { WalletsService } from '@parts/services/wallets.service';\r\nimport { Wallet } from '@api/models/wallet.model';\r\nimport { NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router, RouterEvent } from '@angular/router';\r\nimport { BreakpointObserver } from '@angular/cdk/layout';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\n\r\ninterface Tab {\r\n    id: string;\r\n    title: string;\r\n    icon: string;\r\n    link: string;\r\n    disabled: boolean;\r\n    hidden: boolean;\r\n    indicator?: boolean;\r\n}\r\n\r\ntype TabNameKeys = 'assets' | 'history' | 'send' | 'receive' | 'swap' | 'staking' | 'custom-assets';\r\n\r\nconst objTabs: { [key in TabNameKeys]: Tab } = {\r\n    assets: {\r\n        id: 'assets',\r\n        title: 'WALLET.TABS.ASSETS',\r\n        icon: 'pdc-balance',\r\n        link: '/assets',\r\n        disabled: false,\r\n        hidden: false,\r\n    },\r\n    history: {\r\n        id: 'history',\r\n        title: 'WALLET.TABS.HISTORY',\r\n        icon: 'pdc-history',\r\n        link: '/history',\r\n        disabled: false,\r\n        hidden: false,\r\n    },\r\n    send: {\r\n        id: 'send',\r\n        title: 'WALLET.TABS.SEND',\r\n        icon: 'pdc-send',\r\n        link: '/send',\r\n        disabled: false,\r\n        hidden: false,\r\n    },\r\n    receive: {\r\n        id: 'receive',\r\n        title: 'WALLET.TABS.RECEIVE',\r\n        icon: 'pdc-receive',\r\n        link: '/receive',\r\n        disabled: false,\r\n        hidden: false,\r\n    },\r\n    swap: {\r\n        id: 'swap',\r\n        title: 'Swap',\r\n        icon: 'pdc-swap',\r\n        link: '/swap',\r\n        disabled: false,\r\n        hidden: true,\r\n    },\r\n    // TODO: https://github.com/hyle-team/pdc/issues/374\r\n    // contract: {\r\n    //     title: 'WALLET.TABS.CONTRACTS',\r\n    //     icon: 'document',\r\n    //     link: '/contracts',\r\n    //     disabled: false,\r\n    //     hidden: false\r\n    // },\r\n    staking: {\r\n        id: 'staking',\r\n        title: 'WALLET.TABS.STAKING',\r\n        icon: 'pdc-staking',\r\n        link: '/staking',\r\n        indicator: false,\r\n        disabled: false,\r\n        hidden: false,\r\n    },\r\n    'custom-assets': {\r\n        id: 'custom-assets',\r\n        title: 'WALLET.TABS.CONTROL_ASSETS',\r\n        icon: 'pdc-custom-asset',\r\n        link: '/custom-assets',\r\n        indicator: false,\r\n        disabled: false,\r\n        hidden: false,\r\n    },\r\n};\r\n\r\n@Component({\r\n    selector: 'app-wallet',\r\n    templateUrl: './wallet.component.html',\r\n    styleUrls: ['./wallet.component.scss'],\r\n})\r\nexport class WalletComponent implements OnInit, OnDestroy {\r\n    settingsButtonInterval;\r\n\r\n    private breakpointObserver: BreakpointObserver = inject(BreakpointObserver);\r\n\r\n    isViewTabName$: Observable<boolean> = this.breakpointObserver.observe(['(min-width: 1400px)']).pipe(map(({ matches }) => matches));\r\n\r\n    settingsButtonDisabled = true;\r\n\r\n    walletLoaded = false;\r\n\r\n    openDropdown: boolean;\r\n\r\n    walletSyncVisible = false;\r\n\r\n    tabs: Tab[] = [];\r\n\r\n    private destroy$ = new Subject<void>();\r\n\r\n    loader = true;\r\n\r\n    private readonly _matDialog: MatDialog = inject(MatDialog);\r\n\r\n    get isShowMigrateAlert(): boolean {\r\n        const {\r\n            currentWallet\r\n        } = this.variablesService;\r\n\r\n        if (!currentWallet) { return false; }\r\n\r\n        const { is_auditable, is_watch_only, has_bare_unspent_outputs } = currentWallet;\r\n\r\n        return !is_auditable && !is_watch_only && has_bare_unspent_outputs;\r\n    }\r\n\r\n    constructor(\r\n        private backend: BackendService,\r\n        public variablesService: VariablesService,\r\n        private ngZone: NgZone,\r\n        private store: Store,\r\n        private walletsService: WalletsService,\r\n        private router: Router\r\n    ) {\r\n        if (!this.variablesService.currentWallet && this.variablesService.wallets.length > 0) {\r\n            this.variablesService.setCurrentWallet(0);\r\n        }\r\n        this.walletLoaded = this.variablesService.currentWallet.loaded;\r\n\r\n        this.variablesService.currentWalletChangedEvent.pipe(takeUntil(this.destroy$)).subscribe({\r\n            next: (wallet: Wallet) => {\r\n                this.createTabs(wallet);\r\n                const disabled = !wallet.loaded;\r\n                this.setDisabledTabs(['send', 'swap', 'staking', 'custom-assets'], disabled);\r\n\r\n                this.variablesService.is_hardfok_active$.pipe(take(1)).subscribe({\r\n                    next: value => {\r\n                        const hidden = !value;\r\n                        this.setHiddenTabs(['swap'], hidden);\r\n                    },\r\n                });\r\n            },\r\n        });\r\n\r\n        this.variablesService.is_hardfok_active$.pipe(takeUntil(this.destroy$)).subscribe({\r\n            next: value => {\r\n                const hidden = !value;\r\n                this.setHiddenTabs(['swap'], hidden);\r\n            },\r\n        });\r\n\r\n        this.router.events.pipe(takeUntil(this.destroy$)).subscribe((e: RouterEvent) => {\r\n            this.navigationInterceptor(e);\r\n        });\r\n    }\r\n\r\n    navigationInterceptor(event: RouterEvent): void {\r\n        if (event instanceof NavigationStart) {\r\n            this.loader = true;\r\n        }\r\n        if (event instanceof NavigationEnd) {\r\n            this.loader = false;\r\n        }\r\n        if (event instanceof NavigationCancel) {\r\n            this.loader = false;\r\n        }\r\n        if (event instanceof NavigationError) {\r\n            this.loader = false;\r\n        }\r\n    }\r\n\r\n    createTabs({ is_auditable, is_watch_only }: Wallet): void {\r\n        const conditionForHiding: boolean = !is_auditable || !is_watch_only;\r\n        const tabs: Array<Tab> = [];\r\n\r\n        tabs.push(objTabs.assets);\r\n        tabs.push(objTabs.history);\r\n\r\n        if (conditionForHiding) {\r\n            tabs.push(objTabs.send);\r\n        }\r\n\r\n        tabs.push(objTabs.receive);\r\n\r\n        if (conditionForHiding) {\r\n            tabs.push(objTabs.swap);\r\n        }\r\n\r\n        tabs.push(objTabs.staking);\r\n\r\n        if (conditionForHiding) {\r\n            tabs.push(objTabs['custom-assets']);\r\n        }\r\n\r\n        this.tabs = tabs;\r\n    }\r\n\r\n    @HostListener('document:keydown.shift', ['$event.key'])\r\n    onKeyPressed(): void {\r\n        if (!this.openDropdown) {\r\n            this.walletSyncVisible = true;\r\n        }\r\n    }\r\n\r\n    @HostListener('document:keyup.shift', ['$event.key'])\r\n    onKeyUpPressed(): void {\r\n        if (!this.openDropdown) {\r\n            this.walletSyncVisible = false;\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.settingsButtonInterval = setInterval(() => {\r\n            // tslint:disable-next-line:triple-equals\r\n            if (this.variablesService.daemon_state == 2 || this.walletLoaded) {\r\n                this.settingsButtonDisabled = false;\r\n                clearInterval(this.settingsButtonInterval);\r\n            }\r\n        }, 1000);\r\n        this.store\r\n            .select(StateKeys.sync)\r\n            .pipe(filter(Boolean), distinctUntilChanged(), takeUntil(this.destroy$))\r\n            .subscribe({\r\n                next: (value: any) => {\r\n                    const data = value.filter((item: Sync) => item.wallet_id === this.variablesService.currentWallet.wallet_id)[0];\r\n                    if (data && !data.sync) {\r\n                        let in_progress;\r\n                        const values = this.store.state.sync;\r\n                        if (values && values.length > 0) {\r\n                            in_progress = values.filter(item => item.sync);\r\n                            this.variablesService.sync_started = !!(in_progress && in_progress.length);\r\n                            if (!in_progress) {\r\n                                this.variablesService.sync_started = false;\r\n                                this.variablesService.sync_wallets[data.wallet_id] = false;\r\n                            }\r\n                        } else {\r\n                            this.variablesService.sync_started = false;\r\n                            this.variablesService.sync_wallets[data.wallet_id] = false;\r\n                        }\r\n                    }\r\n                },\r\n            });\r\n        if (hasOwnProperty(this.variablesService.currentWallet.alias, 'name')) {\r\n            this.variablesService.currentWallet.wakeAlias = false;\r\n        }\r\n        this.variablesService.getAliasChangedEvent.pipe(takeUntil(this.destroy$)).subscribe({\r\n            next: () => {\r\n                if (hasOwnProperty(this.variablesService.currentWallet.alias, 'name')) {\r\n                    this.variablesService.currentWallet.wakeAlias = false;\r\n                }\r\n            },\r\n        });\r\n        this.updateWalletStatus();\r\n    }\r\n\r\n    toggleMenuDropdown(): void {\r\n        if (!this.openDropdown) {\r\n            this.openDropdown = true;\r\n        } else {\r\n            this.openDropdown = false;\r\n            this.walletSyncVisible = false;\r\n        }\r\n    }\r\n\r\n    resyncCurrentWallet(wallet_id: number): void {\r\n        this.backend.resyncWallet(wallet_id);\r\n    }\r\n\r\n    close(wallet_id: number): void {\r\n        const config: MatDialogConfig<ConfirmModalData> = {\r\n            data: {\r\n                title: 'WALLET.CONFIRM.MESSAGE',\r\n                message: 'WALLET.CONFIRM.TITLE',\r\n            },\r\n        };\r\n\r\n        this._matDialog\r\n            .open<ConfirmModalComponent, ConfirmModalData, boolean>(ConfirmModalComponent, config)\r\n            .afterClosed()\r\n            .pipe(filter(Boolean), takeUntil(this.destroy$))\r\n            .subscribe({\r\n                next: () => {\r\n                    this.walletsService.closeWallet(wallet_id);\r\n                },\r\n            });\r\n    }\r\n\r\n    addCustomToken(): void {\r\n        this._matDialog\r\n            .open<AddCustomTokenComponent, void, AssetBalance | undefined>(AddCustomTokenComponent)\r\n            .afterClosed()\r\n            .pipe(\r\n                filter(response_data => Boolean(response_data)),\r\n                takeUntil(this.destroy$)\r\n            )\r\n            .subscribe({\r\n                next: asset => {\r\n                    const config: MatDialogConfig = {\r\n                        data: {\r\n                            asset_info: asset.asset_info,\r\n                            title: 'You added new asset',\r\n                        },\r\n                    };\r\n                    this.ngZone.run(() => {\r\n                        this._matDialog.open(AssetDetailsComponent, config);\r\n                    });\r\n                },\r\n            });\r\n    }\r\n\r\n    exportHistory(): void {\r\n        this._matDialog.open(ExportHistoryModalComponent);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    updateWalletStatus(): void {\r\n        this.backend.eventSubscribe(Commands.wallet_sync_progress, data => {\r\n            const wallet_id = data.wallet_id;\r\n            if (wallet_id === this.variablesService.currentWallet.wallet_id) {\r\n                this.ngZone.run(() => {\r\n                    this.walletLoaded = false;\r\n                });\r\n            }\r\n        });\r\n        this.backend.eventSubscribe(Commands.update_wallet_status, data => {\r\n            const wallet_state = data.wallet_state;\r\n            const wallet_id = data.wallet_id;\r\n            this.ngZone.run(() => {\r\n                if (wallet_id !== this.variablesService.currentWallet.wallet_id) {\r\n                    return;\r\n                }\r\n\r\n                if (wallet_state === 2) {\r\n                    this.walletLoaded = true;\r\n                    this.setDisabledTabs(['send', 'swap', 'staking', 'custom-assets'], false);\r\n                } else {\r\n                    this.walletLoaded = false;\r\n                    this.setDisabledTabs(['send', 'swap', 'staking', 'custom-assets'], true);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    setHiddenTabs(ids: string[], hidden: boolean): void {\r\n        this.tabs.forEach(tab => {\r\n            if (ids.includes(tab.id)) {\r\n                tab.hidden = hidden;\r\n            }\r\n        });\r\n    }\r\n\r\n    setDisabledTabs(ids: string[], disabled: boolean): void {\r\n        this.tabs.forEach(tab => {\r\n            if (ids.includes(tab.id)) {\r\n                tab.disabled = disabled;\r\n            }\r\n        });\r\n    }\r\n}\r\n","<div class=\"header mb-2\" fxFlex=\"0 0 auto\" fxLayout=\"row nowrap\" fxLayoutAlign=\"space-between start\" fxLayoutGap=\"1rem\">\r\n    <div class=\"left overflow-hidden\" fxFlex=\"1 1 auto\" fxLayoutAlign=\"start center\" fxLayout=\"row nowrap\" fxLayoutGap=\"3rem\">\r\n        <div class=\"wallet-wrapper\" fxLayout=\"column\" fxLayoutAlign=\"start start\">\r\n            <div class=\"title\" fxLayout=\"row nowrap\" fxLayoutAlign=\"start center\" fxLayoutGap=\"1rem\">\r\n                <h1 class=\"text-ellipsis\">\r\n                    {{ variablesService.currentWallet.address | pdcShortString }}\r\n                </h1>\r\n\r\n                <app-copy-button\r\n                    [delay]=\"150\"\r\n                    [placement]=\"'bottom'\"\r\n                    [timeout]=\"0\"\r\n                    [tooltipClass]=\"'table-tooltip'\"\r\n                    [tooltip]=\"variablesService.currentWallet.address\"\r\n                    [value]=\"variablesService.currentWallet.address\"\r\n                >\r\n                </app-copy-button>\r\n\r\n                <pdc-alias-controls></pdc-alias-controls>\r\n            </div>\r\n        </div>\r\n\r\n        <ng-container *ngIf=\"isShowMigrateAlert\">\r\n            <hr fxFlex=\"0 0 1px\" style=\"height: 3.6rem; border: none; border-right: var(--table-rounded-corners-border)\" />\r\n            <pdc-migrate-alert></pdc-migrate-alert>\r\n        </ng-container>\r\n    </div>\r\n\r\n    <div class=\"right\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"1rem\">\r\n        <pdc-shield-testnet *ngIf=\"variablesService.testnet\"></pdc-shield-testnet>\r\n\r\n        <pdc-visibility-balance-button></pdc-visibility-balance-button>\r\n\r\n        <div class=\"dropdown\">\r\n            <button\r\n                (click)=\"$event.stopPropagation(); toggleMenuDropdown()\"\r\n                #trigger=\"cdkOverlayOrigin\"\r\n                cdkOverlayOrigin\r\n                [disabled]=\"settingsButtonDisabled && !variablesService.currentWallet.loaded\"\r\n                class=\"btn-icon circle big\"\r\n                data-target=\"wallet-dropdown-button\"\r\n            >\r\n                <mat-icon svgIcon=\"pdc-wallet-settings\"></mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template\r\n    (backdropClick)=\"$event.stopPropagation(); toggleMenuDropdown()\"\r\n    [cdkConnectedOverlayBackdropClass]=\"'opacity-0'\"\r\n    [cdkConnectedOverlayHasBackdrop]=\"true\"\r\n    [cdkConnectedOverlayOrigin]=\"trigger\"\r\n    [cdkConnectedOverlayOpen]=\"openDropdown\"\r\n    [cdkConnectedOverlayPositions]=\"[\r\n                {\r\n                    originX: 'end',\r\n                    originY: 'top',\r\n                    overlayX: 'end',\r\n                    overlayY: 'top',\r\n                    offsetY: 40\r\n                }\r\n            ]\"\r\n    cdkConnectedOverlay\r\n>\r\n    <div (click)=\"toggleMenuDropdown()\" class=\"content-bottom-right py-0_5\">\r\n        <ul class=\"list\">\r\n            <li class=\"item\">\r\n                <button\r\n                    [delay]=\"500\"\r\n                    [disabled]=\"!variablesService.currentWallet.loaded\"\r\n                    [routerLink]=\"['/details']\"\r\n                    [timeDelay]=\"500\"\r\n                    class=\"w-100 px-2 py-1\"\r\n                    placement=\"left\"\r\n                    routerLinkActive=\"active\"\r\n                    tooltip=\"{{ 'WALLET.TOOLTIPS.SETTINGS' | translate }}\"\r\n                    tooltipClass=\"table-tooltip account-tooltip\"\r\n                    type=\"button\"\r\n                >\r\n                    <mat-icon svgIcon=\"pdc-settings\" class=\"mr-1\"></mat-icon>\r\n                    <span>{{ 'WALLET_DETAILS.WALLET_OPTIONS' | translate }}</span>\r\n                </button>\r\n            </li>\r\n            <ng-container *ngIf=\"variablesService.is_hardfok_active$ | async\">\r\n                <li class=\"item\">\r\n                    <button\r\n                        (click)=\"addCustomToken()\"\r\n                        [delay]=\"500\"\r\n                        [disabled]=\"false\"\r\n                        [timeDelay]=\"500\"\r\n                        class=\"w-100 px-2 py-1\"\r\n                        placement=\"left\"\r\n                        tooltip=\"{{ 'WALLET.TOOLTIPS.WHITELIST_ASSET' | translate }}\"\r\n                        tooltipClass=\"table-tooltip account-tooltip\"\r\n                        type=\"button\"\r\n                    >\r\n                        <mat-icon svgIcon=\"pdc-plus\" class=\"mr-1\"></mat-icon>\r\n                        <span>{{ 'WALLET_DETAILS.WHITELIST_ASSET' | translate }}</span>\r\n                    </button>\r\n                </li>\r\n            </ng-container>\r\n            <li class=\"item\">\r\n                <button\r\n                    (click)=\"exportHistory()\"\r\n                    [delay]=\"500\"\r\n                    [disabled]=\"variablesService.currentWallet.history.length <= 0\"\r\n                    [timeDelay]=\"500\"\r\n                    class=\"w-100 px-2 py-1\"\r\n                    placement=\"left\"\r\n                    tooltip=\"{{ 'EXPORT_HISTORY.TOOLTIP' | translate }}\"\r\n                    tooltipClass=\"table-tooltip account-tooltip\"\r\n                    type=\"button\"\r\n                >\r\n                    <mat-icon svgIcon=\"pdc-export\" class=\"mr-1\"></mat-icon>\r\n                    <span>{{ 'EXPORT_HISTORY.EXPORT_BUTTON' | translate }}</span>\r\n                </button>\r\n            </li>\r\n            <ng-container *ngIf=\"walletSyncVisible\">\r\n                <li class=\"item\">\r\n                    <button\r\n                        (click)=\"resyncCurrentWallet(variablesService.currentWallet.wallet_id)\"\r\n                        [delay]=\"500\"\r\n                        [disabled]=\"!variablesService.currentWallet.loaded\"\r\n                        [timeDelay]=\"500\"\r\n                        class=\"w-100 px-2 py-1\"\r\n                        placement=\"left\"\r\n                        tooltip=\"{{ 'WALLET_DETAILS.RESYNC_WALLET' | translate }}\"\r\n                        tooltipClass=\"table-tooltip account-tooltip\"\r\n                        type=\"button\"\r\n                    >\r\n                        <mat-icon svgIcon=\"pdc-update\" class=\"mr-1\"></mat-icon>\r\n                        <span>{{ 'WALLET_DETAILS.RESYNC_WALLET_BUTTON' | translate }}</span>\r\n                    </button>\r\n                </li>\r\n            </ng-container>\r\n            <li class=\"item\">\r\n                <button\r\n                    (click)=\"close(variablesService.currentWallet.wallet_id)\"\r\n                    [delay]=\"500\"\r\n                    [timeDelay]=\"500\"\r\n                    class=\"w-100 px-2 py-1\"\r\n                    placement=\"left\"\r\n                    tooltip=\"{{ 'WALLET.TOOLTIPS.REMOVE' | translate }}\"\r\n                    tooltipClass=\"table-tooltip account-tooltip\"\r\n                    type=\"button\"\r\n                >\r\n                    <mat-icon svgIcon=\"pdc-close-v2\" class=\"mr-1\"></mat-icon>\r\n                    <span>{{ 'WALLET_DETAILS.BUTTON_REMOVE' | translate }}</span>\r\n                </button>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</ng-template>\r\n\r\n<div class=\"tabs\">\r\n    <div class=\"tabs-header\">\r\n        <ng-container *ngFor=\"let tab of tabs\">\r\n            <ng-container *ngIf=\"!tab.hidden\">\r\n                <button\r\n                    [disabled]=\"tab.disabled\"\r\n                    [routerLink]=\"['/wallet' + tab.link]\"\r\n                    class=\"tab-header\"\r\n                    routerLinkActive=\"active\"\r\n                >\r\n                    <mat-icon [svgIcon]=\"tab.icon\"></mat-icon>\r\n                    <span *ngIf=\"isViewTabName$ | async\" class=\"ml-1\">{{ tab.title | translate }}</span>\r\n                    <span *ngIf=\"tab.indicator\" class=\"indicator\">{{ variablesService.currentWallet.new_contracts }}</span>\r\n                </button>\r\n            </ng-container>\r\n        </ng-container>\r\n    </div>\r\n    <div class=\"tabs-content\">\r\n        <router-outlet></router-outlet>\r\n\r\n        <div *ngIf=\"loader\" class=\"wrapper-tab-preloader\">\r\n            <div class=\"preloader\">\r\n                <p class=\"mb-2\">\r\n                    {{ 'Loading...' | translate }}\r\n                </p>\r\n                <div class=\"loading-bar\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, inject, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FlexModule } from '@angular/flex-layout';\r\nimport { IsAvailableAliasNamePipeModule } from '@parts/pipes';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TooltipModule } from '@parts/directives';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { RouterLink } from '@angular/router';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\n\r\n@Component({\r\n    selector: 'pdc-alias-controls',\r\n    standalone: true,\r\n    imports: [CommonModule, FlexModule, IsAvailableAliasNamePipeModule, MatIconModule, TooltipModule, TranslateModule, RouterLink],\r\n    templateUrl: './alias-controls.component.html',\r\n    styleUrls: ['./alias-controls.component.scss'],\r\n})\r\nexport class AliasControlsComponent implements OnInit {\r\n    public readonly variablesService: VariablesService = inject(VariablesService);\r\n\r\n    get isShowRegisterAlias(): boolean {\r\n        const { currentWallet, daemon_state } = this.variablesService;\r\n\r\n        if (!currentWallet) {\r\n            return false;\r\n        }\r\n\r\n        const { alias, loaded, alias_available } = currentWallet;\r\n\r\n        return !alias.hasOwnProperty('name') && loaded && daemon_state === 2 && alias_available;\r\n    }\r\n\r\n    get isShowAlias(): boolean {\r\n        const { currentWallet, daemon_state } = this.variablesService;\r\n\r\n        if (!currentWallet) {\r\n            return false;\r\n        }\r\n\r\n        const { alias, loaded } = currentWallet;\r\n\r\n        return alias.hasOwnProperty('name') && loaded && daemon_state === 2;\r\n    }\r\n\r\n    get isShowAliasButtons(): boolean {\r\n        const { currentWallet, daemon_state } = this.variablesService;\r\n\r\n        if (!currentWallet) {\r\n            return false;\r\n        }\r\n\r\n        const { is_auditable, alias_available } = currentWallet;\r\n\r\n        return !is_auditable && alias_available;\r\n    }\r\n\r\n    constructor() {}\r\n\r\n    ngOnInit(): void {}\r\n}\r\n","<div\r\n    class=\"controls\"\r\n    fxFlex=\"0 0 auto\"\r\n    fxLayout=\"row\"\r\n    fxLayoutAlign=\"start center\"\r\n>\r\n    <ng-container\r\n        *ngIf=\"isShowRegisterAlias\"\r\n    >\r\n        <button [routerLink]=\"['/assign-alias']\" class=\"px-1 py-0_8 btn-light-background\">\r\n            {{ 'WALLET.REGISTER_ALIAS' | translate }}\r\n        </button>\r\n    </ng-container>\r\n\r\n    <ng-container\r\n        *ngIf=\"isShowAlias\"\r\n    >\r\n        <div [class.available]=\"variablesService.currentWallet.alias | isAvailableAliasName\" class=\"alias mr-1\">\r\n            {{ variablesService.currentWallet.alias.name }}\r\n        </div>\r\n\r\n        <ng-container *ngIf=\"isShowAliasButtons\">\r\n            <button\r\n                [delay]=\"500\"\r\n                [routerLink]=\"['/edit-alias']\"\r\n                [timeDelay]=\"500\"\r\n                class=\"btn-icon circle small mr-1\"\r\n                placement=\"bottom-right\"\r\n                tooltip=\"{{ 'WALLET.TOOLTIPS.EDIT_ALIAS' | translate }}\"\r\n                tooltipClass=\"table-tooltip account-tooltip\"\r\n            >\r\n                <mat-icon svgIcon=\"pdc-edit\"></mat-icon>\r\n            </button>\r\n\r\n            <button\r\n                [delay]=\"500\"\r\n                [routerLink]=\"['/transfer-alias']\"\r\n                [timeDelay]=\"500\"\r\n                class=\"btn-icon circle small\"\r\n                placement=\"right\"\r\n                tooltip=\"{{ 'WALLET.TOOLTIPS.TRANSFER_ALIAS' | translate }}\"\r\n                tooltipClass=\"table-tooltip account-tooltip\"\r\n            >\r\n                <mat-icon svgIcon=\"pdc-send\"></mat-icon>\r\n            </button>\r\n        </ng-container>\r\n    </ng-container>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BackButtonModule } from '@parts/directives/back-button/back-button.module';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@Component({\r\n    selector: 'app-back-button',\r\n    standalone: true,\r\n    imports: [CommonModule, BackButtonModule, MatIconModule],\r\n    templateUrl: './back-button.component.html',\r\n    styleUrls: ['./back-button.component.scss'],\r\n})\r\nexport class BackButtonComponent {}\r\n","<button appBackButton class=\"btn-icon circle big\" type=\"button\">\r\n    <mat-icon\r\n        [ngClass]=\"{\r\n            'rotate-90': true\r\n        }\"\r\n        svgIcon=\"pdc-dropdown-arrow-down\"\r\n    ></mat-icon>\r\n</button>\r\n","import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterLink, RouterLinkWithHref } from '@angular/router';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { BreadcrumbItems } from '@parts/components/breadcrumbs/breadcrumbs.models';\r\n\r\n@Component({\r\n    selector: 'app-breadcrumbs',\r\n    standalone: true,\r\n    imports: [CommonModule, RouterLinkWithHref, TranslateModule, RouterLink],\r\n    templateUrl: './breadcrumbs.component.html',\r\n    styleUrls: ['./breadcrumbs.component.scss'],\r\n})\r\nexport class BreadcrumbsComponent {\r\n    @Input() items: BreadcrumbItems = [];\r\n}\r\n","<div class=\"breadcrumbs\">\r\n    <div *ngFor=\"let item of items\" class=\"breadcrumb\">\r\n        <ng-container *ngIf=\"item.routerLink; else templateTitle\">\r\n            <span class=\"link\" [routerLink]=\"item.routerLink\">{{ item.title | translate }}</span>\r\n        </ng-container>\r\n\r\n        <ng-template #templateTitle>\r\n            <span>{{ item.title | translate }}</span>\r\n        </ng-template>\r\n    </div>\r\n</div>\r\n","import { Component, EventEmitter, forwardRef, Input, Output } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n    selector: 'app-checkbox',\r\n    template: `\r\n        <div class=\"checkbox\">\r\n            <input\r\n                (change)=\"handlerChange($event)\"\r\n                [checked]=\"value\"\r\n                [disabled]=\"disabled\"\r\n                [id]=\"id\"\r\n                [readonly]=\"readonly\"\r\n                type=\"checkbox\"\r\n            />\r\n            <label [for]=\"id\">{{ label }}</label>\r\n        </div>\r\n    `,\r\n    styles: [\r\n        `\r\n            :host {\r\n                display: inline-flex;\r\n            }\r\n        `,\r\n    ],\r\n    providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: forwardRef(() => CheckboxComponent),\r\n            multi: true,\r\n        },\r\n    ],\r\n    standalone: true,\r\n    imports: [CommonModule],\r\n})\r\nexport class CheckboxComponent implements ControlValueAccessor {\r\n    @Input() value = false;\r\n\r\n    @Input() label = '';\r\n\r\n    @Input() id = 'id-' + Math.random();\r\n\r\n    @Input() disabled = false;\r\n\r\n    @Input() readonly = false;\r\n\r\n    @Output() emitChange = new EventEmitter<boolean>();\r\n\r\n    onChange!: (value: boolean) => void;\r\n\r\n    onTouched!: () => void;\r\n\r\n    handlerChange({ target }: Event): void {\r\n        const { checked } = target as HTMLInputElement;\r\n        this.value = checked;\r\n        this.emitChange.emit(checked);\r\n        if (this.onChange) {\r\n            this.onChange(checked);\r\n        }\r\n    }\r\n\r\n    registerOnChange(fn: any): void {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any): void {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    writeValue(value: boolean): void {\r\n        this.value = value;\r\n    }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { BackendService } from '@api/services/backend.service';\r\nimport { VariablesService } from '../services/variables.service';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@Component({\r\n    selector: 'app-copy-button',\r\n    template: `\r\n        <button (click)=\"copy()\" [classList]=\"'btn-icon circle' + ' ' + size\">\r\n            <mat-icon [class]=\"size\" [svgIcon]=\"copyAnimation ? 'pdc-check' : 'pdc-copy'\"></mat-icon>\r\n        </button>\r\n    `,\r\n    styles: [],\r\n    standalone: true,\r\n    imports: [CommonModule, MatIconModule],\r\n})\r\nexport class CopyButtonComponent {\r\n    @Input() value: string;\r\n\r\n    @Input() size: 'small' | 'big' = 'small';\r\n\r\n    copyAnimation = false;\r\n\r\n    copyAnimationTimeout;\r\n\r\n    constructor(private backend: BackendService, public variablesService: VariablesService) {}\r\n\r\n    copy(): void {\r\n        this.backend.setClipboard(this.value || '');\r\n        this.copyAnimation = true;\r\n        this.copyAnimationTimeout = window.setTimeout(() => {\r\n            this.copyAnimation = false;\r\n            clearTimeout(this.copyAnimationTimeout);\r\n        }, 2000);\r\n    }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { NgSwitch, NgSwitchCase, NgSwitchDefault } from '@angular/common';\r\n\r\ntype LoaderType = 'circle' | 'circle-2' | 'circle-3' | 'dots' | 'dots-2' | 'pulse';\r\n\r\n@Component({\r\n    selector: 'pdc-loader',\r\n    standalone: true,\r\n    template: `\r\n        <ng-container [ngSwitch]=\"[type]\">\r\n            <!-- Loader 1-->\r\n            <div *ngSwitchCase=\"'circle'\" class=\"loader-1\">\r\n                <span></span>\r\n            </div>\r\n\r\n            <!-- Loader 2 -->\r\n            <div *ngSwitchCase=\"'circle-2'\" class=\"loader-2\">\r\n                <span></span>\r\n            </div>\r\n\r\n            <!-- Loader 3 -->\r\n            <div *ngSwitchCase=\"'circle-3'\" class=\"loader-3\">\r\n                <span></span>\r\n            </div>\r\n\r\n            <!-- Loader 4 -->\r\n            <div *ngSwitchCase=\"'dots'\" class=\"loader-4\">\r\n                <span></span>\r\n            </div>\r\n\r\n            <!-- Loader 5 -->\r\n            <div *ngSwitchCase=\"'dots-2'\" class=\"loader-5\">\r\n                <span></span>\r\n            </div>\r\n\r\n            <!-- Loader 6 -->\r\n            <div *ngSwitchCase=\"'pulse'\" class=\"loader-6\">\r\n                <span></span>\r\n            </div>\r\n\r\n            <!-- Default-->\r\n            <div *ngSwitchDefault class=\"loader-1\">\r\n                <span></span>\r\n            </div>\r\n        </ng-container>\r\n    `,\r\n    styles: [\r\n        `\r\n            /* Loader 1 */\r\n            .loader-1 {\r\n                height: 32px;\r\n                width: 32px;\r\n                -webkit-animation: loader-1-1 4.8s linear infinite;\r\n                animation: loader-1-1 4.8s linear infinite;\r\n            }\r\n\r\n            @-webkit-keyframes loader-1-1 {\r\n                0% {\r\n                    -webkit-transform: rotate(0deg);\r\n                }\r\n                100% {\r\n                    -webkit-transform: rotate(360deg);\r\n                }\r\n            }\r\n\r\n            @keyframes loader-1-1 {\r\n                0% {\r\n                    transform: rotate(0deg);\r\n                }\r\n                100% {\r\n                    transform: rotate(360deg);\r\n                }\r\n            }\r\n\r\n            .loader-1 span {\r\n                display: block;\r\n                position: absolute;\r\n                top: 0;\r\n                left: 0;\r\n                bottom: 0;\r\n                right: 0;\r\n                margin: auto;\r\n                height: 32px;\r\n                width: 32px;\r\n                clip: rect(0, 32px, 32px, 16px);\r\n                -webkit-animation: loader-1-2 1.2s linear infinite;\r\n                animation: loader-1-2 1.2s linear infinite;\r\n            }\r\n\r\n            @-webkit-keyframes loader-1-2 {\r\n                0% {\r\n                    -webkit-transform: rotate(0deg);\r\n                }\r\n                100% {\r\n                    -webkit-transform: rotate(220deg);\r\n                }\r\n            }\r\n\r\n            @keyframes loader-1-2 {\r\n                0% {\r\n                    transform: rotate(0deg);\r\n                }\r\n                100% {\r\n                    transform: rotate(220deg);\r\n                }\r\n            }\r\n\r\n            .loader-1 span::after {\r\n                content: '';\r\n                position: absolute;\r\n                top: 0;\r\n                left: 0;\r\n                bottom: 0;\r\n                right: 0;\r\n                margin: auto;\r\n                height: 32px;\r\n                width: 32px;\r\n                clip: rect(0, 32px, 32px, 16px);\r\n                border: 3px solid currentColor;\r\n                border-radius: 50%;\r\n                -webkit-animation: loader-1-3 1.2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\r\n                animation: loader-1-3 1.2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\r\n            }\r\n\r\n            @-webkit-keyframes loader-1-3 {\r\n                0% {\r\n                    -webkit-transform: rotate(-140deg);\r\n                }\r\n                50% {\r\n                    -webkit-transform: rotate(-160deg);\r\n                }\r\n                100% {\r\n                    -webkit-transform: rotate(140deg);\r\n                }\r\n            }\r\n\r\n            @keyframes loader-1-3 {\r\n                0% {\r\n                    transform: rotate(-140deg);\r\n                }\r\n                50% {\r\n                    transform: rotate(-160deg);\r\n                }\r\n                100% {\r\n                    transform: rotate(140deg);\r\n                }\r\n            }\r\n\r\n            /* Loader 2 */\r\n            .loader-2 {\r\n                display: block;\r\n                height: 32px;\r\n                width: 32px;\r\n                -webkit-animation: loader-2-1 3s linear infinite;\r\n                animation: loader-2-1 3s linear infinite;\r\n            }\r\n\r\n            @-webkit-keyframes loader-2-1 {\r\n                0% {\r\n                    -webkit-transform: rotate(0deg);\r\n                }\r\n                100% {\r\n                    -webkit-transform: rotate(360deg);\r\n                }\r\n            }\r\n\r\n            @keyframes loader-2-1 {\r\n                0% {\r\n                    transform: rotate(0deg);\r\n                }\r\n                100% {\r\n                    transform: rotate(360deg);\r\n                }\r\n            }\r\n\r\n            .loader-2 span {\r\n                display: block;\r\n                position: absolute;\r\n                top: 0;\r\n                left: 0;\r\n                bottom: 0;\r\n                right: 0;\r\n                margin: auto;\r\n                height: 32px;\r\n                width: 32px;\r\n                clip: rect(16px, 32px, 32px, 0);\r\n                -webkit-animation: loader-2-2 1.5s cubic-bezier(0.77, 0, 0.175, 1) infinite;\r\n                animation: loader-2-2 1.5s cubic-bezier(0.77, 0, 0.175, 1) infinite;\r\n            }\r\n\r\n            @-webkit-keyframes loader-2-2 {\r\n                0% {\r\n                    -webkit-transform: rotate(0deg);\r\n                }\r\n                100% {\r\n                    -webkit-transform: rotate(360deg);\r\n                }\r\n            }\r\n\r\n            @keyframes loader-2-2 {\r\n                0% {\r\n                    transform: rotate(0deg);\r\n                }\r\n                100% {\r\n                    transform: rotate(360deg);\r\n                }\r\n            }\r\n\r\n            .loader-2 span::before {\r\n                content: '';\r\n                display: block;\r\n                position: absolute;\r\n                top: 0;\r\n                left: 0;\r\n                bottom: 0;\r\n                right: 0;\r\n                margin: auto;\r\n                height: 32px;\r\n                width: 32px;\r\n                border: 3px solid transparent;\r\n                border-top: 3px solid currentColor;\r\n                border-radius: 50%;\r\n                -webkit-animation: loader-2-3 1.5s cubic-bezier(0.77, 0, 0.175, 1) infinite;\r\n                animation: loader-2-3 1.5s cubic-bezier(0.77, 0, 0.175, 1) infinite;\r\n            }\r\n\r\n            @-webkit-keyframes loader-2-3 {\r\n                0% {\r\n                    -webkit-transform: rotate(0deg);\r\n                }\r\n                100% {\r\n                    -webkit-transform: rotate(360deg);\r\n                }\r\n            }\r\n\r\n            @keyframes loader-2-3 {\r\n                0% {\r\n                    transform: rotate(0deg);\r\n                }\r\n                100% {\r\n                    transform: rotate(360deg);\r\n                }\r\n            }\r\n\r\n            .loader-2 span::after {\r\n                content: '';\r\n                display: block;\r\n                position: absolute;\r\n                top: 0;\r\n                left: 0;\r\n                bottom: 0;\r\n                right: 0;\r\n                margin: auto;\r\n                height: 32px;\r\n                width: 32px;\r\n                border: 3px solid rgba(255, 255, 255, 0.5);\r\n                border-radius: 50%;\r\n            }\r\n\r\n            /* Loader 3 */\r\n            .loader-3 {\r\n                display: block;\r\n                height: 32px;\r\n                width: 32px;\r\n            }\r\n\r\n            .loader-3 span {\r\n                display: block;\r\n                position: absolute;\r\n                top: 0;\r\n                left: 0;\r\n                bottom: 0;\r\n                right: 0;\r\n                margin: auto;\r\n                height: 32px;\r\n                width: 32px;\r\n            }\r\n\r\n            .loader-3 span::before {\r\n                content: '';\r\n                display: block;\r\n                position: absolute;\r\n                top: 0;\r\n                left: 0;\r\n                bottom: 0;\r\n                right: 0;\r\n                margin: auto;\r\n                height: 32px;\r\n                width: 32px;\r\n                border: 3px solid currentColor;\r\n                border-bottom: 3px solid transparent;\r\n                border-radius: 50%;\r\n                -webkit-animation: loader-3-1 1.5s cubic-bezier(0.77, 0, 0.175, 1) infinite;\r\n                animation: loader-3-1 1.5s cubic-bezier(0.77, 0, 0.175, 1) infinite;\r\n            }\r\n\r\n            @-webkit-keyframes loader-3-1 {\r\n                0% {\r\n                    -webkit-transform: rotate(0deg);\r\n                }\r\n                40% {\r\n                    -webkit-transform: rotate(180deg);\r\n                }\r\n                60% {\r\n                    -webkit-transform: rotate(180deg);\r\n                }\r\n                100% {\r\n                    -webkit-transform: rotate(360deg);\r\n                }\r\n            }\r\n\r\n            @keyframes loader-3-1 {\r\n                0% {\r\n                    transform: rotate(0deg);\r\n                }\r\n                40% {\r\n                    transform: rotate(180deg);\r\n                }\r\n                60% {\r\n                    transform: rotate(180deg);\r\n                }\r\n                100% {\r\n                    transform: rotate(360deg);\r\n                }\r\n            }\r\n\r\n            .loader-3 span::after {\r\n                content: '';\r\n                position: absolute;\r\n                top: 0;\r\n                left: 0;\r\n                bottom: 0;\r\n                right: 0;\r\n                margin: auto;\r\n                width: 6px;\r\n                height: 6px;\r\n                background: currentColor;\r\n                border-radius: 50%;\r\n                -webkit-animation: loader-3-2 1.5s cubic-bezier(0.77, 0, 0.175, 1) infinite;\r\n                animation: loader-3-2 1.5s cubic-bezier(0.77, 0, 0.175, 1) infinite;\r\n            }\r\n\r\n            @-webkit-keyframes loader-3-2 {\r\n                0% {\r\n                    -webkit-transform: translate3d(0, -32px, 0) scale(0, 2);\r\n                    opacity: 0;\r\n                }\r\n                50% {\r\n                    -webkit-transform: translate3d(0, 0, 0) scale(1.25, 1.25);\r\n                    opacity: 1;\r\n                }\r\n                100% {\r\n                    -webkit-transform: translate3d(0, 8px, 0) scale(0, 0);\r\n                    opacity: 0;\r\n                }\r\n            }\r\n\r\n            @keyframes loader-3-2 {\r\n                0% {\r\n                    transform: translate3d(0, -32px, 0) scale(0, 2);\r\n                    opacity: 0;\r\n                }\r\n                50% {\r\n                    transform: translate3d(0, 0, 0) scale(1.25, 1.25);\r\n                    opacity: 1;\r\n                }\r\n                100% {\r\n                    transform: translate3d(0, 8px, 0) scale(0, 0);\r\n                    opacity: 0;\r\n                }\r\n            }\r\n\r\n            /* Loader 4 */\r\n            .loader-4 {\r\n                height: 32px;\r\n                width: 32px;\r\n            }\r\n\r\n            .loader-4::after {\r\n                content: '';\r\n                display: block;\r\n                position: absolute;\r\n                top: 0;\r\n                left: 0;\r\n                bottom: 0;\r\n                right: 0;\r\n                margin: auto;\r\n                width: 12px;\r\n                height: 12px;\r\n                top: 0;\r\n                left: 0;\r\n                bottom: 0;\r\n                right: 0;\r\n                margin: auto;\r\n                background: currentColor;\r\n                border-radius: 50%;\r\n                -webkit-animation: loader-4-1 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\r\n                animation: loader-4-1 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\r\n            }\r\n\r\n            @-webkit-keyframes loader-4-1 {\r\n                0% {\r\n                    -webkit-transform: scale(0);\r\n                    opacity: 0;\r\n                }\r\n                50% {\r\n                    -webkit-transform: scale(1);\r\n                    opacity: 1;\r\n                }\r\n                100% {\r\n                    -webkit-transform: scale(0);\r\n                    opacity: 0;\r\n                }\r\n            }\r\n\r\n            @keyframes loader-4-1 {\r\n                0% {\r\n                    transform: scale(0);\r\n                    opacity: 0;\r\n                }\r\n                50% {\r\n                    transform: scale(1);\r\n                    opacity: 1;\r\n                }\r\n                100% {\r\n                    transform: scale(0);\r\n                    opacity: 0;\r\n                }\r\n            }\r\n\r\n            .loader-4 span {\r\n                display: block;\r\n                position: absolute;\r\n                top: 0;\r\n                left: 0;\r\n                bottom: 0;\r\n                right: 0;\r\n                margin: auto;\r\n                height: 32px;\r\n                width: 32px;\r\n                -webkit-animation: loader-4-2 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\r\n                animation: loader-4-2 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\r\n            }\r\n\r\n            @-webkit-keyframes loader-4-2 {\r\n                0% {\r\n                    -webkit-transform: rotate(0deg);\r\n                }\r\n                50% {\r\n                    -webkit-transform: rotate(180deg);\r\n                }\r\n                100% {\r\n                    -webkit-transform: rotate(360deg);\r\n                }\r\n            }\r\n\r\n            @keyframes loader-4-2 {\r\n                0% {\r\n                    transform: rotate(0deg);\r\n                }\r\n                50% {\r\n                    transform: rotate(180deg);\r\n                }\r\n                100% {\r\n                    transform: rotate(360deg);\r\n                }\r\n            }\r\n\r\n            .loader-4 span::before,\r\n            .loader-4 span::after {\r\n                content: '';\r\n                display: block;\r\n                position: absolute;\r\n                top: 0;\r\n                left: 0;\r\n                bottom: 0;\r\n                right: 0;\r\n                margin: auto;\r\n                height: 12px;\r\n                width: 12px;\r\n                background: currentColor;\r\n                border-radius: 50%;\r\n                -webkit-animation: loader-4-3 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\r\n                animation: loader-4-3 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\r\n            }\r\n\r\n            @-webkit-keyframes loader-4-3 {\r\n                0% {\r\n                    -webkit-transform: translate3d(0, 0, 0) scale(1);\r\n                }\r\n                50% {\r\n                    -webkit-transform: translate3d(-16px, 0, 0) scale(0.5);\r\n                }\r\n                100% {\r\n                    -webkit-transform: translate3d(0, 0, 0) scale(1);\r\n                }\r\n            }\r\n\r\n            @keyframes loader-4-3 {\r\n                0% {\r\n                    transform: translate3d(0, 0, 0) scale(1);\r\n                }\r\n                50% {\r\n                    transform: translate3d(-16px, 0, 0) scale(0.5);\r\n                }\r\n                100% {\r\n                    transform: translate3d(0, 0, 0) scale(1);\r\n                }\r\n            }\r\n\r\n            .loader-4 span::after {\r\n                -webkit-animation: loader-4-4 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\r\n                animation: loader-4-4 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\r\n            }\r\n\r\n            @-webkit-keyframes loader-4-4 {\r\n                0% {\r\n                    -webkit-transform: translate3d(0, 0, 0) scale(1);\r\n                }\r\n                50% {\r\n                    -webkit-transform: translate3d(16px, 0, 0) scale(0.5);\r\n                }\r\n                100% {\r\n                    -webkit-transform: translate3d(0, 0, 0) scale(1);\r\n                }\r\n            }\r\n\r\n            @keyframes loader-4-4 {\r\n                0% {\r\n                    transform: translate3d(0, 0, 0) scale(1);\r\n                }\r\n                50% {\r\n                    transform: translate3d(16px, 0, 0) scale(0.5);\r\n                }\r\n                100% {\r\n                    transform: translate3d(0, 0, 0) scale(1);\r\n                }\r\n            }\r\n\r\n            /* Loader 5 */\r\n            .loader-5 {\r\n                height: 32px;\r\n                width: 32px;\r\n                -webkit-animation: loader-5-1 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\r\n                animation: loader-5-1 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\r\n            }\r\n\r\n            @-webkit-keyframes loader-5-1 {\r\n                0% {\r\n                    -webkit-transform: rotate(0deg);\r\n                }\r\n                100% {\r\n                    -webkit-transform: rotate(360deg);\r\n                }\r\n            }\r\n\r\n            @keyframes loader-5-1 {\r\n                0% {\r\n                    transform: rotate(0deg);\r\n                }\r\n                100% {\r\n                    transform: rotate(360deg);\r\n                }\r\n            }\r\n\r\n            .loader-5::before {\r\n                content: '';\r\n                display: block;\r\n                position: absolute;\r\n                top: 0;\r\n                left: 0;\r\n                bottom: 0;\r\n                right: auto;\r\n                margin: auto;\r\n                width: 8px;\r\n                height: 8px;\r\n                background: currentColor;\r\n                border-radius: 50%;\r\n                -webkit-animation: loader-5-2 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\r\n                animation: loader-5-2 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\r\n            }\r\n\r\n            @-webkit-keyframes loader-5-2 {\r\n                0% {\r\n                    -webkit-transform: translate3d(0, 0, 0) scale(1);\r\n                }\r\n                50% {\r\n                    -webkit-transform: translate3d(24px, 0, 0) scale(0.5);\r\n                }\r\n                100% {\r\n                    -webkit-transform: translate3d(0, 0, 0) scale(1);\r\n                }\r\n            }\r\n\r\n            @keyframes loader-5-2 {\r\n                0% {\r\n                    transform: translate3d(0, 0, 0) scale(1);\r\n                }\r\n                50% {\r\n                    transform: translate3d(24px, 0, 0) scale(0.5);\r\n                }\r\n                100% {\r\n                    transform: translate3d(0, 0, 0) scale(1);\r\n                }\r\n            }\r\n\r\n            .loader-5::after {\r\n                content: '';\r\n                display: block;\r\n                position: absolute;\r\n                top: 0;\r\n                left: auto;\r\n                bottom: 0;\r\n                right: 0;\r\n                margin: auto;\r\n                width: 8px;\r\n                height: 8px;\r\n                background: currentColor;\r\n                border-radius: 50%;\r\n                -webkit-animation: loader-5-3 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\r\n                animation: loader-5-3 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\r\n            }\r\n\r\n            @-webkit-keyframes loader-5-3 {\r\n                0% {\r\n                    -webkit-transform: translate3d(0, 0, 0) scale(1);\r\n                }\r\n                50% {\r\n                    -webkit-transform: translate3d(-24px, 0, 0) scale(0.5);\r\n                }\r\n                100% {\r\n                    -webkit-transform: translate3d(0, 0, 0) scale(1);\r\n                }\r\n            }\r\n\r\n            @keyframes loader-5-3 {\r\n                0% {\r\n                    transform: translate3d(0, 0, 0) scale(1);\r\n                }\r\n                50% {\r\n                    transform: translate3d(-24px, 0, 0) scale(0.5);\r\n                }\r\n                100% {\r\n                    transform: translate3d(0, 0, 0) scale(1);\r\n                }\r\n            }\r\n\r\n            .loader-5 span {\r\n                display: block;\r\n                position: absolute;\r\n                top: 0;\r\n                left: 0;\r\n                bottom: 0;\r\n                right: 0;\r\n                margin: auto;\r\n                height: 32px;\r\n                width: 32px;\r\n            }\r\n\r\n            .loader-5 span::before {\r\n                content: '';\r\n                display: block;\r\n                position: absolute;\r\n                top: 0;\r\n                left: 0;\r\n                bottom: auto;\r\n                right: 0;\r\n                margin: auto;\r\n                width: 8px;\r\n                height: 8px;\r\n                background: currentColor;\r\n                border-radius: 50%;\r\n                -webkit-animation: loader-5-4 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\r\n                animation: loader-5-4 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\r\n            }\r\n\r\n            @-webkit-keyframes loader-5-4 {\r\n                0% {\r\n                    -webkit-transform: translate3d(0, 0, 0) scale(1);\r\n                }\r\n                50% {\r\n                    -webkit-transform: translate3d(0, 24px, 0) scale(0.5);\r\n                }\r\n                100% {\r\n                    -webkit-transform: translate3d(0, 0, 0) scale(1);\r\n                }\r\n            }\r\n\r\n            @keyframes loader-5-4 {\r\n                0% {\r\n                    transform: translate3d(0, 0, 0) scale(1);\r\n                }\r\n                50% {\r\n                    transform: translate3d(0, 24px, 0) scale(0.5);\r\n                }\r\n                100% {\r\n                    transform: translate3d(0, 0, 0) scale(1);\r\n                }\r\n            }\r\n\r\n            .loader-5 span::after {\r\n                content: '';\r\n                display: block;\r\n                position: absolute;\r\n                top: auto;\r\n                left: 0;\r\n                bottom: 0;\r\n                right: 0;\r\n                margin: auto;\r\n                width: 8px;\r\n                height: 8px;\r\n                background: currentColor;\r\n                border-radius: 50%;\r\n                -webkit-animation: loader-5-5 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\r\n                animation: loader-5-5 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\r\n            }\r\n\r\n            @-webkit-keyframes loader-5-5 {\r\n                0% {\r\n                    -webkit-transform: translate3d(0, 0, 0) scale(1);\r\n                }\r\n                50% {\r\n                    -webkit-transform: translate3d(0, -24px, 0) scale(0.5);\r\n                }\r\n                100% {\r\n                    -webkit-transform: translate3d(0, 0, 0) scale(1);\r\n                }\r\n            }\r\n\r\n            @keyframes loader-5-5 {\r\n                0% {\r\n                    transform: translate3d(0, 0, 0) scale(1);\r\n                }\r\n                50% {\r\n                    transform: translate3d(0, -24px, 0) scale(0.5);\r\n                }\r\n                100% {\r\n                    transform: translate3d(0, 0, 0) scale(1);\r\n                }\r\n            }\r\n\r\n            /* Loader 6 */\r\n            .loader-6 {\r\n                height: 32px;\r\n                width: 32px;\r\n            }\r\n\r\n            .loader-6 span {\r\n                display: block;\r\n                position: absolute;\r\n                top: 0;\r\n                left: 0;\r\n                bottom: 0;\r\n                right: 0;\r\n                margin: auto;\r\n                height: 32px;\r\n                width: 32px;\r\n            }\r\n\r\n            .loader-6 span::before,\r\n            .loader-6 span::after {\r\n                content: '';\r\n                display: block;\r\n                position: absolute;\r\n                top: 0;\r\n                left: 0;\r\n                bottom: 0;\r\n                right: 0;\r\n                margin: auto;\r\n                height: 32px;\r\n                width: 32px;\r\n                border: 2px solid currentColor;\r\n                border-radius: 50%;\r\n                opacity: 0;\r\n                -webkit-animation: loader-6-1 1.5s cubic-bezier(0.075, 0.82, 0.165, 1) infinite;\r\n                animation: loader-6-1 1.5s cubic-bezier(0.075, 0.82, 0.165, 1) infinite;\r\n            }\r\n\r\n            @-webkit-keyframes loader-6-1 {\r\n                0% {\r\n                    -webkit-transform: translate3d(0, 0, 0) scale(0);\r\n                    opacity: 1;\r\n                }\r\n                100% {\r\n                    -webkit-transform: translate3d(0, 0, 0) scale(1.5);\r\n                    opacity: 0;\r\n                }\r\n            }\r\n\r\n            @keyframes loader-6-1 {\r\n                0% {\r\n                    transform: translate3d(0, 0, 0) scale(0);\r\n                    opacity: 1;\r\n                }\r\n                100% {\r\n                    transform: translate3d(0, 0, 0) scale(1.5);\r\n                    opacity: 0;\r\n                }\r\n            }\r\n\r\n            .loader-6 span::after {\r\n                -webkit-animation: loader-6-2 1.5s cubic-bezier(0.075, 0.82, 0.165, 1) 0.25s infinite;\r\n                animation: loader-6-2 1.5s cubic-bezier(0.075, 0.82, 0.165, 1) 0.25s infinite;\r\n            }\r\n\r\n            @-webkit-keyframes loader-6-2 {\r\n                0% {\r\n                    -webkit-transform: translate3d(0, 0, 0) scale(0);\r\n                    opacity: 1;\r\n                }\r\n                100% {\r\n                    -webkit-transform: translate3d(0, 0, 0) scale(1);\r\n                    opacity: 0;\r\n                }\r\n            }\r\n\r\n            @keyframes loader-6-2 {\r\n                0% {\r\n                    transform: translate3d(0, 0, 0) scale(0);\r\n                    opacity: 1;\r\n                }\r\n                100% {\r\n                    transform: translate3d(0, 0, 0) scale(1);\r\n                    opacity: 0;\r\n                }\r\n            }\r\n        `,\r\n    ],\r\n    imports: [NgSwitch, NgSwitchCase, NgSwitchDefault],\r\n})\r\nexport class LoaderComponent {\r\n    @Input()\r\n    type: LoaderType = 'circle';\r\n}\r\n","import { Component, inject, NgZone, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FlexModule } from '@angular/flex-layout';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { ZARCANUM_MIGRATION } from '@parts/data/constants';\r\nimport { ParamsCallRpc } from '@api/models/call_rpc.model';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { GetBareOutsStats } from '@api/models/rpc.models';\r\nimport {\r\n    MigrateWalletToZarcanumComponent\r\n} from '../../../pages/wallet/wallet/modals/migrate-wallet-to-zarcanum/migrate-wallet-to-zarcanum.component';\r\nimport { BackendService } from '@api/services/backend.service';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { ModalService } from '@parts/services/modal.service';\r\n\r\n@Component({\r\n    selector: 'pdc-migrate-alert',\r\n    standalone: true,\r\n    imports: [CommonModule, FlexModule, MatIconModule, TranslateModule],\r\n    templateUrl: './migrate-alert.component.html',\r\n    styleUrls: ['./migrate-alert.component.scss'],\r\n})\r\nexport class MigrateAlertComponent implements OnInit {\r\n    private readonly _backend: BackendService = inject(BackendService);\r\n    private readonly _variablesService: VariablesService = inject(VariablesService);\r\n    private readonly _ngZone: NgZone = inject(NgZone);\r\n    private readonly _matDialog: MatDialog = inject(MatDialog);\r\n    private readonly _modalService: ModalService = inject(ModalService);\r\n\r\n    constructor() {}\r\n\r\n    ngOnInit(): void {}\r\n\r\n    openZarcanumMigration(): void {\r\n        this._backend.openUrlInBrowser(ZARCANUM_MIGRATION);\r\n    }\r\n\r\n    openMigrateWalletToZarcanum(): void {\r\n        const {\r\n            currentWallet: { wallet_id },\r\n        } = this._variablesService;\r\n        const params: ParamsCallRpc = {\r\n            id: 0,\r\n            jsonrpc: '2.0',\r\n            method: 'get_bare_outs_stats',\r\n            params: {},\r\n        };\r\n        this._backend.call_wallet_rpc([wallet_id, params], (status, response_data) => {\r\n            this._ngZone.run(() => {\r\n                if (response_data?.result) {\r\n                    const data = response_data.result;\r\n\r\n                    const config: MatDialogConfig<GetBareOutsStats> = {\r\n                        data,\r\n                        disableClose: false\r\n                    };\r\n                    this._matDialog.open(MigrateWalletToZarcanumComponent, config);\r\n                } else {\r\n                    const message = response_data.error;\r\n                    this._modalService.prepareModal('error', message);\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n","<div class=\"migrate-alert\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"2rem\">\r\n    <button class=\"btn-migrate\" type=\"button\" (click)=\"openMigrateWalletToZarcanum()\">\r\n        {{ 'WALLET.MIGRATE.BUTTON2' | translate }}\r\n    </button>\r\n\r\n    <div class=\"migration-details\">\r\n        <p class=\"text-wrap\">{{ 'WALLET.MIGRATE.TEXT1' | translate }}</p>\r\n        <p\r\n            class=\"text-align-center cursor-pointer\"\r\n            fxLayout=\"row\"\r\n            fxLayoutAlign=\"start center\"\r\n            (click)=\"openZarcanumMigration()\"\r\n        >\r\n            <mat-icon svgIcon=\"pdc-info\" class=\"mr-0_5\"></mat-icon>\r\n            <span class=\"color-primary\">{{ 'WALLET.MIGRATE.BUTTON1' | translate }}</span>\r\n        </p>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ContextMenuComponent, ContextMenuModule, ContextMenuService } from '@perfectmemory/ngx-contextmenu';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { BackendService } from '@api/services/backend.service';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n@Component({\r\n    selector: 'app-register-context-templates',\r\n    template: ` <context-menu #allContextMenu>\r\n            <ng-template (execute)=\"contextMenuCopy($event.value)\" contextMenuItem>{{ 'CONTEXT_MENU.COPY' | translate }}</ng-template>\r\n            <ng-template (execute)=\"contextMenuPaste($event.value)\" contextMenuItem>{{ 'CONTEXT_MENU.PASTE' | translate }}</ng-template>\r\n            <ng-template (execute)=\"contextMenuSelect($event.value)\" contextMenuItem>{{ 'CONTEXT_MENU.SELECT' | translate }}</ng-template>\r\n        </context-menu>\r\n        <context-menu #onlyCopyContextMenu>\r\n            <ng-template (execute)=\"contextMenuOnlyCopy($event.value)\" contextMenuItem>{{ 'CONTEXT_MENU.COPY' | translate }}</ng-template>\r\n        </context-menu>\r\n\r\n        <context-menu #pasteSelectContextMenu>\r\n            <ng-template (execute)=\"contextMenuPaste($event.value)\" contextMenuItem>{{ 'CONTEXT_MENU.PASTE' | translate }}</ng-template>\r\n            <ng-template (execute)=\"contextMenuSelect($event.value)\" contextMenuItem>{{ 'CONTEXT_MENU.SELECT' | translate }}</ng-template>\r\n        </context-menu>`,\r\n    standalone: true,\r\n    imports: [CommonModule, ContextMenuModule, TranslateModule],\r\n    providers: [ContextMenuService],\r\n})\r\nexport class RegisterContextTemplatesComponent implements OnInit {\r\n    @ViewChild('allContextMenu', { static: true })\r\n    public allContextMenu: ContextMenuComponent<any>;\r\n\r\n    @ViewChild('onlyCopyContextMenu', { static: true })\r\n    public onlyCopyContextMenu: ContextMenuComponent<any>;\r\n\r\n    @ViewChild('pasteSelectContextMenu', { static: true })\r\n    public pasteSelectContextMenu: ContextMenuComponent<any>;\r\n\r\n    constructor(public variablesService: VariablesService, private backendService: BackendService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.variablesService.allContextMenu = this.allContextMenu;\r\n        this.variablesService.onlyCopyContextMenu = this.onlyCopyContextMenu;\r\n        this.variablesService.pasteSelectContextMenu = this.pasteSelectContextMenu;\r\n    }\r\n\r\n    contextMenuCopy(target): void {\r\n        if (target && (target['nodeName'].toUpperCase() === 'TEXTAREA' || target['nodeName'].toUpperCase() === 'INPUT')) {\r\n            const start = target['contextSelectionStart'] ? 'contextSelectionStart' : 'selectionStart';\r\n            const end = target['contextSelectionEnd'] ? 'contextSelectionEnd' : 'selectionEnd';\r\n            const canUseSelection = target[start] || target[start] === '0';\r\n            const SelectedText = canUseSelection ? target['value'].substring(target[start], target[end]) : target['value'];\r\n            this.backendService.setClipboard(String(SelectedText));\r\n        }\r\n    }\r\n\r\n    contextMenuOnlyCopy(text): void {\r\n        if (text) {\r\n            this.backendService.setClipboard(String(text));\r\n        }\r\n    }\r\n\r\n    contextMenuPaste(target): void {\r\n        if (target && (target['nodeName'].toUpperCase() === 'TEXTAREA' || target['nodeName'].toUpperCase() === 'INPUT')) {\r\n            this.backendService.getClipboard((status, clipboard) => {\r\n                clipboard = String(clipboard);\r\n                if (typeof clipboard !== 'string' || clipboard.length) {\r\n                    const start = target['contextSelectionStart'] ? 'contextSelectionStart' : 'selectionStart';\r\n                    const end = target['contextSelectionEnd'] ? 'contextSelectionEnd' : 'selectionEnd';\r\n                    const _pre = target['value'].substring(0, target[start]);\r\n                    const _aft = target['value'].substring(target[end], target['value'].length);\r\n                    let text = _pre + clipboard + _aft;\r\n                    const cursorPosition = (_pre + clipboard).length;\r\n                    if (target['maxLength'] && parseInt(target['maxLength'], 10) > 0) {\r\n                        text = text.substr(0, parseInt(target['maxLength'], 10));\r\n                    }\r\n                    target['value'] = text;\r\n                    target.setSelectionRange(cursorPosition, cursorPosition);\r\n                    target.dispatchEvent(new Event('input'));\r\n                    target['focus']();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    contextMenuSelect(target): void {\r\n        if (target && (target['nodeName'].toUpperCase() === 'TEXTAREA' || target['nodeName'].toUpperCase() === 'INPUT')) {\r\n            target['focus']();\r\n            setTimeout(() => {\r\n                target['select']();\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@Component({\r\n    selector: 'pdc-shield-testnet',\r\n    standalone: true,\r\n    imports: [CommonModule, MatIconModule],\r\n    templateUrl: './shield-testnet.component.html',\r\n    styleUrls: ['./shield-testnet.component.scss'],\r\n})\r\nexport class ShieldTestnetComponent implements OnInit {\r\n    constructor() {}\r\n\r\n    ngOnInit(): void {}\r\n}\r\n","<label class=\"shield-testnet\">\r\n    <mat-icon [svgIcon]=\"'pdc-attention'\"></mat-icon>\r\n    Testnet\r\n</label>\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { BackendService } from '@api/services/backend.service';\r\nimport { VariablesService } from '../services/variables.service';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n    selector: 'app-staking-switch',\r\n    template: `\r\n        <div (click)=\"toggleStaking(); $event.stopPropagation()\" [class.off]=\"!staking\" [class.on]=\"staking\" class=\"switch\">\r\n            <span class=\"circle\"></span>\r\n        </div>\r\n    `,\r\n    styles: [],\r\n    standalone: true,\r\n    imports: [CommonModule],\r\n})\r\nexport class StakingSwitchComponent {\r\n    @Input() wallet_id: number;\r\n\r\n    @Input() staking: boolean;\r\n\r\n    @Output() stakingChange = new EventEmitter<boolean>();\r\n\r\n    constructor(private backendService: BackendService, private variablesService: VariablesService) {}\r\n\r\n    toggleStaking(): void {\r\n        const wallet = this.variablesService.getWallet(this.wallet_id);\r\n        if (wallet && wallet.loaded) {\r\n            this.stakingChange.emit(!this.staking);\r\n            if (!this.staking) {\r\n                this.backendService.startPosMining(this.wallet_id);\r\n            } else {\r\n                this.backendService.stopPosMining(this.wallet_id);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Component, EventEmitter, forwardRef, Input, Output } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n    selector: 'app-switch',\r\n    template: `\r\n        <div\r\n            (click)=\"toggle(); $event.stopPropagation()\"\r\n            [class.disabled]=\"disabled\"\r\n            [class.off]=\"!value\"\r\n            [class.on]=\"value\"\r\n            class=\"switch\"\r\n        >\r\n            <span class=\"circle\"></span>\r\n        </div>\r\n    `,\r\n    styles: [\r\n        `\r\n            :host {\r\n                display: inline-flex;\r\n            }\r\n        `,\r\n    ],\r\n    standalone: true,\r\n    imports: [CommonModule],\r\n    providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: forwardRef(() => SwitchComponent),\r\n            multi: true,\r\n        },\r\n    ],\r\n})\r\nexport class SwitchComponent implements ControlValueAccessor {\r\n    @Input() value = false;\r\n\r\n    @Input() disabled = false;\r\n\r\n    @Output() emitChange = new EventEmitter<boolean>();\r\n\r\n    onTouched!: () => void;\r\n\r\n    onChange!: (value: boolean) => void;\r\n\r\n    toggle(): void {\r\n        if (!this.disabled) {\r\n            this.value = !this.value;\r\n            this.emitChange.emit(this.value);\r\n            if (this.onChange) {\r\n                this.onChange(this.value);\r\n            }\r\n        }\r\n    }\r\n\r\n    registerOnChange(fn: any): void {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any): void {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    writeValue(value: boolean): void {\r\n        this.value = value;\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { VariablesService } from '../services/variables.service';\r\nimport { DOWNLOADS_PAGE_URL } from '@parts/data/constants';\r\nimport { BackendService } from '@api/services/backend.service';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { TooltipModule } from '@parts/directives';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@Component({\r\n    selector: 'app-synchronization-status',\r\n    template: `\r\n        <div\r\n            [ngStyle]=\"{\r\n                'align-items': variablesService.daemon_state === 1 || variablesService.daemon_state === 6 ? 'flex-start' : 'center'\r\n            }\"\r\n            class=\"synchronization-status overflow-hidden\"\r\n        >\r\n            <div class=\"status-container\">\r\n                <div *ngIf=\"variablesService.daemon_state === 0\" class=\"offline\">\r\n                    <span>{{ 'SIDEBAR.SYNCHRONIZATION.OFFLINE' | translate }}</span>\r\n                </div>\r\n                <div *ngIf=\"variablesService.daemon_state === 1\" class=\"syncing text-ellipsis\">\r\n                    {{ 'SIDEBAR.SYNCHRONIZATION.SYNCING' | translate }}\r\n                    {{ variablesService.sync.progress_value_text }}%\r\n                </div>\r\n                <div *ngIf=\"variablesService.daemon_state === 2\" class=\"online\">\r\n                    <span>{{ 'SIDEBAR.SYNCHRONIZATION.ONLINE' | translate }}</span>\r\n                </div>\r\n                <div *ngIf=\"variablesService.daemon_state === 3\" class=\"loading\">\r\n                    {{ 'SIDEBAR.SYNCHRONIZATION.LOADING' | translate }}\r\n                </div>\r\n                <div *ngIf=\"variablesService.daemon_state === 4\" class=\"offline\">\r\n                    {{ 'SIDEBAR.SYNCHRONIZATION.ERROR' | translate }}\r\n                </div>\r\n                <div *ngIf=\"variablesService.daemon_state === 5\" class=\"online\">\r\n                    {{ 'SIDEBAR.SYNCHRONIZATION.COMPLETE' | translate }}\r\n                </div>\r\n                <div *ngIf=\"variablesService.daemon_state === 6\" class=\"syncing text-ellipsis\">\r\n                    {{ 'SIDEBAR.SYNCHRONIZATION.DOWNLOADING' | translate }}\r\n                    {{ variablesService.download.progress_value_text }}%\r\n                </div>\r\n\r\n                <ng-container *ngIf=\"variablesService.daemon_state === 1 || variablesService.daemon_state === 3\">\r\n                    <div class=\"progress-bar-container\">\r\n                        <div *ngIf=\"variablesService.daemon_state === 1\" class=\"syncing\">\r\n                            <div class=\"progress-bar\">\r\n                                <div [style.width]=\"variablesService.sync.progress_value + '%'\" class=\"fill\"></div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"variablesService.daemon_state === 3\" class=\"loading\"></div>\r\n                    </div>\r\n\r\n                    <p class=\"blocks\">\r\n                        <mat-icon\r\n                            class=\"mr-0_5\"\r\n                            style=\"width: 14px; height: 14px; color: var(--block-sync)\"\r\n                            svgIcon=\"pdc-block-sync\"\r\n                        ></mat-icon>\r\n                        <span>{{ variablesService.sync.blocks.current }}</span>\r\n                        <wbr />\r\n                        /{{ variablesService.sync.blocks.max }} Blocks\r\n                    </p>\r\n                </ng-container>\r\n\r\n                <ng-container *ngIf=\"variablesService.daemon_state === 6\">\r\n                    <div class=\"progress-bar-container\">\r\n                        <div class=\"syncing downloading\">\r\n                            <div class=\"progress-bar\">\r\n                                <div [style.width]=\"variablesService.download.progress_value + '%'\" class=\"fill\"></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n            </div>\r\n\r\n            <div\r\n                *ngIf=\"\r\n                    (variablesService.daemon_state === 0 || variablesService.daemon_state === 2) &&\r\n                    [2, 3, 4].indexOf(variablesService.last_build_displaymode) !== -1\r\n                \"\r\n                class=\"update-container\"\r\n            >\r\n                <ng-container *ngIf=\"variablesService.last_build_displaymode === 2\">\r\n                    <div class=\"update-text standard\">\r\n                        <span (click)=\"getUpdate()\" [style.cursor]=\"'pointer'\">{{ 'SIDEBAR.UPDATE.STANDARD' | translate }}</span>\r\n                    </div>\r\n                    <i\r\n                        [delay]=\"500\"\r\n                        class=\"icon update standard\"\r\n                        placement=\"right-bottom\"\r\n                        tooltip=\"{{ 'SIDEBAR.UPDATE.STANDARD_TOOLTIP' | translate }}\"\r\n                        tooltipClass=\"update-tooltip\"\r\n                    ></i>\r\n                </ng-container>\r\n\r\n                <ng-container *ngIf=\"variablesService.last_build_displaymode === 3\">\r\n                    <div class=\"update-text important\">\r\n                        <span (click)=\"getUpdate()\" [style.cursor]=\"'pointer'\">{{ 'SIDEBAR.UPDATE.IMPORTANT' | translate }}</span>\r\n                        <span style=\"font-size: 1rem\">{{ 'SIDEBAR.UPDATE.IMPORTANT_HINT' | translate }}</span>\r\n                    </div>\r\n                    <i\r\n                        [delay]=\"500\"\r\n                        class=\"icon update important\"\r\n                        placement=\"right-bottom\"\r\n                        tooltip=\"{{ 'SIDEBAR.UPDATE.IMPORTANT_TOOLTIP' | translate }}\"\r\n                        tooltipClass=\"update-tooltip important\"\r\n                    ></i>\r\n                </ng-container>\r\n\r\n                <ng-container *ngIf=\"variablesService.last_build_displaymode === 4\">\r\n                    <div class=\"update-text critical\">\r\n                        <span (click)=\"getUpdate()\" [style.cursor]=\"'pointer'\">{{ 'SIDEBAR.UPDATE.CRITICAL' | translate }}</span>\r\n                        <span style=\"font-size: 1rem\">{{ 'SIDEBAR.UPDATE.IMPORTANT_HINT' | translate }}</span>\r\n                    </div>\r\n                    <i\r\n                        [delay]=\"500\"\r\n                        class=\"icon update critical\"\r\n                        placement=\"right-bottom\"\r\n                        tooltip=\"{{ 'SIDEBAR.UPDATE.CRITICAL_TOOLTIP' | translate }}\"\r\n                        tooltipClass=\"update-tooltip critical\"\r\n                    ></i>\r\n                </ng-container>\r\n            </div>\r\n\r\n            <div *ngIf=\"variablesService.daemon_state === 2 && variablesService.net_time_delta_median !== 0\" class=\"update-container\">\r\n                <div class=\"update-text time-orange\">\r\n                    <span>{{ 'SIDEBAR.UPDATE.TIME' | translate }}</span>\r\n                </div>\r\n                <i\r\n                    [delay]=\"500\"\r\n                    class=\"icon time-orange\"\r\n                    placement=\"right-bottom\"\r\n                    tooltip=\"{{ 'SIDEBAR.UPDATE.TIME_TOOLTIP' | translate }}\"\r\n                    tooltipClass=\"update-tooltip important\"\r\n                ></i>\r\n            </div>\r\n        </div>\r\n    `,\r\n    styles: [],\r\n    standalone: true,\r\n    imports: [CommonModule, TranslateModule, TooltipModule, MatIconModule],\r\n})\r\nexport class SynchronizationStatusComponent {\r\n    constructor(public variablesService: VariablesService, private backend: BackendService) {}\r\n\r\n    getUpdate(): void {\r\n        this.backend.openUrlInBrowser(DOWNLOADS_PAGE_URL);\r\n    }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { Transaction } from '@api/models/transaction.model';\r\nimport { VariablesService } from '../services/variables.service';\r\nimport { BackendService } from '@api/services/backend.service';\r\nimport { BLOCK_EXPLORER_TN_TX_URL_PREFIX, BLOCK_EXPLORER_TX_URL_PREFIX } from '../data/constants';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { TooltipModule } from '@parts/directives';\r\n\r\n@Component({\r\n    selector: 'app-transaction-details',\r\n    template: `\r\n        <table class=\"pdc-table\">\r\n            <tbody>\r\n                <tr>\r\n                    <td>{{ 'HISTORY.DETAILS.ID' | translate }}</td>\r\n                    <td\r\n                        colspan=\"2\"\r\n                        (click)=\"openInBrowser(transaction.tx_hash)\"\r\n                        (contextmenu)=\"variablesService.onContextMenuOnlyCopy($event, transaction.tx_hash)\"\r\n                        class=\"color-primary cursor-pointer\"\r\n                    >\r\n                        {{ transaction.tx_hash }}\r\n                    </td>\r\n                    <td>{{ 'HISTORY.DETAILS.SIZE' | translate }}</td>\r\n                    <td>\r\n                        {{ 'HISTORY.DETAILS.SIZE_VALUE' | translate : { value: transaction.tx_blob_size } }}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{{ 'Asset ID' | translate }}</td>\r\n                    <td colspan=\"2\" class=\"color-primary cursor-pointer\">\r\n                        <ng-container *ngFor=\"let asset_id of getAllUniqAssetId(transaction)\">\r\n                            <p class=\"text-ellipsis\" (contextmenu)=\"variablesService.onContextMenuOnlyCopy($event, asset_id)\">\r\n                                {{ asset_id }}\r\n                            </p>\r\n                        </ng-container>\r\n                    </td>\r\n                    <td>{{ 'HISTORY.DETAILS.CONFIRMATION' | translate }}</td>\r\n                    <td>\r\n                        {{ transaction.height === 0 ? 0 : variablesService.height_app - transaction.height }}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{{ 'HISTORY.DETAILS.HEIGHT' | translate }}</td>\r\n                    <td colspan=\"2\">{{ transaction.height }}</td>\r\n                    <td colspan=\"2\"></td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{{ 'HISTORY.DETAILS.PAYMENT_ID' | translate }}</td>\r\n                    <td\r\n                        colspan=\"4\"\r\n                        [delay]=\"500\"\r\n                        [showWhenNoOverflow]=\"false\"\r\n                        placement=\"top\"\r\n                        tooltip=\"{{ transaction.payment_id }}\"\r\n                        tooltipClass=\"table-tooltip comment-tooltip\"\r\n                    >\r\n                        {{ transaction.payment_id }}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{{ 'HISTORY.DETAILS.COMMENT' | translate }}</td>\r\n                    <td\r\n                        colspan=\"4\"\r\n                        (contextmenu)=\"variablesService.onContextMenuOnlyCopy($event, transaction.comment)\"\r\n                        [delay]=\"500\"\r\n                        [showWhenNoOverflow]=\"false\"\r\n                        placement=\"top\"\r\n                        tooltip=\"{{ transaction.comment }}\"\r\n                        tooltipClass=\"table-tooltip comment-tooltip\"\r\n                    >\r\n                        {{ transaction.comment }}\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    `,\r\n    styles: [\r\n        `\r\n            :host {\r\n                display: block;\r\n                padding: 2rem 0;\r\n            }\r\n            table tbody tr {\r\n                background: none;\r\n            }\r\n\r\n            table tbody tr td {\r\n                padding: 1rem 2rem;\r\n            }\r\n        `,\r\n    ],\r\n    standalone: true,\r\n    imports: [CommonModule, TranslateModule, TooltipModule],\r\n})\r\nexport class TransactionDetailsComponent {\r\n    @Input() transaction: Transaction;\r\n\r\n    constructor(public variablesService: VariablesService, private backendService: BackendService) {}\r\n\r\n    getAllUniqAssetId(transaction: Transaction): Set<string> {\r\n        const { employed_entries } = transaction;\r\n        const { receive = [], spent = [] } = employed_entries;\r\n        return new Set([...receive, ...spent].map(({ asset_id }) => asset_id));\r\n    }\r\n\r\n    openInBrowser(hash: string): void {\r\n        this.backendService.openUrlInBrowser(\r\n            (this.variablesService.testnet ? BLOCK_EXPLORER_TN_TX_URL_PREFIX : BLOCK_EXPLORER_TX_URL_PREFIX) + hash\r\n        );\r\n    }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Subtransfer, Subtransfers, Transaction } from '@api/models/transaction.model';\r\nimport { pdcAssetInfo } from '@parts/data/assets';\r\nimport { isFinalizator, isInitiator, isSwapTransaction } from '@parts/functions/identify-transaction';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { TooltipModule } from '@parts/directives';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { FlexModule } from '@angular/flex-layout';\r\n\r\n@Component({\r\n    selector: 'app-transaction-status',\r\n    standalone: true,\r\n    imports: [CommonModule, TooltipModule, TranslateModule, FlexModule],\r\n    templateUrl: './transaction-status.component.html',\r\n    styleUrls: ['./transaction-status.component.scss'],\r\n})\r\nexport class TransactionStatusComponent {\r\n    @Input() transaction: Transaction;\r\n\r\n    constructor(public variablesService: VariablesService) {}\r\n\r\n    isVisibleStatusBySubtransfer(subtransfer: Subtransfer, transaction: Transaction): boolean {\r\n        const { amount, asset_id, is_income } = subtransfer;\r\n        const { fee, subtransfers } = transaction;\r\n\r\n        if (subtransfers.length === 1 && asset_id === pdcAssetInfo.asset_id && is_income === false && amount.eq(fee)) {\r\n            return true;\r\n        }\r\n\r\n        if (asset_id === pdcAssetInfo.asset_id && isSwapTransaction(transaction) && isFinalizator(transaction)) {\r\n            return true;\r\n        }\r\n\r\n        return !(asset_id === pdcAssetInfo.asset_id && is_income === false && amount.eq(fee));\r\n    }\r\n\r\n    isIncome(subtransfer: Subtransfer, transaction: Transaction): boolean {\r\n        const { amount, asset_id, is_income } = subtransfer;\r\n        const { fee } = transaction;\r\n\r\n        // Case: When the amount is less than the fee\r\n        const condition1 = asset_id === pdcAssetInfo.asset_id;\r\n        const condition2 = amount.isLessThan(fee);\r\n        const condition3 = !is_income;\r\n\r\n        if (condition1 && condition2 && condition3) {\r\n            return true;\r\n        }\r\n        // ---------------------------------------------\r\n\r\n        return is_income;\r\n    }\r\n\r\n    getHeight(item): number {\r\n        const { height_app } = this.variablesService;\r\n        if ((height_app - item.height >= 10 && item.height !== 0) || (item.is_mining === true && item.height === 0)) {\r\n            return 10;\r\n        } else {\r\n            if (item.height === 0 || height_app - item.height < 0) {\r\n                return 0;\r\n            } else {\r\n                return height_app - item.height;\r\n            }\r\n        }\r\n    }\r\n\r\n    strokeSize(item): number {\r\n        const rem = this.variablesService.settings.scale;\r\n        if ((this.variablesService.height_app - item.height >= 10 && item.height !== 0) || (item.is_mining === true && item.height === 0)) {\r\n            return 0;\r\n        } else {\r\n            if (item.height === 0 || this.variablesService.height_app - item.height < 0) {\r\n                return 4.5 * parseInt(rem, 10);\r\n            } else {\r\n                return (\r\n                    4.5 * parseInt(rem, 10) - ((4.5 * parseInt(rem, 10)) / 100) * ((this.variablesService.height_app - item.height) * 10)\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    isLocked(item: Transaction): boolean {\r\n        if (item.unlock_time > 500000000 && item.unlock_time > new Date().getTime() / 1000) {\r\n            return true;\r\n        }\r\n        return item.unlock_time < 500000000 && item.unlock_time > this.variablesService.height_max;\r\n    }\r\n\r\n    time(item: Transaction): number {\r\n        const now = new Date().getTime();\r\n        return now + (item.unlock_time - this.variablesService.height_max) * 60 * 1000;\r\n    }\r\n\r\n    hasPdc(subtransfers: Subtransfers): boolean {\r\n        return Boolean(subtransfers.find(({ asset_id }) => asset_id === pdcAssetInfo.asset_id));\r\n    }\r\n\r\n    isInitiator(transaction: Transaction): boolean {\r\n        return isInitiator(transaction);\r\n    }\r\n}\r\n","<ng-container *ngIf=\"isInitiator(transaction) && !hasPdc(transaction.subtransfers)\">\r\n    <div [ngClass]=\"'received'\" class=\"status text-ellipsis\" fxLayout=\"row\" fxLayoutAlign=\" center\">\r\n        <img alt=\"\" class=\"status-transaction mr-1\" src=\"assets/icons/aqua/receive.svg\" />\r\n\r\n        <span class=\"status-transaction-text\">{{ 'HISTORY.RECEIVED' | translate }}</span>\r\n    </div>\r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"transaction.subtransfers; else noSubtransfersStatusTemplate\">\r\n    <ng-container *ngFor=\"let subtransfer of transaction.subtransfers\">\r\n        <ng-container *ngIf=\"isVisibleStatusBySubtransfer(subtransfer, transaction)\">\r\n            <div\r\n                [ngClass]=\"isIncome(subtransfer, transaction) ? 'received' : 'send'\"\r\n                class=\"status text-ellipsis\"\r\n                fxLayout=\"row\"\r\n                fxLayoutAlign=\" center\"\r\n            >\r\n                <!-- Progress -->\r\n                <ng-container *ngIf=\"getHeight(transaction) < 10\">\r\n                    <svg\r\n                        [delay]=\"500\"\r\n                        class=\"confirmation mr-1\"\r\n                        placement=\"bottom-left\"\r\n                        style=\"transform: rotateZ(-90deg)\"\r\n                        tooltip=\"{{ 'HISTORY.STATUS_TOOLTIP' | translate : { current: getHeight(transaction), total: 10 } }}\"\r\n                        tooltipClass=\"table-tooltip\"\r\n                    >\r\n                        <circle\r\n                            cx=\"50%\"\r\n                            cy=\"50%\"\r\n                            fill=\"transparent\"\r\n                            r=\"0.7rem\"\r\n                            stroke=\"rgba(31, 143, 235, 0.33)\"\r\n                            stroke-dasharray=\"100\"\r\n                            stroke-dashoffset=\"0\"\r\n                            stroke-width=\"0.3rem\"\r\n                        ></circle>\r\n                        <circle\r\n                            [style.stroke-dashoffset]=\"strokeSize(transaction)\"\r\n                            [style.stroke]=\"isIncome(subtransfer, transaction) ? '#16d1d6' : '#1f8feb'\"\r\n                            class=\"progress-circle\"\r\n                            cx=\"50%\"\r\n                            cy=\"50%\"\r\n                            fill=\"transparent\"\r\n                            r=\"0.7rem\"\r\n                            stroke-dasharray=\"4.5rem\"\r\n                            stroke-dashoffset=\"4.5rem\"\r\n                            stroke-linecap=\"round\"\r\n                            stroke-width=\"0.3rem\"\r\n                        ></circle>\r\n                    </svg>\r\n                </ng-container>\r\n\r\n                <!-- Status -->\r\n                <ng-container *ngIf=\"getHeight(transaction) === 10\">\r\n                    <img class=\"status-transaction mr-1\"\r\n                         [src]=\"isIncome(subtransfer, transaction) ? 'assets/icons/aqua/receive.svg' : 'assets/icons/blue/send.svg'\"  alt=\"status\"/>\r\n                </ng-container>\r\n                <span class=\"status-transaction-text\">{{ (isIncome(subtransfer, transaction) ? 'HISTORY.RECEIVED' : 'HISTORY.SEND') | translate }}</span>\r\n\r\n                <!-- Lock time -->\r\n                <ng-container *ngIf=\"transaction.unlock_time !== 0 && transaction.tx_type !== 6\">\r\n                    <ng-container *ngIf=\"isLocked(transaction); else unlock\">\r\n                        <ng-container *ngIf=\"transaction.unlock_time < 500000000\">\r\n                            <i\r\n                                [class.position]=\"\r\n                                    variablesService.height_app - transaction.height < 10 ||\r\n                                    (transaction.height === 0 && transaction.timestamp > 0)\r\n                                \"\r\n                                [delay]=\"500\"\r\n                                class=\"icon lock-transaction mr-1\"\r\n                                placement=\"bottom-left\"\r\n                                tooltip=\"{{ 'HISTORY.LOCK_TOOLTIP' | translate : { date: time(transaction) | date : 'MM.dd.yy' } }}\"\r\n                                tooltipClass=\"table-tooltip\"\r\n                            ></i>\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"transaction.unlock_time > 500000000\">\r\n                            <i\r\n                                [class.position]=\"\r\n                                    variablesService.height_app - transaction.height < 10 ||\r\n                                    (transaction.height === 0 && transaction.timestamp > 0)\r\n                                \"\r\n                                [delay]=\"500\"\r\n                                class=\"icon lock-transaction mr-1\"\r\n                                placement=\"bottom-left\"\r\n                                tooltip=\"{{\r\n                                    'HISTORY.LOCK_TOOLTIP'\r\n                                        | translate\r\n                                            : {\r\n                                                  date: transaction.unlock_time * 1000 | date : 'MM.dd.yy'\r\n                                              }\r\n                                }}\"\r\n                                tooltipClass=\"table-tooltip\"\r\n                            ></i>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                    <ng-template #unlock>\r\n                        <i\r\n                            [class.position]=\"\r\n                                variablesService.height_app - transaction.height < 10 ||\r\n                                (transaction.height === 0 && transaction.timestamp > 0)\r\n                            \"\r\n                            class=\"icon unlock-transaction mr-1\"\r\n                        ></i>\r\n                    </ng-template>\r\n                </ng-container>\r\n            </div>\r\n        </ng-container>\r\n    </ng-container>\r\n</ng-container>\r\n\r\n<ng-template #noSubtransfersStatusTemplate>\r\n    <div [ngClass]=\"'received'\" class=\"status text-ellipsis\" fxLayout=\"row\" fxLayoutAlign=\" center\">\r\n        <img alt=\"\" class=\"status-transaction mr-1\" src=\"assets/icons/aqua/receive.svg\" />\r\n\r\n        <span class=\"status-transaction-text\">{{ 'HISTORY.RECEIVED' | translate }}</span>\r\n    </div>\r\n</ng-template>\r\n","import { Component, inject, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\n\r\n@Component({\r\n    selector: 'pdc-visibility-balance-button',\r\n    standalone: true,\r\n    imports: [CommonModule, MatIconModule],\r\n    templateUrl: './visibility-balance-button.component.html',\r\n    styleUrls: ['./visibility-balance-button.component.scss'],\r\n})\r\nexport class VisibilityBalanceButtonComponent implements OnInit {\r\n    public readonly variablesService: VariablesService = inject(VariablesService);\r\n\r\n    constructor() {}\r\n\r\n    ngOnInit(): void {}\r\n\r\n    toggle(): void {\r\n        this.variablesService.visibilityBalance$.next(!this.variablesService.visibilityBalance$.value);\r\n    }\r\n}\r\n","<button\r\n    class=\"btn-icon circle big\"\r\n    (click)=\"toggle()\"\r\n>\r\n    <mat-icon\r\n        [svgIcon]=\"(variablesService.visibilityBalance$ | async) ? 'pdc-hide-balance' : 'pdc-show-balance'\"\r\n    ></mat-icon>\r\n</button>\r\n","import { Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\r\nimport { Wallet } from '@api/models/wallet.model';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { BigNumber } from 'bignumber.js';\r\nimport { LOCKED_BALANCE_HELP_PAGE } from '@parts/data/constants';\r\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\r\nimport { IntToMoneyPipe, IntToMoneyPipeModule } from '@parts/pipes';\r\nimport { BackendService } from '@api/services/backend.service';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DisablePriceFetchModule, TooltipModule } from '@parts/directives';\r\nimport { StakingSwitchComponent } from '@parts/components/staking-switch.component';\r\nimport { VisibilityBalanceDirective } from '@parts/directives/visibility-balance.directive';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@Component({\r\n    selector: 'app-wallet-card',\r\n    templateUrl: './wallet-card.component.html',\r\n    standalone: true,\r\n    imports: [\r\n        CommonModule,\r\n        TooltipModule,\r\n        TranslateModule,\r\n        IntToMoneyPipeModule,\r\n        StakingSwitchComponent,\r\n        DisablePriceFetchModule,\r\n        VisibilityBalanceDirective,\r\n        MatIconModule,\r\n    ],\r\n})\r\nexport class WalletCardComponent {\r\n    @HostBinding('class') classAttr = 'wallet';\r\n\r\n    @Input() wallet: Wallet;\r\n\r\n    @Output() eventClose = new EventEmitter<number>();\r\n\r\n    constructor(\r\n        public variablesService: VariablesService,\r\n        private intToMoneyPipe: IntToMoneyPipe,\r\n        private translate: TranslateService,\r\n        private backend: BackendService\r\n    ) {}\r\n\r\n    getBalancesTooltip(): HTMLDivElement {\r\n        const tooltip = document.createElement('div');\r\n        const scrollWrapper = document.createElement('div');\r\n        if (!this.wallet || !this.wallet.balances) {\r\n            return null;\r\n        }\r\n        const { balances } = this.wallet;\r\n\r\n        scrollWrapper.classList.add('balance-scroll-list');\r\n        balances.forEach(({ unlocked, total, asset_info: { ticker } }) => {\r\n            const available = document.createElement('span');\r\n            available.setAttribute('class', 'available');\r\n            available.innerText = `${this.translate.instant('WALLET.AVAILABLE_BALANCE')} `;\r\n            const availableB = document.createElement('b');\r\n            availableB.innerText = `${this.intToMoneyPipe.transform(unlocked)} ${ticker || '---'}`;\r\n            available.appendChild(availableB);\r\n            scrollWrapper.appendChild(available);\r\n\r\n            const locked = document.createElement('span');\r\n            locked.setAttribute('class', 'locked');\r\n            locked.innerText = `${this.translate.instant('WALLET.LOCKED_BALANCE')} `;\r\n            const lockedB = document.createElement('b');\r\n            lockedB.innerText = `${this.intToMoneyPipe.transform(new BigNumber(total).minus(unlocked))} ${ticker || '---'}`;\r\n            locked.appendChild(lockedB);\r\n            scrollWrapper.appendChild(locked);\r\n        });\r\n        tooltip.appendChild(scrollWrapper);\r\n        const link = document.createElement('span');\r\n        link.setAttribute('class', 'link');\r\n        link.innerHTML = this.translate.instant('WALLET.LOCKED_BALANCE_LINK');\r\n        link.addEventListener('click', () => {\r\n            this.backend.openUrlInBrowser(LOCKED_BALANCE_HELP_PAGE);\r\n        });\r\n        tooltip.appendChild(link);\r\n        return tooltip;\r\n    }\r\n}\r\n","<div *ngIf=\"variablesService.testnet\" class=\"testnet\">\r\n    Testnet\r\n</div>\r\n<div class=\"content\">\r\n    <div class=\"header\">\r\n        <div class=\"left\">\r\n            <div class=\"name text-ellipsis\">\r\n                <span *ngIf=\"wallet.new_contracts\" class=\"indicator\">\r\n                    {{ wallet.new_contracts }}\r\n                </span>\r\n\r\n                <span\r\n                    [delay]=\"500\"\r\n                    [showWhenNoOverflow]=\"false\"\r\n                    class=\"name\"\r\n                    placement=\"top-left\"\r\n                    tooltip=\"{{ wallet.name }}\"\r\n                    tooltipClass=\"table-tooltip account-tooltip\"\r\n                >\r\n                    {{ !wallet.alias['name'] ? wallet.name : wallet.alias['name'] }}\r\n                </span>\r\n            </div>\r\n        </div>\r\n        <div class=\"right\">\r\n            <button\r\n                (click)=\"eventClose.emit(wallet.wallet_id)\"\r\n                [delay]=\"500\"\r\n                [timeDelay]=\"500\"\r\n                class=\"close\"\r\n                placement=\"top\"\r\n                tooltip=\"{{ 'WALLET.TOOLTIPS.REMOVE' | translate }}\"\r\n                tooltipClass=\"table-tooltip account-tooltip\"\r\n                type=\"button\"\r\n            >\r\n                <mat-icon svgIcon=\"pdc-close\"></mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n    <h4>\r\n        <ng-container *appVisibilityBalance>\r\n            <span\r\n                *appDisablePriceFetch\r\n                [delay]=\"500\"\r\n                [placement]=\"'bottom'\"\r\n                [timeDelay]=\"1000\"\r\n                [tooltipClass]=\"'balance-tooltip'\"\r\n                [tooltip]=\"getBalancesTooltip()\"\r\n                class=\"price\"\r\n            >\r\n                {{\r\n                    wallet.getMoneyEquivalentForPdc(variablesService.pdcMoneyEquivalent) | intToMoney | currency : 'USD' || '---'\r\n                }}\r\n                <span [class.red]=\"variablesService.pdcMoneyEquivalentPercent < 0\" class=\"percent\">\r\n                    {{ variablesService.pdcMoneyEquivalentPercent | number : '1.2-2' }}%\r\n                </span>\r\n            </span>\r\n        </ng-container>\r\n    </h4>\r\n\r\n    <ng-container\r\n        *ngIf=\"(!wallet.is_auditable && !wallet.is_watch_only) || (wallet.is_auditable && !wallet.is_watch_only)\">\r\n        <div *ngIf=\"!(!wallet.loaded && variablesService.daemon_state === 2)\" class=\"staking\">\r\n            <span class=\"text\">{{ 'SIDEBAR.ACCOUNT.STAKING' | translate }}</span>\r\n            <app-staking-switch [(staking)]=\"wallet.staking\" [wallet_id]=\"wallet.wallet_id\"></app-staking-switch>\r\n        </div>\r\n    </ng-container>\r\n\r\n    <div *ngIf=\"!wallet.loaded && variablesService.daemon_state === 2\" class=\"account-synchronization\">\r\n        <div class=\"progress-bar\">\r\n            <div [style.width]=\"wallet.progress + '%'\" class=\"fill\"></div>\r\n        </div>\r\n        <div class=\"progress-percent\">{{ wallet.progress }}%</div>\r\n    </div>\r\n</div>\r\n","import { AssetInfo } from '@api/models/assets.model';\r\n\r\nexport type PdcAssetInfo = AssetInfo & { logo: string; price_url: string };\r\n\r\nexport const pdcAssetInfo: PdcAssetInfo = {\r\n    asset_id: 'd6329b5b1f7c0805b5c345f4957554002a2f557845f64d7645dae0e051a6498a',\r\n    current_supply: 0,\r\n    decimal_point: 12,\r\n    full_name: 'Pdc',\r\n    logo: 'assets/currency-icons/pdc.svg',\r\n    meta_info: '',\r\n    owner: '0000000000000000000000000000000000000000000000000000000000000000',\r\n    price_url: 'https://explorer.pdc.org/api/price?asset=pdc',\r\n    ticker: 'PDC',\r\n    total_max_supply: 0,\r\n};\r\n\r\nexport const defaultAssetLogoSrc = 'assets/currency-icons/custom_token.svg';\r\n","export const MIXIN = 15; // default mixin value\r\nexport const RCV_ADDR_QR_SCALE = 1.5; // scale factor for QR code\r\n\r\nexport const AUDITABLE_WALLET_HELP_PAGE = 'docs.pdc.org/docs/use/auditable-wallets-faq';\r\nexport const CREATE_NEW_WALLET_HELP_PAGE = 'docs.pdc.org/docs/use/wallets/gui-wallet';\r\nexport const LOCKED_BALANCE_HELP_PAGE = 'docs.pdc.org/docs/use/locked-balance';\r\nexport const DOWNLOADS_PAGE_URL = 'pdc.org/downloads';\r\nexport const ZARCANUM_MIGRATION = 'docs.pdc.org/docs/use/zarcanum-migration/';\r\n\r\nexport const BLOCK_EXPLORER_TX_URL_PREFIX = 'explorer.pdc.org/transaction/';\r\nexport const BLOCK_EXPLORER_TN_TX_URL_PREFIX = 'testnet-explorer.pdc.org/transaction/';\r\n","import { ScaleItems } from '@api/models/scale.model';\r\n\r\nexport const scaleItems: ScaleItems = [\r\n    {\r\n        value: '8px',\r\n        name: 'SETTINGS.SCALE.75',\r\n    },\r\n    {\r\n        value: '10px',\r\n        name: 'SETTINGS.SCALE.100',\r\n    },\r\n    {\r\n        value: '12px',\r\n        name: 'SETTINGS.SCALE.125',\r\n    },\r\n    {\r\n        value: '14px',\r\n        name: 'SETTINGS.SCALE.150',\r\n    },\r\n];\r\n","import { AfterViewInit, Directive, ElementRef } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[appAutofocus]',\r\n    standalone: true,\r\n})\r\nexport class AutoFocusDirective implements AfterViewInit {\r\n    constructor(private elementRef: ElementRef) {}\r\n\r\n    ngAfterViewInit() {\r\n        setTimeout(() => this.elementRef.nativeElement.focus());\r\n    }\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\nimport { NavigationService } from '@parts/services/back.service';\r\n\r\n@Directive({\r\n    selector: '[appBackButton]',\r\n})\r\nexport class BackButtonDirective {\r\n    constructor(private navigationService: NavigationService) {}\r\n\r\n    @HostListener('click')\r\n    onClick(): void {\r\n        this.navigationService.back();\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BackButtonDirective } from './back-button.directive';\r\n\r\n@NgModule({\r\n    declarations: [BackButtonDirective],\r\n    exports: [BackButtonDirective],\r\n    imports: [CommonModule],\r\n})\r\nexport class BackButtonModule {}\r\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[appDefaultImg]',\r\n})\r\nexport class DefaultImgDirective {\r\n    @Input() defaultImgSrc!: string | null | undefined;\r\n    @Input() defaultImgAlt: string | null | undefined;\r\n\r\n    constructor(private elementRef: ElementRef) {}\r\n\r\n    @HostListener('error')\r\n    handlerOnError(): void {\r\n        const elementImg: HTMLImageElement = <HTMLImageElement>this.elementRef.nativeElement;\r\n        elementImg.onerror = null;\r\n        elementImg.src = this.defaultImgSrc || '---';\r\n        elementImg.alt = this.defaultImgAlt || '---';\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DefaultImgDirective } from './default-img.directive';\r\n\r\n@NgModule({\r\n    declarations: [DefaultImgDirective],\r\n    exports: [DefaultImgDirective],\r\n    imports: [CommonModule],\r\n})\r\nexport class DefaultImgModule {}\r\n","export * from './default-img.module';\r\n","import { Directive, OnDestroy, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { VariablesService } from '../../services/variables.service';\r\nimport { Subject } from 'rxjs';\r\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\r\n\r\n@Directive({\r\n    selector: '[appDisablePriceFetch]',\r\n})\r\nexport class DisablePriceFetchDirective implements OnDestroy {\r\n    private destroy$: Subject<void> = new Subject<void>();\r\n\r\n    constructor(\r\n        private _variablesService: VariablesService,\r\n        private _templateRef: TemplateRef<any>,\r\n        private _viewContainer: ViewContainerRef\r\n    ) {\r\n        this._variablesService.disable_price_fetch$.pipe(distinctUntilChanged(), takeUntil(this.destroy$)).subscribe({\r\n            next: (disable_price_fetch: boolean) => {\r\n                this._viewContainer.clear();\r\n                if (!disable_price_fetch) {\r\n                    this._viewContainer.createEmbeddedView(this._templateRef);\r\n                }\r\n            },\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DisablePriceFetchDirective } from './disable-price-fetch.directive';\r\n\r\n@NgModule({\r\n    declarations: [DisablePriceFetchDirective],\r\n    imports: [CommonModule],\r\n    exports: [DisablePriceFetchDirective],\r\n})\r\nexport class DisablePriceFetchModule {}\r\n","export * from './disable-price-fetch.directive';\r\nexport * from './disable-price-fetch.module';\r\n","export * from './default-img';\r\nexport * from './disable-price-fetch';\r\nexport * from './input-disable-selection';\r\nexport * from './input-validate';\r\nexport * from './tooltip';\r\nexport * from './lower-case.directive';\r\n","export * from './input-disable-selection.module';\r\nexport * from './input-disable-selection.directive';\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n    // eslint-disable-next-line\r\n    selector: 'input',\r\n})\r\nexport class InputDisableSelectionDirective {\r\n    @HostListener('mousedown', ['$event'])\r\n    handleInput(event: Event): void {\r\n        if ((<HTMLInputElement>event.target).readOnly) {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { InputDisableSelectionDirective } from '@parts/directives/input-disable-selection/input-disable-selection.directive';\r\n\r\n@NgModule({\r\n    declarations: [InputDisableSelectionDirective],\r\n    exports: [InputDisableSelectionDirective],\r\n    imports: [CommonModule],\r\n})\r\nexport class InputDisableSelectionModule {}\r\n","export * from './input-validate.module';\r\nexport * from './input-validate.directive';\r\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\nimport { VariablesService } from '../../services/variables.service';\r\nimport { BigNumber } from 'bignumber.js';\r\n\r\n@Directive({\r\n    selector: '[appInputValidate]',\r\n})\r\nexport class InputValidateDirective {\r\n    constructor(private el: ElementRef, private variablesService: VariablesService) {}\r\n\r\n    @Input('appInputValidate')\r\n    public type: 'money' | 'integer';\r\n\r\n    private _decimalPoint: number = this.variablesService.decimal_point;\r\n\r\n    @Input('decimalPoint')\r\n    public set decimalPoint(value: number) {\r\n        this._decimalPoint = value;\r\n        this._formatValue();\r\n    }\r\n\r\n    @HostListener('input', ['$event'])\r\n    handleInput(): void {\r\n        this._formatValue();\r\n    }\r\n\r\n    private _formatValue(): void {\r\n        switch (this.type) {\r\n            case 'money': {\r\n                return this._money();\r\n            }\r\n            case 'integer': {\r\n                return this._integer();\r\n            }\r\n        }\r\n    }\r\n\r\n    private _prepareToMoney(value: string): string {\r\n        let currentValue = value;\r\n        // eslint-disable-next-line\r\n        const OnlyD = /[^\\d\\.]/g;\r\n        const _has_error = currentValue.match(OnlyD);\r\n        if (_has_error && _has_error.length) {\r\n            currentValue = currentValue.replace(',', '.').replace(OnlyD, '');\r\n        }\r\n        const _double_separator = currentValue.match(/\\./g);\r\n        if (_double_separator && _double_separator.length > 1) {\r\n            currentValue = currentValue.substr(0, currentValue.lastIndexOf('.'));\r\n        }\r\n\r\n        if (currentValue.length > 1 && currentValue.indexOf('.') !== 1 && currentValue.indexOf('0') === 0) {\r\n            currentValue = new BigNumber(currentValue).toString();\r\n        }\r\n\r\n        if (currentValue.indexOf('.') === 0) {\r\n            currentValue = '0' + currentValue;\r\n        }\r\n        const _zero_fill = currentValue.split('.');\r\n        if (_zero_fill[0].length > 20) {\r\n            _zero_fill[0] = _zero_fill[0].substr(0, 20);\r\n        }\r\n\r\n        if (1 in _zero_fill && _zero_fill[1].length) {\r\n            _zero_fill[1] = _zero_fill[1].substr(0, this._decimalPoint);\r\n        }\r\n        return this._decimalPoint ? _zero_fill.join('.') : _zero_fill[0];\r\n    }\r\n\r\n    private _money(): void {\r\n        const value: string = this.el.nativeElement.value;\r\n        const originalValue: string = value;\r\n        const preparedValue: string = this._prepareToMoney(value);\r\n\r\n        if (preparedValue !== originalValue) {\r\n            this._setValue(preparedValue);\r\n        }\r\n    }\r\n\r\n    private _integer(): void {\r\n        let preparedValue = this.el.nativeElement.value;\r\n        const originalValue = preparedValue;\r\n        const OnlyD = /\\D/g;\r\n        const _has_error = preparedValue.match(OnlyD);\r\n        if (_has_error && _has_error.length) {\r\n            preparedValue = preparedValue.replace(OnlyD, '');\r\n        }\r\n        if (preparedValue !== originalValue) {\r\n            this._setValue(preparedValue);\r\n        }\r\n    }\r\n\r\n    private _setValue(value: string): void {\r\n        this.el.nativeElement.value = value;\r\n        const cursorPosition = this.el.nativeElement.selectionEnd;\r\n        this.el.nativeElement.setSelectionRange(cursorPosition, cursorPosition);\r\n        this.el.nativeElement.dispatchEvent(new Event('input'));\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { InputValidateDirective } from '@parts/directives/input-validate/input-validate.directive';\r\n\r\n@NgModule({\r\n    declarations: [InputValidateDirective],\r\n    exports: [InputValidateDirective],\r\n    imports: [CommonModule],\r\n})\r\nexport class InputValidateModule {}\r\n","import { Directive, HostListener, Input } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: 'input[lowerCase]:not([upperCase]),textarea[lowerCase]:not([upperCase])',\r\n    standalone: true,\r\n})\r\nexport class LowerCaseDirective {\r\n    @Input() lowerCaseValue: string;\r\n\r\n    @Input() lowerCaseDisabled = false;\r\n\r\n    private getCaret(el) {\r\n        return {\r\n            start: el.selectionStart,\r\n            end: el.selectionEnd,\r\n        };\r\n    }\r\n\r\n    private setCaret(el, start, end) {\r\n        el.selectionStart = start;\r\n        el.selectionEnd = end;\r\n\r\n        el.focus();\r\n    }\r\n\r\n    private dispatchEvent(el, eventType) {\r\n        const event = document.createEvent('Event');\r\n        event.initEvent(eventType, false, false);\r\n        el.dispatchEvent(event);\r\n    }\r\n\r\n    private convertValue(el, value) {\r\n        el.value = value.toLowerCase();\r\n\r\n        this.dispatchEvent(el, 'input');\r\n    }\r\n\r\n    @HostListener('blur', ['$event.target', '$event.target.value'])\r\n    onBlur(el: any, value: string): void {\r\n        if (this.lowerCaseDisabled) {\r\n            return;\r\n        }\r\n        if (\r\n            (!this.lowerCaseValue || 'blur' === this.lowerCaseValue) &&\r\n            'function' === typeof value.toLowerCase &&\r\n            value.toLowerCase() !== value\r\n        ) {\r\n            this.convertValue(el, value);\r\n            this.dispatchEvent(el, 'blur'); // in case updateOn is set to blur\r\n        }\r\n    }\r\n\r\n    @HostListener('input', ['$event.target', '$event.target.value'])\r\n    onInput(el: any, value: string): void {\r\n        if (this.lowerCaseDisabled) {\r\n            return;\r\n        }\r\n        if (!this.lowerCaseValue && 'function' === typeof value.toLowerCase && value.toLowerCase() !== value) {\r\n            let { start, end } = this.getCaret(el);\r\n\r\n            if (value[0] === ' ' && start === 1 && end === 1) {\r\n                start = 0;\r\n                end = 0;\r\n            }\r\n\r\n            this.convertValue(el, value);\r\n\r\n            this.setCaret(el, start, end);\r\n        }\r\n    }\r\n}\r\n","export * from './tooltip.directive';\r\nexport * from './tooltip.module';\r\n","import {\r\n    Directive,\r\n    ElementRef,\r\n    EventEmitter,\r\n    HostBinding,\r\n    HostListener,\r\n    Input,\r\n    OnDestroy,\r\n    Output,\r\n    Renderer2,\r\n    SecurityContext,\r\n} from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Directive({\r\n    // eslint-disable-next-line\r\n    selector: '[tooltip]',\r\n})\r\nexport class TooltipDirective implements OnDestroy {\r\n    @HostBinding('style.cursor') cursor;\r\n\r\n    @Input('tooltip') tooltipInner: any;\r\n\r\n    @Input() placement: string;\r\n\r\n    @Input() tooltipClass: string;\r\n\r\n    @Input() timeout = 0;\r\n\r\n    @Input() timeDelay = 0;\r\n\r\n    @Input() delay = 0;\r\n\r\n    @Input() showWhenNoOverflow = true;\r\n\r\n    @Output() eventHide = new EventEmitter<boolean>();\r\n\r\n    tooltip: HTMLElement;\r\n\r\n    removeTooltipTimeout;\r\n\r\n    removeTooltipTimeoutInner;\r\n\r\n    removeTooltipTimeDelay;\r\n\r\n    private enter: (event: MouseEvent) => void;\r\n\r\n    private leave: (event: MouseEvent) => void;\r\n\r\n    constructor(private el: ElementRef, private renderer: Renderer2, private sanitizer: DomSanitizer) {}\r\n\r\n    @HostListener('mouseenter') onMouseEnter(): void {\r\n        if (!this.tooltipInner) {\r\n            return;\r\n        }\r\n        if (\r\n            this.showWhenNoOverflow ||\r\n            (!this.showWhenNoOverflow && this.el.nativeElement.offsetWidth < this.el.nativeElement.scrollWidth)\r\n        ) {\r\n            this.cursor = 'pointer';\r\n            if (!this.tooltip) {\r\n                if (this.timeDelay !== 0) {\r\n                    this.removeTooltipTimeDelay = setTimeout(() => {\r\n                        this.show();\r\n                    }, this.timeDelay);\r\n                } else {\r\n                    this.show();\r\n                }\r\n            } else {\r\n                this.cancelHide();\r\n            }\r\n        }\r\n    }\r\n\r\n    @HostListener('mouseleave') onMouseLeave(): void {\r\n        clearTimeout(this.removeTooltipTimeDelay);\r\n        if (this.tooltip) {\r\n            this.hide();\r\n        }\r\n    }\r\n\r\n    show(): void {\r\n        this.create();\r\n        this.placement = this.placement === null ? 'top' : this.placement;\r\n        this.setPosition(this.placement);\r\n    }\r\n\r\n    hide(): void {\r\n        this.removeTooltipTimeout = setTimeout(() => {\r\n            this.renderer.setStyle(this.tooltip, 'opacity', '0');\r\n            this.removeTooltipTimeoutInner = setTimeout(() => {\r\n                this.renderer.removeChild(document.body, this.tooltip);\r\n                this.tooltip.removeEventListener('mouseenter', this.enter);\r\n                this.tooltip.removeEventListener('mouseleave', this.leave);\r\n                this.tooltip = null;\r\n                this.eventHide.emit(true);\r\n            }, this.delay);\r\n        }, this.timeout);\r\n    }\r\n\r\n    cancelHide(): void {\r\n        clearTimeout(this.removeTooltipTimeout);\r\n        clearTimeout(this.removeTooltipTimeoutInner);\r\n        if (this.tooltip) {\r\n            this.renderer.setStyle(this.tooltip, 'opacity', '1');\r\n        }\r\n    }\r\n\r\n    create(): void {\r\n        this.tooltip = this.renderer.createElement('div');\r\n        let innerBlock = this.renderer.createElement('div');\r\n        if (typeof this.tooltipInner === 'string') {\r\n            innerBlock.innerText = this.sanitizer.sanitize(SecurityContext.HTML, this.tooltipInner);\r\n        } else {\r\n            if (this.tooltipInner) {\r\n                innerBlock = this.tooltipInner;\r\n            }\r\n        }\r\n        this.renderer.addClass(innerBlock, 'tooltip-inner');\r\n        this.renderer.addClass(innerBlock, 'scrolled-content');\r\n        this.renderer.appendChild(this.tooltip, innerBlock);\r\n        this.renderer.appendChild(document.body, this.tooltip);\r\n\r\n        this.enter = (): void => {\r\n            this.cancelHide();\r\n        };\r\n        this.tooltip.addEventListener('mouseenter', this.enter);\r\n        this.leave = (): void => {\r\n            if (this.tooltip) {\r\n                this.hide();\r\n            }\r\n        };\r\n        this.tooltip.addEventListener('mouseleave', this.leave);\r\n\r\n        this.renderer.setStyle(document.body, 'position', 'relative');\r\n        this.renderer.setStyle(this.tooltip, 'position', 'absolute');\r\n        if (this.tooltipClass !== null) {\r\n            const classes = this.tooltipClass?.split(' ') ?? [];\r\n            for (let i = 0; i < classes.length; i++) {\r\n                this.renderer.addClass(this.tooltip, classes[i]);\r\n            }\r\n        }\r\n        this.renderer.setStyle(this.tooltip, 'opacity', '0');\r\n        this.renderer.setStyle(this.tooltip, '-webkit-transition', `opacity ${this.delay}ms`);\r\n        this.renderer.setStyle(this.tooltip, '-moz-transition', `opacity ${this.delay}ms`);\r\n        this.renderer.setStyle(this.tooltip, '-o-transition', `opacity ${this.delay}ms`);\r\n        this.renderer.setStyle(this.tooltip, 'transition', `opacity ${this.delay}ms`);\r\n        window.setTimeout(() => {\r\n            return this.tooltip && this.renderer.setStyle(this.tooltip, 'opacity', '1');\r\n        }, 0);\r\n    }\r\n\r\n    setPosition(placement): void {\r\n        const hostPos = this.el.nativeElement.getBoundingClientRect();\r\n        this.renderer.addClass(this.tooltip, 'ng-tooltip-' + placement);\r\n        const topExit =\r\n            hostPos.top - this.tooltip.getBoundingClientRect().height - parseInt(getComputedStyle(this.tooltip).marginTop, 10) < 0;\r\n        const bottomExit =\r\n            window.innerHeight <\r\n            hostPos.bottom + this.tooltip.getBoundingClientRect().height + parseInt(getComputedStyle(this.tooltip).marginTop, 10);\r\n\r\n        switch (placement) {\r\n            case 'top':\r\n                if (topExit) {\r\n                    this.renderer.removeClass(this.tooltip, 'ng-tooltip-' + placement);\r\n                    this.setPosition('bottom');\r\n                    return;\r\n                } else {\r\n                    this.renderer.setStyle(\r\n                        this.tooltip,\r\n                        'left',\r\n                        hostPos.left + (hostPos.right - hostPos.left) / 2 - this.tooltip.getBoundingClientRect().width / 2 + 'px'\r\n                    );\r\n                    this.renderer.setStyle(this.tooltip, 'top', hostPos.top - this.tooltip.getBoundingClientRect().height + 'px');\r\n                    this.checkSides();\r\n                }\r\n                break;\r\n            case 'top-left':\r\n                if (topExit) {\r\n                    this.renderer.removeClass(this.tooltip, 'ng-tooltip-' + placement);\r\n                    this.setPosition('bottom-left');\r\n                    return;\r\n                } else {\r\n                    this.renderer.setStyle(this.tooltip, 'left', hostPos.left + 'px');\r\n                    this.renderer.setStyle(this.tooltip, 'top', hostPos.top - this.tooltip.getBoundingClientRect().height + 'px');\r\n                    this.checkSides();\r\n                }\r\n                break;\r\n            case 'top-right':\r\n                if (topExit) {\r\n                    this.renderer.removeClass(this.tooltip, 'ng-tooltip-' + placement);\r\n                    this.setPosition('bottom-right');\r\n                    return;\r\n                } else {\r\n                    this.renderer.setStyle(this.tooltip, 'left', hostPos.right - this.tooltip.offsetWidth + 'px');\r\n                    this.renderer.setStyle(this.tooltip, 'top', hostPos.top - this.tooltip.getBoundingClientRect().height + 'px');\r\n                    this.checkSides();\r\n                }\r\n                break;\r\n            case 'bottom':\r\n                if (bottomExit) {\r\n                    this.renderer.removeClass(this.tooltip, 'ng-tooltip-' + placement);\r\n                    this.setPosition('top');\r\n                    return;\r\n                } else {\r\n                    this.renderer.setStyle(this.tooltip, 'top', hostPos.bottom + 'px');\r\n                    this.renderer.setStyle(\r\n                        this.tooltip,\r\n                        'left',\r\n                        hostPos.left + (hostPos.right - hostPos.left) / 2 - this.tooltip.getBoundingClientRect().width / 2 + 'px'\r\n                    );\r\n                    this.checkSides();\r\n                }\r\n                break;\r\n            case 'bottom-left':\r\n                if (bottomExit) {\r\n                    this.renderer.removeClass(this.tooltip, 'ng-tooltip-' + placement);\r\n                    this.setPosition('top-left');\r\n                    return;\r\n                } else {\r\n                    this.renderer.setStyle(this.tooltip, 'top', hostPos.bottom + 'px');\r\n                    this.renderer.setStyle(this.tooltip, 'left', hostPos.left + 'px');\r\n                    this.checkSides();\r\n                }\r\n                break;\r\n            case 'bottom-right':\r\n                if (bottomExit) {\r\n                    this.renderer.removeClass(this.tooltip, 'ng-tooltip-' + placement);\r\n                    this.setPosition('top-right');\r\n                    return;\r\n                } else {\r\n                    this.renderer.setStyle(this.tooltip, 'top', hostPos.bottom + 'px');\r\n                    this.renderer.setStyle(this.tooltip, 'left', hostPos.right - this.tooltip.offsetWidth + 'px');\r\n                    this.checkSides();\r\n                }\r\n                break;\r\n            case 'left':\r\n                this.renderer.setStyle(this.tooltip, 'left', hostPos.left - this.tooltip.getBoundingClientRect().width + 'px');\r\n                this.renderer.setStyle(\r\n                    this.tooltip,\r\n                    'top',\r\n                    hostPos.top + (hostPos.bottom - hostPos.top) / 2 - this.tooltip.getBoundingClientRect().height / 2 + 'px'\r\n                );\r\n                break;\r\n            case 'left-top':\r\n                this.renderer.setStyle(this.tooltip, 'top', hostPos.top + 'px');\r\n                this.renderer.setStyle(this.tooltip, 'left', hostPos.left - this.tooltip.getBoundingClientRect().width + 'px');\r\n                break;\r\n            case 'left-bottom':\r\n                this.renderer.setStyle(this.tooltip, 'left', hostPos.left - this.tooltip.getBoundingClientRect().width + 'px');\r\n                this.renderer.setStyle(this.tooltip, 'top', hostPos.bottom - this.tooltip.getBoundingClientRect().height + 'px');\r\n                break;\r\n            case 'right':\r\n                this.renderer.setStyle(this.tooltip, 'left', hostPos.right + 'px');\r\n                this.renderer.setStyle(\r\n                    this.tooltip,\r\n                    'top',\r\n                    hostPos.top + (hostPos.bottom - hostPos.top) / 2 - this.tooltip.getBoundingClientRect().height / 2 + 'px'\r\n                );\r\n                break;\r\n            case 'right-top':\r\n                this.renderer.setStyle(this.tooltip, 'top', hostPos.top + 'px');\r\n                this.renderer.setStyle(this.tooltip, 'left', hostPos.right + 'px');\r\n                break;\r\n            case 'right-bottom':\r\n                this.renderer.setStyle(this.tooltip, 'left', hostPos.right + 'px');\r\n                this.renderer.setStyle(this.tooltip, 'top', hostPos.bottom - this.tooltip.getBoundingClientRect().height + 'px');\r\n                break;\r\n        }\r\n    }\r\n\r\n    checkSides(): void {\r\n        if (this.tooltip.getBoundingClientRect().left < 0) {\r\n            this.renderer.setStyle(this.tooltip, 'left', 0);\r\n        }\r\n        if (this.tooltip.getBoundingClientRect().right > window.innerWidth) {\r\n            this.renderer.setStyle(this.tooltip, 'left', window.innerWidth - this.tooltip.getBoundingClientRect().width + 'px');\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        clearTimeout(this.removeTooltipTimeout);\r\n        clearTimeout(this.removeTooltipTimeoutInner);\r\n        clearTimeout(this.removeTooltipTimeDelay);\r\n        if (this.tooltip) {\r\n            this.renderer.removeChild(document.body, this.tooltip);\r\n            this.tooltip = null;\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TooltipDirective } from './tooltip.directive';\r\n\r\n@NgModule({\r\n    declarations: [TooltipDirective],\r\n    imports: [CommonModule],\r\n    exports: [TooltipDirective],\r\n})\r\nexport class TooltipModule {}\r\n","import { Component, Directive, inject, OnDestroy, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\r\nimport { VariablesService } from '../services/variables.service';\r\n\r\n@Component({\r\n    selector: 'app-hidden',\r\n    template: `******`,\r\n    standalone: true,\r\n})\r\nclass HiddenComponent {}\r\n\r\n@Directive({\r\n    selector: '[appVisibilityBalance]',\r\n    standalone: true,\r\n})\r\nexport class VisibilityBalanceDirective implements OnInit, OnDestroy {\r\n    private _variablesService: VariablesService = inject(VariablesService);\r\n    private _templateRef: TemplateRef<any> = inject(TemplateRef);\r\n    private _viewContainer: ViewContainerRef = inject(ViewContainerRef);\r\n    private _destroy$: Subject<void> = new Subject<void>();\r\n\r\n    ngOnInit(): void {\r\n        this._variablesService.visibilityBalance$.pipe(distinctUntilChanged(), takeUntil(this._destroy$)).subscribe({\r\n            next: (visibility: boolean) => {\r\n                this._viewContainer.clear();\r\n                if (visibility) {\r\n                    this._viewContainer.createEmbeddedView(this._templateRef);\r\n                } else {\r\n                    this._viewContainer.createComponent(HiddenComponent);\r\n                }\r\n            },\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._destroy$.next();\r\n        this._destroy$.complete();\r\n    }\r\n}\r\n","import { Subtransfer, Transaction } from '@api/models/transaction.model';\r\nimport { Wallet } from '@api/models/wallet.model';\r\nimport { intToMoney } from '@parts/functions/int-to-money';\r\nimport { AssetInfo } from '@api/models/assets.model';\r\nimport { pdcAssetInfo } from '@parts/data/assets';\r\nimport { isFinalizator, isInitiator, isSelfTransaction, isSwapTransaction } from '@parts/functions/identify-transaction';\r\n\r\nexport interface AmountItem {\r\n    amount: string;\r\n    ticker: string;\r\n}\r\n\r\nexport type AmountItems = AmountItem[];\r\n\r\nexport const getAmountItems = (transaction: Transaction, wallet: Wallet): AmountItems => {\r\n    const { subtransfers, fee } = transaction;\r\n\r\n    const items: { amount: string; ticker: string }[] = [];\r\n\r\n    if (!subtransfers?.length) {\r\n        items.push({ amount: '0', ticker: pdcAssetInfo.ticker });\r\n        return items;\r\n    }\r\n\r\n    if (isInitiator(transaction) && !Boolean(subtransfers.find(({ asset_id }) => asset_id === pdcAssetInfo.asset_id))) {\r\n        const preparedAmount: string = intToMoney(fee, pdcAssetInfo.decimal_point);\r\n        items.push({ amount: preparedAmount, ticker: pdcAssetInfo.ticker });\r\n    }\r\n\r\n    subtransfers.forEach((subtransfer: Subtransfer) => {\r\n        const { asset_id, amount, is_income } = subtransfer;\r\n        const asset_info: AssetInfo | undefined = wallet.allAssetsInfo.find(v => asset_id === v.asset_id);\r\n\r\n        if (!asset_info) {\r\n            if (amount.toNumber() === 0) {\r\n                return;\r\n            }\r\n\r\n            const preparedAmount: string = (is_income ? amount : amount.negated()).toString();\r\n            items.push({ amount: preparedAmount, ticker: '***' });\r\n            return;\r\n        }\r\n\r\n        const { ticker, decimal_point } = asset_info;\r\n\r\n        if (asset_id !== pdcAssetInfo.asset_id) {\r\n            if (amount.toNumber() === 0) {\r\n                return;\r\n            }\r\n\r\n            const preparedAmount: string = intToMoney(is_income ? amount : amount.negated(), decimal_point);\r\n            items.push({ amount: preparedAmount, ticker });\r\n            return;\r\n        }\r\n\r\n        if (asset_id === pdcAssetInfo.asset_id) {\r\n            const { address } = wallet;\r\n\r\n            const selfTransaction: boolean = isSelfTransaction(transaction, address);\r\n            const swapTransaction: boolean = isSwapTransaction(transaction);\r\n            const finalizator: boolean = isFinalizator(transaction);\r\n            const initiator: boolean = isInitiator(transaction);\r\n\r\n            const condition_1: boolean = !amount.eq(fee ?? 0) || selfTransaction || (swapTransaction && finalizator);\r\n            const condition_2: boolean = amount.toNumber() !== 0;\r\n\r\n            if (!is_income ? condition_1 : condition_2) {\r\n                let preparedAmount!: string;\r\n\r\n                if (is_income) {\r\n                    preparedAmount = intToMoney(initiator ? amount.plus(fee) : amount, decimal_point);\r\n                } else {\r\n                    preparedAmount = intToMoney((initiator ? amount.minus(fee ?? 0) : amount).negated(), decimal_point);\r\n                }\r\n\r\n                items.push({ amount: preparedAmount, ticker });\r\n                return;\r\n            }\r\n        }\r\n    });\r\n\r\n    return items;\r\n};\r\n","import { AssetInfo } from '@api/models/assets.model';\r\nimport { defaultAssetLogoSrc } from '@parts/data/assets';\r\n\r\nexport const getLogoTemplateByAssetInfo = ({ logo, ticker }: AssetInfo) => {\r\n    let template: string = '';\r\n\r\n    if (logo.includes('<svg')) {\r\n        template = logo;\r\n    } else {\r\n        template = `<img alt=\"${ticker}\" src=\"${logo ?? defaultAssetLogoSrc}\"/>`;\r\n    }\r\n\r\n    return template;\r\n};\r\n","export const hasOwnProperty = (obj: object, key: string): boolean => {\r\n    if (Boolean(obj) && Boolean(key)) {\r\n        return Object.prototype.hasOwnProperty.call(obj, key);\r\n    }\r\n    return false;\r\n};\r\n","import { Transaction } from '@api/models/transaction.model';\r\nimport { pdcAssetInfo } from '@parts/data/assets';\r\n\r\nexport const isInitiator = (transaction: Transaction): boolean => {\r\n    const {\r\n        employed_entries: { spent = [] },\r\n    } = transaction;\r\n    return Boolean(\r\n        spent?.find(({ index }) => {\r\n            return index === 0;\r\n        })\r\n    );\r\n};\r\n\r\nexport const isFinalizator = (transaction: Transaction): boolean => {\r\n    return !isInitiator(transaction);\r\n};\r\n\r\nexport const isSelfTransaction = (transaction: Transaction, address: string): boolean => {\r\n    const {\r\n        remote_addresses,\r\n        employed_entries: { receive, spent },\r\n        subtransfers,\r\n        fee,\r\n    } = transaction;\r\n\r\n    const condition1 = remote_addresses?.includes(address);\r\n    const condition2 = [...(receive ?? []), ...(spent ?? [])].map(({ asset_id }) => asset_id === pdcAssetInfo.asset_id).every(Boolean);\r\n    const condition3 = subtransfers?.length === 1 && subtransfers[0].asset_id === pdcAssetInfo.asset_id && subtransfers[0].amount.eq(fee);\r\n\r\n    return condition1 && condition2 && condition3;\r\n};\r\n\r\nexport const isSwapTransaction = (transaction: Transaction): boolean => {\r\n    const { subtransfers } = transaction;\r\n    const arr = subtransfers.map(({ is_income }) => is_income);\r\n    const condition1 = arr.some(value => value);\r\n    const condition2 = arr.some(value => !value);\r\n    return condition1 && condition2;\r\n};\r\n","import { BigNumber } from 'bignumber.js';\r\n\r\nexport const intToMoney = (value: number | string | BigNumber, decimal_point?: any): string => {\r\n    if (value === 0 || value === undefined) {\r\n        return '0';\r\n    }\r\n    let maxFraction = 12;\r\n    if (decimal_point !== undefined && decimal_point !== null) {\r\n        maxFraction = parseInt(decimal_point, 10);\r\n    }\r\n    const power = Math.pow(10, maxFraction);\r\n    let str = new BigNumber(value).div(power).toFixed(maxFraction, 1);\r\n\r\n    if (maxFraction != 0) {\r\n        for (let i = str.length - 1; i >= 0; i--) {\r\n            if (str[i] !== '0') {\r\n                str = str.substr(0, i + 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (str.length >= 21) {\r\n        const hasMinus = str.indexOf('-') !== -1;\r\n        const hasDot = str.indexOf('.') !== -1;\r\n        const sliceFrom = 0;\r\n        let sliceTo = 20;\r\n\r\n        if (hasDot) {\r\n            sliceTo += 1;\r\n\r\n            if (decimal_point == 20) {\r\n                sliceTo += 1;\r\n            }\r\n        }\r\n\r\n        if (hasMinus) {\r\n            sliceTo += 1;\r\n        }\r\n\r\n        str = str.slice(sliceFrom, sliceTo);\r\n    }\r\n    if (str[str.length - 1] === '.') {\r\n        str = str.substr(0, str.length - 1);\r\n    }\r\n    return str;\r\n};\r\n","import { BigNumber } from 'bignumber.js';\r\n\r\nexport const moneyToInt = (value: string, decimal_point?: any): BigNumber => {\r\n    const CURRENCY_DISPLAY_DECIMAL_POINT = decimal_point ?? 12;\r\n    let result: BigNumber = new BigNumber('');\r\n    if (value) {\r\n        let am_str = value.trim();\r\n        const point_index = am_str.indexOf('.');\r\n        let fraction_size = 0;\r\n        if (-1 !== point_index) {\r\n            fraction_size = am_str.length - point_index - 1;\r\n            while (CURRENCY_DISPLAY_DECIMAL_POINT < fraction_size && '0' === am_str[am_str.length - 1]) {\r\n                am_str = am_str.slice(0, am_str.length - 1);\r\n                --fraction_size;\r\n            }\r\n\r\n            if (CURRENCY_DISPLAY_DECIMAL_POINT < fraction_size) {\r\n                am_str = am_str.slice(0, point_index) + am_str.slice(point_index + 1, CURRENCY_DISPLAY_DECIMAL_POINT);\r\n            } else {\r\n                am_str = am_str.slice(0, point_index) + am_str.slice(point_index + 1, am_str.length);\r\n            }\r\n        } else {\r\n            fraction_size = 0;\r\n        }\r\n        if (!am_str.length) {\r\n            return undefined;\r\n        }\r\n        if (am_str.length >= 21) {\r\n            am_str = am_str.slice(0, am_str.indexOf('.') !== -1 ? (decimal_point == 20 ? 22 : 21) : decimal_point == 20 ? 21 : 20);\r\n        }\r\n        if (am_str[am_str.length - 1] === '.') {\r\n            am_str = am_str.substr(0, am_str.length - 1);\r\n        }\r\n        if (fraction_size < CURRENCY_DISPLAY_DECIMAL_POINT) {\r\n            for (let i = 0; i !== CURRENCY_DISPLAY_DECIMAL_POINT - fraction_size; i++) {\r\n                am_str = am_str + '0';\r\n            }\r\n        }\r\n        result = new BigNumber(am_str).integerValue();\r\n    }\r\n    return result;\r\n};\r\n","import { Component, inject } from '@angular/core';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { AssetInfo } from '@api/models/assets.model';\r\nimport { PdcAssetInfo, pdcAssetInfo } from '@parts/data/assets';\r\nimport { MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { IntToMoneyPipeModule } from '@parts/pipes';\r\n\r\n@Component({\r\n    selector: 'app-asset-details',\r\n    templateUrl: './asset-details.component.html',\r\n    styleUrls: ['./asset-details.component.scss'],\r\n    standalone: true,\r\n    imports: [CommonModule, TranslateModule, IntToMoneyPipeModule, MatDialogModule],\r\n})\r\nexport class AssetDetailsComponent {\r\n    public readonly pdcAssetInfo: PdcAssetInfo = pdcAssetInfo;\r\n\r\n    public readonly data: { asset_info: AssetInfo; title?: string } = inject(MAT_DIALOG_DATA);\r\n\r\n    public readonly variablesService: VariablesService = inject(VariablesService);\r\n}\r\n","<h2 mat-dialog-title>{{ data?.title ?? 'ASSETS.MODALS.ASSET_DETAILS.TITLE' | translate }}</h2>\r\n\r\n<mat-dialog-content>\r\n    <ng-container *ngIf=\"data.asset_info as asset_info; else templateEmpty\">\r\n        <table class=\"rounded-corners\">\r\n            <tbody>\r\n                <tr>\r\n                    <td>{{ 'ASSETS.MODALS.ASSET_DETAILS.LABELS.NAME' | translate }}</td>\r\n                    <td>{{ asset_info.full_name }}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{{ 'ASSETS.MODALS.ASSET_DETAILS.LABELS.TICKER' | translate }}</td>\r\n                    <td>{{ asset_info.ticker }}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{{ 'ASSETS.MODALS.ASSET_DETAILS.LABELS.OWNER' | translate }}</td>\r\n                    <td (contextmenu)=\"variablesService.onContextMenuOnlyCopy($event, asset_info.owner)\">\r\n                        {{ asset_info.owner }}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{{ 'ASSETS.MODALS.ASSET_DETAILS.LABELS.ID' | translate }}</td>\r\n                    <td (contextmenu)=\"variablesService.onContextMenuOnlyCopy($event, asset_info.asset_id)\">\r\n                        {{ asset_info.asset_id }}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{{ 'ASSETS.MODALS.ASSET_DETAILS.LABELS.CURRENT_SUPPLY' | translate }}</td>\r\n                    <td>\r\n                        {{\r\n                            (asset_info.asset_id === pdcAssetInfo.asset_id\r\n                                ? variablesService.pdc_current_supply ?? 'Unknown'\r\n                                : asset_info.current_supply\r\n                            ) | intToMoney : asset_info.decimal_point\r\n                        }}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{{ 'ASSETS.MODALS.ASSET_DETAILS.LABELS.MAX_SUPPLE' | translate }}</td>\r\n                    <td>\r\n                        {{\r\n                            asset_info.asset_id === pdcAssetInfo.asset_id\r\n                                ? 'Uncapped'\r\n                                : (asset_info.total_max_supply | intToMoney : asset_info.decimal_point)\r\n                        }}\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </ng-container>\r\n\r\n    <ng-template #templateEmpty>No data</ng-template>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions>\r\n    <button class=\"outline big w-100\" mat-dialog-close type=\"button\">\r\n        {{ 'MODALS.OK' | translate }}\r\n    </button>\r\n</mat-dialog-actions>\r\n","import { Component, inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n\r\nexport interface ConfirmModalData {\r\n    title: string;\r\n    message?: string;\r\n    buttons?: Partial<{\r\n        close: string;\r\n        submit: string;\r\n    }>;\r\n}\r\n\r\n@Component({\r\n    selector: 'app-confirm-modal',\r\n    templateUrl: './confirm-modal.component.html',\r\n    styleUrls: ['./confirm-modal.component.scss'],\r\n})\r\nexport class ConfirmModalComponent {\r\n    data: ConfirmModalData = inject(MAT_DIALOG_DATA);\r\n\r\n    private _dialogRef: MatDialogRef<ConfirmModalComponent> = inject(MatDialogRef);\r\n\r\n    get title(): string {\r\n        const { title } = this.data;\r\n        return title;\r\n    }\r\n\r\n    get message(): string {\r\n        const { message } = this.data;\r\n        return message;\r\n    }\r\n\r\n    submit(): void {\r\n        this._dialogRef.close(true);\r\n    }\r\n}\r\n","<mat-dialog-content>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"1rem\">\r\n        <mat-icon svgIcon=\"pdc-info-v2\"></mat-icon>\r\n\r\n        <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n            <h3 class=\"title\">{{ title | translate }}</h3>\r\n            <p class=\"message\">{{ message | translate }}</p>\r\n        </div>\r\n    </div>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions>\r\n    <div fxFlex=\"1 1 auto\" fxLayout=\"row nowrap\" fxLayoutGap=\"1rem\">\r\n        <button [mat-dialog-close]=\"false\" class=\"outline big w-100\" type=\"button\">\r\n            {{ data?.buttons?.close ?? 'MODALS.CANCEL' | translate }}\r\n        </button>\r\n        <button appAutofocus (click)=\"submit()\" class=\"primary big w-100\" type=\"button\">\r\n            {{ data?.buttons?.submit ?? 'MODALS.OK' | translate }}\r\n        </button>\r\n    </div>\r\n</mat-dialog-actions>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { AutoFocusDirective } from '@parts/directives/autofocus.directive';\r\nimport { ConfirmModalComponent } from '@parts/modals/confirm-modal/confirm-modal.component';\r\n\r\n@NgModule({\r\n    declarations: [ConfirmModalComponent],\r\n    imports: [CommonModule, TranslateModule, FlexLayoutModule, MatIconModule, MatDialogModule, AutoFocusDirective],\r\n    exports: [ConfirmModalComponent],\r\n})\r\nexport class ConfirmModalModule {}\r\n","import { Component, inject } from '@angular/core';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';\r\nimport { FlexModule } from '@angular/flex-layout';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@Component({\r\n    selector: 'app-modal-container',\r\n    templateUrl: './modal-container.component.html',\r\n    styleUrls: ['./modal-container.component.scss'],\r\n    standalone: true,\r\n    imports: [CommonModule, MatDialogModule, TranslateModule, FlexModule, MatIconModule],\r\n})\r\nexport class ModalContainerComponent {\r\n    public readonly data: { type: 'error' | 'info' | 'success', message: any } = inject(MAT_DIALOG_DATA);\r\n}\r\n","<mat-dialog-content>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"1rem\">\r\n        <mat-icon style=\"width: 3rem; height: 3rem\" [svgIcon]=\"'pdc-system-modal-' + data.type\"></mat-icon>\r\n        <div class=\"message-container\">\r\n            <h3 class=\"title\">{{ 'MODALS.' + data.type.toUpperCase() | translate }}</h3>\r\n            <p [innerHTML]=\"data.message | translate\" class=\"message\"></p>\r\n        </div>\r\n    </div>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions align=\"center\">\r\n    <button class=\"primary max-w-19-rem w-100 big\" mat-dialog-close type=\"button\">\r\n        {{ 'MODALS.OK' | translate }}\r\n    </button>\r\n</mat-dialog-actions>\r\n","import { Component, HostBinding, Input, NgZone, OnDestroy, OnInit, Renderer2 } from '@angular/core';\r\nimport { VariablesService } from '../../services/variables.service';\r\nimport { Wallet } from '@api/models/wallet.model';\r\nimport { BackendService } from '@api/services/backend.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ModalService } from '../../services/modal.service';\r\nimport { WalletsService } from '@parts/services/wallets.service';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'app-open-wallet-modal',\r\n    templateUrl: './open-wallet-modal.component.html',\r\n    styleUrls: ['./open-wallet-modal.component.scss'],\r\n})\r\nexport class OpenWalletModalComponent implements OnInit, OnDestroy {\r\n    @HostBinding('class.modal-overlay') modalOverlay = true;\r\n\r\n    @Input() wallets: any[];\r\n\r\n    isWrongPassword$ = new BehaviorSubject<boolean>(false);\r\n\r\n    wallet = {\r\n        name: '',\r\n        path: '',\r\n        pass: '',\r\n        notFound: false,\r\n        emptyPass: false,\r\n    };\r\n\r\n    constructor(\r\n        public variablesService: VariablesService,\r\n        public walletsService: WalletsService,\r\n        private _backendService: BackendService,\r\n        private _translateService: TranslateService,\r\n        private _modalService: ModalService,\r\n        private _ngZone: NgZone,\r\n        private _renderer: Renderer2\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        this._renderer.addClass(document.body, 'no-scroll');\r\n        this.initializeWallet();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._renderer.removeClass(document.body, 'no-scroll');\r\n    }\r\n\r\n    initializeWallet(): void {\r\n        if (this.wallets.length) {\r\n            this.wallet = { ...this.wallets[0], pass: '' };\r\n        }\r\n    }\r\n\r\n    resetPasswordError(): void {\r\n        this.isWrongPassword$.next(false);\r\n    }\r\n\r\n    isFormInvalid(): boolean {\r\n        return this.wallet.notFound || this.isWrongPassword$.value;\r\n    }\r\n\r\n    openWallet(): void {\r\n        if (!this.wallets.length) {\r\n            return;\r\n        }\r\n\r\n        this._backendService.openWallet(\r\n            this.wallet.path,\r\n            this.wallet.pass,\r\n            this.variablesService.count,\r\n            false,\r\n            this.handleWalletOpening.bind(this)\r\n        );\r\n    }\r\n\r\n    handleWalletOpening(open_status, open_data, open_error): void {\r\n        this._ngZone.run(() => {\r\n            if (open_error === 'WRONG_PASSWORD') {\r\n                this.handleWrongPassword();\r\n            } else if (open_error === 'FILE_NOT_FOUND') {\r\n                this.handleFileNotFound();\r\n            } else if (open_status || open_error === 'FILE_RESTORED') {\r\n                this.handleSuccessfulWalletOpen(open_data);\r\n            }\r\n        });\r\n    }\r\n\r\n    handleWrongPassword(): void {\r\n        this._ngZone.run(() => {\r\n            this.isWrongPassword$.next(true);\r\n        });\r\n    }\r\n\r\n    handleFileNotFound(): void {\r\n        this._ngZone.run(() => {\r\n            this.wallet.notFound = true;\r\n        });\r\n\r\n        const errorMessage = `${this._translateService.instant('OPEN_WALLET.FILE_NOT_FOUND1')}:<br>${this.wallet.path}${this._translateService.instant(\r\n            'OPEN_WALLET.FILE_NOT_FOUND2'\r\n        )}`;\r\n        this._modalService.prepareModal('error', errorMessage);\r\n    }\r\n\r\n    handleSuccessfulWalletOpen(open_data): void {\r\n        const walletExists = this.variablesService.wallets.some(wallet => wallet.address === open_data['wi'].address);\r\n\r\n        if (walletExists) {\r\n            this._modalService.prepareModal('error', 'OPEN_WALLET.WITH_ADDRESS_ALREADY_OPEN');\r\n            this._backendService.closeWallet(open_data.wallet_id);\r\n        } else {\r\n            this.addNewWallet(open_data);\r\n            this.skipWallet();\r\n            this.isWrongPassword$.next(false);\r\n        }\r\n    }\r\n\r\n    addNewWallet(open_data): void {\r\n        const newWallet = this.createWalletFromData(open_data);\r\n        this.walletsService.addWallet(newWallet);\r\n        this._backendService.runWallet(open_data.wallet_id);\r\n    }\r\n\r\n    createWalletFromData(open_data): Wallet {\r\n        const newWallet = new Wallet(\r\n            open_data.wallet_id,\r\n            this.wallet.name,\r\n            this.wallet.pass,\r\n            open_data['wi'].path,\r\n            open_data['wi'].address,\r\n            open_data['wi'].balance,\r\n            open_data['wi'].unlocked_balance,\r\n            open_data['wi'].mined_total,\r\n            open_data['wi'].tracking_key\r\n        );\r\n        newWallet.alias = this._backendService.getWalletAlias(newWallet.address);\r\n        newWallet.is_auditable = open_data['wi'].is_auditable;\r\n        newWallet.is_watch_only = open_data['wi'].is_watch_only;\r\n        newWallet.currentPage = 1;\r\n        newWallet.exclude_mining_txs = false;\r\n\r\n        if (open_data.recent_history?.history) {\r\n            newWallet.total_history_item = open_data.recent_history.total_history_items;\r\n            newWallet.totalPages = Math.ceil(open_data.recent_history.total_history_items / this.variablesService.count);\r\n            newWallet.pages = this.createPagesArray(newWallet.totalPages);\r\n            newWallet.prepareHistory(open_data.recent_history.history);\r\n        } else {\r\n            newWallet.total_history_item = 0;\r\n            newWallet.pages = [1];\r\n            newWallet.totalPages = 1;\r\n        }\r\n\r\n        return newWallet;\r\n    }\r\n\r\n    createPagesArray(totalPages: number): number[] {\r\n        return totalPages > this.variablesService.maxPages\r\n            ? Array.from({ length: 5 }, (_, index) => index + 1)\r\n            : Array.from({ length: totalPages }, (_, index) => index + 1);\r\n    }\r\n\r\n    skipWallet(): void {\r\n        if (this.wallets.length) {\r\n            this.wallets.shift();\r\n            this.initializeWallet();\r\n        }\r\n    }\r\n}\r\n","<div class=\"modal open-wallet-modal-wrapper scrolled-content\">\r\n    <div class=\"wrapper w-100\">\r\n        <h3 class=\"mb-2\">{{ 'OPEN_WALLET.MODAL.TITLE' | translate }}</h3>\r\n\r\n        <div class=\"word-break-break-all mb-2\">{{ wallet.name }}</div>\r\n        <div class=\"word-break-break-all mb-2\">{{ wallet.path }}</div>\r\n\r\n        <form (ngSubmit)=\"openWallet()\" class=\"form\" fxLayout=\"column\">\r\n            <div *ngIf=\"!wallet.notFound\" class=\"form__field\">\r\n                <label for=\"password\">{{ 'OPEN_WALLET.MODAL.LABEL' | translate }}</label>\r\n                <input\r\n                    [(ngModel)]=\"wallet.pass\"\r\n                    [class.invalid]=\"isWrongPassword$ | async\"\r\n                    (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\r\n                    (focusin)=\"resetPasswordError()\"\r\n                    class=\"form__field--input\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                />\r\n                <div *ngIf=\"wallet.notFound\" class=\"error\">\r\n                    {{ 'OPEN_WALLET.MODAL.NOT_FOUND' | translate }}\r\n                </div>\r\n                <div *ngIf=\"isWrongPassword$ | async\" class=\"error\">\r\n                    {{ 'ERRORS.WRONG_PASSWORD' | translate }}\r\n                </div>\r\n            </div>\r\n\r\n            <div fxLayout=\"row nowrap\" fxLayoutGap=\"1rem\">\r\n                <button [disabled]=\"isFormInvalid()\" class=\"primary big w-100\" type=\"submit\">\r\n                    {{ 'OPEN_WALLET.MODAL.OPEN' | translate }}\r\n                </button>\r\n                <button (click)=\"skipWallet()\" class=\"outline big w-100\" type=\"button\">\r\n                    {{ 'OPEN_WALLET.MODAL.SKIP' | translate }}\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ContractStatusMessagesPipe } from '@parts/pipes/contract-status-messages-pipe/contract-status-messages.pipe';\r\n\r\n@NgModule({\r\n    declarations: [ContractStatusMessagesPipe],\r\n    exports: [ContractStatusMessagesPipe],\r\n    providers: [ContractStatusMessagesPipe],\r\n    imports: [CommonModule],\r\n})\r\nexport class ContractStatusMessagesPipeModule {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Pipe({\r\n    name: 'contractStatusMessages',\r\n})\r\nexport class ContractStatusMessagesPipe implements PipeTransform {\r\n    constructor(private translate: TranslateService) {}\r\n\r\n    getStateSeller(stateNum: number): string {\r\n        const state = { part1: '', part2: '' };\r\n        switch (stateNum) {\r\n            case 1:\r\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.SELLER.NEW_CONTRACT');\r\n                break;\r\n            case 110:\r\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.SELLER.IGNORED');\r\n                break;\r\n            case 201:\r\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.SELLER.ACCEPTED');\r\n                state.part2 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.SELLER.WAIT');\r\n                break;\r\n            case 2:\r\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.SELLER.WAITING_BUYER');\r\n                break;\r\n            case 3:\r\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.SELLER.COMPLETED');\r\n                break;\r\n            case 4:\r\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.SELLER.NOT_RECEIVED');\r\n                state.part2 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.SELLER.NULLIFIED');\r\n                break;\r\n            case 5:\r\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.SELLER.PROPOSAL_CANCEL');\r\n                break;\r\n            case 601:\r\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.SELLER.BEING_CANCELLED');\r\n                break;\r\n            case 6:\r\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.SELLER.CANCELLED');\r\n                break;\r\n            case 130:\r\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.SELLER.IGNORED_CANCEL');\r\n                break;\r\n            case 140:\r\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.SELLER.EXPIRED');\r\n                break;\r\n        }\r\n        return state.part1 + (state.part2.length ? '. ' + state.part2 : '');\r\n    }\r\n\r\n    getStateBuyer(stateNum: number): string {\r\n        const state = { part1: '', part2: '' };\r\n        switch (stateNum) {\r\n            case 1:\r\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.WAITING');\r\n                break;\r\n            case 110:\r\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.IGNORED');\r\n                break;\r\n            case 201:\r\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.ACCEPTED');\r\n                state.part2 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.WAIT');\r\n                break;\r\n            case 2:\r\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.ACCEPTED');\r\n                break;\r\n            case 120:\r\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.WAITING_SELLER');\r\n                break;\r\n            case 3:\r\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.COMPLETED');\r\n                break;\r\n            case 4:\r\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.NOT_RECEIVED');\r\n                state.part2 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.NULLIFIED');\r\n                break;\r\n            case 5:\r\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.WAITING_CANCEL');\r\n                break;\r\n            case 601:\r\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.BEING_CANCELLED');\r\n                break;\r\n            case 6:\r\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.CANCELLED');\r\n                break;\r\n            case 130:\r\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.IGNORED_CANCEL');\r\n                break;\r\n            case 140:\r\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.EXPIRED');\r\n                break;\r\n        }\r\n        return state.part1 + (state.part2.length ? '. ' + state.part2 : '');\r\n    }\r\n\r\n    transform(state: number, is_a?: boolean): any {\r\n        if (is_a) {\r\n            return this.getStateBuyer(state);\r\n        } else {\r\n            return this.getStateSeller(state);\r\n        }\r\n    }\r\n}\r\n","export * from './contract-status-messages-pipe.module';\r\nexport * from './contract-status-messages.pipe';\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ContractTimeLeftPipe } from '@parts/pipes/contract-time-left-pipe/contract-time-left.pipe';\r\n\r\n@NgModule({\r\n    declarations: [ContractTimeLeftPipe],\r\n    exports: [ContractTimeLeftPipe],\r\n    providers: [ContractTimeLeftPipe],\r\n    imports: [CommonModule],\r\n})\r\nexport class ContractTimeLeftPipeModule {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { VariablesService } from '../../services/variables.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Pipe({\r\n    name: 'contractTimeLeft',\r\n})\r\nexport class ContractTimeLeftPipe implements PipeTransform {\r\n    constructor(private service: VariablesService, private translate: TranslateService) {}\r\n\r\n    transform(value: any, arg?: any): any {\r\n        const time = parseInt(((parseInt(value, 10) - this.service.exp_med_ts) / 3600).toFixed(0), 10);\r\n        const type = arg || 0;\r\n        if (time === 0) {\r\n            return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_LESS_ONE');\r\n        }\r\n        if (this.service.settings.language === 'en') {\r\n            if (type === 0) {\r\n                if (time === 1) {\r\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_ONE', {\r\n                        time: time,\r\n                    });\r\n                } else {\r\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_MANY', {\r\n                        time: time,\r\n                    });\r\n                }\r\n            } else if (type === 1) {\r\n                if (time === 1) {\r\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_ONE_RESPONSE', { time: time });\r\n                } else {\r\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_MANY_RESPONSE', { time: time });\r\n                }\r\n            } else if (type === 2) {\r\n                if (time === 1) {\r\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_ONE_WAITING', { time: time });\r\n                } else {\r\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_MANY_WAITING', { time: time });\r\n                }\r\n            }\r\n        } else {\r\n            const rest = time % 10;\r\n            if (type === 0) {\r\n                if ((time > 20 && rest === 1) || time === 1) {\r\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_ONE', {\r\n                        time: time,\r\n                    });\r\n                } else if ((time > 1 && time < 5) || (time > 20 && (rest === 2 || rest === 3 || rest === 4))) {\r\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_MANY', {\r\n                        time: time,\r\n                    });\r\n                } else {\r\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_MANY_ALT', { time: time });\r\n                }\r\n            } else if (type === 1) {\r\n                if ((time > 20 && rest === 1) || time === 1) {\r\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_ONE_RESPONSE', { time: time });\r\n                } else if ((time > 1 && time < 5) || (time > 20 && (rest === 2 || rest === 3 || rest === 4))) {\r\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_MANY_RESPONSE', { time: time });\r\n                } else {\r\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_MANY_ALT_RESPONSE', { time: time });\r\n                }\r\n            } else if (type === 2) {\r\n                if ((time > 20 && rest === 1) || time === 1) {\r\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_ONE_WAITING', { time: time });\r\n                } else if ((time > 1 && time < 5) || (time > 20 && (rest === 2 || rest === 3 || rest === 4))) {\r\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_MANY_WAITING', { time: time });\r\n                } else {\r\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_MANY_ALT_WAITING', { time: time });\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\r\n","export * from './contract-time-left-pipe.module';\r\nexport * from './contract-time-left.pipe';\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Transaction } from '@api/models/transaction.model';\r\nimport { Wallet } from '@api/models/wallet.model';\r\nimport { AmountItems, getAmountItems } from '@parts/functions/get-amount-items';\r\n\r\n@Pipe({\r\n    name: 'getAmountItems',\r\n    standalone: true,\r\n})\r\nexport class GetAmountItemsPipe implements PipeTransform {\r\n    transform(transaction: Transaction, wallet: Wallet): AmountItems {\r\n        return getAmountItems(transaction, wallet);\r\n    }\r\n}\r\n","import { inject, Pipe, PipeTransform } from '@angular/core';\r\nimport { AssetInfo } from '@api/models/assets.model';\r\nimport { WalletsService } from '@parts/services/wallets.service';\r\n@Pipe({\r\n    name: 'getAssetInfo',\r\n    standalone: true,\r\n})\r\nexport class GetAssetInfoPipe implements PipeTransform {\r\n    private walletsService: WalletsService = inject(WalletsService);\r\n\r\n    transform(value: AssetInfo['asset_id']): AssetInfo | undefined {\r\n        return this.walletsService.currentWallet?.allAssetsInfo.find(({ asset_id }) => asset_id === value);\r\n    }\r\n}\r\n","import { inject, Pipe, PipeTransform } from '@angular/core';\r\nimport { AssetInfo } from '@api/models/assets.model';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\nimport { getLogoTemplateByAssetInfo } from '@parts/functions/get-logo-template-by-asset-info';\r\n\r\n@Pipe({\r\n    name: 'getLogoByAssetInfo',\r\n    standalone: true,\r\n})\r\nexport class GetLogoByAssetInfoPipe implements PipeTransform {\r\n    private _sanitizer: DomSanitizer = inject(DomSanitizer);\r\n\r\n    transform(value: AssetInfo): string | SafeHtml {\r\n        return this._sanitizer.bypassSecurityTrustHtml(getLogoTemplateByAssetInfo(value));\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HistoryTypeMessagesPipe } from '@parts/pipes/history-type-messages-pipe/history-type-messages.pipe';\r\n\r\n@NgModule({\r\n    declarations: [HistoryTypeMessagesPipe],\r\n    exports: [HistoryTypeMessagesPipe],\r\n    providers: [HistoryTypeMessagesPipe],\r\n    imports: [CommonModule],\r\n})\r\nexport class HistoryTypeMessagesPipeModule {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { hasOwnProperty } from '../../functions/has-own-property';\r\n\r\n@Pipe({\r\n    name: 'historyTypeMessages',\r\n})\r\nexport class HistoryTypeMessagesPipe implements PipeTransform {\r\n    constructor(private translate: TranslateService) {}\r\n\r\n    transform(item: any): any {\r\n        if (item.tx_type === 0) {\r\n            if (item.remote_addresses && item.remote_addresses[0]) {\r\n                return item.remote_addresses[0];\r\n            } else {\r\n                if (item.is_income) {\r\n                    return this.translate.instant('HISTORY.TYPE_MESSAGES.HIDDEN');\r\n                } else {\r\n                    return this.translate.instant('HISTORY.TYPE_MESSAGES.UNDEFINED');\r\n                }\r\n            }\r\n        } else if (item.tx_type === 6 && item.height === 0) {\r\n            return 'unknown';\r\n        } else if (item.tx_type === 9) {\r\n            if (hasOwnProperty(item, 'contract') && item.contract[0].is_a) {\r\n                return this.translate.instant('HISTORY.TYPE_MESSAGES.COMPLETE_BUYER');\r\n            } else {\r\n                return this.translate.instant('HISTORY.TYPE_MESSAGES.COMPLETE_SELLER');\r\n            }\r\n        } else {\r\n            switch (item.tx_type) {\r\n                // case 0:\r\n                //   return '';\r\n                // case 1:\r\n                //   return '';\r\n                // case 2:\r\n                //   return '';\r\n                // case 3:\r\n                //   return '';\r\n                case 4:\r\n                    return this.translate.instant('HISTORY.TYPE_MESSAGES.CREATE_ALIAS');\r\n                case 5:\r\n                    return this.translate.instant('HISTORY.TYPE_MESSAGES.UPDATE_ALIAS');\r\n                case 6:\r\n                    return item.employed_entries?.spent?.length\r\n                        ? this.translate.instant('HISTORY.TYPE_MESSAGES.POS_REWARD')\r\n                        : this.translate.instant('HISTORY.TYPE_MESSAGES.POW_REWARD');\r\n                case 7:\r\n                    if (!item.subtransfers || !item.subtransfers.length) {\r\n                        return this.translate.instant('HISTORY.TYPE_MESSAGES.SERVICE_TRANSACTIONS');\r\n                    } else {\r\n                        return this.translate.instant('HISTORY.TYPE_MESSAGES.CREATE_CONTRACT');\r\n                    }\r\n                case 8:\r\n                    return this.translate.instant('HISTORY.TYPE_MESSAGES.PLEDGE_CONTRACT');\r\n                // case 9:\r\n                //   return '';\r\n                case 10:\r\n                    return this.translate.instant('HISTORY.TYPE_MESSAGES.NULLIFY_CONTRACT');\r\n                case 11:\r\n                    return this.translate.instant('HISTORY.TYPE_MESSAGES.PROPOSAL_CANCEL_CONTRACT');\r\n                case 12:\r\n                    return this.translate.instant('HISTORY.TYPE_MESSAGES.CANCEL_CONTRACT');\r\n            }\r\n        }\r\n\r\n        return this.translate.instant('HISTORY.TYPE_MESSAGES.UNDEFINED');\r\n    }\r\n}\r\n","export * from './history-type-messages-pipe.module';\r\nexport * from './history-type-messages.pipe';\r\n","export * from './contract-status-messages-pipe';\r\nexport * from './contract-time-left-pipe';\r\nexport * from './history-type-messages-pipe';\r\nexport * from './int-to-money-pipe';\r\nexport * from './is-available-alias-name-pipe';\r\nexport * from './money-to-int-pipe';\r\nexport * from './safe-html-pipe';\r\nexport * from './get-asset-info.pipe';\r\nexport * from './short-string.pipe';\r\n","export * from './int-to-money-pipe.module';\r\nexport * from './int-to-money.pipe';\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IntToMoneyPipe } from '@parts/pipes/int-to-money-pipe/int-to-money.pipe';\r\n\r\n@NgModule({\r\n    declarations: [IntToMoneyPipe],\r\n    exports: [IntToMoneyPipe],\r\n    providers: [IntToMoneyPipe],\r\n    imports: [CommonModule],\r\n})\r\nexport class IntToMoneyPipeModule {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { VariablesService } from '../../services/variables.service';\r\nimport { intToMoney } from '@parts/functions/int-to-money';\r\nimport { BigNumber } from 'bignumber.js';\r\n\r\n@Pipe({\r\n    name: 'intToMoney',\r\n})\r\nexport class IntToMoneyPipe implements PipeTransform {\r\n    constructor(private variablesService: VariablesService) {}\r\n\r\n    transform(value: number | string | BigNumber, decimal_point = this.variablesService.decimal_point): any {\r\n        return intToMoney(value, decimal_point);\r\n    }\r\n}\r\n","export * from './is-available-alias-name-pipe.module';\r\nexport * from './is-available-alias-name.pipe';\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IsAvailableAliasNamePipe } from './is-available-alias-name.pipe';\r\n\r\n@NgModule({\r\n    declarations: [IsAvailableAliasNamePipe],\r\n    exports: [IsAvailableAliasNamePipe],\r\n    providers: [IsAvailableAliasNamePipe],\r\n    imports: [CommonModule],\r\n})\r\nexport class IsAvailableAliasNamePipeModule {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Alias } from '@api/models/alias.model';\r\n\r\n@Pipe({\r\n    name: 'isAvailableAliasName',\r\n})\r\nexport class IsAvailableAliasNamePipe implements PipeTransform {\r\n    transform(alias: Partial<Alias> | null | undefined): boolean {\r\n        return (Boolean(alias) && Boolean(alias.name) && alias.name.length >= 2 && alias.name.length <= 6) || false;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { AbstractControl } from '@angular/forms';\r\n\r\n@Pipe({\r\n    name: 'isVisibleControlError',\r\n    standalone: true,\r\n    pure: false,\r\n})\r\nexport class IsVisibleControlErrorPipe implements PipeTransform {\r\n    transform(control: AbstractControl | null): boolean {\r\n        if (!control) {\r\n            return false;\r\n        }\r\n        return control.invalid && (control.dirty || control.touched);\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isInitiator } from '@parts/functions/identify-transaction';\r\nimport { Transaction } from '@api/models/transaction.model';\r\n\r\n@Pipe({\r\n    name: 'isVisibleFee',\r\n    standalone: true,\r\n})\r\nexport class IsVisibleFeePipe implements PipeTransform {\r\n    transform(transaction: Transaction): boolean {\r\n        const { subtransfers } = transaction;\r\n        const condition1 = subtransfers ? !subtransfers?.every(({ is_income }) => is_income) : false;\r\n        const condition2 = isInitiator(transaction);\r\n        return condition1 && condition2;\r\n    }\r\n}\r\n","export * from './money-to-int-pipe.module';\r\nexport * from './money-to-int.pipe';\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MoneyToIntPipe } from '@parts/pipes/money-to-int-pipe/money-to-int.pipe';\r\n\r\n@NgModule({\r\n    declarations: [MoneyToIntPipe],\r\n    exports: [MoneyToIntPipe],\r\n    providers: [MoneyToIntPipe],\r\n    imports: [CommonModule],\r\n})\r\nexport class MoneyToIntPipeModule {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { VariablesService } from '../../services/variables.service';\r\nimport { moneyToInt } from '@parts/functions/money-to-int';\r\n\r\n@Pipe({\r\n    name: 'moneyToInt',\r\n})\r\nexport class MoneyToIntPipe implements PipeTransform {\r\n    constructor(private variablesService: VariablesService) {}\r\n\r\n    transform(value: any): any {\r\n        return moneyToInt(value, this.variablesService.decimal_point);\r\n    }\r\n}\r\n","export * from './safe-html-pipe.module';\r\nexport * from './safe-html.pipe';\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SafeHTMLPipe } from '@parts/pipes/safe-html-pipe/safe-html.pipe';\r\n\r\n@NgModule({\r\n    declarations: [SafeHTMLPipe],\r\n    exports: [SafeHTMLPipe],\r\n    providers: [SafeHTMLPipe],\r\n    imports: [CommonModule],\r\n})\r\nexport class SafeHtmlPipeModule {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n    name: 'safeHTML',\r\n})\r\nexport class SafeHTMLPipe implements PipeTransform {\r\n    constructor(private sanitizer: DomSanitizer) {}\r\n\r\n    transform(html: string): SafeHtml {\r\n        return this.sanitizer.bypassSecurityTrustHtml(html);\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'pdcShortString',\r\n    standalone: true,\r\n})\r\nexport class ShortStringPipe implements PipeTransform {\r\n    transform(value: string | null | undefined, left = 6, right = 6): string | null | undefined {\r\n        return value && `${value.slice(0, left)}...${value.slice(-right)}`;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class NavigationService {\r\n    private history: string[] = [];\r\n\r\n    constructor(private router: Router, private location: Location) {\r\n        this.router.events.subscribe(event => {\r\n            if (event instanceof NavigationEnd) {\r\n                this.history.push(event.urlAfterRedirects);\r\n            }\r\n        });\r\n    }\r\n\r\n    back(): void {\r\n        this.history.pop();\r\n        if (this.history.length > 0) {\r\n            this.location.back();\r\n        } else {\r\n            this.router.navigateByUrl('/').then();\r\n        }\r\n    }\r\n}\r\n","import { inject, Injectable, NgZone } from '@angular/core';\r\nimport { ModalContainerComponent } from '../modals/modal-container/modal-container.component';\r\nimport { MatDialog, MatDialogConfig, MatDialogRef } from '@angular/material/dialog';\r\nimport { take } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class ModalService {\r\n    private _count: number = 0;\r\n\r\n    private readonly _matDialog: MatDialog = inject(MatDialog);\r\n\r\n    private readonly _ngZone: NgZone = inject(NgZone);\r\n\r\n    prepareModal(type: 'error' | 'info' | 'success' | string, message: any): void {\r\n        const config: MatDialogConfig = {\r\n            data: {\r\n                type,\r\n                message,\r\n            },\r\n            width: '34rem'\r\n        };\r\n\r\n        this._ngZone.run(() => {\r\n            const matDialogRef: MatDialogRef<ModalContainerComponent> = this._matDialog.open(ModalContainerComponent, config);\r\n\r\n            matDialogRef\r\n                .afterOpened()\r\n                .pipe(take(1))\r\n                .subscribe(() => this._count + 1);\r\n            matDialogRef\r\n                .afterClosed()\r\n                .pipe(take(1))\r\n                .subscribe(() => this._count - 1);\r\n        });\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\ntype TLoaderId = 'fullScreen';\r\n\r\ninterface TDataLoader {\r\n    state: boolean;\r\n    message: string;\r\n}\r\n\r\ntype TDataLoaders = {\r\n    [key in TLoaderId]: TDataLoader;\r\n};\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class PdcLoadersService {\r\n    private _loaders$ = new BehaviorSubject<TDataLoaders>({\r\n        fullScreen: { state: false, message: 'Loading' },\r\n    });\r\n\r\n    getState(id: TLoaderId): Observable<boolean> {\r\n        return this._loaders$.pipe(map(loader => loader[id].state));\r\n    }\r\n\r\n    getMessage(id: TLoaderId): Observable<string> {\r\n        return this._loaders$.pipe(map(loader => loader[id].message));\r\n    }\r\n\r\n    open(id: TLoaderId, message: string = 'Loading'): void {\r\n        this._loaders$.next({\r\n            ...this._loaders$.value,\r\n            [id]: {\r\n                state: true,\r\n                message,\r\n            },\r\n        });\r\n    }\r\n\r\n    close(id: TLoaderId): void {\r\n        this._loaders$.next({\r\n            ...this._loaders$.value,\r\n            [id]: {\r\n                ...this._loaders$.value[id],\r\n                state: false,\r\n            },\r\n        });\r\n    }\r\n}\r\n","import { inject, Injectable, NgZone, OnDestroy } from '@angular/core';\r\nimport { DeeplinkParams, Wallet } from '@api/models/wallet.model';\r\nimport { Contact } from '@api/models/contact.model';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\nimport { Idle } from 'idlejs/dist';\r\nimport { Router } from '@angular/router';\r\nimport { ContextMenuComponent, ContextMenuService } from '@perfectmemory/ngx-contextmenu';\r\nimport { BigNumber } from 'bignumber.js';\r\nimport { Aliases } from '@api/models/alias.model';\r\nimport { distinctUntilChanged, map, takeUntil } from 'rxjs/operators';\r\nimport { Dialog } from '@angular/cdk/dialog';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { VerifiedAssetInfoWhitelist } from '@api/models/assets.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class VariablesService implements OnDestroy {\r\n    disable_price_fetch$ = new BehaviorSubject<boolean>(false);\r\n\r\n    visibilityBalance$ = new BehaviorSubject<boolean>(true);\r\n\r\n    pdc_current_supply = undefined;\r\n\r\n    rpc_port!: number;\r\n\r\n    use_debug_mode$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n\r\n    info$: BehaviorSubject<any> = new BehaviorSubject<any>({});\r\n\r\n    is_hardfok_active$: Observable<boolean> = this.info$.pipe(\r\n        map(info => {\r\n            return Boolean(info?.['is_hardfok_active']?.[4]);\r\n        }),\r\n        distinctUntilChanged()\r\n    );\r\n\r\n    stop_paginate = {};\r\n\r\n    sync_started: boolean = false;\r\n\r\n    decimal_point: number = 12;\r\n\r\n    appPass: string = '';\r\n\r\n    // \\(2^{64}-1\\) => (18,446,744,073,709,551,615)\r\n    maximum_value: BigNumber = new BigNumber('18446744073709551615');\r\n\r\n    appLogin: boolean = false;\r\n\r\n    pdcMoneyEquivalent: number = 0;\r\n\r\n    pdcMoneyEquivalentPercent: number = 0;\r\n\r\n    defaultTicker: 'PDC' = 'PDC';\r\n\r\n    opening_wallet: Wallet;\r\n\r\n    exp_med_ts: number = 0;\r\n\r\n    net_time_delta_median: number = 0;\r\n\r\n    height_app: number = 0;\r\n\r\n    height_max: number = 0;\r\n\r\n    downloaded: number = 0;\r\n\r\n    total: number = 0;\r\n\r\n    last_build_available: string = '';\r\n\r\n    last_build_displaymode: number = 0;\r\n\r\n    daemon_state: number = 3;\r\n\r\n    daemon_state$: BehaviorSubject<number> = new BehaviorSubject<number>(this.daemon_state);\r\n\r\n    deeplink$: BehaviorSubject<string | null> = new BehaviorSubject<string | null>(null);\r\n\r\n    sendActionData$: BehaviorSubject<DeeplinkParams> = new BehaviorSubject<DeeplinkParams>({});\r\n\r\n    sync = {\r\n        progress_value: 0,\r\n        progress_value_text: '0',\r\n        blocks: {\r\n            current: 0,\r\n            max: 0,\r\n        },\r\n    };\r\n\r\n    public sync_wallets: { [wallet_id: number]: boolean } = {};\r\n\r\n    download = {\r\n        progress_value: 0,\r\n        progress_value_text: '0',\r\n    };\r\n\r\n    // Avoid of execute function before callback complete\r\n    get_recent_transfers: boolean = false;\r\n\r\n    default_fee: string = '0.010000000000';\r\n\r\n    default_fee_big: BigNumber = new BigNumber('10000000000');\r\n\r\n    settings = {\r\n        appLockTime: 15,\r\n        appLog: 0,\r\n        scale: '10px',\r\n        appUseTor: false,\r\n        visibilityBalance: true,\r\n        language: 'en',\r\n        default_path: '/',\r\n        viewedContracts: [],\r\n        notViewedContracts: [],\r\n        pdcCompanionForm: {\r\n            pdcCompation: false,\r\n            secret: '',\r\n        },\r\n        wallets: [],\r\n        isDarkTheme: true,\r\n        filters: {\r\n            stakingFilters: null\r\n        }\r\n    };\r\n\r\n    isDarkTheme$ = new BehaviorSubject(true);\r\n\r\n    count: number = 40;\r\n\r\n    maxPages: number = 5;\r\n\r\n    testnet: boolean = false;\r\n\r\n    networkType: 'mainnet' | 'testnet' = 'mainnet';\r\n\r\n    wallets: Array<Wallet> = [];\r\n\r\n    currentWallet: Wallet;\r\n\r\n    aliases: Aliases = [];\r\n\r\n    aliasesChecked: any = {};\r\n\r\n    enableAliasSearch: boolean = false;\r\n\r\n    maxWalletNameLength: number = 25;\r\n\r\n    maxCommentLength: number = 255;\r\n\r\n    dataIsLoaded: boolean = false;\r\n\r\n    contacts: Array<Contact> = [];\r\n\r\n    pattern: string = '^[a-zA-Z0-9_.\\\\]*|~!?@#$%^&+{}()<>:;\"\\'-=/,[\\\\\\\\]*$';\r\n\r\n    after_sync_request: any = {};\r\n\r\n    getExpMedTsEvent = new BehaviorSubject(null);\r\n\r\n    getHeightAppEvent = new BehaviorSubject(null);\r\n\r\n    getHeightMaxEvent = new BehaviorSubject(null);\r\n\r\n    getDownloadedAppEvent = new BehaviorSubject(null);\r\n\r\n    getTotalEvent = new BehaviorSubject(null);\r\n\r\n    getAliasChangedEvent = new BehaviorSubject(null);\r\n\r\n    currentWalletChangedEvent = new BehaviorSubject<Wallet>(null);\r\n\r\n    refreshStakingEvent$: Subject<void> = new Subject<void>();\r\n\r\n    verifiedAssetInfoWhitelist$: BehaviorSubject<VerifiedAssetInfoWhitelist> = new BehaviorSubject([]);\r\n\r\n    private _dialog: Dialog = inject(Dialog);\r\n\r\n    private _matDialog: MatDialog = inject(MatDialog);\r\n\r\n    idle = new Idle().whenNotInteractive().do(async () => {\r\n        if (this.appPass === '') {\r\n            this.stopCountdown();\r\n        } else {\r\n            await this.ngZone.run(async () => {\r\n                this.stopCountdown();\r\n                this.appPass = '';\r\n                this.appLogin = false;\r\n                this._dialog.closeAll();\r\n                this._matDialog.closeAll();\r\n                await this.router.navigate(['/login'], {\r\n                    queryParams: { type: 'auth' },\r\n                });\r\n            });\r\n        }\r\n    });\r\n\r\n    allContextMenu: ContextMenuComponent<any>;\r\n\r\n    onlyCopyContextMenu: ContextMenuComponent<any>;\r\n\r\n    pasteSelectContextMenu: ContextMenuComponent<any>;\r\n\r\n    private _destroy$: Subject<void> = new Subject<void>();\r\n\r\n    constructor(private router: Router, private ngZone: NgZone, private contextMenuService: ContextMenuService<any>) {\r\n        this.visibilityBalance$.pipe(takeUntil(this._destroy$)).subscribe({\r\n            next: visibilityBalance => {\r\n                this.settings.visibilityBalance = visibilityBalance;\r\n            },\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._destroy$.next();\r\n        this._destroy$.complete();\r\n    }\r\n\r\n    get hasAppPass(): boolean {\r\n        return Boolean(this.appPass);\r\n    }\r\n\r\n    get isCurrentWalletSync(): boolean {\r\n        if (this.currentWallet) {\r\n            const { wallet_id } = this.currentWallet;\r\n            return this.sync_wallets[wallet_id] || false;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    get isCurrentWalletLoaded(): boolean {\r\n        if (this.currentWallet) {\r\n            const { loaded } = this.currentWallet;\r\n            return loaded;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    get walletNamesForComparisons(): string[] {\r\n        return this.wallets.map(({ name }) => name) ?? [];\r\n    }\r\n\r\n    setExpMedTs(timestamp: number): void {\r\n        if (timestamp !== this.exp_med_ts) {\r\n            this.exp_med_ts = timestamp;\r\n            this.getExpMedTsEvent.next(timestamp);\r\n        }\r\n    }\r\n\r\n    setHeightApp(height: number): void {\r\n        if (height !== this.height_app) {\r\n            this.height_app = height;\r\n            this.getHeightAppEvent.next(height);\r\n        }\r\n    }\r\n\r\n    setHeightMax(height: number): void {\r\n        if (height !== this.height_max) {\r\n            this.height_max = height;\r\n            this.getHeightMaxEvent.next(height);\r\n        }\r\n    }\r\n\r\n    setDownloadedBytes(bytes: number): void {\r\n        if (bytes !== this.downloaded) {\r\n            this.downloaded = this.bytesToMb(bytes);\r\n            this.getDownloadedAppEvent.next(bytes);\r\n        }\r\n    }\r\n\r\n    setTotalBytes(bytes: number): void {\r\n        if (bytes !== this.total) {\r\n            this.total = this.bytesToMb(bytes);\r\n            this.getTotalEvent.next(bytes);\r\n        }\r\n    }\r\n\r\n    changeAliases(): void {\r\n        this.getAliasChangedEvent.next(true);\r\n    }\r\n\r\n    setCurrentWallet(id): void {\r\n        this.wallets.forEach(wallet => {\r\n            if (wallet.wallet_id === id) {\r\n                this.currentWallet = wallet;\r\n                this.currentWalletChangedEvent.next(wallet);\r\n            }\r\n        });\r\n    }\r\n\r\n    getWallet(id): Wallet | null {\r\n        for (let i = 0; i < this.wallets.length; i++) {\r\n            if (this.wallets[i].wallet_id === id) {\r\n                return this.wallets[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getNotLoadedWallet(): Wallet | null {\r\n        for (let i = 0; i < this.wallets.length; i++) {\r\n            if (!this.wallets[i].loaded) {\r\n                return this.wallets[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    startCountdown(): void {\r\n        this.idle.within(this.settings.appLockTime).start();\r\n    }\r\n\r\n    stopCountdown(): void {\r\n        this.idle.stop();\r\n    }\r\n\r\n    restartCountdown(): void {\r\n        if (Boolean(this.settings.appLockTime)) {\r\n            this.idle.within(this.settings.appLockTime).restart();\r\n        } else {\r\n            this.stopCountdown();\r\n        }\r\n    }\r\n\r\n    bytesToMb(bytes): number {\r\n        return Number((bytes / Math.pow(1024, 2)).toFixed(1));\r\n    }\r\n\r\n    onContextMenu($event: any): void {\r\n        $event.target['contextSelectionStart'] = $event.target['selectionStart'];\r\n        $event.target['contextSelectionEnd'] = $event.target['selectionEnd'];\r\n        if (\r\n            $event.target &&\r\n            ($event.target['nodeName'].toUpperCase() === 'TEXTAREA' || $event.target['nodeName'].toUpperCase() === 'INPUT') &&\r\n            !$event.target['readOnly']\r\n        ) {\r\n            this.contextMenuService.show(this.allContextMenu, {\r\n                x: $event.x,\r\n                y: $event.y,\r\n                value: $event.target,\r\n            });\r\n            $event.preventDefault();\r\n            $event.stopPropagation();\r\n        }\r\n    }\r\n\r\n    onContextMenuOnlyCopy($event: any, copyText?: string): void {\r\n        $event.preventDefault();\r\n        $event.stopPropagation();\r\n        this.contextMenuService.show(this.onlyCopyContextMenu, {\r\n            value: copyText,\r\n            x: $event.x,\r\n            y: $event.y,\r\n        });\r\n    }\r\n\r\n    onContextMenuPasteSelect($event: any): void {\r\n        $event.target['contextSelectionStart'] = $event.target['selectionStart'];\r\n        $event.target['contextSelectionEnd'] = $event.target['selectionEnd'];\r\n\r\n        console.warn($event.target);\r\n        console.warn($event.target['disabled']);\r\n\r\n        if (\r\n            $event.target &&\r\n            ($event.target['nodeName'].toUpperCase() === 'TEXTAREA' || $event.target['nodeName'].toUpperCase() === 'INPUT') &&\r\n            !$event.target['readOnly']\r\n        ) {\r\n            this.contextMenuService.show(this.pasteSelectContextMenu, {\r\n                x: $event.x,\r\n                y: $event.y,\r\n                value: $event.target,\r\n            });\r\n            $event.preventDefault();\r\n            $event.stopPropagation();\r\n        }\r\n    }\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { BackendService } from '@api/services/backend.service';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { defaultAssetsInfoWhitelist, ResponseGetWalletInfo, Wallet } from '@api/models/wallet.model';\r\nimport { Router } from '@angular/router';\r\nimport { ParamsCallRpc } from '@api/models/call_rpc.model';\r\nimport { AssetsWhitelistGetResponseData, VerifiedAssetInfoWhitelist } from '@api/models/assets.model';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class WalletsService {\r\n    get wallets(): Wallet[] {\r\n        return this._variablesService.wallets;\r\n    }\r\n\r\n    set wallets(value) {\r\n        this._variablesService.wallets = value ?? [];\r\n    }\r\n\r\n    get currentWallet(): Wallet | null | undefined {\r\n        return this._variablesService.currentWallet;\r\n    }\r\n\r\n    set currentWallet(value) {\r\n        this._variablesService.currentWallet = value;\r\n    }\r\n\r\n    constructor(\r\n        private _backendService: BackendService,\r\n        private _variablesService: VariablesService,\r\n        private _translateService: TranslateService,\r\n        private _router: Router,\r\n        private _ngZone: NgZone\r\n    ) {}\r\n\r\n    addWallet(wallet: Wallet): void {\r\n        const { wallet_id, staking } = wallet;\r\n        const { verifiedAssetInfoWhitelist$ } = this._variablesService;\r\n\r\n        if (staking) {\r\n            const message = this._translateService.instant('STAKING.WALLET_STAKING_ON', { value: wallet.alias?.name ?? wallet.name });\r\n            this._backendService.show_notification('Wallet staking on', message);\r\n        }\r\n\r\n        this._variablesService.wallets.push(wallet);\r\n        this.updateWalletInfo(wallet_id);\r\n        this.setVerifiedAssetInfoWhitelist(verifiedAssetInfoWhitelist$.value);\r\n    }\r\n\r\n    loadAssetsInfoWhitelist(wallet_id: number): void {\r\n        const wallet = this.getWalletById(wallet_id);\r\n\r\n        if (!wallet) {\r\n            console.warn(`You want update assetsWhiteList by wallet_id: (${wallet_id}). But this wallet not uploaded.`);\r\n            return;\r\n        }\r\n\r\n        const params: ParamsCallRpc = {\r\n            jsonrpc: '2.0',\r\n            id: 0,\r\n            method: 'assets_whitelist_get',\r\n            params: {},\r\n        };\r\n        this._backendService.call_wallet_rpc([wallet_id, params], (status, response_data: AssetsWhitelistGetResponseData) => {\r\n            this._ngZone.run(() => {\r\n                const { result } = response_data;\r\n                const assetsInfoWhitelist = { ...defaultAssetsInfoWhitelist, ...result };\r\n\r\n                wallet.assetsInfoWhitelist = assetsInfoWhitelist;\r\n                wallet.assetsInfoWhitelist$.next(assetsInfoWhitelist);\r\n            });\r\n        });\r\n    }\r\n\r\n    setVerifiedAssetInfoWhitelist(assets: VerifiedAssetInfoWhitelist): void {\r\n        for (const wallet of this.wallets) {\r\n            wallet.verificationAssetsInfoWhitelist$.next(assets);\r\n        }\r\n    }\r\n\r\n    getWalletById(wallet_id: number): Wallet | undefined {\r\n        const { wallets } = this._variablesService;\r\n        return wallets.find(w => w.wallet_id === wallet_id);\r\n    }\r\n\r\n    updateWalletInfo(wallet_id: number): void {\r\n        const wallet = this.getWalletById(wallet_id);\r\n\r\n        if (!wallet) {\r\n            console.warn(`You want update walletInfo by wallet_id: (${wallet_id}). But this wallet not uploaded.`);\r\n            return;\r\n        }\r\n        const callback: (status: boolean, response_data: ResponseGetWalletInfo) => void = (status, response_data) => {\r\n            this._ngZone.run(() => {\r\n                if (status) {\r\n                    const { balances } = response_data;\r\n                    wallet.balances = balances;\r\n                }\r\n            });\r\n        };\r\n\r\n        this._backendService.getWalletInfo(wallet_id, callback);\r\n\r\n        this.loadAssetsInfoWhitelist(wallet_id);\r\n    }\r\n\r\n    closeWallet(wallet_id: number): void {\r\n        const callback = async (): Promise<void> => {\r\n            this.wallets = this.wallets.filter(w => w.wallet_id !== wallet_id);\r\n\r\n            await this._ngZone.run(async () => {\r\n                let url = '/';\r\n                if (this.wallets.length > 0) {\r\n                    this.currentWallet = this.wallets[0];\r\n                    url = '/wallet/';\r\n                }\r\n                if (this._variablesService.appPass) {\r\n                    this._backendService.storeSecureAppData();\r\n                }\r\n                await this._router.navigate([url]);\r\n            });\r\n        };\r\n\r\n        this._backendService.closeWallet(wallet_id, callback);\r\n    }\r\n}\r\n","export const MIMETypes: string[] = [\r\n    '.rar',\r\n    '.txt',\r\n    '.xls',\r\n    '.xlsx',\r\n    '.zip',\r\n    '.png',\r\n    '.pdf',\r\n    '.csv',\r\n    '.doc',\r\n    '.docx',\r\n    '.jar',\r\n    '.jpeg',\r\n    '.jpg',\r\n    '.js',\r\n    '.json',\r\n    '.mp3',\r\n    '.mp4',\r\n    '.mpeg',\r\n    '.aac',\r\n    '.abw',\r\n    '.arc',\r\n    '.avif',\r\n    '.avi',\r\n    '.azw',\r\n    '.bin',\r\n    '.bmp',\r\n    '.bz',\r\n    '.bz2',\r\n    '.cda',\r\n    '.csh',\r\n    '.css',\r\n    '.dll',\r\n    '.exe',\r\n    '.eot',\r\n    '.epub',\r\n    '.gz',\r\n    '.gif',\r\n    '.htm',\r\n    '.html',\r\n    '.ico',\r\n    '.ics',\r\n    '.jsonld',\r\n    '.mid',\r\n    '.midi',\r\n    '.mjs',\r\n    '.mpkg',\r\n    '.odp',\r\n    '.ods',\r\n    '.odt',\r\n    '.oga',\r\n    '.ogv',\r\n    '.ogx',\r\n    '.opus',\r\n    '.otf',\r\n    '.php',\r\n    '.ppt',\r\n    '.pptx',\r\n    '.pdb',\r\n    '.dat',\r\n    '.rtf',\r\n    '.sh',\r\n    '.svg',\r\n    '.tar',\r\n    '.tif',\r\n    '.tiff',\r\n    '.ts',\r\n    '.ttf',\r\n    '.vsd',\r\n    '.wav',\r\n    '.weba',\r\n    '.webm',\r\n    '.webp',\r\n    '.woff',\r\n    '.woff2',\r\n    '.xhtml',\r\n    '.xml',\r\n    '.xul',\r\n    '.3gp',\r\n    '.3g2',\r\n    '.7z',\r\n];\r\n","export const generateRandomString = (length: number = 40): string => {\r\n    const array: Uint8Array = new Uint8Array(length);\r\n    window.crypto.getRandomValues(array);\r\n\r\n    const regularArray: number[] = Array.from(array);\r\n\r\n    return btoa(String.fromCharCode.apply(null, regularArray));\r\n};\r\n","import { ValidationErrors } from '@angular/forms';\r\n\r\nexport interface PdcValidationErrors extends ValidationErrors {\r\n    errorText: string;\r\n}\r\n\r\nexport const wrongAssetId: PdcValidationErrors = {\r\n    errorText: 'ASSETS.FORM.ERRORS.WRONG_ASSET_ID',\r\n};\r\n\r\nexport const wrongPassword: PdcValidationErrors = {\r\n    errorText: 'Incorrect password',\r\n};\r\n\r\nexport const insuficcientFunds: PdcValidationErrors = {\r\n    errorText: 'ERRORS.INSUFFICIENT_FUNDS',\r\n};\r\n\r\nexport const assetHasNotBeenAddedToWallet: PdcValidationErrors = {\r\n    errorText: 'ERRORS.ASSET_HAS_NOT_BEEN_ADDED_TO_WALLET',\r\n};\r\n\r\nexport const notFilePdcWallet: PdcValidationErrors = {\r\n    errorText: 'ERRORS.NOT_FILE_PDC_WALLET',\r\n};\r\n","import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\r\nimport { notFilePdcWallet, PdcValidationErrors } from '@parts/utils/pdc-errors';\r\nimport { MIMETypes } from '@parts/utils/MIME-types';\r\n\r\nexport const regExpHex = /^[a-f0-9]{64}$/i;\r\nexport const regExpAliasName = /^@?[a-z\\d.-]{2,25}$/;\r\nexport const regExpPassword = /^[A-Za-z0-9!@#$%^&*()_+\\-={}\\[\\]|:;\"'<>,.?/~`]{1,40}$/;\r\n\r\nexport class PdcValidators {\r\n    static hash({ value }: AbstractControl): ValidationErrors | null {\r\n        return regExpHex.test(value) ? null : { invalidHash: true };\r\n    }\r\n\r\n    static formMatch(firstControlName: string, secondControlName: string, nameErrorKey = 'mismatch'): ValidatorFn {\r\n        return (abstractControl: AbstractControl): ValidationErrors | null =>\r\n            abstractControl.get(firstControlName).value === abstractControl.get(secondControlName).value ? null : { [nameErrorKey]: true };\r\n    }\r\n\r\n    static duplicate(valuesForComparisons: string | string[]): ValidatorFn {\r\n        return ({ value }: AbstractControl): ValidationErrors | null => {\r\n            const errorObject = { duplicate: true };\r\n            let error = null;\r\n\r\n            if (typeof value === 'string' && value === valuesForComparisons) {\r\n                error = errorObject;\r\n            }\r\n\r\n            if (Array.isArray(valuesForComparisons) && valuesForComparisons.includes(value)) {\r\n                error = errorObject;\r\n            }\r\n\r\n            return error;\r\n        };\r\n    }\r\n}\r\n\r\nexport const filePathWalletValidator = (path: string): PdcValidationErrors | null => {\r\n    if (!(path && path.trim().length)) {\r\n        return null;\r\n    }\r\n\r\n    const positionLastSlash = path.lastIndexOf('/');\r\n    const fileName = path.slice(positionLastSlash + 1);\r\n\r\n    if (!(fileName && fileName.trim().length)) {\r\n        return null;\r\n    }\r\n\r\n    if (fileName) {\r\n        let index = 0;\r\n        while (index < MIMETypes.length) {\r\n            if (fileName.includes(MIMETypes[index])) {\r\n                return notFilePdcWallet;\r\n            }\r\n            index++;\r\n        }\r\n    }\r\n\r\n    return null;\r\n};\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { VariablesService } from '@parts/services/variables.service';\r\nimport { PaginationStore } from './pagination.store';\r\nimport * as _ from 'lodash';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class PaginationService {\r\n    constructor(private variables: VariablesService, private ngZone: NgZone, private paginationStore: PaginationStore) {}\r\n\r\n    paginate(currentPage = 1): void {\r\n        if (currentPage < 1) {\r\n            currentPage = 1;\r\n        } else if (currentPage > this.variables.currentWallet.totalPages) {\r\n            currentPage = this.variables.currentWallet.totalPages;\r\n        }\r\n        let startPage: number, endPage: number;\r\n        if (this.variables.currentWallet.totalPages <= this.variables.maxPages) {\r\n            startPage = 1;\r\n            endPage = this.variables.currentWallet.totalPages;\r\n        } else {\r\n            const maxPagesBeforeCurrentPage = Math.floor(this.variables.maxPages / 2);\r\n            const maxPagesAfterCurrentPage = Math.ceil(this.variables.maxPages / 2) - 1;\r\n            if (currentPage <= maxPagesBeforeCurrentPage) {\r\n                startPage = 1;\r\n                this.variables.currentWallet.totalPages > this.variables.maxPages\r\n                    ? (endPage = this.variables.maxPages)\r\n                    : (endPage = this.variables.currentWallet.totalPages);\r\n            } else if (currentPage + maxPagesAfterCurrentPage >= this.variables.currentWallet.totalPages) {\r\n                startPage = this.variables.currentWallet.totalPages - this.variables.maxPages + 1;\r\n                endPage = this.variables.currentWallet.totalPages;\r\n            } else {\r\n                startPage = currentPage - maxPagesBeforeCurrentPage;\r\n                endPage = currentPage + maxPagesAfterCurrentPage;\r\n            }\r\n        }\r\n        this.ngZone.run(() => {\r\n            this.variables.currentWallet.pages = Array.from(Array(endPage + 1 - startPage).keys()).map(i => startPage + i);\r\n        });\r\n    }\r\n\r\n    getOffset(walletID): number {\r\n        const mining = this.variables.currentWallet.exclude_mining_txs;\r\n        const currentPage = this.variables.currentWallet.currentPage;\r\n        let offset = (currentPage - 1) * this.variables.count;\r\n        if (!mining) {\r\n            return offset || 0;\r\n        }\r\n        const value = this.paginationStore.value;\r\n        const pages = value.filter(item => item.walletID === walletID);\r\n        if (pages && pages.length > 0) {\r\n            const max = _.maxBy(pages, 'page');\r\n            const isForward = this.paginationStore.isForward(pages, currentPage);\r\n            if (isForward) {\r\n                offset = max.offset || 0;\r\n            } else {\r\n                const index = pages.findIndex(item => item.page === currentPage);\r\n                offset = pages[index].offset || 0;\r\n            }\r\n        }\r\n        return offset;\r\n    }\r\n\r\n    calcPages(data): void {\r\n        if (data.total_history_items && data && data.history) {\r\n            this.variables.currentWallet.totalPages = Math.ceil(data.total_history_items / this.variables.count);\r\n            this.variables.currentWallet.totalPages > this.variables.maxPages\r\n                ? (this.variables.currentWallet.pages = new Array(5).fill(1).map((value, index) => value + index))\r\n                : (this.variables.currentWallet.pages = new Array(this.variables.currentWallet.totalPages)\r\n                      .fill(1)\r\n                      .map((value, index) => value + index));\r\n        } else if (this.variables.currentWallet.restore) {\r\n            this.variables.currentWallet.totalPages = Math.ceil((data.history?.length ?? 0) / this.variables.count);\r\n            this.variables.currentWallet.totalPages > this.variables.maxPages\r\n                ? (this.variables.currentWallet.pages = new Array(5).fill(1).map((value, index) => value + index))\r\n                : (this.variables.currentWallet.pages = new Array(this.variables.currentWallet.totalPages)\r\n                      .fill(1)\r\n                      .map((value, index) => value + index));\r\n        }\r\n    }\r\n\r\n    prepareHistory(data, status): void {\r\n        if (status && data && data.total_history_items) {\r\n            this.variables.currentWallet.history.splice(0, this.variables.currentWallet.history.length);\r\n            this.ngZone.run(() => {\r\n                this.paginate(this.variables.currentWallet.currentPage);\r\n                if (data.history.length !== 0) {\r\n                    this.variables.currentWallet.restore = false;\r\n                    this.variables.currentWallet.total_history_item = data.total_history_items;\r\n                    this.variables.currentWallet.prepareHistory(data.history);\r\n                    if (this.variables.currentWallet.currentPage === 1 && data.unconfirmed) {\r\n                        this.variables.currentWallet.prepareHistory(data.unconfirmed.sort((a, b) => a.timestamp - b.timestamp));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport * as _ from 'lodash';\r\n\r\nexport interface Pages {\r\n    page: number;\r\n    offset: number;\r\n    walletID: number;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class PaginationStore {\r\n    private subject = new BehaviorSubject<Pages[] | null>(null);\r\n\r\n    get value(): Pages[] | null {\r\n        return this.subject.value;\r\n    }\r\n\r\n    isForward(pages, currentPage): boolean {\r\n        const max = _.maxBy(pages, 'page');\r\n        return !max || max.page < currentPage || max.page === currentPage;\r\n    }\r\n\r\n    setPage(pageNumber: number, offset: number, walletID: number): void {\r\n        let newPages: Pages[] = [];\r\n        const pages = this.subject.getValue();\r\n        if (pages && pages.length > 0) {\r\n            newPages = pages.slice(0);\r\n        }\r\n        newPages.push({ page: pageNumber, offset, walletID });\r\n        this.subject.next(newPages);\r\n    }\r\n}\r\n","import { distinctUntilChanged, map } from 'rxjs/operators';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Wallet } from '@api/models/wallet.model';\r\nimport { Injectable } from '@angular/core';\r\n\r\nexport interface Sync {\r\n    sync: boolean;\r\n    wallet_id: number;\r\n}\r\n\r\nexport enum StateKeys {\r\n    wallets = 'wallets',\r\n    sync = 'sync',\r\n}\r\n\r\nexport interface State {\r\n    [StateKeys.wallets]: Wallet[] | null | undefined;\r\n    [StateKeys.sync]: Sync[] | null | undefined;\r\n}\r\n\r\nconst initialState: State = {\r\n    wallets: undefined,\r\n    sync: undefined,\r\n};\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class Store {\r\n    private subject = new BehaviorSubject<State>(initialState);\r\n    private store = this.subject.asObservable().pipe(distinctUntilChanged());\r\n\r\n    get state(): State {\r\n        return this.subject.value;\r\n    }\r\n\r\n    select<T>(name: StateKeys): Observable<T> {\r\n        return this.store.pipe(map(state => state[name])) as unknown as Observable<T>;\r\n    }\r\n\r\n    set(name: StateKeys, value: any): void {\r\n        this.subject.next({ ...this.state, [name]: value });\r\n    }\r\n}\r\n","export const materialPdcIcons = [\r\n    'pdc-arrow-left',\r\n    'pdc-arrow-right',\r\n    'pdc-balance',\r\n    'pdc-block-sync',\r\n    'pdc-burn',\r\n    'pdc-check',\r\n    'pdc-check-circle',\r\n    'pdc-check-shield',\r\n    'pdc-close',\r\n    'pdc-close-v2',\r\n    'pdc-contacts',\r\n    'pdc-contracts',\r\n    'pdc-copy',\r\n    'pdc-custom-asset',\r\n    'pdc-delete',\r\n    'pdc-dropdown-arrow-down',\r\n    'pdc-edit',\r\n    'pdc-emit',\r\n    'pdc-export',\r\n    'pdc-fire',\r\n    'pdc-hide-balance',\r\n    'pdc-history',\r\n    'pdc-info',\r\n    'pdc-info-v2',\r\n    'pdc-logo',\r\n    'pdc-logout',\r\n    'pdc-plus',\r\n    'pdc-question',\r\n    'pdc-receive',\r\n    'pdc-regenerate',\r\n    'pdc-row-options',\r\n    'pdc-send',\r\n    'pdc-settings',\r\n    'pdc-show-balance',\r\n    'pdc-system-modal-error',\r\n    'pdc-system-modal-info',\r\n    'pdc-system-modal-success',\r\n    'pdc-staking',\r\n    'pdc-secured',\r\n    'pdc-swap',\r\n    'pdc-update',\r\n    'pdc-wallet-settings',\r\n    'pdc-attention'\r\n];\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n    production: false,\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\nimport 'lodash';\r\n\r\nexport const buildTime = '2024-11-29T13:48:44.519Z';\r\n\r\nif (environment.production) {\r\n    enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n    .bootstrapModule(AppModule)\r\n    .catch(err => console.error(err));\r\n"],"names":["NgZone","Observable","Subject","JSONBigNumber","BigNumber","ParamsType","getParamsType","value","array","Array","isArray","object","Object","keys","includes","convertersObjectForTypes","string","stringify","map","v","convertorParams","type","StatusCurrentActionState","Commands","BackendService","constructor","translate","variablesService","modalService","moneyToIntPipe","ngZone","bigNumberParser","key","val","_a","name","indexOf","toNumber","i","length","Debug","message","console","error","warn","log","eventSubscribe","command","callback","on_core_event","backendObject","connect","str","parse","initService","observer","backendLoaded","window","QWebChannel","qt","webChannelTransport","channel","objects","mediator_object","next","webkitLaunchedScript","runCommand","webkit_launched_script","quitRequest","on_request_quit","getAppData","get_app_data","storeAppData","wallets","settings","forEach","wallet","push","path","store_app_data","getSecureAppData","pass","get_secure_app_data","setMasterPassword","set_master_password","checkMasterPassword","check_master_password","getIsDisabledNotifications","params","get_is_disabled_notifications","setIsDisabledNotifications","state","set_is_disabled_notifications","storeSecureAppData","contacts","staking","contact","address","notes","data","store_secure_app_data","JSON","appPass","dataStore","backendCallback","dropSecureAppData","drop_secure_app_data","haveSecureAppData","have_secure_app_data","saveFileDialog","caption","fileMask","default_path","dir","filemask","default_dir","show_savefile_dialog","openFileDialog","show_openfile_dialog","storeFile","buff","store_to_file","loadFile","load_from_file","push_offer","generateWallet","generate_wallet","exportWalletHistory","json_string","export_wallet_history","openWallet","txs_to_return","testEmpty","open_wallet","closeWallet","wallet_id","close_wallet","getSmartWalletInfo","seed_password","get_smart_wallet_info","getSeedPhraseInfo","param","get_seed_phrase_info","runWallet","run_wallet","isValidRestoreWalletText","is_valid_restore_wallet_text","restoreWallet","seed_phrase","seed_pass","restore_wallet","sendMoney","amount","fee","mixin","comment","hide_receiver","push_payer","asset_id","destinations","mixin_count","lock_time","transform","asyncCall","transfer","setupJwtWalletRpc","secret","setup_jwt_wallet_rpc","pdcCompanionForm","validateAddress","validate_address","setClipboard","set_clipboard","getClipboard","get_clipboard","createProposal","title","a_addr","b_addr","to_pay","a_pledge","b_pledge","time","payment_id","parseInt","details","t","c","expiration_period","default_fee_big","b_fee","create_proposal","getContracts","get_contracts","acceptProposal","contract_id","accept_proposal","releaseProposal","release_type","release_contract","requestCancelContract","request_cancel_contract","acceptCancelContract","accept_cancel_contract","getMiningHistory","get_mining_history","startPosMining","start_pos_mining","stopPosMining","stop_pos_mining","openUrlInBrowser","url","open_url_in_browser","start_backend","node","host","port","configure_for_remote_node","remote_node_host","remote_node_port","getDefaultFee","get_default_fee","setBackendLocalization","stringsArray","strings","language_title","set_localization_strings","registerAlias","alias","reward","tracking_key","request_alias_registration","updateAlias","replace","request_alias_update","getAllAliases","get_all_aliases","getAliasInfoByName","get_alias_info_by_name","getAliasByAddress","get_alias_info_by_address","getAliasCoast","get_alias_coast","resyncWallet","id","resync_wallet","getWalletAlias","daemon_state","aliasesChecked","aliases","status","getContactAlias","getRecentTransfers","offset","count","exclude_mining_txs","get_recent_transfers","getPoolInfo","get_tx_pool_info","getVersion","get_version","version","errorVersion","get_network_type","status_network","errorType","setLogLevel","level","set_log_level","async_call","job_id","asyncCall2a","async_call_2a","dispatchAsyncCallResult","dispatch_async_call_result","json_resp","asyncCommandResults","response","group","groupEnd","run","setTimeout","dispatchAsyncCallResult$","handleCurrentActionState","handle_current_action_state","currentActionState","handleCurrentActionState$","setEnableTor","set_enable_tor","show_notification","getOptions","get_options","disable_price_fetch","use_debug_mode","rpc_port","disable_price_fetch$","use_debug_mode$","addCustomAssetId","add_custom_asset_id","removeCustomAssetId","remove_custom_asset_id","getWalletInfo","get_wallet_info","call_rpc","call_wallet_rpc","informerRun","error_translate","instant","default_fee","currency","defaultTicker","prepareModal","commandDebug","result","debug","_send_params","_result","e","response_data","error_code","resultStr","Result","core_busy","Status","undefined","res_error_code","current_wallet_id","currentWallet","Action","i0","factory","providedIn","Renderer2","StateKeys","interval","take","retry","startWith","switchMap","takeUntil","paths","pathsChildrenAuth","hasOwnProperty","Breakpoints","AppComponent","http","renderer","backendService","router","intToMoneyPipe","store","dialog","matDialog","pdcLoadersService","_apiPdcService","_walletsService","_breakpointObserver","Map","XSmall","Small","Medium","Large","XLarge","addLangs","setDefaultLang","use","pipe","destroy$","subscribe","translateUsed","_setResponseClasses","observe","query","breakpoints","currentScreenSize","displayNameMap","get","document","body","classList","remove","values","add","language","ngOnInit","initMessage","st2","dd2","quit_requested","onQuitRequest","closeAll","needOpenWallets","saveFunction","recursionCloseWallets","lastIndex","splice","update_wallet_status","wallet_state","is_mining","getWallet","loaded","balances","mined_total","minied_total","alias_available","is_alias_operations_available","has_bare_unspent_outputs","wallet_sync_progress","progress","sync_started","sync_wallets","addToStore","update_daemon_state","daemon_network_state","setExpMedTs","net_time_delta_median","last_build_available","last_build_displaymode","setHeightApp","height","setHeightMax","max_net_seen_height","setDownloadedBytes","downloaded_bytes","setTotalBytes","download_total_data_size","daemon_state$","max","current","return_val","Math","floor","sync","progress_value","progress_value_text","blocks","toFixed","download","firstOnlineState","getAliases","status_fee","data_fee","money_transfer","ti","tr_info","history","tx_type","refreshStakingEvent$","tr_exists","excluded_history","some","elem","tx_hash","currentPage","prepareHistory","restore","total_history_item","totalPages","ceil","maxPages","pages","fill","index","exp_med_ts","height_app","contract","contracts","is_a","cancel_expiration_time","expiration_time","timestamp","searchResult2","notViewedContracts","find","j","viewedContracts","searchResult3","searchResult4","searchResult","is_new","findContract","prop","handle_deeplink_click","deeplink$","money_transfer_cancel","removeFromHistory","error_tr","events","method","enableAliasSearch","newAlias","concat","changeAliases","CurrentAlias","element","intervalUpdateContractsState","setInterval","expMedTsEvent","getExpMedTsEvent","newTimestamp","isDarkTheme$","visibilityBalance$","isDarkTheme","visibilityBalance","appUseTor","scale","setStyle","documentElement","setAttribute","appLog","navigate","auth","noWallet","then","statusPass","queryParams","appLogin","getInfo","_getPdcCurrentSupply","updateTime","updateMoneyEquivalent","intervalUpdatePriceState","clearInterval","ngOnDestroy","unsubscribe","success","pdcMoneyEquivalent","pdcMoneyEquivalentPercent","sort","a","b","boolean","filter","item","set","testnet","networkType","_loadVerifiedAssetInfoWhitelist","getVerifiedAssetInfoWhitelist","assets","verifiedAssetInfoWhitelist$","setVerifiedAssetInfoWhitelist","jsonrpc","info$","flags","pdc_current_supply","_b","selectors","decls","vars","consts","template","inject","TranslateService","CREATE_NEW_WALLET_HELP_PAGE","filePathWalletValidator","AddWalletComponent","translateService","file_status","file_data","positionLastSlash","lastIndexOf","new_default_path","slice","text","errorText","openInBrowser","ctx","FormBuilder","Validators","regExpAliasName","AssignAliasComponent","backend","intToMoney","routerLink","fb","nonNullable","control","required","pattern","maxLength","maxCommentLength","price","rewardOriginal","exists","assignForm","valueChanges","canRegister","newName","toLowerCase","controls","errors","statusPrice","dataPrice","sum","unlocked_balance","getBalanceByTicker","unlocked","notEnoughMoney","isGreaterThan","complete","assignAlias","wakeAlias","Wallet","BehaviorSubject","regExpPassword","PdcValidators","LoginComponent","walletsService","route","password","confirmation","validators","formMatch","pdcLogo","onSubmitCreatePass","regForm","valid","dataIsLoaded","appLockTime","startCountdown","onSkipCreatePass","resetJwtWalletRpc","pdcCompation","resetLoading$","closeAllWallets","onSubmitAuthPass","submitLoading$","authForm","prevUrl","setAuthPassError","wrong_password","getData","isEmptyObject","getWalletData","walletData","openWallets","runWallets","wallet_index","open_status","open_data","open_error","new_wallet","balance","tracking_hey","is_auditable","is_watch_only","recent_history","total_history_items","addWallet","run_status","setErrors","NonNullableFormBuilder","VariablesService","ModalService","Router","WalletsService","CreateWalletComponent","duplicate","walletNamesForComparisons","confirm","savedWalletName","createForm","substr","createWallet","loading$","selectedPath","getRawValue","generate_status","generate_data","errorCode","run_data","setCurrentWallet","errorTranslationKey","selectWalletLocation","patchValue","delay","DeeplinkComponent","notFilePdcWallet","wrongPassword","OpenWalletComponent","maxWalletNameLength","filePath","openWalletForm","filename","markAsTouched","openStatus","openData","open_from_exist","scaleItems","generateRandomString","debounceTime","ctx_r30","ctx_r7","SettingsComponent","compose","new_password","new_confirmation","disabled","hasAppPass","translationKey","setValue","emitEvent","currentBuild","currentNotificationsState","generateSecret","copySecret","isSecretWasCopied","secretWasCopiedTimeout","clearTimeout","copyBuildVersion","isBuildVersionWasCopied","buildVersionWasCopiedTimeout","regenerateSecret","setScale","onSubmitChangePass","changeForm","enable","onSave","reset","toggleNotifications","toggleUseTor","ifSaved","onLockChange","restartCountdown","onLogChange","onLanguageChange","showPrice","toggleDarkTheme","AssetDetailsComponent","ConfirmModalComponent","LOCKED_BALANCE_HELP_PAGE","IntToMoneyPipe","pdcAssetInfo","MatDialog","ctx_r5","ctx_r12","ctx_r0","_r6","ctx_r1","AssetsComponent","itemsPerPage","isShowPagination","paginatePipeArgs","_listenChangeWallet","_destroy$","toggleDropDownMenu","trigger","assetBalance","isOpenDropDownMenu","triggerOrigin","currentAssetBalance","trackByAssets","asset_info","trackByPages","assetDetails","config","_matDialog","open","beforeRemoveAsset","full_name","afterClosed","confirmed","_removeAsset","sendMoneyParams","_backendService","_ngZone","updateWalletInfo","getBalanceTooltip","tooltip","createElement","scrollWrapper","total","ticker","decimal_point","available","innerText","_translateService","availableB","_intToMoneyPipe","appendChild","locked","lockedB","minus","link","innerHTML","addEventListener","isShowDeleteAsset","verifiedAssetInfoWhitelist","isShowPriceColumns","currentWalletChangedEvent","$event","insuficcientFunds","moneyToInt","MAT_DIALOG_DATA","MatDialogRef","BurnCustomAssetComponent","_fb","maximum_value","prepared_amount","getBalanceByAssetId","asset_not_found","maximum_amount_by_decimal_point","greater_than_maximum_amount","preparedUnlocked","submit","form","burn_amount","toString","matDialogRef","close","EmitCustomAssetComponent","total_max_supply","current_supply","prepared_total_max_supply","prepared_current_supply","plus","greater_than_total_max_supply","regExpHex","UpdateCustomAssetComponent","owner","test","hex_not_valid","assign","address_not_valid","hasError","asset_descriptor","ConfirmCreateCustomAssetComponent","TransactionDetailsForCustomAssetsComponent","CreateNewAssetComponent","minLength","min","meta_info","hidden_supply","isLessThan","greater_than_max","disableClose","Boolean","_router","countDestination","destinationAmount","halfDestinationAmount","div","eq","ElementRef","EventEmitter","BLOCK_EXPLORER_TN_TX_URL_PREFIX","BLOCK_EXPLORER_TX_URL_PREFIX","successfulStatuses","STATE_SENDING","STATE_SENT_SUCCESS","STATE_INITIALIZING","STATE_DOWNLOADING_CONSENSUS","STATE_MAKING_TUNNEL_A","STATE_MAKING_TUNNEL_B","STATE_CREATING_STREAM","STATE_SUCCESS","failedStatuses","STATE_SEND_FAILED","STATE_FAILED","SendDetailsModalComponent","currentActionState$","currentActionStates","currentActionStates$","isSentSuccess","isSentFailed","isDetailsNotEmpty","responseData$","addClass","actionState","removeClass","toggleDetails","stateDetails$","scrollToBottomDetailsList","trackBy","isSuccess","action","isFailed","elDetailsList","nativeElement","scrollTop","scrollHeight","hash","viewQuery","MIXIN","catchError","distinctUntilChanged","tap","combineLatest","merge","of","ApiPdcService","HttpClient","_r20","ctx_r14","_r11","ctx_r8","defaultSendMoneyParams","isAmountUSD","SendComponent","balances$","isVisibleWrapInfoState$","items","decimalPoint","inputTicker","hintTicker","hintAmount","reverseDisabled","_getWrapInfo","_createForm","updateAddressErrorMessage","errorMessages","updateAmountErrorMessage","updateFeeErrorMessage","isVisibleError","invalid","dirty","touched","beforeSubmit","isSendModalState","handleConfirmed","asset","convertedAmountUSD","usd","priceInfo","convertedAmount","dividedBy","decimalPlaces","aliasName","alias_not_found","isSendDetailsModalState","getReceivedValue","preparedAmount","tx_cost","pdc_needed_for_erc20","wrapInfo","needed","handeCloseSendDetailsModal","pasteListenAddressField","event","preventDefault","clipboardData","lowerCaseDisabled$","trackByFn","toggleAmountUSD","history_asset","aliasAddress","valid_status","alias_not_valid","alias_status","alias_data","isZero","zero","greater_than_max_amount","less_min","wrap_info_null","unwraped_coins_left","great_than_unwraped_coins","less_than_pdc_needed","_listenSendActionData","_saveSendMoneyParams","_formListeners","markAllAsTouched","updateValueAndValidity","_updateErrorMessages","_priceInfo$","_c","multipliedBy","_d","amountInputParams","default$","price$","_httpClient","err","statusChanges","addressItems$","condition","loadingAddressItems$","_openedWalletItems","_aliasItems","wrapInfoService","getWrapInfo","loadingWrapInfo$","sendActionData$","comments","mixins","hide_sender","isVisibleAdditionalOptionsState","ChangeDetectorRef","CommonModule","RouterLinkWithHref","TranslateModule","BreadcrumbsComponent","DefaultImgModule","InputValidateModule","LowerCaseDirective","FormsModule","ReactiveFormsModule","IntToMoneyPipeModule","MoneyToIntPipeModule","ShortStringPipe","NgSelectModule","assetHasNotBeenAddedToWallet","LoaderComponent","MatAutocompleteModule","MatOptionModule","MatIconModule","GetLogoByAssetInfoPipe","_r31","ctx_r25","_r22","CreateSwapComponent","receiverAddress","isVisibleErrorByControl","isVisibleErrorByForm","reverse","sending","receiving","updateReceiverAddressErrorMessage","pasteListenReceiverAddressField","sendingAsset","getAssetInfoByAssetId","receivingAsset","params2","proposal","to_finalizer","to_initiator","fee_paid_by_a","navigateByUrl","hex_raw_proposal","errorRpc","sendingAssetsInfo$","receivingAssetsInfo$","sendingDecimalPoint$","receivingDecimalPoint$","_cdr","markForCheck","detectChanges","sameAssetsId","_setSendingAssetIdFromHistoryState","standalone","features","i1","i2","i3","i4","i5","i6","i8","styles","ExportHistoryModalComponent","AddCustomTokenComponent","NavigationCancel","NavigationEnd","NavigationError","NavigationStart","BreakpointObserver","ctx_r3","objTabs","icon","hidden","send","receive","swap","indicator","WalletComponent","breakpointObserver","matches","walletLoaded","createTabs","setDisabledTabs","is_hardfok_active$","setHiddenTabs","navigationInterceptor","isShowMigrateAlert","loader","conditionForHiding","tabs","onKeyPressed","openDropdown","walletSyncVisible","onKeyUpPressed","settingsButtonInterval","settingsButtonDisabled","select","in_progress","getAliasChangedEvent","updateWalletStatus","toggleMenuDropdown","resyncCurrentWallet","addCustomToken","exportHistory","ids","tab","hostBindings","_r2","VisibilityBalanceButtonComponent","toggle","OpenWalletModalComponent","_modalService","_renderer","notFound","emptyPass","initializeWallet","resetPasswordError","isWrongPassword$","isFormInvalid","handleWalletOpening","bind","handleWrongPassword","handleFileNotFound","handleSuccessfulWalletOpen","errorMessage","walletExists","addNewWallet","skipWallet","newWallet","createWalletFromData","createPagesArray","from","_","shift","hostVars","Idle","Dialog","contextMenuService","info","filters","stakingFilters","whenNotInteractive","do","stopCountdown","_dialog","isCurrentWalletSync","isCurrentWalletLoaded","getHeightAppEvent","height_max","getHeightMaxEvent","bytes","downloaded","bytesToMb","getDownloadedAppEvent","getTotalEvent","getNotLoadedWallet","idle","within","start","stop","restart","Number","pow","onContextMenu","target","toUpperCase","show","allContextMenu","x","y","stopPropagation","onContextMenuOnlyCopy","copyText","onlyCopyContextMenu","onContextMenuPasteSelect","pasteSelectContextMenu","defaultAssetsInfoWhitelist","_variablesService","loadAssetsInfoWhitelist","getWalletById","assetsInfoWhitelist","assetsInfoWhitelist$","verificationAssetsInfoWhitelist$","w"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}